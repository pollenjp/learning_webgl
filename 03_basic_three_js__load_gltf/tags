!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$b	js/three.min.js	/^b));this.mergeVertices()}function $b(a,b){function c(a){var c,h=e.length\/3;a=a.extractPoints(b);var l=a.shape,q=a.holes;if(!1===Ha.isClockWise(l))for(l=l.reverse(),a=0,c=q.length;a<c;a++){var m=q[a];!0===Ha.isClockWise(m)&&(q[a]=m.reverse())}var p=Ha.triangulateShape(l,q);a=0;for(c=q.length;a<c;a++)m=q[a],l=l.concat(m);a=0;for(c=l.length;a<c;a++)m=l[a],e.push(m.x,m.y,0),f.push(0,0,1),g.push(m.x,m.y);a=0;for(c=p.length;a<c;a++)l=p[a],d.push(l[0]+h,l[1]+h,l[2]+h),k+=3}C.call(this);this.type="ShapeBufferGeometry";$/;"	r
$c	js/three.min.js	/^$c.prototype=Object.create(w.prototype);$c.prototype.constructor=$c;fe.prototype=Object.assign(Object.create(w.prototype),{constructor:fe,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):$/;"	r
$c	js/three.min.js	/^this.cameraL=new Y;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new Y;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1}function $c(a,b,c){w.call(this);this.type="CubeCamera";var d=new Y(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new p(1,0,0));this.add(d);var e=new Y(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new p(-1,0,0));this.add(e);var f=new Y(90,1,a,b);f.up.set(0,0,1);f.lookAt(new p(0,1,0));this.add(f);var g=new Y(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new p(0,-1,0));$/;"	r
$f	js/three.min.js	/^d}}}function $f(){var a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];switch(b.type){case "DirectionalLight":var c={direction:new p,color:new H,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "SpotLight":c={position:new p,direction:new p,color:new H,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "PointLight":c={position:new p,color:new H,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D,$/;"	r
0	js/GLTFLoader.js	/^							for ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {$/;"	r
0	js/GLTFLoader.js	/^							for ( var j = 0, l = skinEntry.joints.length; j < l; j ++ ) {$/;"	r
0	js/GLTFLoader.js	/^						for ( var i = 0; i < meshes.length; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^					for ( var i = 0; i < primitives.length; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^					lightNode.position.set( 0, 0, 1 );$/;"	r
0	js/GLTFLoader.js	/^					meshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;$/;"	r
0	js/GLTFLoader.js	/^				for ( var i = 0, l = children.length; i < l; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^				for ( var i = 0, l = nodes.length; i < l; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^				for ( var i = 0; i < animation.channels.length; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^				for ( var i = 0; i < params.length; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^				for ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {$/;"	r
0	js/GLTFLoader.js	/^				for ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {$/;"	r
0	js/GLTFLoader.js	/^				material.displacementBias = 0;$/;"	r
0	js/GLTFLoader.js	/^				var magic = convertUint8ArrayToString( new Uint8Array( data, 0, 4 ) );$/;"	r
0	js/GLTFLoader.js	/^			for ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^			for ( var i = 0; i < joints.length; ++ i ) {$/;"	r
0	js/GLTFLoader.js	/^			for ( var idx = 0; idx < length; idx ++ ) {$/;"	r
0	js/GLTFLoader.js	/^		for ( var i = 0, il = array.length; i < il; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^		for ( var i = 0, il = targets.length; i < il; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^		for ( var i = 0; i < dependencies.length; i ++ ) {$/;"	r
0	js/GLTFLoader.js	/^		var chunkIndex = 0;$/;"	r
0	js/GLTFLoader.js	/^		var headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );$/;"	r
0	js/three.js	/^									this._cachedIndex = 0;$/;"	r
0	js/three.js	/^								for ( j = 0; j < 3; j ++ ) {$/;"	r
0	js/three.js	/^								for ( j = 0; j < 4; j ++ ) {$/;"	r
0	js/three.js	/^								state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );$/;"	r
0	js/three.js	/^								state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );$/;"	r
0	js/three.js	/^							\/\/ rgb(255,0,0) rgba(255,0,0,0.5)$/;"	r
0	js/three.js	/^							for ( i = 0, l = attribute.count; i < l; i ++ ) {$/;"	r
0	js/three.js	/^							for ( i = 0; i < 3; i ++ ) {$/;"	r
0	js/three.js	/^							for ( i = 0; i < 4; i ++ ) {$/;"	r
0	js/three.js	/^							for ( i = 0; i < nUvLayers; i ++ ) {$/;"	r
0	js/three.js	/^							for ( var h2 = 0; h2 < hole.length; h2 ++ ) {$/;"	r
0	js/three.js	/^							for ( var i = 0, l = groups.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^							for ( var i = 0; i < data.length; i ++ ) {$/;"	r
0	js/three.js	/^							for ( var i = 0; i < texDatas.mipmapCount; i ++ ) {$/;"	r
0	js/three.js	/^							for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^							for ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {$/;"	r
0	js/three.js	/^							for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {$/;"	r
0	js/three.js	/^							i1 = 0;$/;"	r
0	js/three.js	/^							s0 = 0;$/;"	r
0	js/three.js	/^							vA.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^							vB.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^							vC.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^						\/\/ f''(tN) = 0, a.k.a. Natural Spline$/;"	r
0	js/three.js	/^						\/\/ f'(t0) = 0$/;"	r
0	js/three.js	/^						\/\/ f'(tN) = 0$/;"	r
0	js/three.js	/^						array[ i ] = 0;$/;"	r
0	js/three.js	/^						context.drawImage( image, 0, 0, image.width, image.height );$/;"	r
0	js/three.js	/^						context.putImageData( image, 0, 0 );$/;"	r
0	js/three.js	/^						for ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {$/;"	r
0	js/three.js	/^						for ( i = 0, l = index.count; i < l; i += 3 ) {$/;"	r
0	js/three.js	/^						for ( i = 0, l = position.count; i < l; i += 3 ) {$/;"	r
0	js/three.js	/^						for ( i = 0, l = vertices.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^						for ( j = 0; j < 3; j ++ ) {$/;"	r
0	js/three.js	/^						for ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {$/;"	r
0	js/three.js	/^						for ( var f = 0; f < faces; f ++ ) {$/;"	r
0	js/three.js	/^						for ( var h = 0; h < indepHoles.length; h ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0, il = callbacks.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0, il = indices.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0, l = indices.length - 1; i < l; i += step ) {$/;"	r
0	js/three.js	/^						for ( var i = 0, l = name.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0, l = positions.length \/ 3 - 1; i < l; i += step ) {$/;"	r
0	js/three.js	/^						for ( var i = 0, l = positions.length \/ 3; i < l; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0; i < object.material.length; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0; i < targetObject.length; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {$/;"	r
0	js/three.js	/^						for ( var j = 0, m = nBindings; j !== m; ++ j ) {$/;"	r
0	js/three.js	/^						for ( var j = 0; j !== stride; ++ j ) {$/;"	r
0	js/three.js	/^						for ( var j = 0; j !== stride; ++ j )$/;"	r
0	js/three.js	/^						for ( var j = 0; j < data.materials.length; j ++ ) {$/;"	r
0	js/three.js	/^						for ( var k = 0, kl = groups.length; k < kl; k ++ ) {$/;"	r
0	js/three.js	/^						for ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {$/;"	r
0	js/three.js	/^						for ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {$/;"	r
0	js/three.js	/^						for ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {$/;"	r
0	js/three.js	/^						loopCount = 0;$/;"	r
0	js/three.js	/^						offsetX = 0;$/;"	r
0	js/three.js	/^						sw.set( 1, 0, 0, 0 ); \/\/ do something reasonable$/;"	r
0	js/three.js	/^						this._cachedIndex = 0;$/;"	r
0	js/three.js	/^						this._setEndings( this.repetitions === 0, true, pingPong );$/;"	r
0	js/three.js	/^						this._setEndings( true, this.repetitions === 0, pingPong );$/;"	r
0	js/three.js	/^						time = 0;$/;"	r
0	js/three.js	/^						vec.set( 1, 0, 0, 0 ); \/\/ do something reasonable$/;"	r
0	js/three.js	/^						x = 0;$/;"	r
0	js/three.js	/^						y = 0;$/;"	r
0	js/three.js	/^						z = 0;$/;"	r
0	js/three.js	/^					\/\/ this singularity is identity matrix so angle = 0$/;"	r
0	js/three.js	/^					cube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );$/;"	r
0	js/three.js	/^					cube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );$/;"	r
0	js/three.js	/^					currentColorClear.set( - 1, 0, 0, 0 ); \/\/ set to invalid state$/;"	r
0	js/three.js	/^					enabledAttributes[ i ] = 0;$/;"	r
0	js/three.js	/^					for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
0	js/three.js	/^					for ( i = 0; i < json.uvs.length; i ++ ) {$/;"	r
0	js/three.js	/^					for ( i = 0; i < nUvLayers; i ++ ) {$/;"	r
0	js/three.js	/^					for ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {$/;"	r
0	js/three.js	/^					for ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( j = 0; j < 3; j ++ ) {$/;"	r
0	js/three.js	/^					for ( k = 0, kl = uvs.length; k < kl; k ++ ) {$/;"	r
0	js/three.js	/^					for ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {$/;"	r
0	js/three.js	/^					for ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {$/;"	r
0	js/three.js	/^					for ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;$/;"	r
0	js/three.js	/^					for ( v = 0; v < n; v ++ ) verts[ v ] = v;$/;"	r
0	js/three.js	/^					for ( var f = 0, fl = faces.length; f < fl; f ++ ) {$/;"	r
0	js/three.js	/^					for ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, il = array.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, il = callbacks.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, il = position.count; i < il; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, il = positions.length; i < il; i += 9 ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = object.count * 3; i < l; i += 9 ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = outline.length; i < l; ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = this.material.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, l = vertices.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, n = dest.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^					for ( var i = 0, n = values.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < 6; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < children.length; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < edgeList.length; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < formats.length; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < indices.length; i += 3 ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < nbVertices - 1; i += step ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < positions.length \/ 3; i += 3 ) {$/;"	r
0	js/three.js	/^					for ( var i = 0; i < skeleton.bones.length; i ++ ) {$/;"	r
0	js/three.js	/^					for ( var j = 0, jl = cameras.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^					for ( var j = 0, jl = groups.length; j < jl; ++ j ) {$/;"	r
0	js/three.js	/^					for ( var j = 0, m = nBindings; j !== m; ++ j ) {$/;"	r
0	js/three.js	/^					for ( var j = 0; j < itemSize; j ++ ) {$/;"	r
0	js/three.js	/^					for ( var k = 0; k < animationKeys.length; k ++ ) {$/;"	r
0	js/three.js	/^					for ( var l = 0; l < levels.length; l ++ ) {$/;"	r
0	js/three.js	/^					gl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );$/;"	r
0	js/three.js	/^					gl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );$/;"	r
0	js/three.js	/^					gl.uniform2f( uniforms.uvOffset, 0, 0 );$/;"	r
0	js/three.js	/^					if ( nextHoleIdx > lastHoleIdx )	nextHoleIdx = 0;$/;"	r
0	js/three.js	/^					if ( nextShapeIdx > lastShapeIdx )	nextShapeIdx = 0;$/;"	r
0	js/three.js	/^					nUvLayers = 0;$/;"	r
0	js/three.js	/^					r = 0;$/;"	r
0	js/three.js	/^					state.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );$/;"	r
0	js/three.js	/^					state.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );$/;"	r
0	js/three.js	/^					t = _Math.clamp( t, 0, 1 );$/;"	r
0	js/three.js	/^					this._loopCount = 0;$/;"	r
0	js/three.js	/^					this._x = 0;$/;"	r
0	js/three.js	/^					this._y = 0;$/;"	r
0	js/three.js	/^					this._z = 0;$/;"	r
0	js/three.js	/^					this.set( 1, 0, 0, 0 );$/;"	r
0	js/three.js	/^					v = u + 1; if ( nv <= v ) v = 0; \/* new v    *\/$/;"	r
0	js/three.js	/^					var maxRadiusSq = 0;$/;"	r
0	js/three.js	/^					vector[ u ] = 0;$/;"	r
0	js/three.js	/^					vector[ v ] = 0;$/;"	r
0	js/three.js	/^					w = v + 1; if ( nv <= w ) w = 0; \/* next     *\/$/;"	r
0	js/three.js	/^				 0, 0, 0, 1$/;"	r
0	js/three.js	/^				 0, 1, 0, 0,$/;"	r
0	js/three.js	/^				- 0.5, - 0.5, 0, 0,$/;"	r
0	js/three.js	/^				- 0.5, 0.5, 0, 1$/;"	r
0	js/three.js	/^				- 1, - 1, 0, 0,$/;"	r
0	js/three.js	/^				- s, 0, c, 0,$/;"	r
0	js/three.js	/^				0, 0, 0, 1$/;"	r
0	js/three.js	/^				0, 0, 1$/;"	r
0	js/three.js	/^				0, 0, 1, 0,$/;"	r
0	js/three.js	/^				0, 0, 1, z,$/;"	r
0	js/three.js	/^				0, 0, s, - s * center.z,$/;"	r
0	js/three.js	/^				0, 0, z, 0,$/;"	r
0	js/three.js	/^				0, 1, 0, 0,$/;"	r
0	js/three.js	/^				0, 1, 0, y,$/;"	r
0	js/three.js	/^				0, 1, 0,$/;"	r
0	js/three.js	/^				0, 1, 2,$/;"	r
0	js/three.js	/^				0, 2, 3$/;"	r
0	js/three.js	/^				0, c, - s, 0,$/;"	r
0	js/three.js	/^				0, s, 0, - s * center.y,$/;"	r
0	js/three.js	/^				0, s, c, 0,$/;"	r
0	js/three.js	/^				0, y, 0, 0,$/;"	r
0	js/three.js	/^				Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );$/;"	r
0	js/three.js	/^				action._byClipCacheIndex = 0;$/;"	r
0	js/three.js	/^				attributeDivisors[ attribute ] = 0;$/;"	r
0	js/three.js	/^				axis.set( dir.z, 0, - dir.x ).normalize();$/;"	r
0	js/three.js	/^				bindings[ i ].useCount = 0;$/;"	r
0	js/three.js	/^				camera.position.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^				context.drawImage( image, 0, 0, canvas.width, canvas.height );$/;"	r
0	js/three.js	/^				context.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );$/;"	r
0	js/three.js	/^				deltaAngle = 0;$/;"	r
0	js/three.js	/^				extension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );$/;"	r
0	js/three.js	/^				faceType = setBit( faceType, 0, 0 ); \/\/ isQuad$/;"	r
0	js/three.js	/^				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
0	js/three.js	/^				for ( f = 0; f < 3; f ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0, il = ahole.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0, l = ( position.count \/ 3 ); i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0, l = morphAttribute.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0; i < flen; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0; i < skinWeight.count; i ++ ) {$/;"	r
0	js/three.js	/^				for ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( ix = 0; ix < gridX1; ix ++ ) {$/;"	r
0	js/three.js	/^				for ( ix = 0; ix < gridX; ix ++ ) {$/;"	r
0	js/three.js	/^				for ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {$/;"	r
0	js/three.js	/^				for ( j = 0; j < 3; j ++ ) {$/;"	r
0	js/three.js	/^				for ( j = 0; j <= radialSegments; j ++ ) {$/;"	r
0	js/three.js	/^				for ( j = 0; j <= rows; j ++ ) {$/;"	r
0	js/three.js	/^				for ( o = 0, ol = groups.length; o < ol; ++ o ) {$/;"	r
0	js/three.js	/^				for ( p = 0; p < n; p ++ ) {$/;"	r
0	js/three.js	/^				for ( s = 0; s < sl; s ++ ) {$/;"	r
0	js/three.js	/^				for ( var face = 0; face < faceCount; face ++ ) {$/;"	r
0	js/three.js	/^				for ( var h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, il = bones.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, il = normals.count; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, il = points.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, il = this.bones.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, il = url.length; i < il; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = ( array.length \/ 3 ) - 1; i < l; i += 3 ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = array.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = array.length; i < l; i += 3 ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = attribute.count; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = colors.count; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = indices.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = json.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = morphTargets.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, l = points.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, n = bindings.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, n = groups.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, n = source.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0, n = times.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i !== lGlobal; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i !== n; ++ i )$/;"	r
0	js/three.js	/^				for ( var i = 0; i !== stride; ++ i ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < 36; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < 6; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < _this.maxMorphNormals; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < _this.maxMorphTargets; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < animations.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < arguments.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < chars.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < groups.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < morphNormalsLength; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < morphTargetsLength; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < source.children.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var i = 0; i < this.children.length; i ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, jl = objPos.count; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, jl = uv.length; j < jl; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0, m = interpolants.length; j !== m; ++ j ) {$/;"	r
0	js/three.js	/^				for ( var j = 0; j !== stride; ++ j ) {$/;"	r
0	js/three.js	/^				for ( var j = 0; j < morphNormalsLength; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0; j < morphTargetsLength; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var j = 0; j < pts.length; j ++ ) {$/;"	r
0	js/three.js	/^				for ( var n = 0; n < 3; n ++ ) {$/;"	r
0	js/three.js	/^				for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {$/;"	r
0	js/three.js	/^				for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )$/;"	r
0	js/three.js	/^				for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {$/;"	r
0	js/three.js	/^				for ( x = 0; x <= radialSegments; x ++ ) {$/;"	r
0	js/three.js	/^				for ( y = 0; y < heightSegments; y ++ ) {$/;"	r
0	js/three.js	/^				from = 0,$/;"	r
0	js/three.js	/^				gl.bufferSubData( bufferType, 0, array );$/;"	r
0	js/three.js	/^				gl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );$/;"	r
0	js/three.js	/^				groupCount = 0;$/;"	r
0	js/three.js	/^				hue = 0;$/;"	r
0	js/three.js	/^				i = 0;$/;"	r
0	js/three.js	/^				if ( j === il ) j = 0;$/;"	r
0	js/three.js	/^				if ( k === il ) k = 0;$/;"	r
0	js/three.js	/^				l = _Math.clamp( l, 0, 1 );$/;"	r
0	js/three.js	/^				material.numSupportedMorphNormals = 0;$/;"	r
0	js/three.js	/^				material.numSupportedMorphTargets = 0;$/;"	r
0	js/three.js	/^				maxAnisotropy = 0;$/;"	r
0	js/three.js	/^				morphInfluences[ i ] = 0;$/;"	r
0	js/three.js	/^				newAttributes[ i ] = 0;$/;"	r
0	js/three.js	/^				normal.set( 0, 0, 1 );$/;"	r
0	js/three.js	/^				normal.set( 1, 0, 0 );$/;"	r
0	js/three.js	/^				normals.push( 0, 0, 1 );$/;"	r
0	js/three.js	/^				offset = 0;$/;"	r
0	js/three.js	/^				oldFogType = 0;$/;"	r
0	js/three.js	/^				orientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );$/;"	r
0	js/three.js	/^				renderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );$/;"	r
0	js/three.js	/^				return result.set( 0, 0, - 1 ).applyQuaternion( quaternion );$/;"	r
0	js/three.js	/^				return result.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^				return result.set( 0, 0, 1 ).applyQuaternion( quaternion );$/;"	r
0	js/three.js	/^				s = _Math.clamp( s, 0, 1 );$/;"	r
0	js/three.js	/^				saturation = 0;$/;"	r
0	js/three.js	/^				sceneFogType = 0;$/;"	r
0	js/three.js	/^				sphere.center.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^				state.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );$/;"	r
0	js/three.js	/^				this._x = 0;$/;"	r
0	js/three.js	/^				this._y = 0;$/;"	r
0	js/three.js	/^				this._z = 0;$/;"	r
0	js/three.js	/^				this.phi = 0;$/;"	r
0	js/three.js	/^				this.quaternion.set( 0, 0, 0, 1 );$/;"	r
0	js/three.js	/^				this.quaternion.set( 1, 0, 0, 0 );$/;"	r
0	js/three.js	/^				this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );$/;"	r
0	js/three.js	/^				this.theta = 0;$/;"	r
0	js/three.js	/^				this.times = AnimationUtils.arraySlice( times, 0, writeIndex );$/;"	r
0	js/three.js	/^				this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );$/;"	r
0	js/three.js	/^				this.y = 0;$/;"	r
0	js/three.js	/^				this.z = 0;$/;"	r
0	js/three.js	/^				tx * x + c, tx * y - s * z, tx * z + s * y, 0,$/;"	r
0	js/three.js	/^				tx * y + s * z, ty * y + c, ty * z - s * x, 0,$/;"	r
0	js/three.js	/^				tx * z - s * y, ty * z + s * x, t * z * z + c, 0,$/;"	r
0	js/three.js	/^				var faceType = 0;$/;"	r
0	js/three.js	/^				var fogType = 0;$/;"	r
0	js/three.js	/^				var idx = 0;$/;"	r
0	js/three.js	/^				var index = 0, index2 = 0;$/;"	r
0	js/three.js	/^				var isJPEG = url.search( \/\\.(jpg|jpeg)$\/ ) > 0 || url.search( \/^data\\:image\\\/jpeg\/ ) === 0;$/;"	r
0	js/three.js	/^				var layer = 0; \/\/ steps + 1$/;"	r
0	js/three.js	/^				var loaded = 0;$/;"	r
0	js/three.js	/^				var maxRadiusSq = 0;$/;"	r
0	js/three.js	/^				var minShapeIndex = 0;$/;"	r
0	js/three.js	/^				var offsetX = 0, offsetY = 0;$/;"	r
0	js/three.js	/^				var s = 0,$/;"	r
0	js/three.js	/^				var variantIndex = 0;$/;"	r
0	js/three.js	/^				vertices.push( 0, 0, 0 );$/;"	r
0	js/three.js	/^				vertices.push( x, 0, z );$/;"	r
0	js/three.js	/^			 0, - 1, t, 	0, 1, t,	0, - 1, - t, 	0, 1, - t,$/;"	r
0	js/three.js	/^			 0, - r, - t, 0, - r, t,$/;"	r
0	js/three.js	/^			 0, 11, 5, 	0, 5, 1, 	0, 1, 7, 	0, 7, 10, 	0, 10, 11,$/;"	r
0	js/three.js	/^			 0, r, - t, 0, r, t,$/;"	r
0	js/three.js	/^			- r, - t, 0, - r, t, 0,$/;"	r
0	js/three.js	/^			- size, - size, 0,$/;"	r
0	js/three.js	/^			- t, 0, - r, t, 0, - r,$/;"	r
0	js/three.js	/^			- t, 0, r, t, 0, r$/;"	r
0	js/three.js	/^			0, - 1, 0, 	0, 0, 1,	0, 0, - 1$/;"	r
0	js/three.js	/^			0, 0, 0,	- 1, 0, 1,$/;"	r
0	js/three.js	/^			0, 0, 0,	0, 0, size$/;"	r
0	js/three.js	/^			0, 0, 0,	0, size, 0,$/;"	r
0	js/three.js	/^			0, 0, 0,	size, 0, 0,$/;"	r
0	js/three.js	/^			0, 0, 0, 	0, - 1, 1$/;"	r
0	js/three.js	/^			0, 0, 0, 	0, 0, 1,$/;"	r
0	js/three.js	/^			0, 0, 0, 	0, 1, 1,$/;"	r
0	js/three.js	/^			0, 0, 0, 	1, 0, 1,$/;"	r
0	js/three.js	/^			0, 0, 0, 1$/;"	r
0	js/three.js	/^			0, 0, 1$/;"	r
0	js/three.js	/^			0, 0, 1,	0, 0.6, 1$/;"	r
0	js/three.js	/^			0, 0, 1, 0,$/;"	r
0	js/three.js	/^			0, 1, 0,	0.6, 1, 0,$/;"	r
0	js/three.js	/^			0, 1, 0, 0,$/;"	r
0	js/three.js	/^			0, 1, 0,$/;"	r
0	js/three.js	/^			0, 12, 1, 	0, 1, 18, 	0, 18, 16,$/;"	r
0	js/three.js	/^			0, 2, 4,	0, 4, 3,	0, 3, 5,$/;"	r
0	js/three.js	/^			0, 5, 2,	1, 2, 5,	1, 5, 3,$/;"	r
0	js/three.js	/^			\/\/ (±φ, 0, ±1\/φ)$/;"	r
0	js/three.js	/^			\/\/ loop where sum != 0, sum > d , sum+1 <d$/;"	r
0	js/three.js	/^			\/\/ note: happily accumulating nothing when weight = 0, the caller knows$/;"	r
0	js/three.js	/^			_gl.drawArrays( _gl.TRIANGLES, 0, object.count );$/;"	r
0	js/three.js	/^			_infoRender.calls = 0;$/;"	r
0	js/three.js	/^			_infoRender.faces = 0;$/;"	r
0	js/three.js	/^			_infoRender.points = 0;$/;"	r
0	js/three.js	/^			_infoRender.vertices = 0;$/;"	r
0	js/three.js	/^			_scissor = new Vector4( 0, 0, _width, _height ),$/;"	r
0	js/three.js	/^			_sphere.center.set( 0, 0, 0 );$/;"	r
0	js/three.js	/^			_usedTextureUnits = 0,$/;"	r
0	js/three.js	/^			_usedTextureUnits = 0;$/;"	r
0	js/three.js	/^			_viewport = new Vector4( 0, 0, _width, _height ),$/;"	r
0	js/three.js	/^			ambient: [ 0, 0, 0 ],$/;"	r
0	js/three.js	/^			bevelSegments = 0;$/;"	r
0	js/three.js	/^			bevelSize = 0;$/;"	r
0	js/three.js	/^			bevelThickness = 0;$/;"	r
0	js/three.js	/^			context.fillRect( 0, 0, 8, 8 );$/;"	r
0	js/three.js	/^			flaresArray.length = 0;$/;"	r
0	js/three.js	/^			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
0	js/three.js	/^			for ( f = 0; f < fl; f ++ ) {$/;"	r
0	js/three.js	/^			for ( h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = allpoints.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = colors.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = contour.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = faces.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = faces2.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = lineDistances.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = morphNormals.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = morphTargets.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = skinIndices.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = skinWeights.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = this.bones.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = this.faces.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = this.vertices.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = triangles.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = uvs2.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, il = vertices.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {$/;"	r
0	js/three.js	/^			for ( i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, l = groups.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0, l = shapeVertices.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i < cols; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i < thetaSegments; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i < tubularSegments; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i < vlen; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i <= cols; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i <= segments; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i <= thetaSegments; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = 0; i <= tubularSegments; i ++ ) {$/;"	r
0	js/three.js	/^			for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {$/;"	r
0	js/three.js	/^			for ( ix = 0; ix < gridX1; ix ++ ) {$/;"	r
0	js/three.js	/^			for ( ix = 0; ix < gridX; ix ++ ) {$/;"	r
0	js/three.js	/^			for ( ix = 0; ix < widthSegments; ix ++ ) {$/;"	r
0	js/three.js	/^			for ( ix = 0; ix <= widthSegments; ix ++ ) {$/;"	r
0	js/three.js	/^			for ( iy = 0; iy < gridY1; iy ++ ) {$/;"	r
0	js/three.js	/^			for ( iy = 0; iy < gridY; iy ++ ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j < ( points.length - 1 ); j ++ ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j < divisions; j ++ ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j < slices; j ++ ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j <= ( points.length - 1 ); j ++ ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j <= radialSegments; ++ j ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j <= radialSegments; j ++ ) {$/;"	r
0	js/three.js	/^			for ( j = 0; j <= slices; j ++ ) {$/;"	r
0	js/three.js	/^			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {$/;"	r
0	js/three.js	/^			for ( var d = 0; d <= divisions; d ++ ) {$/;"	r
0	js/three.js	/^			for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
0	js/three.js	/^			for ( var h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
0	js/three.js	/^			for ( var h = 0; h < hierarchyTracks.length; h ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = colors2.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = lights.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = morphTargets.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = newShapes.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = points.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = this.bones.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = this.faces.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = vertices.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, il = vertices2.length; i < il; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, j = 0; i < bones.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = array.length; i < l; i += 3 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = attribute.count; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = children.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = colors.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = flares.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = handlers.length; i < l; i += 2 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = indices.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = levels.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = lights.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = materials.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = newAttributes.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = objects.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = points.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = renderList.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = sprites.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = subPaths.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = this.children.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = this.curves.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = this.holes.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = this.itemSize; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = this.stride; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, l = vectors.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, n = arguments.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0, n = tracks.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i !== n; ++ i ) result[ i ] = i;$/;"	r
0	js/three.js	/^			for ( var i = 0; i !== nActions; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i !== nBindings; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i !== nKeys; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i !== nTracks; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i !== stride; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < 16; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < 6; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < 8; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < 9; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < clipArray.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < count; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < data.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < enabledAttributes.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < faces.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < indices.length; i += 3 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < json.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < materials.length; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < numMorphTargets; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < parameterNames.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < shapes.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < this.faces.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < this.tracks.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < this.vertices.length; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < urls.length; ++ i ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < uvBuffer.length; i += 6 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i < vertexBuffer.length; i += 3 ) {$/;"	r
0	js/three.js	/^			for ( var i = 0; i <= divisions; i ++ ) {$/;"	r
0	js/three.js	/^			for ( var j = 0; j < 3; j ++ ) {$/;"	r
0	js/three.js	/^			for ( var l = 0; l < levels.length; l ++ ) {$/;"	r
0	js/three.js	/^			for ( var p = 0, pl = paths.length; p < pl; p ++ ) {$/;"	r
0	js/three.js	/^			for ( var p = 0, pl = programs.length; p < pl; p ++ ) {$/;"	r
0	js/three.js	/^			for ( var p = n - 1, q = 0; q < n; p = q ++ ) {$/;"	r
0	js/three.js	/^			for ( var u = 0; u < uniforms.length; u ++ ) {$/;"	r
0	js/three.js	/^			for ( x = 0; x < radialSegments; x ++ ) {$/;"	r
0	js/three.js	/^			for ( x = 0; x <= radialSegments; x ++ ) {$/;"	r
0	js/three.js	/^			for ( y = 0; y <= heightSegments; y ++ ) {$/;"	r
0	js/three.js	/^			gl.bindAttribLocation( program, 0, 'position' );$/;"	r
0	js/three.js	/^			gl.bindAttribLocation( program, 0, material.index0AttributeName );$/;"	r
0	js/three.js	/^			gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );$/;"	r
0	js/three.js	/^			gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );$/;"	r
0	js/three.js	/^			if ( distance === undefined ) distance = 0;$/;"	r
0	js/three.js	/^			if ( j === il ) j = 0;$/;"	r
0	js/three.js	/^			if ( k === il ) k = 0;$/;"	r
0	js/three.js	/^			if ( materialIndexOffset === undefined ) materialIndexOffset = 0;$/;"	r
0	js/three.js	/^			if ( offset === undefined ) offset = 0;$/;"	r
0	js/three.js	/^			if ( startIndex === undefined ) startIndex = 0;$/;"	r
0	js/three.js	/^			if ( t1 < 0 ) t1 = 0;$/;"	r
0	js/three.js	/^			levels.splice( l, 0, { distance: distance, object: object } );$/;"	r
0	js/three.js	/^			lightsArray.length = 0;$/;"	r
0	js/three.js	/^			lineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );$/;"	r
0	js/three.js	/^			new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )$/;"	r
0	js/three.js	/^			new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),$/;"	r
0	js/three.js	/^			normals.push( 0, 0, 1 );$/;"	r
0	js/three.js	/^			numGlobalPlanes = 0,$/;"	r
0	js/three.js	/^			object.count = 0;$/;"	r
0	js/three.js	/^			opaque.length = 0;$/;"	r
0	js/three.js	/^			renderItemsIndex = 0;$/;"	r
0	js/three.js	/^			renderTarget.activeCubeFace = 0;$/;"	r
0	js/three.js	/^			return ( this.mask & layers.mask ) !== 0;$/;"	r
0	js/three.js	/^			return ( value & ( value - 1 ) ) === 0 && value !== 0;$/;"	r
0	js/three.js	/^			return this._scheduleFading( duration, 0, 1 );$/;"	r
0	js/three.js	/^			return this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );$/;"	r
0	js/three.js	/^			return this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );$/;"	r
0	js/three.js	/^			return this.warp( this._effectiveTimeScale, 0, duration );$/;"	r
0	js/three.js	/^			scope.numIntersection = 0;$/;"	r
0	js/three.js	/^			setPoint( 'c', 0, 0, - 1 );$/;"	r
0	js/three.js	/^			setPoint( 'cf1', - w, 0, 1 );$/;"	r
0	js/three.js	/^			setPoint( 'cf3', 0, - h, 1 );$/;"	r
0	js/three.js	/^			setPoint( 'cf4', 0, h, 1 );$/;"	r
0	js/three.js	/^			setPoint( 'cn1', - w, 0, - 1 );$/;"	r
0	js/three.js	/^			setPoint( 'cn3', 0, - h, - 1 );$/;"	r
0	js/three.js	/^			setPoint( 'cn4', 0, h, - 1 );$/;"	r
0	js/three.js	/^			setPoint( 't', 0, 0, 1 );$/;"	r
0	js/three.js	/^			setPoint( 'u3', 0, h * 2, - 1 );$/;"	r
0	js/three.js	/^			shadowsArray.length = 0;$/;"	r
0	js/three.js	/^			spritesArray.length = 0;$/;"	r
0	js/three.js	/^			state.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );$/;"	r
0	js/three.js	/^			te[ 0 ] = 2 * w;	te[ 4 ] = 0;	te[ 8 ] = 0;	te[ 12 ] = - x;$/;"	r
0	js/three.js	/^			te[ 1 ] = 0;	te[ 5 ] = 2 * h;	te[ 9 ] = 0;	te[ 13 ] = - y;$/;"	r
0	js/three.js	/^			te[ 1 ] = 0;	te[ 5 ] = y;	te[ 9 ] = b;	te[ 13 ] = 0;$/;"	r
0	js/three.js	/^			te[ 11 ] = 0;$/;"	r
0	js/three.js	/^			te[ 12 ] = 0;$/;"	r
0	js/three.js	/^			te[ 13 ] = 0;$/;"	r
0	js/three.js	/^			te[ 14 ] = 0;$/;"	r
0	js/three.js	/^			te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = - 2 * p;	te[ 14 ] = - z;$/;"	r
0	js/three.js	/^			te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = c;	te[ 14 ] = d;$/;"	r
0	js/three.js	/^			te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = - 1;	te[ 15 ] = 0;$/;"	r
0	js/three.js	/^			te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = 0;	te[ 15 ] = 1;$/;"	r
0	js/three.js	/^			te[ 3 ] = 0;$/;"	r
0	js/three.js	/^			te[ 7 ] = 0;$/;"	r
0	js/three.js	/^			this._nActiveActions = 0;$/;"	r
0	js/three.js	/^			this._nActiveBindings = 0;$/;"	r
0	js/three.js	/^			this._nActiveControlInterpolants = 0;$/;"	r
0	js/three.js	/^			this.cumulativeWeight = 0;$/;"	r
0	js/three.js	/^			this.elapsedTime = 0;$/;"	r
0	js/three.js	/^			this.offset = 0;$/;"	r
0	js/three.js	/^			this.scissor.set( 0, 0, width, height );$/;"	r
0	js/three.js	/^			this.setViewport( 0, 0, width, height );$/;"	r
0	js/three.js	/^			this.time = 0;			\/\/ restart clip$/;"	r
0	js/three.js	/^			this.viewport.set( 0, 0, width, height );$/;"	r
0	js/three.js	/^			transparent.length = 0;$/;"	r
0	js/three.js	/^			var bits = 0;$/;"	r
0	js/three.js	/^			var currentColorClear = new Vector4( 0, 0, 0, 0 );$/;"	r
0	js/three.js	/^			var d = 0;$/;"	r
0	js/three.js	/^			var dataCount = 0;$/;"	r
0	js/three.js	/^			var diff = 0;$/;"	r
0	js/three.js	/^			var directionalLength = 0;$/;"	r
0	js/three.js	/^			var groupCount = 0;$/;"	r
0	js/three.js	/^			var hemiLength = 0;$/;"	r
0	js/three.js	/^			var i = 0, il = arcLengths.length;$/;"	r
0	js/three.js	/^			var i = 0;$/;"	r
0	js/three.js	/^			var idx = 0;$/;"	r
0	js/three.js	/^			var layeroffset = 0;$/;"	r
0	js/three.js	/^			var lengths = [], sums = 0;$/;"	r
0	js/three.js	/^			var loaded = 0;$/;"	r
0	js/three.js	/^			var low = 0, high = il - 1, comparison;$/;"	r
0	js/three.js	/^			var mainIdx = 0;$/;"	r
0	js/three.js	/^			var oldFogType = 0;$/;"	r
0	js/three.js	/^			var pointLength = 0;$/;"	r
0	js/three.js	/^			var r = 0, g = 0, b = 0;$/;"	r
0	js/three.js	/^			var rectAreaLength = 0;$/;"	r
0	js/three.js	/^			var rnd = 0, r;$/;"	r
0	js/three.js	/^			var sceneFogType = 0;$/;"	r
0	js/three.js	/^			var spotLength = 0;$/;"	r
0	js/three.js	/^			var timeScale = 0;$/;"	r
0	js/three.js	/^			var useMorphing = ( i & _MorphingFlag ) !== 0;$/;"	r
0	js/three.js	/^			var useSkinning = ( i & _SkinningFlag ) !== 0;$/;"	r
0	js/three.js	/^			var v1 = new Vector3( 0, 0, 1 );$/;"	r
0	js/three.js	/^			var v1 = new Vector3( 1, 0, 0 );$/;"	r
0	js/three.js	/^			var value = 0, data = this.getFrequencyData();$/;"	r
0	js/three.js	/^			var vertexCounter = 0;$/;"	r
0	js/three.js	/^			var weight = 0;$/;"	r
0	js/three.js	/^			vertices.push( - halfSize, 0, k, halfSize, 0, k );$/;"	r
0	js/three.js	/^			vertices.push( 0, 0, 0 );$/;"	r
0	js/three.js	/^			vertices.push( k, 0, - halfSize, k, 0, halfSize );$/;"	r
0	js/three.js	/^			vertices.push( x, 0, z );$/;"	r
0	js/three.js	/^		CylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );$/;"	r
0	js/three.js	/^		CylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );$/;"	r
0	js/three.js	/^		RePathPart.lastIndex = 0;$/;"	r
0	js/three.js	/^		\/\/ (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)$/;"	r
0	js/three.js	/^		array[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;$/;"	r
0	js/three.js	/^		cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );$/;"	r
0	js/three.js	/^		cameraNY.up.set( 0, 0, - 1 );$/;"	r
0	js/three.js	/^		cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );$/;"	r
0	js/three.js	/^		cameraPX.lookAt( new Vector3( 1, 0, 0 ) );$/;"	r
0	js/three.js	/^		cameraPY.up.set( 0, 0, 1 );$/;"	r
0	js/three.js	/^		cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );$/;"	r
0	js/three.js	/^		colorBuffer.setClear( 0, 0, 0, 1 );$/;"	r
0	js/three.js	/^		for ( b = 0; b < bevelSegments; b ++ ) {$/;"	r
0	js/three.js	/^		for ( b = bevelSegments - 1; b >= 0; b -- ) {$/;"	r
0	js/three.js	/^		for ( h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i < segments; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i < stacks; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i < vlen; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i <= circles; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i <= radials; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i <= segments; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i <= stacks; i ++ ) {$/;"	r
0	js/three.js	/^		for ( i = 0; i <= tubularSegments; ++ i ) {$/;"	r
0	js/three.js	/^		for ( iy = 0; iy < gridY1; iy ++ ) {$/;"	r
0	js/three.js	/^		for ( iy = 0; iy < gridY; iy ++ ) {$/;"	r
0	js/three.js	/^		for ( iy = 0; iy < heightSegments; iy ++ ) {$/;"	r
0	js/three.js	/^		for ( iy = 0; iy <= heightSegments; iy ++ ) {$/;"	r
0	js/three.js	/^		for ( j = 0; j < phiSegments; j ++ ) {$/;"	r
0	js/three.js	/^		for ( j = 0; j <= phiSegments; j ++ ) {$/;"	r
0	js/three.js	/^		for ( j = 0; j <= radialSegments; j ++ ) {$/;"	r
0	js/three.js	/^		for ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {$/;"	r
0	js/three.js	/^		for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {$/;"	r
0	js/three.js	/^		for ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {$/;"	r
0	js/three.js	/^		for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {$/;"	r
0	js/three.js	/^		for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
0	js/three.js	/^		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^		for ( var i = 0, n = seq.length; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i !== n; ++ i ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i !== n; ++ i )$/;"	r
0	js/three.js	/^		for ( var i = 0; i !== nTracks; ++ i ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i < bones.length; i ++ ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i < lines.length; i ++ ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i < n; ++ i ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i < n; i ++ ) {$/;"	r
0	js/three.js	/^		for ( var i = 0; i < object.children.length; i ++ ) {$/;"	r
0	js/three.js	/^		for ( var s = 0; s < sl; s ++ ) {$/;"	r
0	js/three.js	/^		geometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );$/;"	r
0	js/three.js	/^		normals.push( 0, 0, 1 );$/;"	r
0	js/three.js	/^		phiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );$/;"	r
0	js/three.js	/^		this._accuIndex = 0;$/;"	r
0	js/three.js	/^		this._cachedIndex = 0;$/;"	r
0	js/three.js	/^		this.activeCubeFace = 0; \/\/ PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5$/;"	r
0	js/three.js	/^		this.activeMipMapLevel = 0;$/;"	r
0	js/three.js	/^		this.alphaTest = 0;$/;"	r
0	js/three.js	/^		this.bias = 0;$/;"	r
0	js/three.js	/^		this.cumulativeWeight = 0;$/;"	r
0	js/three.js	/^		this.displacementBias = 0;$/;"	r
0	js/three.js	/^		this.elapsedTime = 0;$/;"	r
0	js/three.js	/^		this.filmOffset = 0;	\/\/ horizontal film offset (same unit as gauge)$/;"	r
0	js/three.js	/^		this.nCachedObjects_ = 0;			\/\/ threshold$/;"	r
0	js/three.js	/^		this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );$/;"	r
0	js/three.js	/^		this.numIntersection = 0;$/;"	r
0	js/three.js	/^		this.numPlanes = 0;$/;"	r
0	js/three.js	/^		this.offset = 0;$/;"	r
0	js/three.js	/^		this.oldTime = 0;$/;"	r
0	js/three.js	/^		this.overdraw = 0; \/\/ Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer$/;"	r
0	js/three.js	/^		this.polygonOffsetFactor = 0;$/;"	r
0	js/three.js	/^		this.polygonOffsetUnits = 0;$/;"	r
0	js/three.js	/^		this.referenceCount = 0;$/;"	r
0	js/three.js	/^		this.renderOrder = 0;$/;"	r
0	js/three.js	/^		this.rotation = 0;$/;"	r
0	js/three.js	/^		this.scissor = new Vector4( 0, 0, width, height );$/;"	r
0	js/three.js	/^		this.startTime = 0;$/;"	r
0	js/three.js	/^		this.time = 0;$/;"	r
0	js/three.js	/^		this.useCount = 0;$/;"	r
0	js/three.js	/^		this.version = 0;$/;"	r
0	js/three.js	/^		this.viewport = new Vector4( 0, 0, width, height );$/;"	r
0	js/three.js	/^		var c0 = 0, c1 = 0, c2 = 0, c3 = 0;$/;"	r
0	js/three.js	/^		var clearAlpha = 0;$/;"	r
0	js/three.js	/^		var color1 = new Color( 0, 0, 1 );$/;"	r
0	js/three.js	/^		var groupCount = 0;$/;"	r
0	js/three.js	/^		var groupStart = 0;$/;"	r
0	js/three.js	/^		var index = 0;$/;"	r
0	js/three.js	/^		var itemsLoaded = 0;$/;"	r
0	js/three.js	/^		var itemsTotal = 0;$/;"	r
0	js/three.js	/^		var nNormals = 0;$/;"	r
0	js/three.js	/^		var numberOfVertices = 0;$/;"	r
0	js/three.js	/^		var renderItemsIndex = 0;$/;"	r
0	js/three.js	/^		vertices.push( 0, 0, 0 );$/;"	r
0	js/three.js	/^	var BasicShadowMap = 0;$/;"	r
0	js/three.js	/^	var CullFaceNone = 0;$/;"	r
0	js/three.js	/^	var FrontFaceDirectionCW = 0;$/;"	r
0	js/three.js	/^	var FrontSide = 0;$/;"	r
0	js/three.js	/^	var LineStrip = 0;$/;"	r
0	js/three.js	/^	var MultiplyOperation = 0;$/;"	r
0	js/three.js	/^	var NeverDepth = 0;$/;"	r
0	js/three.js	/^	var NoBlending = 0;$/;"	r
0	js/three.js	/^	var NoColors = 0;$/;"	r
0	js/three.js	/^	var NoToneMapping = 0;$/;"	r
0	js/three.js	/^	var TrianglesDrawMode = 0;$/;"	r
0	js/three.js	/^	var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n";$/;"	r
0	js/three.js	/^	var geometryId = 0; \/\/ Geometry uses even numbers as Id$/;"	r
0	js/three.js	/^	var materialId = 0;$/;"	r
0	js/three.js	/^	var object3DId = 0;$/;"	r
0	js/three.js	/^	var programIdCount = 0;$/;"	r
0	js/three.js	/^	var shadowmap_vertex = "#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n";$/;"	r
0	js/three.js	/^	var shadowmask_pars_fragment = "float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n";$/;"	r
0	js/three.js	/^	var textureId = 0;$/;"	r
0	js/three.min.js	/^!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new X;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateOnWorldAxis:function(){var a=new X;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.premultiply(a);return this}}(),rotateX:function(){var a=new p(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=$/;"	r
0	js/three.min.js	/^!1;a=[];e=0;for(f=l.length;e<f;e++)h[e]=[];e=0;for(f=l.length;e<f;e++)for(g=m[e],t=0;t<g.length;t++){k=g[t];n=!0;for(v=0;v<l.length;v++)d(k.p,l[v].p)&&(e!==v&&a.push({froms:e,tos:v,hole:t}),n?(n=!1,h[v].push(k)):p=!0);n&&h[e].push(k)}0<a.length&&(p||(m=h))}p=0;for(e=l.length;p<e;p++)for(h=l[p].s,b.push(h),a=m[p],f=0,g=a.length;f<g;f++)h.holes.push(a[f].h);return b}});Object.assign(de.prototype,{isFont:!0,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split("");$/;"	r
0	js/three.min.js	/^!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var q=[],n=[],u=[],m=[],v=0,t=[],x=c\/2,y=0;(function(){var f,k,r=new p,J=new p,w=0,z=(b-a)\/c;for(k=0;k<=e;k++){var D=[],C=k\/e,E=C*(b-a)+a;for(f=0;f<=d;f++){var H=f\/d,M=H*h+g,L=Math.sin(M),M=Math.cos(M);J.x=E*L;J.y=-C*c+x;J.z=E*M;n.push(J.x,J.y,J.z);r.set(L,z,M).normalize();u.push(r.x,r.y,r.z);m.push(H,1-C);D.push(v++)}t.push(D)}for(f=0;f<d;f++)for(k=0;k<e;k++)r=t[k+1][f],J=t[k+1][f+1],z=t[k][f+1],q.push(t[k][f],r,z),q.push(r,J,z),w+=6;l.addGroup(y,w,0);$/;"	r
0	js/three.min.js	/^!a.frustumCulled||Td.intersectsObject(a)){c&&Jb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(md);var d=ta.update(a),e=a.material;if(Array.isArray(e))for(var f=d.groups,g=0,h=f.length;g<h;g++){var l=f[g],n=e[l.materialIndex];n&&n.visible&&D.push(a,d,n,Jb.z,l)}else e.visible&&D.push(a,d,e,Jb.z,null)}a=a.children;g=0;for(h=a.length;g<h;g++)k(a[g],b,c)}}function l(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,l=g.geometry,k=void 0===d?g.material:d,g=g.group;if(c.isArrayCamera){Z=$/;"	r
0	js/three.min.js	/^"canvas"),r.width=R.floorPowerOfTwo(q.width),r.height=R.floorPowerOfTwo(q.height),r.getContext("2d").drawImage(q,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+q.width+"x"+q.height+"). Resized to "+r.width+"x"+r.height,q),v=r):v=q);q=k(v);var r=f.convert(b.format),B=f.convert(b.type);m(a.TEXTURE_2D,b,q);var p=b.mipmaps;if(b.isDepthTexture){p=a.DEPTH_COMPONENT;if(1015===b.type){if(!y)throw Error("Float Depth Texture only supported in WebGL2.0");p=a.DEPTH_COMPONENT32F}else y&&$/;"	r
0	js/three.min.js	/^(function(m,ia){"object"===typeof exports&&"undefined"!==typeof module?ia(exports):"function"===typeof define&&define.amd?define(["exports"],ia):ia(m.THREE=m.THREE||{})})(this,function(m){function ia(){}function D(a,b){this.x=a||0;this.y=b||0}function K(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function X(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1}$/;"	r
0	js/three.min.js	/^-1;for(var n in f){for(var p=[],r=[],m=0;m!==k[l].morphTargets.length;++m){var v=k[l];p.push(v.time);r.push(v.morphTarget===n?1:0)}d.push(new fc(".morphTargetInfluence["+n+"]",p,r))}f=f.length*(g||1)}else l=".bones["+b[h].name+"]",c(ec,l+".position",k,"pos",d),c(Yc,l+".quaternion",k,"rot",d),c(ec,l+".scale",k,"scl",d)}return 0===d.length?null:new ra(e,f,d)}});Object.assign(ra.prototype,{resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-$/;"	r
0	js/three.min.js	/^-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1\/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},$/;"	r
0	js/three.min.js	/^-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,d)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b\/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=$/;"	r
0	js/three.min.js	/^-q),h),k=-d*d+e*(e+2*q)+n):e<=p?(d=0,e=Math.min(Math.max(-h,-q),h),k=e*(e+2*q)+n):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-q),h),k=-d*d+e*(e+2*q)+n)}else e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n;f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new p;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d;b=b.radius*b.radius;if(e>b)return null;$/;"	r
0	js/three.min.js	/^0,0);g.push(0,0,1);h.push(.5,.5);var n=0;for(k=3;n<=b;n++,k+=3){var u=c+n\/b*d;l.x=a*Math.cos(u);l.y=a*Math.sin(u);f.push(l.x,l.y,l.z);g.push(0,0,1);q.x=(f[k]\/a+1)\/2;q.y=(f[k+1]\/a+1)\/2;h.push(q.x,q.y)}for(k=1;k<=b;k++)e.push(k,k+1,0);this.setIndex(e);this.addAttribute("position",new z(f,3));this.addAttribute("normal",new z(g,3));this.addAttribute("uv",new z(h,2))}function cc(a){Q.call(this);this.type="ShadowMaterial";this.color=new H(0);this.opacity=1;this.transparent=this.lights=!0;this.setValues(a)}$/;"	r
0	js/three.min.js	/^0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();Bb.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};Bb.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a)};hd.prototype=Object.create(P.prototype);hd.prototype.constructor=hd;var Nd=new p,$/;"	r
0	js/three.min.js	/^0,0,0,0,a];a=new C;a.addAttribute("position",new z(b,3));a.addAttribute("color",new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new T({vertexColors:2});P.call(this,a,b)}function qe(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,k){e=k*(g-e);h=k*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,k,l,q){e=((f-e)\/k-(g-e)\/(k+l)+(g-f)\/l)*l;h=((g-f)\/l-(h-f)\/(l+q)+(h-g)\/q)*l;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+$/;"	r
0	js/three.min.js	/^0,0,a.width,a.height,0,0,c.width,c.height);console.warn("THREE.WebGLRenderer: image is too big ("+a.width+"x"+a.height+"). Resized to "+c.width+"x"+c.height,a);return c}return a}function k(a){return R.isPowerOfTwo(a.width)&&R.isPowerOfTwo(a.height)}function l(a,b){return a.generateMipmaps&&b&&1003!==a.minFilter&&1006!==a.minFilter}function q(b){return 1003===b||1004===b||1005===b?a.NEAREST:a.LINEAR}function n(b){b=b.target;b.removeEventListener("dispose",n);a:{var c=d.get(b);if(b.image&&c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);$/;"	r
0	js/three.min.js	/^0,1,-1);b.getAttribute("position").needsUpdate=!0}}();Ab.prototype=Object.create(P.prototype);Ab.prototype.constructor=Ab;Ab.prototype.update=function(){var a=new Na;return function(b){void 0!==b&&console.warn("THREE.BoxHelper: .update() has no longer arguments.");void 0!==this.object&&a.setFromObject(this.object);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=$/;"	r
0	js/three.min.js	/^0,2*Math.PI);var e=[],f=[],g=[],h=1\/b,k=new p,l=new D,q;for(q=0;q<=b;q++){var n=c+q*h*d;var u=Math.sin(n),m=Math.cos(n);for(n=0;n<=a.length-1;n++)k.x=a[n].x*u,k.y=a[n].y,k.z=a[n].x*m,f.push(k.x,k.y,k.z),l.x=q\/b,l.y=n\/(a.length-1),g.push(l.x,l.y)}for(q=0;q<b;q++)for(n=0;n<a.length-1;n++)c=n+q*a.length,h=c+a.length,k=c+a.length+1,l=c+1,e.push(c,h,l),e.push(h,k,l);this.setIndex(e);this.addAttribute("position",new z(f,3));this.addAttribute("uv",new z(g,2));this.computeVertexNormals();if(d===2*Math.PI)for(d=$/;"	r
0	js/three.min.js	/^0,H=Z.lensFlares.length;C<H;C++){var E=Z.lensFlares[C];.001<E.opacity&&.001<E.scale&&(ka.x=E.x,ka.y=E.y,ka.z=E.z,M=E.size*E.scale\/ma.w,na.x=M*J,na.y=M,b.uniform3f(u,ka.x,ka.y,ka.z),b.uniform2f(q,na.x,na.y),b.uniform1f(n,E.rotation),b.uniform1f(k,E.opacity),b.uniform3f(l,E.color.r,E.color.g,E.color.b),c.setBlending(E.blending,E.blendEquation,E.blendSrc,E.blendDst),d.setTexture2D(E.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}}c.enable(b.CULL_FACE);c.enable(b.DEPTH_TEST);c.buffers.depth.setMask(!0);$/;"	r
0	js/three.min.js	/^0,b=t.length;a<b;a++)t[a]=0},enableAttribute:function(c){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);0!==y[c]&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,0),y[c]=0)},enableAttributeAndDivisor:function(c,d){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);y[c]!==d&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,d),y[c]=d)},disableUnusedAttributes:function(){for(var b=0,c=p.length;b!==c;++b)p[b]!==t[b]&&(a.disableVertexAttribArray(b),p[b]=0)},enable:e,$/;"	r
0	js/three.min.js	/^0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new H);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new D);$/;"	r
0	js/three.min.js	/^0,l),h.push(n.r,n.g,n.b)}a=new C;a.addAttribute("position",new z(g,3));a.addAttribute("color",new z(h,3));g=new T({vertexColors:2});P.call(this,a,g)}function dd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?b=c.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,$/;"	r
0	js/three.min.js	/^0,x,B,y.data);else r?c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,x,v[t].width,v[t].height,0,x,B,v[t].data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,x,x,B,v[t]);l(b,p)&&a.generateMipmap(a.TEXTURE_CUBE_MAP);u.__version=b.version;if(b.onUpdate)b.onUpdate(b)}else c.activeTexture(a.TEXTURE0+q),c.bindTexture(a.TEXTURE_CUBE_MAP,u.__image__webglTextureCube)};this.setTextureCubeDynamic=function(b,e){c.activeTexture(a.TEXTURE0+e);c.bindTexture(a.TEXTURE_CUBE_MAP,d.get(b).__webglTexture)};this.setupRenderTarget=$/;"	r
0	js/three.min.js	/^0;c<b.material.length;c++)n(b.material[c],a.fog,b);else n(b.material,a.fog,b)})};var Da=!1,Ba=null;this.animate=function(a){Ba=a;Da||((la.getDevice()||window).requestAnimationFrame(h),Da=!0)};this.render=function(a,b,c,d){if(!b||!b.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!H){L="";U=-1;O=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();la.enabled&&(b=la.getCamera(b));md.multiplyMatrices(b.projectionMatrix,$/;"	r
0	js/three.min.js	/^0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d){X.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}});Object.assign(Ve.prototype,{getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,$/;"	r
0	js/three.min.js	/^0;e<d.uvs.length;e++)d.uvs[e].length&&u++;for(e=0;e<u;e++)c.faceVertexUvs[e]=[]}var r=0;for(g=k.length;r<g;)e=new p,e.x=k[r++]*n,e.y=k[r++]*n,e.z=k[r++]*n,c.vertices.push(e);r=0;for(g=h.length;r<g;){k=h[r++];var v=k&1;var t=k&2;e=k&8;var x=k&16;var y=k&32;n=k&64;k&=128;if(v){v=new Oa;v.a=h[r];v.b=h[r+1];v.c=h[r+3];var w=new Oa;w.a=h[r+1];w.b=h[r+2];w.c=h[r+3];r+=4;t&&(t=h[r++],v.materialIndex=t,w.materialIndex=t);t=c.faces.length;if(e)for(e=0;e<u;e++){var z=d.uvs[e];c.faceVertexUvs[e][t]=[];c.faceVertexUvs[e][t+$/;"	r
0	js/three.min.js	/^0;m.AlwaysDepth=1;m.LessDepth=2;m.LessEqualDepth=3;m.EqualDepth=4;m.GreaterEqualDepth=5;m.GreaterDepth=6;m.NotEqualDepth=7;m.MultiplyOperation=0;m.MixOperation=1;m.AddOperation=2;m.NoToneMapping=0;m.LinearToneMapping=1;m.ReinhardToneMapping=2;m.Uncharted2ToneMapping=3;m.CineonToneMapping=4;m.UVMapping=300;m.CubeReflectionMapping=301;m.CubeRefractionMapping=302;m.EquirectangularReflectionMapping=303;m.EquirectangularRefractionMapping=304;m.SphericalReflectionMapping=305;m.CubeUVReflectionMapping=306;$/;"	r
0	js/three.min.js	/^0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function mb(a){La.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)}function Ia(a){Q.call(this);this.type="MeshPhongMaterial";$/;"	r
0	js/three.min.js	/^0;this.running=!0},stop:function(){this.getElapsedTime();this.autoStart=this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var b=("undefined"===typeof performance?Date:performance).now(),a=(b-this.oldTime)\/1E3;this.oldTime=b;this.elapsedTime+=a}return a}});Object.assign(bf.prototype,{set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
0	js/three.min.js	/^0;this.userData={}}function Ka(){w.call(this);this.type="Camera";this.matrixWorldInverse=new K;this.projectionMatrix=new K}function Gb(a,b,c,d,e,f){Ka.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}function Oa(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&&d.isVector3?d:new p;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&&e.isColor?$/;"	r
0	js/three.min.js	/^1);c=R.clamp(c,0,1);d=R.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1\/3),this.g=a(d,c,b),this.b=a(d,c,b-1\/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=\/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)\/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=\/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d))return this.r=Math.min(255,$/;"	r
0	js/three.min.js	/^16\/ma.w,na.set(M*J,M),Z=a[z],v.set(Z.matrixWorld.elements[12],Z.matrixWorld.elements[13],Z.matrixWorld.elements[14]),v.applyMatrix4(ja.matrixWorldInverse),v.applyMatrix4(ja.projectionMatrix),ka.copy(v),N.x=ma.x+ka.x*ya+ya-8,N.y=ma.y+ka.y*Ua+Ua-8,!0===U.containsPoint(N)){c.activeTexture(b.TEXTURE0);c.bindTexture(b.TEXTURE_2D,null);c.activeTexture(b.TEXTURE1);c.bindTexture(b.TEXTURE_2D,I);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,N.x,N.y,16,16,0);b.uniform1i(f,0);b.uniform2f(q,na.x,na.y);b.uniform3f(u,$/;"	r
0	js/three.min.js	/^1]),e(A[l+1][m]))}})(d);(function(a){for(var b=new p,c=0;c<h.length;c+=3)b.x=h[c+0],b.y=h[c+1],b.z=h[c+2],b.normalize().multiplyScalar(a),h[c+0]=b.x,h[c+1]=b.y,h[c+2]=b.z})(c);(function(){for(var a=new p,b=0;b<h.length;b+=3)a.x=h[b+0],a.y=h[b+1],a.z=h[b+2],k.push(Math.atan2(a.z,-a.x)\/2\/Math.PI+.5,1-(Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))\/Math.PI+.5));for(var a=new p,b=new p,c=new p,d=new p,e=new D,f=new D,m=new D,x=0,y=0;x<h.length;x+=9,y+=6){a.set(h[x+0],h[x+1],h[x+2]);b.set(h[x+3],h[x+4],h[x+$/;"	r
0	js/three.min.js	/^1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}});Object.assign(Id.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},parse:function(a){function b(a){void 0===c[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a);$/;"	r
0	js/three.min.js	/^1]+=q.y;e[v+2]+=q.z;e[t]+=q.x;e[t+1]+=q.y;e[t+2]+=q.z;e[x]+=q.x;e[x+1]+=q.y;e[x+2]+=q.z}}}else for(f=0,g=d.length;f<g;f+=9)h.fromArray(d,f),k.fromArray(d,f+3),l.fromArray(d,f+6),q.subVectors(l,k),n.subVectors(h,k),q.cross(n),e[f]=q.x,e[f+1]=q.y,e[f+2]=q.z,e[f+3]=q.x,e[f+4]=q.y,e[f+5]=q.z,e[f+6]=q.x,e[f+7]=q.y,e[f+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(a&&a.isBufferGeometry){void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=$/;"	r
0	js/three.min.js	/^1]=[];for(f=0;4>f;f++){var A=h[r++];var C=z[2*A];A=z[2*A+1];C=new D(C,A);2!==f&&c.faceVertexUvs[e][t].push(C);0!==f&&c.faceVertexUvs[e][t+1].push(C)}}x&&(x=3*h[r++],v.normal.set(l[x++],l[x++],l[x]),w.normal.copy(v.normal));if(y)for(e=0;4>e;e++)x=3*h[r++],y=new p(l[x++],l[x++],l[x]),2!==e&&v.vertexNormals.push(y),0!==e&&w.vertexNormals.push(y);n&&(n=h[r++],n=m[n],v.color.setHex(n),w.color.setHex(n));if(k)for(e=0;4>e;e++)n=h[r++],n=m[n],2!==e&&v.vertexColors.push(new H(n)),0!==e&&w.vertexColors.push(new H(n));$/;"	r
0	js/three.min.js	/^A.width,0,0),h.halfHeight.set(0,.5*A.height,0),h.halfWidth.applyMatrix4(e),h.halfHeight.applyMatrix4(e),b.rectArea[t]=h,t++;else if(A.isPointLight){h=a.get(A);h.position.setFromMatrixPosition(A.matrixWorld);h.position.applyMatrix4(p);h.color.copy(A.color).multiplyScalar(A.intensity);h.distance=A.distance;h.decay=0===A.distance?0:A.decay;if(h.shadow=A.castShadow)k=A.shadow,h.shadowBias=k.bias,h.shadowRadius=k.radius,h.shadowMapSize=k.mapSize,h.shadowCameraNear=k.camera.near,h.shadowCameraFar=k.camera.far;$/;"	r
0	js/three.min.js	/^C),N=C);null!==G.map?(b.uniform2f(f,G.map.offset.x,G.map.offset.y),b.uniform2f(g,G.map.repeat.x,G.map.repeat.y)):(b.uniform2f(f,0,0),b.uniform2f(g,1,1));b.uniform1f(n,G.opacity);b.uniform3f(l,G.color.r,G.color.g,G.color.b);b.uniform1f(h,G.rotation);b.uniform2fv(k,E);c.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha);c.buffers.depth.setTest(G.depthTest);c.buffers.depth.setMask(G.depthWrite);c.buffers.color.setMask(G.colorWrite);$/;"	r
0	js/three.min.js	/^Ea={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}},V={alphamap_fragment:"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n",$/;"	r
0	js/three.min.js	/^I[y.b],I[y.c])}for(B=0;B<n;B++)I=q[B].vertexNormals[l],m[B].push(I.a,I.b,I.c);t&&this.skinIndices.push(r[y.a],r[y.b],r[y.c]);x&&this.skinWeights.push(p[y.a],p[y.b],p[y.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this}});var Pf=1;Object.assign(C.prototype,ia.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},$/;"	r
0	js/three.min.js	/^Math.atan2(-f,a)):(this._x=Math.atan2(n,k),this._z=0)):"YXZ"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(g,e),this._z=Math.atan2(h,k)):(this._y=Math.atan2(-q,a),this._z=0)):"ZXY"===b?(this._x=Math.asin(d(n,-1,1)),.99999>Math.abs(n)?(this._y=Math.atan2(-q,e),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===b?(this._y=Math.asin(-d(q,-1,1)),.99999>Math.abs(q)?(this._x=Math.atan2(n,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-f,k))):"YZX"===$/;"	r
0	js/three.min.js	/^Math.cos(b);b=Math.sin(b);var d=1-c,e=a.x,f=a.y;a=a.z;var g=d*e,h=d*f;this.set(g*e+c,g*f-b*a,g*a+b*f,0,g*f+b*a,h*f+c,h*a-b*e,0,g*a-b*f,h*a+b*e,d*a*a+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeShear:function(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new p,b=new K;return function(c,$/;"	r
0	js/three.min.js	/^V[G],g(T[0]+c,T[1]+c,T[2]+c)}else{for(G=0;G<ca;G++)T=V[G],g(T[2],T[1],T[0]);for(G=0;G<ca;G++)T=V[G],g(T[0]+Y*w,T[1]+Y*w,T[2]+Y*w)}R.addGroup(a,m.length\/3-a,void 0!==b.material?b.material:0)})();(function(){var a=m.length\/3,c=0;e(X,c);c+=X.length;N=0;for(M=P.length;N<M;N++)U=P[N],e(U,c),c+=U.length;R.addGroup(a,m.length\/3-a,void 0!==b.extrudeMaterial?b.extrudeMaterial:1)})();b.arrays||(this.setIndex(n),this.addAttribute("position",new z(m,3)),this.addAttribute("uv",new z(b.arrays.uv,2)))};Za.WorldUVGenerator=$/;"	r
0	js/three.min.js	/^[],c=0,d=a.length;c<d;c++){var e=a[c];b.push(e.x,e.y,e.z||0)}this.addAttribute("position",new z(b,3));return this},updateFromObject:function(a){var b=a.geometry;if(a.isMesh){var c=b.__directGeometry;!0===b.elementsNeedUpdate&&(c=void 0,b.elementsNeedUpdate=!1);if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=$/;"	r
0	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
0	js/three.min.js	/^[],l=[],q=[],n=[],u=0,r=0;g("z","y","x",-1,-1,c,b,a,f,e,0);g("z","y","x",1,-1,c,b,-a,f,e,1);g("x","z","y",1,1,a,c,b,d,f,2);g("x","z","y",1,-1,a,c,-b,d,f,3);g("x","y","z",1,-1,a,b,c,d,e,4);g("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.addAttribute("position",new z(l,3));this.addAttribute("normal",new z(q,3));this.addAttribute("uv",new z(n,2))}function zc(a,b,c,d){L.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new gb(a,$/;"	r
0	js/three.min.js	/^a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));return b},getSpacedPoints:function(a){void 0===a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPointAt(c\/a));return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){void 0===a&&(a=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c=this.getPoint(0),d,e=0;b.push(0);for(d=1;d<=a;d++){var f=$/;"	r
0	js/three.min.js	/^a&&0<a.length){b=new Yd(b);var f=new Wc(b);f.setCrossOrigin(this.crossOrigin);b=0;for(var g=a.length;b<g;b++){var h=a[b],k=\/^(\\\/\\\/)|([a-z]+:(\\\/\\\/)?)\/i.test(h.url)?h.url:d.texturePath+h.url;e[h.uuid]=c(k)}}return e},parseTextures:function(a,b){function c(a,b){if("number"===typeof a)return a;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a);return b[a]}var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',$/;"	r
0	js/three.min.js	/^a),g=0;g<f.length;g++){var h=f[g];c&&c.equals(h)||(b.push(h),c=h)}this.autoClose&&1<b.length&&!b[b.length-1].equals(b[0])&&b.push(b[0]);return b}});Sa.prototype=Object.create(ca.prototype);Sa.prototype.constructor=Sa;Sa.prototype.isEllipseCurve=!0;Sa.prototype.getPoint=function(a,b){b=b||new D;for(var c=2*Math.PI,d=this.aEndAngle-this.aStartAngle,e=Math.abs(d)<Number.EPSILON;0>d;)d+=c;for(;d>c;)d-=c;d<Number.EPSILON&&(d=e?0:c);!0!==this.aClockwise||e||(d=d===c?-c:d-c);c=this.aStartAngle+a*d;a=this.aX+$/;"	r
0	js/three.min.js	/^a.ARRAY_BUFFER);c=c.morphAttributes;for(f in c)for(var d=c[f],e=0,g=d.length;e<g;e++)b.update(d[e],a.ARRAY_BUFFER)},getWireframeAttribute:function(c){var d=f[c.id];if(d)return d;d=[];var e=c.index;var g=c.attributes;if(null!==e){var q=e.array;for(var n=0,u=q.length;n<u;n+=3){var r=q[n+0];g=q[n+1];e=q[n+2];d.push(r,g,g,e,e,r)}}else for(q=g.position.array,n=0,u=q.length\/3-1;n<u;n+=3)r=n+0,g=n+1,e=n+2,d.push(r,g,g,e,e,r);d=new (65535<Qd(d)?eb:db)(d,1);b.update(d,a.ELEMENT_ARRAY_BUFFER);return f[c.id]=$/;"	r
0	js/three.min.js	/^a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},expandByObject:function(){function a(a){var f=a.geometry;if(void 0!==f)if(f.isGeometry)for(f=f.vertices,c=0,d=f.length;c<d;c++)e.copy(f[c]),$/;"	r
0	js/three.min.js	/^a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(b=0;b<d;b++)a.texImage2D(c+b,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,e);return f}function e(b){!0!==B[b]&&(a.enable(b),B[b]=!0)}function f(b){!1!==B[b]&&(a.disable(b),B[b]=!1)}function g(b,d,g,h,l,k,n,q){0!==b?e(a.BLEND):f(a.BLEND);if(5!==b){if(b!==J||q!==M)switch(b){case 2:q?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),$/;"	r
0	js/three.min.js	/^a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new H(16777215));void 0===d&&(d=1);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c=2*-this.positionScreen.x,d=2*-this.positionScreen.y;$/;"	r
0	js/three.min.js	/^a.getCenter(d);for(var e=0,f=0,g=c.count;f<g;f++)b.x=c.getX(f),b.y=c.getY(f),b.z=c.getZ(f),e=Math.max(e,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;$/;"	r
0	js/three.min.js	/^a.y,a.z)}}()});Object.assign(ie.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=b[c];return a\/b.length}});Object.assign(je.prototype,{accumulate:function(a,b){var c=this.buffer,d=this.valueSize;a=a*d+d;var e=this.cumulativeWeight;if(0===e){for(e=0;e!==d;++e)c[a+e]=c[e];e=b}else e+=b,this._mixBufferRegion(c,a,0,b\/e,d);this.cumulativeWeight=e},apply:function(a){var b=$/;"	r
0	js/three.min.js	/^a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;16>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}});Object.assign(X,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,$/;"	r
0	js/three.min.js	/^add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this;a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a);return this},remove:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);$/;"	r
0	js/three.min.js	/^alphaTest:b.alphaTest,doubleSided:2===b.side,flipSided:1===b.side,depthPacking:void 0!==b.depthPacking?b.depthPacking:!1}};this.getProgramCode=function(b,c){var d=[];c.shaderID?d.push(c.shaderID):(d.push(b.fragmentShader),d.push(b.vertexShader));if(void 0!==b.defines)for(var e in b.defines)d.push(e),d.push(b.defines[e]);for(e=0;e<g.length;e++)d.push(c[g[e]]);d.push(b.onBeforeCompile.toString());d.push(a.gammaOutput);return d.join()};this.acquireProgram=function(c,d,f,g){for(var h,l=0,k=e.length;l<$/;"	r
0	js/three.min.js	/^b));this.mergeVertices()}function $b(a,b){function c(a){var c,h=e.length\/3;a=a.extractPoints(b);var l=a.shape,q=a.holes;if(!1===Ha.isClockWise(l))for(l=l.reverse(),a=0,c=q.length;a<c;a++){var m=q[a];!0===Ha.isClockWise(m)&&(q[a]=m.reverse())}var p=Ha.triangulateShape(l,q);a=0;for(c=q.length;a<c;a++)m=q[a],l=l.concat(m);a=0;for(c=l.length;a<c;a++)m=l[a],e.push(m.x,m.y,0),f.push(0,0,1),g.push(m.x,m.y);a=0;for(c=p.length;a<c;a++)l=p[a],d.push(l[0]+h,l[1]+h,l[2]+h),k+=3}C.call(this);this.type="ShapeBufferGeometry";$/;"	r
0	js/three.min.js	/^b)}}(),translateZ:function(){var a=new p(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new K;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new K,b=new p;return function(c,d,e){c.isVector3?b.copy(c):b.set(c,d,e);this.isCamera?a.lookAt(this.position,b,this.up):a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),$/;"	r
0	js/three.min.js	/^b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSprite:function(){var a=new Da;return function(b){a.center.set(0,0,0);a.radius=.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new p,b=$/;"	r
0	js/three.min.js	/^b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Sf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Tf(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,k){var l=a[b];void 0===l?(l={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:k},a[b]=l):(l.id=e.id,l.object=e,l.geometry=f,l.material=g,l.program=g.program,l.renderOrder=e.renderOrder,$/;"	r
0	js/three.min.js	/^b.matrixWorldInverse);Td.setFromMatrix(md);ja.length=0;z.length=0;C.length=0;Ua.length=0;Ud=this.localClippingEnabled;fa=Fa.init(this.clippingPlanes,Ud,b);D=sa.get(a,b);D.init();k(a,b,M.sortObjects);!0===M.sortObjects&&D.sort();fa&&Fa.beginShadows();Ca.render(z,a,b);ua.setup(ja,z,b);fa&&Fa.endShadows();Qa.frame++;Qa.calls=0;Qa.vertices=0;Qa.faces=0;Qa.points=0;void 0===c&&(c=null);this.setRenderTarget(c);ia.render(D,a,b,d);d=D.opaque;var e=D.transparent;if(a.overrideMaterial){var f=a.overrideMaterial;$/;"	r
0	js/three.min.js	/^b.uniform1i(m,2),na=N=2)):(b.uniform1i(m,0),na=N=0);for(var D=0,ka=v.length;D<ka;D++)w=v[D],w.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,w.matrixWorld),w.z=-w.modelViewMatrix.elements[14];v.sort(ya);for(var E=[],D=0,ka=v.length;D<ka;D++){w=v[D];var G=w.material;if(!1!==G.visible){w.onBeforeRender(a,p,U,void 0,G,void 0);b.uniform1f(I,G.alphaTest);b.uniformMatrix4fv(u,!1,w.modelViewMatrix.elements);w.matrixWorld.decompose(Ua,M,z);E[0]=z.x;E[1]=z.y;var C=0;p.fog&&G.fog&&(C=na);N!==C&&(b.uniform1i(m,$/;"	r
0	js/three.min.js	/^b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var h=b.children,k=0;k<h.length;k++)g.add(this.parseObject(h[k],c,d));if("LOD"===b.type)for(b=b.levels,h=0;h<b.length;h++){var k=b[h],l=g.getObjectByProperty("uuid",k.object);void 0!==l&&g.addLevel(l,k.distance)}return g}}()});var ug={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,$/;"	r
0	js/three.min.js	/^b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new p;return function(b){var c=this.elements,d=b.elements,e=1\/a.setFromMatrixColumn(b,0).length(),f=1\/a.setFromMatrixColumn(b,1).length();b=1\/a.setFromMatrixColumn(b,2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");$/;"	r
0	js/three.min.js	/^b=0,c;return function(){for(var d="",e=0;36>e;e++)8===e||13===e||18===e||23===e?d+="-":14===e?d+="4":(2>=b&&(b=33554432+16777216*Math.random()|0),c=b&15,b>>=4,d+=a[19===e?c&3|8:c]);return d}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)\/(c-b)},lerp:function(a,b,c){return(1-c)*a+c*b},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)\/(c-b);return a*a*(3-2*a)},smootherstep:function(a,$/;"	r
0	js/three.min.js	/^b=0;for(var e=a.length;b<e;b++){var f=a[b];if("MultiMaterial"===f.type){for(var g=[],h=0;h<f.materials.length;h++)g.push(d.parse(f.materials[h]));c[f.uuid]=g}else c[f.uuid]=d.parse(f)}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=ra.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemEnd(a);d.manager.itemError(a)})}var d=this,e={};if(void 0!==$/;"	r
0	js/three.min.js	/^b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new Ma(b,a))},getPoint:function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],c=a.getLength(),a.getPointAt(0===c?0:1-b\/c);a++}return null},getLength:function(){var a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&$/;"	r
0	js/three.min.js	/^b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-q,a)):(this._x=0,this._y=Math.atan2(g,e))):"XZY"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(n,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a=new K;return function(b,c,d){a.makeRotationFromQuaternion(b);$/;"	r
0	js/three.min.js	/^b?b:new p;this.c=void 0!==c?c:new p}function qa(a,b){w.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new va({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Qf(a,b,c,d){function e(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d)}var f=new H(0),g=0,h,k,l;return{getClearColor:function(){return f},setClearColor:function(a,b){f.set(a);g=void 0!==b?b:1;e(f,g)},getClearAlpha:function(){return g},setClearAlpha:function(a){g=a;e(f,$/;"	r
0	js/three.min.js	/^b[l]);l=0;for(g=k.length;l<g;l++){var m=k[l].x+":"+k[l].y;void 0!==h[m]&&console.warn("THREE.ShapeUtils: Duplicate point",m,l);h[m]=l}l=function(a,b){function c(a,b){var c=h.length-1,d=a-1;0>d&&(d=c);var e=a+1;e>c&&(e=0);c=f(h[a],h[d],h[e],C[b]);if(!c)return!1;c=C.length-1;d=b-1;0>d&&(d=c);e=b+1;e>c&&(e=0);return(c=f(C[b],C[d],C[e],h[a]))?!0:!1}function d(a,b){var c;for(c=0;c<h.length;c++){var d=c+1;d%=h.length;d=e(a,b,h[c],h[d],!0);if(0<d.length)return!0}return!1}function g(a,c){var d,f;for(d=0;d<$/;"	r
0	js/three.min.js	/^b[z];for(q=0;q<C.length;q++)if(z=C[q],c(m,q)&&!d(w,z)&&!g(w,z)){l=q;k.splice(n,1);p=h.slice(0,m+1);z=h.slice(m);q=C.slice(l);var E=C.slice(0,l+1);h=p.concat(q).concat(E).concat(z);p=m;break}if(0<=l)break;a[D]=!0}}if(0<=l)break}}return h}(a,b);k=Ha.triangulate(l,!1);l=0;for(g=k.length;l<g;l++)for(b=k[l],a=0;3>a;a++)m=b[a].x+":"+b[a].y,m=h[m],void 0!==m&&(b[a]=m);return k.concat()},isClockWise:function(a){return 0>Ha.area(a)}};Za.prototype=Object.create(L.prototype);Za.prototype.constructor=Za;Ga.prototype=$/;"	r
0	js/three.min.js	/^c);return d}}(),findNode:function(a,b){if(!b||""===b||"root"===b||"."===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}(a.skeleton);if(c)return c}if(a.children){var d=function(a){for(var c=0;c<a.length;c++){var e=a[c];if(e.name===b||e.uuid===b||(e=d(e.children)))return e}return null};if(a=d(a.children))return a}return null}});Object.assign(pa.prototype,{_getValue_unavailable:function(){},$/;"	r
0	js/three.min.js	/^c)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,b=c.length;a<b;a++){var d=c[a].name||String(a);this.morphTargetInfluences.push(0);this.morphTargetDictionary[d]=a}}}else if(c=a.morphTargets,void 0!==c&&0<c.length)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,b=c.length;a<b;a++)d=c[a].name||String(a),this.morphTargetInfluences.push(0),this.morphTargetDictionary[d]=a},raycast:function(){function a(a,b,c,d,e,f,g){Pa.barycoordFromPoint(a,b,c,d,t);e.multiplyScalar(t.x);$/;"	r
0	js/three.min.js	/^c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},$/;"	r
0	js/three.min.js	/^c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var a=new K;return function(b){a.makeRotationX(b);this.applyMatrix(a);$/;"	r
0	js/three.min.js	/^c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a)},normalizeNormals:function(){var a=new p;return function(){for(var b=this.attributes.normal,c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.normalize(),b.setXYZ(c,a.x,a.y,a.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),$/;"	r
0	js/three.min.js	/^clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n",$/;"	r
0	js/three.min.js	/^copy:function(a){O.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this}});Object.assign(Ze.prototype,{linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize()):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)\/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld)):$/;"	r
0	js/three.min.js	/^createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getSpacedPoints(a);return this.createGeometry(a)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var b=new L,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new p(e.x,e.y,e.z||0))}return b}});ef.prototype=$/;"	r
0	js/three.min.js	/^disable:f,getCompressedTextureFormats:function(){if(null===I&&(I=[],b.get("WEBGL_compressed_texture_pvrtc")||b.get("WEBGL_compressed_texture_s3tc")||b.get("WEBGL_compressed_texture_etc1")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)I.push(c[d]);return I},useProgram:function(b){return A!==b?(a.useProgram(b),A=b,!0):!1},setBlending:g,setMaterial:function(b){2===b.side?f(a.CULL_FACE):e(a.CULL_FACE);h(1===b.side);!0===b.transparent?g(b.blending,b.blendEquation,b.blendSrc,$/;"	r
0	js/three.min.js	/^e)&&.1>Math.abs(d+h)&&.1>Math.abs(g+k)&&.1>Math.abs(b+f+l-3))return this.set(1,0,0,0),this;a=Math.PI;b=(b+1)\/2;f=(f+1)\/2;l=(l+1)\/2;c=(c+e)\/4;d=(d+h)\/4;g=(g+k)\/4;b>f&&b>l?.01>b?(k=0,c=h=.707106781):(k=Math.sqrt(b),h=c\/k,c=d\/k):f>l?.01>f?(k=.707106781,h=0,c=.707106781):(h=Math.sqrt(f),k=c\/h,c=g\/h):.01>l?(h=k=.707106781,c=0):(c=Math.sqrt(l),k=d\/c,h=g\/c);this.set(k,h,c,a);return this}a=Math.sqrt((k-g)*(k-g)+(d-h)*(d-h)+(e-c)*(e-c));.001>Math.abs(a)&&(a=1);this.x=(k-g)\/a;this.y=(d-h)\/a;this.z=(e-c)\/a;$/;"	r
0	js/three.min.js	/^e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1\/Math.sqrt(b)):e.set(0,0,0)}}(),barycoordFromPoint:function(){var a=new p,b=new p,c=new p;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new p;if(0===l)return h.set(-2,-1,-1);l=1\/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}(),containsPoint:function(){var a=new p;return function(b,c,d,e){b=$/;"	r
0	js/three.min.js	/^e=0,f=!1,g=!1,h=new za,k=new ta,l={value:null,needsUpdate:!1};this.uniform=l;this.numIntersection=this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,r,m,p){if(!f||null===c||0===c.length||g&&!k)g?b(null):a();else{k=g?0:e;var n=4*k,q=m.clippingState||null;l.value=q;q=b(c,r,n,p);for(c=0;c!==n;++c)q[c]=d[c];m.clippingState=q;this.numIntersection=$/;"	r
0	js/three.min.js	/^e=a.faces;f=0;for(b=e.length;f<b;f++)this.faces.push(e[f].clone());f=0;for(b=a.faceVertexUvs.length;f<b;f++){var g=a.faceVertexUvs[f];void 0===this.faceVertexUvs[f]&&(this.faceVertexUvs[f]=[]);e=0;for(c=g.length;e<c;e++){var h=g[e],k=[];var l=0;for(d=h.length;l<d;l++)k.push(h[l].clone());this.faceVertexUvs[f].push(k)}}l=a.morphTargets;f=0;for(b=l.length;f<b;f++){d={};d.name=l[f].name;if(void 0!==l[f].vertices)for(d.vertices=[],e=0,c=l[f].vertices.length;e<c;e++)d.vertices.push(l[f].vertices[e].clone());$/;"	r
0	js/three.min.js	/^e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length;if(0<h){var k=[];for(var l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var q=a.morphNormals,n=q.length;if(0<n){var m=[];for(l=0;l<n;l++)m[l]=[];this.morphTargets.normal=m}for(var r=a.skinIndices,p=a.skinWeights,t=r.length===c.length,x=p.length===c.length,l=0;l<b.length;l++){var y=b[l];this.vertices.push(c[y.a],c[y.b],c[y.c]);var B=y.vertexNormals;3===B.length?this.normals.push(B[0],B[1],B[2]):(B=y.normal,this.normals.push(B,$/;"	r
0	js/three.min.js	/^else{if(void 0===c.__webglInit)break a;a.deleteTexture(c.__webglTexture)}d.remove(b)}g.textures--}function u(b){b=b.target;b.removeEventListener("dispose",u);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==e.__webglTexture&&a.deleteTexture(e.__webglTexture);b.depthTexture&&b.depthTexture.dispose();if(b.isWebGLRenderTargetCube)for(e=0;6>e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),$/;"	r
0	js/three.min.js	/^f.computeVertexNormals();c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(d.normal),k.a.copy(d.vertexNormals[0]),k.b.copy(d.vertexNormals[1]),k.c.copy(d.vertexNormals[2])}c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],d.normal=d.__originalFaceNormal,d.vertexNormals=d.__originalVertexNormals},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===$/;"	r
0	js/three.min.js	/^f.morphTargets&&e.morphAttributes.position;f=f.morphNormals&&e.morphAttributes.normal;for(l=0;l<k;l++){var n=d[l];0!==n[1]&&(q&&e.removeAttribute("morphTarget"+l),f&&e.removeAttribute("morphNormal"+l))}for(l=0;l<k;l++)n=d[l],n[0]=l,n[1]=h[l];d.sort(Vf);for(l=0;8>l;l++){if(n=d[l])if(h=n[0],n=n[1]){q&&e.addAttribute("morphTarget"+l,q[h]);f&&e.addAttribute("morphNormal"+l,f[h]);c[l]=n;continue}c[l]=0}g.getUniforms().setValue(a,"morphTargetInfluences",c)}}}function Xf(a,b,c){var d,e,f;this.setMode=function(a){d=$/;"	r
0	js/three.min.js	/^for(a=0;a<b;a++){var e=this.lensFlares[a];e.x=this.positionScreen.x+c*e.distance;e.y=this.positionScreen.y+d*e.distance;e.wantedRotation=e.x*Math.PI*.25;e.rotation+=.25*(e.wantedRotation-e.rotation)}}});Ya.prototype=Object.create(Q.prototype);Ya.prototype.constructor=Ya;Ya.prototype.isSpriteMaterial=!0;Ya.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this};Bc.prototype=Object.assign(Object.create(w.prototype),{constructor:Bc,$/;"	r
0	js/three.min.js	/^for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,e=d[b],f=this._bindings;void 0===e&&(e={},d[b]=$/;"	r
0	js/three.min.js	/^fragmentShader:V.shadow_frag}};ib.physical={uniforms:Ea.merge([ib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:V.meshphysical_vert,fragmentShader:V.meshphysical_frag};Object.assign(kd.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new D;return function(b,c){c=a.copy(c).multiplyScalar(.5);$/;"	r
0	js/three.min.js	/^function jb(a,b){sa.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Kc(a,b){L.call(this);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Rb(a,b));this.mergeVertices()}function Rb(a,b){var c=(1+Math.sqrt(5))\/2;sa.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,$/;"	r
0	js/three.min.js	/^function(){return d};this.setDevice=function(a){void 0!==a&&(d=a)};this.getCamera=function(a){if(null===d)return a;d.depthNear=a.near;d.depthFar=a.far;d.getFrameData(e);var b=e.pose;null!==b.position?a.position.fromArray(b.position):a.position.set(0,0,0);null!==b.orientation&&a.quaternion.fromArray(b.orientation);a.updateMatrixWorld();b=d.stageParameters;this.standing&&b&&(g.fromArray(b.sittingToStandingTransform),h.getInverse(g),a.matrixWorld.multiply(g),a.matrixWorldInverse.multiply(h));if(!1===$/;"	r
0	js/three.min.js	/^function(b){var e=d.get(b),f=d.get(b.texture);b.addEventListener("dispose",u);f.__webglTexture=a.createTexture();g.textures++;var h=!0===b.isWebGLRenderTargetCube,n=k(b);if(h){e.__webglFramebuffer=[];for(var q=0;6>q;q++)e.__webglFramebuffer[q]=a.createFramebuffer()}else e.__webglFramebuffer=a.createFramebuffer();if(h){c.bindTexture(a.TEXTURE_CUBE_MAP,f.__webglTexture);m(a.TEXTURE_CUBE_MAP,b.texture,n);for(q=0;6>q;q++)t(e.__webglFramebuffer[q],b,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+q);$/;"	r
0	js/three.min.js	/^function(b,q){var u=d.get(b);if(6===b.image.length)if(0<b.version&&u.__version!==b.version){u.__image__webglTextureCube||(b.addEventListener("dispose",n),u.__image__webglTextureCube=a.createTexture(),g.textures++);c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_CUBE_MAP,u.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);q=b&&b.isCompressedTexture;for(var r=b.image[0]&&b.image[0].isDataTexture,v=[],t=0;6>t;t++)v[t]=q||r?r?b.image[t].image:b.image[t]:h(b.image[t],e.maxCubemapSize);$/;"	r
0	js/three.min.js	/^g.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=g.getActiveAttrib(p,c).name;a[d]=g.getAttribLocation(p,d)}I=a}return I};this.destroy=function(){g.deleteProgram(p);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=ig++;this.code=c;this.usedTimes=1;$/;"	r
0	js/three.min.js	/^g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var q=[],n=[],m=[],r=e=0;e<f.length;e+=3,r+=2)c.vertices.push(new p(f[e],f[e+1],f[e+2])),void 0!==g&&q.push(new p(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new H(h[e],h[e+1],h[e+2])),void 0!==k&&n.push(new D(k[r],k[r+1])),void 0!==l&&m.push(new D(l[r],l[r+1]));var v=a.groups;if(0<v.length)for(e=0;e<v.length;e++)for(var f=$/;"	r
0	js/three.min.js	/^getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,$/;"	r
0	js/three.min.js	/^h.length;for(Od.lastIndex=0;;){var l=Od.exec(h),q=Od.lastIndex,n=l[1],u=l[3];"]"===l[2]&&(n|=0);if(void 0===u||"["===u&&q+2===k){h=g;e=void 0===u?new Hf(n,e,f):new If(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else u=g.map[n],void 0===u&&(u=new Ge(n),n=g,g=u,n.seq.push(g),n.map[g.id]=g),g=u}}}function H(a,b,c){return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)}function kd(a,b){this.min=void 0!==a?a:new D(Infinity,Infinity);this.max=void 0!==b?b:new D(-Infinity,-Infinity)}function Jf(a,b,c,$/;"	r
0	js/three.min.js	/^h.penumbraCos=Math.cos(A.angle*(1-A.penumbra));h.decay=0===A.distance?0:A.decay;if(h.shadow=A.castShadow)k=A.shadow,h.shadowBias=k.bias,h.shadowRadius=k.radius,h.shadowMapSize=k.mapSize;b.spotShadowMap[m]=ja;b.spotShadowMatrix[m]=A.shadow.matrix;b.spot[m]=h;m++}else if(A.isRectAreaLight)h=a.get(A),h.color.copy(k).multiplyScalar(J\/(A.width*A.height)),h.position.setFromMatrixPosition(A.matrixWorld),h.position.applyMatrix4(p),e.identity(),d.copy(A.matrixWorld),d.premultiply(p),e.extractRotation(d),h.halfWidth.set(.5*$/;"	r
0	js/three.min.js	/^h=0,k=a.length;h<k;h++)g.setXYZ(a[h],d.x,d.y,d.z)}var b,c,d=new p,e=new Ka;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",.7,1.1,-1);a("u2",-.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",$/;"	r
0	js/three.min.js	/^if(Array.isArray(a))for(var m=f=0,n=a.length;m<n;++m)e(m);else l.load(a,function(a){a=g._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length\/a.mipmapCount,d=0;d<c;d++){h[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)h[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),h[d].format=a.format,h[d].width=a.width,h[d].height=a.height}else k.image.width=a.width,k.image.height=a.height,k.mipmaps=a.mipmaps;1===a.mipmapCount&&(k.minFilter=1006);k.format=a.format;k.needsUpdate=!0;b&&b(k)},c,d);return k},setPath:function(a){this.path=$/;"	r
0	js/three.min.js	/^if(null!==m)for(var v=m.array,g=0,t=v.length-1;g<t;g+=n)m=v[g+1],k.fromArray(r,3*v[g]),l.fromArray(r,3*m),m=b.distanceSqToSegment(k,l,q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}));else for(g=0,t=r.length\/3-1;g<t;g+=n)k.fromArray(r,3*g),l.fromArray(r,3*g+3),m=b.distanceSqToSegment(k,l,q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),$/;"	r
0	js/three.min.js	/^if(void 0!==l[f].normals)for(d.normals=[],e=0,c=l[f].normals.length;e<c;e++)d.normals.push(l[f].normals[e].clone());this.morphTargets.push(d)}l=a.morphNormals;f=0;for(b=l.length;f<b;f++){d={};if(void 0!==l[f].vertexNormals)for(d.vertexNormals=[],e=0,c=l[f].vertexNormals.length;e<c;e++)g=l[f].vertexNormals[e],h={},h.a=g.a.clone(),h.b=g.b.clone(),h.c=g.c.clone(),d.vertexNormals.push(h);if(void 0!==l[f].faceNormals)for(d.faceNormals=[],e=0,c=l[f].faceNormals.length;e<c;e++)d.faceNormals.push(l[f].faceNormals[e].clone());$/;"	r
0	js/three.min.js	/^k.length;d++){var g=b[k[d]];for(f=0;f<g.length;f++){var h=f+1;h%=g.length;h=e(a,c,g[f],g[h],!0);if(0<h.length)return!0}}return!1}var h=a.concat(),k=[],l,m;a=[];var q,n=0;for(l=b.length;n<l;n++)k.push(n);var p=0;for(var u=2*k.length;0<k.length;){u--;if(0>u){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}for(m=p;m<h.length;m++){var w=h[m];l=-1;for(n=0;n<k.length;n++){var z=k[n];var D=w.x+":"+w.y+":"+z;if(void 0===a[D]){var C=$/;"	r
0	js/three.min.js	/^l!==l[0]))if(f)a=!0;else{b=k*e;for(var m=b-e,n=b+e,l=0;l!==e;++l){var p=d[b+l];if(p!==d[m+l]||p!==d[n+l]){a=!0;break}}}if(a){if(k!==g)for(c[g]=c[k],b=k*e,a=g*e,l=0;l!==e;++l)d[a+l]=d[b+l];++g}}if(0<h){c[g]=c[h];b=h*e;a=g*e;for(l=0;l!==e;++l)d[a+l]=d[b+l];++g}g!==c.length&&(this.times=S.arraySlice(c,0,g),this.values=S.arraySlice(d,0,g*e));return this}};ec.prototype=Object.assign(Object.create(ab),{constructor:ec,ValueTypeName:"vector"});Ed.prototype=Object.assign(Object.create(xa.prototype),{constructor:Ed,$/;"	r
0	js/three.min.js	/^l=0,d=k.count\/3;l<d;l++)for(c=0;3>c;c++)g=3*l+c,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z),g=3*l+(c+1)%3,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z)}this.addAttribute("position",new z(b,3))}function Gc(a,b,c){L.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){C.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=$/;"	r
0	js/three.min.js	/^l=Sd(l);l=Me(l,f);d.isShaderMaterial||(k=Ne(k),l=Ne(l));l=b+l;k=Ke(g,g.VERTEX_SHADER,h+k);l=Ke(g,g.FRAGMENT_SHADER,l);g.attachShader(p,k);g.attachShader(p,l);void 0!==d.index0AttributeName?g.bindAttribLocation(p,0,d.index0AttributeName):!0===f.morphTargets&&g.bindAttribLocation(p,0,"position");g.linkProgram(p);f=g.getProgramInfoLog(p);e=g.getShaderInfoLog(k);q=g.getShaderInfoLog(l);u=n=!0;if(!1===g.getProgramParameter(p,g.LINK_STATUS))n=!1,console.error("THREE.WebGLProgram: shader error: ",g.getError(),$/;"	r
0	js/three.min.js	/^m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g.isGeometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=n)m=b.distanceSqToSegment(k[g],k[g+1],q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,$/;"	r
0	js/three.min.js	/^m[u+1]*h,n.z=m[u+2]*h,l.push(n);if(void 0!==g.morphColors&&0<g.morphColors.length)for(console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'),h=c.faces,g=g.morphColors[0].colors,d=0,r=h.length;d<r;d++)h[d].color.fromArray(g,3*d);g=a;d=[];r=[];void 0!==g.animation&&r.push(g.animation);void 0!==g.animations&&(g.animations.length?r=r.concat(g.animations):r.push(g.animations));for(g=0;g<r.length;g++)(h=ra.parseAnimation(r[g],c.bones))&&d.push(h);c.morphTargets&&$/;"	r
0	js/three.min.js	/^new Float32Array(2*a.uvs2.length),this.addAttribute("uv2",(new O(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<Qd(a.indices)?Uint32Array:Uint16Array)(3*a.indices.length),this.setIndex((new O(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new z(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new z(4*a.skinIndices.length,$/;"	r
0	js/three.min.js	/^new L;g.fromBufferGeometry(a)}else g=a.clone();g.mergeVertices();g.computeFaceNormals();a=g.vertices;g=g.faces;for(var h=0,k=g.length;h<k;h++)for(var l=g[h],q=0;3>q;q++){var n=l[f[q]];var u=l[f[(q+1)%3]];d[0]=Math.min(n,u);d[1]=Math.max(n,u);n=d[0]+","+d[1];void 0===e[n]?e[n]={index1:d[0],index2:d[1],face1:h,face2:void 0}:e[n].face2=h}for(n in e)if(d=e[n],void 0===d.face2||g[d.face1].normal.dot(g[d.face2].normal)<=b)f=a[d.index1],c.push(f.x,f.y,f.z),f=a[d.index2],c.push(f.x,f.y,f.z);this.addAttribute("position",$/;"	r
0	js/three.min.js	/^p.length&&q){for(var t=0,x=p.length;t<x;t++)v=p[t],c.texImage2D(a.TEXTURE_2D,t,r,v.width,v.height,0,r,B,v.data);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,v.width,v.height,0,r,B,v.data);else if(b.isCompressedTexture)for(t=0,x=p.length;t<x;t++)v=p[t],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(r)?c.compressedTexImage2D(a.TEXTURE_2D,t,r,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):$/;"	r
0	js/three.min.js	/^p=(c-b)\/(d-b);c=p*p;d=c*p;b=-m*d+2*m*c-m*p;m=(1+m)*d+(-1.5-2*m)*c+(-.5+m)*p+1;p=(-1-n)*d+(1.5+n)*c+.5*p;n=n*d-n*c;for(c=0;c!==g;++c)e[c]=b*f[k+c]+m*f[h+c]+p*f[a+c]+n*f[l+c];return e}});Xc.prototype=Object.assign(Object.create(xa.prototype),{constructor:Xc,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)\/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});Dd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Dd,$/;"	r
0	js/three.min.js	/^reset:function(){for(var b=0;b<p.length;b++)1===p[b]&&(a.disableVertexAttribArray(b),p[b]=0);B={};R=I=null;O={};H=C=J=A=null;n.reset();u.reset();r.reset()}}}function ng(a,b,c){function d(b){if("highp"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return"highp";b="mediump"}return"mediump"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,$/;"	r
0	js/three.min.js	/^setDuration:function(a){this.timeScale=this._clip.duration\/a;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a\/g;f[1]=b\/g;return this},stopWarping:function(){var a=$/;"	r
0	js/three.min.js	/^shadowmap_vertex:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n",$/;"	r
0	js/three.min.js	/^shadowmask_pars_fragment:"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n",$/;"	r
0	js/three.min.js	/^splineThru:function(a){this.currentPath.splineThru(a)},toShapes:function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new zb;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(Math.abs(l)>Number.EPSILON){if(0>l&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=$/;"	r
0	js/three.min.js	/^this.boneInverses=[],a=0,b=this.bones.length;a<b;a++)this.boneInverses.push(new K)}function pd(){w.call(this);this.type="Bone"}function qd(a,b){qa.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new K;this.bindMatrixInverse=new K;a=this.initBones();a=new Dc(a);this.bind(a,this.matrixWorld);this.normalizeSkinWeights()}function T(a){Q.call(this);this.type="LineBasicMaterial";this.color=new H(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.lights=!1;$/;"	r
0	js/three.min.js	/^this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},getSpacedPoints:function(a){void 0===a&&(a=40);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=[],c,d=0,e=this.curves;d<e.length;d++)for(var f=e[d],f=f.getPoints(f&&f.isEllipseCurve?2*a:f&&f.isLineCurve?1:f&&f.isSplineCurve?a*f.points.length:$/;"	r
0	js/three.min.js	/^this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var e=d.geometry.getAttribute("color");b.copy(this.light.color);c.copy(this.light.groundColor);for(var f=0,g=e.count;f<g;f++){var h=f<g\/2?b:c;e.setXYZ(f,h.r,h.g,h.b)}e.needsUpdate=!0}d.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate())}}();cd.prototype=Object.create(P.prototype);cd.prototype.constructor=cd;Kd.prototype=Object.create(P.prototype);Kd.prototype.constructor=Kd;dd.prototype=Object.create(P.prototype);$/;"	r
0	js/three.min.js	/^this.geometry.skinWeights[a];var c=1\/b.manhattanLength();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var b=new ba,d=this.geometry.attributes.skinWeight;for(a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),b.z=d.getZ(a),b.w=d.getW(a),c=1\/b.manhattanLength(),Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)}},updateMatrixWorld:function(a){qa.prototype.updateMatrixWorld.call(this,a);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):$/;"	r
0	js/three.min.js	/^this.getPoint(d\/a);e+=f.distanceTo(c);b.push(e);c=f}return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=c.length;b=b?b:a*c[d-1];for(var e=0,f=d-1,g;e<=f;)if(a=Math.floor(e+(f-e)\/2),g=c[a]-b,0>g)e=a+1;else if(0<g)f=a-1;else{f=a;break}a=f;if(c[a]===b)return a\/(d-1);e=c[a];return(a+(b-e)\/(c[a+1]-e))\/(d-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},$/;"	r
0	js/three.min.js	/^this.matrix.toArray();void 0!==this.geometry&&(f.geometry=b(a.geometries,this.geometry));if(void 0!==this.material)if(Array.isArray(this.material)){for(var g=[],h=0,k=this.material.length;h<k;h++)g.push(b(a.materials,this.material[h]));f.material=g}else f.material=b(a.materials,this.material);if(0<this.children.length)for(f.children=[],h=0;h<this.children.length;h++)f.children.push(this.children[h].toJSON(a).object);d&&(d=c(a.geometries),g=c(a.materials),h=c(a.textures),k=c(a.images),0<d.length&&$/;"	r
0	js/three.min.js	/^this.morphNormals.push(d)}e=a.skinWeights;f=0;for(b=e.length;f<b;f++)this.skinWeights.push(e[f].clone());e=a.skinIndices;f=0;for(b=e.length;f<b;f++)this.skinIndices.push(e[f].clone());e=a.lineDistances;f=0;for(b=e.length;f<b;f++)this.lineDistances.push(e[f]);f=a.boundingBox;null!==f&&(this.boundingBox=f.clone());f=a.boundingSphere;null!==f&&(this.boundingSphere=f.clone());this.elementsNeedUpdate=a.elementsNeedUpdate;this.verticesNeedUpdate=a.verticesNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.normalsNeedUpdate=$/;"	r
0	js/three.min.js	/^this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,k=0;if(!1===Array.isArray(a))c(a);else for(var l=0;l<a.length;l++)c(a[l]),this.addGroup(h,k,l),h+=k,k=0;this.setIndex(d);this.addAttribute("position",new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function ac(a,b){C.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:b};var c=[];b=Math.cos(R.DEG2RAD*(void 0!==b?b:1));var d=[0,0],e={},f=["a","b","c"];if(a.isBufferGeometry){var g=$/;"	r
0	js/three.min.js	/^this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;var h=[],k=[];(function(a){for(var c=new p,d=new p,g=new p,h=0;h<b.length;h+=3){f(b[h+0],c);f(b[h+1],d);f(b[h+2],g);var k,l,m=c,y=d,B=g,I=Math.pow(2,a),A=[];for(l=0;l<=I;l++){A[l]=[];var J=m.clone().lerp(B,l\/I),w=y.clone().lerp(B,l\/I),z=I-l;for(k=0;k<=z;k++)A[l][k]=0===k&&l===I?J:J.clone().lerp(w,k\/z)}for(l=0;l<I;l++)for(k=0;k<2*(I-l)-1;k++)m=Math.floor(k\/2),0===k%2?(e(A[l][m+1]),e(A[l+1][m]),e(A[l][m])):(e(A[l][m+1]),e(A[l+1][m+$/;"	r
0	js/three.min.js	/^this.projectionMatrix.copy(a.projectionMatrix);return this},getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}(),updateMatrixWorld:function(a){w.prototype.updateMatrixWorld.call(this,a);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});Gb.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Gb,isOrthographicCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,$/;"	r
0	js/three.min.js	/^this.start);b.subVectors(this.end,this.start);c=b.dot(b);c=b.dot(a)\/c;d&&(c=R.clamp(c,0,1));return c}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new p;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}});Object.assign(Pa,{normal:function(){var a=new p;return function(b,c,d,e){e=e||new p;$/;"	r
0	js/three.min.js	/^this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.source.stop(),this.offset=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());$/;"	r
0	js/three.min.js	/^this.status){console.warn("THREE.FileLoader: HTTP Status 0 received.");f=0;for(g=d.length;f<g;f++)if(h=d[f],h.onLoad)h.onLoad(c);e.manager.itemEnd(a)}else{f=0;for(g=d.length;f<g;f++)if(h=d[f],h.onError)h.onError(b);e.manager.itemEnd(a);e.manager.itemError(a)}},!1);n.addEventListener("progress",function(b){for(var c=$a[a],d=0,e=c.length;d<e;d++){var f=c[d];if(f.onProgress)f.onProgress(b)}},!1);n.addEventListener("error",function(b){for(var c=$a[a],d=0,f=c.length;d<f;d++){var g=c[d];if(g.onError)g.onError(b)}e.manager.itemEnd(a);$/;"	r
0	js/three.min.js	/^v*Math.cos(W*Math.PI\/2);Z=t*Math.sin(W*Math.PI\/2);G=0;for(W=X.length;G<W;G++){var S=c(X[G],B[G],Z);f(S.x,S.y,-fa)}N=0;for(M=P.length;N<M;N++)for(U=P[N],ba=A[N],G=0,W=U.length;G<W;G++)S=c(U[G],ba[G],Z),f(S.x,S.y,-fa)}Z=t;for(G=0;G<Y;G++)S=y?c(a[G],da[G],Z):a[G],C?(Q.copy(K.normals[0]).multiplyScalar(S.x),L.copy(K.binormals[0]).multiplyScalar(S.y),O.copy(H[0]).add(Q).add(L),f(O.x,O.y,O.z)):f(S.x,S.y,0);for(W=1;W<=w;W++)for(G=0;G<Y;G++)S=y?c(a[G],da[G],Z):a[G],C?(Q.copy(K.normals[W]).multiplyScalar(S.x),$/;"	r
0	js/three.min.js	/^var Nf=0;w.DefaultUp=new p(0,1,0);w.DefaultMatrixAutoUpdate=!0;Object.assign(w.prototype,ia.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(a){this.quaternion.premultiply(a);return this},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,$/;"	r
0	js/three.min.js	/^var e=b\/d.resolution,f=(d.boundingBox.yMax-d.boundingBox.yMin+d.underlineThickness)*e,g=0,h=0;b=[];for(var k=0;k<a.length;k++){var l=a[k];if("\\n"===l)g=0,h-=f;else{var m;var n=e;var p=g,r=h;if(l=d.glyphs[l]||d.glyphs["?"]){var v=new ce,t=[];if(l.o)for(var x=l._cachedOutline||(l._cachedOutline=l.o.split(" ")),w=0,z=x.length;w<z;)switch(x[w++]){case "m":var C=x[w++]*n+p;var A=x[w++]*n+r;v.moveTo(C,A);break;case "l":C=x[w++]*n+p;A=x[w++]*n+r;v.lineTo(C,A);break;case "q":var D=x[w++]*n+p;var E=x[w++]*$/;"	r
0	js/three.min.js	/^void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function bf(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this}function cf(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function ad(a){w.call(this);this.material=a;this.render=function(){}}function bd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?$/;"	r
0	js/three.min.js	/^void 0!==e?e:1006;this.minFilter=void 0!==f?f:1008;this.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:1023;this.type=void 0!==h?h:1009;this.offset=new D(0,0);this.repeat=new D(1,1);this.center=new D(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new ta;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:3E3;this.version=0;this.onUpdate=null}function ba(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function Db(a,$/;"	r
0	js/three.min.js	/^void 0===d&&(d=16776960);void 0===c&&(c=1);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);void 0===Ld&&(Ld=new C,Ld.addAttribute("position",new z([0,0,0,0,1,0],3)),pe=new Ra(0,.5,1,5,1),pe.translate(0,-.5,0));this.position.copy(b);this.line=new oa(Ld,new T({color:d}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new qa(pe,new va({color:d}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f)}function hd(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,$/;"	r
0	js/three.min.js	/^x+","+g.length},state:b}}function bg(a,b){var c={};return{update:function(d){var e=b.frame,f=d.geometry,g=a.get(d,f);c[g.id]!==e&&(f.isGeometry&&g.updateFromObject(d),a.update(g),c[g.id]=e);return g},clear:function(){c={}}}}function cg(a){a=a.split("\\n");for(var b=0;b<a.length;b++)a[b]=b+1+": "+a[b];return a.join("\\n")}function Ke(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");$/;"	r
0	js/three.min.js	/^z=t.faces;C=t.faceVertexUvs[0];0<C.length&&(I=C);for(var H=0,L=z.length;H<L;H++){var N=z[H];w=B?y[N.materialIndex]:y;if(void 0!==w){C=D[N.a];E=D[N.b];var U=D[N.c];if(!0===w.morphTargets){var K=t.morphTargets,O=this.morphTargetInfluences;g.set(0,0,0);h.set(0,0,0);k.set(0,0,0);for(var Q=0,R=K.length;Q<R;Q++){var P=O[Q];if(0!==P){var V=K[Q].vertices;g.addScaledVector(l.subVectors(V[N.a],C),P);h.addScaledVector(q.subVectors(V[N.b],E),P);k.addScaledVector(n.subVectors(V[N.c],U),P)}}g.add(C);h.add(E);k.add(U);$/;"	r
0	js/three.min.js	/^{clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}});var Of=0;Object.assign(L.prototype,ia.prototype,{isGeometry:!0,applyMatrix:function(a){for(var b=(new ta).getNormalMatrix(a),$/;"	r
0	script.js	/^camera.position.set(0, 0, 500);  \/* カメラの位置を指定 *\/$/;"	r
0xffff00	js/three.js	/^		if ( color === undefined ) color = 0xffff00;$/;"	r
1	js/GLTFLoader.js	/^				material.bumpScale = 1;$/;"	r
1	js/GLTFLoader.js	/^				material.displacementScale = 1;$/;"	r
1	js/three.js	/^									for ( var i2 = 1; i2 <= divisions; i2 ++ ) {$/;"	r
1	js/three.js	/^						iNext = 1;$/;"	r
1	js/three.js	/^						new BoxBufferGeometry( 1, 1, 1 ),$/;"	r
1	js/three.js	/^					1, this._controlInterpolantsResultBuffer );$/;"	r
1	js/three.js	/^					faceCount = 1;$/;"	r
1	js/three.js	/^					for ( var i = 1, l = levels.length; i < l; i ++ ) {$/;"	r
1	js/three.js	/^					gl.uniform2f( uniforms.uvScale, 1, 1 );$/;"	r
1	js/three.js	/^					if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;$/;"	r
1	js/three.js	/^					if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;$/;"	r
1	js/three.js	/^					if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;$/;"	r
1	js/three.js	/^					loaded += 1;$/;"	r
1	js/three.js	/^					oldFogType = 1;$/;"	r
1	js/three.js	/^					planeCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );$/;"	r
1	js/three.js	/^					sceneFogType = 1;$/;"	r
1	js/three.js	/^					sign = 1;$/;"	r
1	js/three.js	/^					vertexCounter += 1;$/;"	r
1	js/three.js	/^					z.z = 1;$/;"	r
1	js/three.js	/^				  0.5, - 0.5, 1, 0,$/;"	r
1	js/three.js	/^				  0.5, 0.5, 1, 1,$/;"	r
1	js/three.js	/^				  1, - 1, 1, 0,$/;"	r
1	js/three.js	/^				  1, 1, 1, 1,$/;"	r
1	js/three.js	/^				- 1, 1, 0, 1$/;"	r
1	js/three.js	/^				1, 0, 0, 0,$/;"	r
1	js/three.js	/^				1, 0, 0, x,$/;"	r
1	js/three.js	/^				1, 0, 0,$/;"	r
1	js/three.js	/^				1, y, z, 0,$/;"	r
1	js/three.js	/^				Math.cos( p1 ), Math.sin( p1 ), 1,$/;"	r
1	js/three.js	/^				Math.cos( p2 ), Math.sin( p2 ), 1$/;"	r
1	js/three.js	/^				accuIndex = this._accuIndex ^= 1;$/;"	r
1	js/three.js	/^				enabledAttributes[ attribute ] = 1;$/;"	r
1	js/three.js	/^				faceType = setBit( faceType, 1, hasMaterial );$/;"	r
1	js/three.js	/^				for ( i = 1; i <= radialSegments; i ++ ) {$/;"	r
1	js/three.js	/^				for ( i = 1; i <= segments; i ++ ) {$/;"	r
1	js/three.js	/^				for ( var i = 1, l = this.filters.length; i < l; i ++ ) {$/;"	r
1	js/three.js	/^				for ( var index = 1; index < arguments.length; index ++ ) {$/;"	r
1	js/three.js	/^				if ( lineWidth === undefined ) lineWidth = 1; \/\/ Not using Line*Material$/;"	r
1	js/three.js	/^				if ( t < 0 ) t += 1;$/;"	r
1	js/three.js	/^				if ( t > 1 ) t -= 1;$/;"	r
1	js/three.js	/^				normal.set( 0, 1, 0 );$/;"	r
1	js/three.js	/^				this._w = 1;$/;"	r
1	js/three.js	/^				this.x = 1;$/;"	r
1	js/three.js	/^				times = AnimationUtils.sortedArray( times, 1, order );$/;"	r
1	js/three.js	/^				values = AnimationUtils.sortedArray( values, 1, order );$/;"	r
1	js/three.js	/^				values.push( 0, 1, 0 );$/;"	r
1	js/three.js	/^				var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;$/;"	r
1	js/three.js	/^				writeIndex = 1,$/;"	r
1	js/three.js	/^			 1, 5, 9, 	5, 11, 4,	11, 10, 2,	10, 7, 6,	7, 1, 8,$/;"	r
1	js/three.js	/^			'color': [ 1, 1, 1 ],$/;"	r
1	js/three.js	/^			- 1, - 1, - 1,	- 1, - 1, 1,$/;"	r
1	js/three.js	/^			- 1, 1, - 1, - 1, 1, 1,$/;"	r
1	js/three.js	/^			1, - 1, - 1, 1, - 1, 1,$/;"	r
1	js/three.js	/^			1, 0, 0,	1, 0.6, 0,$/;"	r
1	js/three.js	/^			1, 0, 0, 	- 1, 0, 0,	0, 1, 0,$/;"	r
1	js/three.js	/^			1, 0, 0, 0,$/;"	r
1	js/three.js	/^			1, 0, 0,$/;"	r
1	js/three.js	/^			1, 1, - 1, 1, 1, 1,$/;"	r
1	js/three.js	/^			1, 1, 1, 	- 1, - 1, 1, 	- 1, 1, - 1, 	1, - 1, - 1$/;"	r
1	js/three.js	/^			1, 12, 14, 	1, 14, 5, 	1, 5, 9$/;"	r
1	js/three.js	/^			1, 3, 4,	1, 4, 2$/;"	r
1	js/three.js	/^			_MorphingFlag = 1,$/;"	r
1	js/three.js	/^			_pixelRatio = 1,$/;"	r
1	js/three.js	/^			_state.buffers.color.setClear( 1, 1, 1, 1 );$/;"	r
1	js/three.js	/^			_usedTextureUnits += 1;$/;"	r
1	js/three.js	/^			coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );$/;"	r
1	js/three.js	/^			for ( i = 1; i <= radialSegments; i ++ ) {$/;"	r
1	js/three.js	/^			for ( i = 1; i <= segments; i ++ ) {$/;"	r
1	js/three.js	/^			for ( i = 1; i <= tubularSegments; i ++ ) {$/;"	r
1	js/three.js	/^			for ( j = 1; j <= tubularSegments; j ++ ) {$/;"	r
1	js/three.js	/^			for ( p = 1; p <= divisions; p ++ ) {$/;"	r
1	js/three.js	/^			for ( var i = 1, l = levels.length; i < l; i ++ ) {$/;"	r
1	js/three.js	/^			for ( var i = 1, l = vectors.length; i < l; i ++ ) {$/;"	r
1	js/three.js	/^			for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {$/;"	r
1	js/three.js	/^			for ( var i = 1; i < lastIndex; ++ i ) {$/;"	r
1	js/three.js	/^			for ( x = 1; x <= radialSegments; x ++ ) {$/;"	r
1	js/three.js	/^			if ( Math.abs( s ) < 0.001 ) s = 1;$/;"	r
1	js/three.js	/^			if ( json.shading !== undefined ) material.flatShading = json.shading === 1; \/\/ THREE.FlatShading$/;"	r
1	js/three.js	/^			if ( opacity === undefined ) opacity = 1;$/;"	r
1	js/three.js	/^			if ( t2 > 1 ) t2 = 1;$/;"	r
1	js/three.js	/^			new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),	new Vector3( 0, 0, - 1 )$/;"	r
1	js/three.js	/^			new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),$/;"	r
1	js/three.js	/^			newAttributes[ attribute ] = 1;$/;"	r
1	js/three.js	/^			renderTarget.activeCubeFace = 1;$/;"	r
1	js/three.js	/^			return this._scheduleFading( duration, 1, 0 );$/;"	r
1	js/three.js	/^			te[ 15 ] = 1;$/;"	r
1	js/three.js	/^			var i = 1, key = jsonKeys[ 0 ];$/;"	r
1	js/three.js	/^			var rangeFactor = 1;$/;"	r
1	js/three.js	/^			var screenPosition = new Vector3( 1, 1, 0 ),$/;"	r
1	js/three.js	/^			var v1 = new Vector3( 0, 1, 0 );$/;"	r
1	js/three.js	/^			var w = 1, h = 1;$/;"	r
1	js/three.js	/^			weight = 1;$/;"	r
1	js/three.js	/^		LightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );$/;"	r
1	js/three.js	/^		\/\/for ( b = 1; b <= bevelSegments; b ++ ) {$/;"	r
1	js/three.js	/^		buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); \/\/ pz$/;"	r
1	js/three.js	/^		buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); \/\/ ny$/;"	r
1	js/three.js	/^		buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); \/\/ py$/;"	r
1	js/three.js	/^		buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); \/\/ nx$/;"	r
1	js/three.js	/^		cameraPY.lookAt( new Vector3( 0, 1, 0 ) );$/;"	r
1	js/three.js	/^		for ( i = 1; i <= segments; i ++ ) {$/;"	r
1	js/three.js	/^		for ( j = 1; j <= radialSegments; j ++ ) {$/;"	r
1	js/three.js	/^		for ( j = 1; j <= tubularSegments; j ++ ) {$/;"	r
1	js/three.js	/^		for ( s = 1; s <= steps; s ++ ) {$/;"	r
1	js/three.js	/^		for ( var i = 1, l = array.length; i < l; ++ i ) {$/;"	r
1	js/three.js	/^		if ( length === undefined ) length = 1;$/;"	r
1	js/three.js	/^		if ( size === undefined ) size = 1;$/;"	r
1	js/three.js	/^		this._effectiveTimeScale = 1;$/;"	r
1	js/three.js	/^		this._effectiveWeight = 1;$/;"	r
1	js/three.js	/^		this.aspect = 1;$/;"	r
1	js/three.js	/^		this.bumpScale = 1;$/;"	r
1	js/three.js	/^		this.displacementScale = 1;$/;"	r
1	js/three.js	/^		this.gapSize = 1;$/;"	r
1	js/three.js	/^		this.linewidth = 1;$/;"	r
1	js/three.js	/^		this.nearDistance = 1;$/;"	r
1	js/three.js	/^		this.opacity = 1;$/;"	r
1	js/three.js	/^		this.playbackRate = 1;$/;"	r
1	js/three.js	/^		this.position.set( 0, 1, 0 );$/;"	r
1	js/three.js	/^		this.radius = 1;$/;"	r
1	js/three.js	/^		this.reflectivity = 1;$/;"	r
1	js/three.js	/^		this.scale = 1;$/;"	r
1	js/three.js	/^		this.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );$/;"	r
1	js/three.js	/^		this.size = 1;$/;"	r
1	js/three.js	/^		this.timeScale = 1;$/;"	r
1	js/three.js	/^		this.unpackAlignment = 1;$/;"	r
1	js/three.js	/^		this.usedTimes = 1;$/;"	r
1	js/three.js	/^		this.weight = 1;$/;"	r
1	js/three.js	/^		this.wireframeLinewidth = 1;$/;"	r
1	js/three.js	/^		this.zoom = 1;$/;"	r
1	js/three.js	/^		var color2 = new Color( 0, 1, 0 );$/;"	r
1	js/three.js	/^		var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );$/;"	r
1	js/three.js	/^		var positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];$/;"	r
1	js/three.js	/^		var positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];$/;"	r
1	js/three.js	/^		var positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];$/;"	r
1	js/three.js	/^		var scale = new Vector3( 1, 1, 1 );$/;"	r
1	js/three.js	/^	Object3D.DefaultUp = new Vector3( 0, 1, 0 );$/;"	r
1	js/three.js	/^	var AlwaysDepth = 1;$/;"	r
1	js/three.js	/^	var BackSide = 1;$/;"	r
1	js/three.js	/^	var CullFaceBack = 1;$/;"	r
1	js/three.js	/^	var FaceColors = 1;$/;"	r
1	js/three.js	/^	var FlatShading = 1;$/;"	r
1	js/three.js	/^	var FrontFaceDirectionCCW = 1;$/;"	r
1	js/three.js	/^	var LinePieces = 1;$/;"	r
1	js/three.js	/^	var LinearToneMapping = 1;$/;"	r
1	js/three.js	/^	var MixOperation = 1;$/;"	r
1	js/three.js	/^	var NormalBlending = 1;$/;"	r
1	js/three.js	/^	var PCFShadowMap = 1;$/;"	r
1	js/three.js	/^	var TriangleStripDrawMode = 1;$/;"	r
1	js/three.js	/^	var bufferGeometryId = 1; \/\/ BufferGeometry uses odd numbers as Id$/;"	r
1	js/three.min.js	/^!1;this.setValues(a)}function Aa(a){Q.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}";this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,$/;"	r
1	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.lights=this.fog=!1;this.setValues(a)}function pb(a){Q.call(this);this.type="MeshLambertMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=$/;"	r
1	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function nb(a){Ia.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.gradientMap=null;this.setValues(a)}function ob(a){Q.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=$/;"	r
1	js/three.min.js	/^-q.y,-q.z)):(u=1,l.setFromMatrixPosition(v.target.matrixWorld),p.lookAt(l),p.updateMatrixWorld(),J.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),J.multiply(p.projectionMatrix),J.multiply(p.matrixWorldInverse));a.setRenderTarget(y);a.clear();for(v=0;v<u;v++)I&&(l.copy(p.position),l.add(m[v]),p.up.copy(t[v]),p.lookAt(l),p.updateMatrixWorld(),n.viewport(x[v])),g.multiplyMatrices(p.projectionMatrix,p.matrixWorldInverse),f.setFromMatrix(g),e(c,d,p,I)}}A.needsUpdate=!1}}}function Mf(a){var b={};return{get:function(a){a.isInterleavedBufferAttribute&&$/;"	r
1	js/three.min.js	/^1!==a.linewidth&&(d.linewidth=a.linewidth);void 0!==a.dashSize&&(d.dashSize=a.dashSize);void 0!==a.gapSize&&(d.gapSize=a.gapSize);void 0!==a.scale&&(d.scale=a.scale);void 0!==a.skinning&&(d.skinning=a.skinning);void 0!==a.morphTargets&&(d.morphTargets=a.morphTargets);void 0!==a.dithering&&(d.dithering=a.dithering);void 0!==a.visible&&(d.visible=a.visible);void 0!==a.userData&&(d.userData=a.userData);void 0!==a.shading&&(d.flatShading=1===a.shading);void 0!==a.size&&(d.size=a.size);void 0!==a.sizeAttenuation&&$/;"	r
1	js/three.min.js	/^1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function qb(a){T.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}function Yd(a,b,c){var d=this,e=!1,f=0,g=0,h=void 0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,$/;"	r
1	js/three.min.js	/^1;u<=b;u++)for(n=1;n<=d;n++){var a=(d+1)*u+(n-1),c=(d+1)*u+n,e=(d+1)*(u-1)+n;x.push((d+1)*(u-1)+(n-1),a,e);x.push(a,c,e)}})();this.setIndex(x);this.addAttribute("position",new z(m,3));this.addAttribute("normal",new z(v,3));this.addAttribute("uv",new z(t,2))}function Nc(a,b,c,d,e,f,g){L.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");$/;"	r
1	js/three.min.js	/^Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute("position",new z(b,3));b=new T({fog:!1});this.cone=new P(a,b);this.add(this.cone);this.update()}function df(a){var b=[];a&&a.isBone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,df(a.children[c]));return b}function lc(a){for(var b=df(a),c=new C,d=[],e=[],f=new H(0,0,1),g=new H(0,1,0),h=0;h<b.length;h++){var k=b[h];k.parent&&k.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.addAttribute("position",$/;"	r
1	js/three.min.js	/^X.maxTextures);G+=1;return a};this.setTexture2D=function(){var a=!1;return function(b,c){b&&b.isWebGLRenderTarget&&(a||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),a=!0),b=b.texture);S.setTexture2D(b,c)}}();this.setTexture=function(){var a=!1;return function(b,c){a||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),a=!0);S.setTexture2D(b,c)}}();this.setTextureCube=function(){var a=$/;"	r
1	js/three.min.js	/^a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=1006),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}});Object.assign(Wc.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},0),f;c=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml",$/;"	r
1	js/three.min.js	/^a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0}}();pc.prototype=Object.create(w.prototype);pc.prototype.constructor=pc;pc.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};pc.prototype.update=function(){var a=new p,b=new p,c=new p;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,$/;"	r
1	js/three.min.js	/^a\/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new rb(new Y(90,1,.5,500))}function yd(){rb.call(this,new Gb(-5,5,5,-5,.5,500))}function zd(a,b){fa.call(this,a,b);this.type="DirectionalLight";this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;this.shadow=new yd}function Ad(a,b){fa.call(this,a,b);this.type="AmbientLight";this.castShadow=void 0}function Bd(a,b,c,d){fa.call(this,a,b);this.type="RectAreaLight";this.position.set(0,1,0);this.updateMatrix();$/;"	r
1	js/three.min.js	/^a||null===a)throw new TypeError("Cannot convert undefined or null to object");for(var b=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(void 0!==d&&null!==d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b}}();Object.assign(ia.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;$/;"	r
1	js/three.min.js	/^b+"' parameter is undefined.");else if("shading"===b)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c?!0:!1;else{var d=this[b];void 0===d?console.warn("THREE."+this.type+": '"+b+"' is not a property of this material."):d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]="overdraw"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=$/;"	r
1	js/three.min.js	/^case "flipSided":l.side=1;break;case "doubleSided":l.side=2;break;case "transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity");l.opacity=n;break;case "depthTest":case "depthWrite":case "colorWrite":case "opacity":case "reflectivity":case "transparent":case "visible":case "wireframe":l[m]=n;break;case "vertexColors":!0===n&&(l.vertexColors=2);"face"===n&&(l.vertexColors=1);break;default:console.error("THREE.Loader.createMaterial: Unsupported",m,n)}}"MeshBasicMaterial"===$/;"	r
1	js/three.min.js	/^drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function hb(a,b){this.origin=void 0!==a?a:new p;this.direction=void 0!==b?b:new p}function Ib(a,b){this.start=void 0!==a?a:new p;this.end=void 0!==b?b:new p}function Pa(a,b,c){this.a=void 0!==a?a:new p;this.b=void 0!==$/;"	r
1	js/three.min.js	/^new p(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new p(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new p;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translateX:function(){var a=new p(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new p(0,1,0);return function(b){return this.translateOnAxis(a,$/;"	r
1	js/three.min.js	/^return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(a){a||(a=[]);!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this},getFilter:function(){return this.getFilters()[0]},$/;"	r
1	js/three.min.js	/^this.add(g);var h=new Y(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new p(0,0,1));this.add(h);var k=new Y(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new p(0,0,-1));this.add(k);this.renderTarget=new Eb(c,c,{format:1022,magFilter:1006,minFilter:1006});this.renderTarget.texture.name="CubeCamera";this.update=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,l=c.texture.generateMipmaps;c.texture.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);$/;"	r
1	js/three.min.js	/^this.normalizeNormals()}function Ic(a,b){L.call(this);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Qb(a,b));this.mergeVertices()}function Qb(a,b){sa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Jc(a,b){L.call(this);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new jb(a,b));this.mergeVertices()}$/;"	r
1	js/three.min.js	/^url:h}}c.image=d.uuid}b||(a.textures[this.uuid]=c);return c},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(300===this.mapping){a.applyMatrix3(this.matrix);if(0>a.x||1<a.x)switch(this.wrapS){case 1E3:a.x-=Math.floor(a.x);break;case 1001:a.x=0>a.x?0:1;break;case 1002:a.x=1===Math.abs(Math.floor(a.x)%2)?Math.ceil(a.x)-a.x:a.x-Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case 1E3:a.y-=Math.floor(a.y);break;case 1001:a.y=0>a.y?0:1;break;case 1002:a.y=1===Math.abs(Math.floor(a.y)%$/;"	r
1	js/three.min.js	/^we[e]=f);if(0!==b)for(d.toArray(f,0),d=1,e=0;d!==b;++d)e+=c,a[d].toArray(f,e);return f}function xe(a,b){var c=ye[b];void 0===c&&(c=new Int32Array(b),ye[b]=c);for(var d=0;d!==b;++d)c[d]=a.allocTextureUnit();return c}function lf(a,b){a.uniform1f(this.addr,b)}function mf(a,b){a.uniform1i(this.addr,b)}function nf(a,b){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,b.x,b.y)}function of(a,b){void 0!==b.x?a.uniform3f(this.addr,b.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,$/;"	r
10	js/three.js	/^		if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;$/;"	r
10	js/three.js	/^		this.focus = 10;$/;"	r
100	js/three.js	/^			if ( size === undefined ) size = 100;$/;"	r
100	js/three.js	/^	var AddEquation = 100;$/;"	r
1000	js/three.js	/^		this.farDistance = 1000;$/;"	r
1000	js/three.js	/^	var RepeatWrapping = 1000;$/;"	r
1000	script.js	/^var far     = 1000;             \/* far plane *\/$/;"	r
1001	js/three.js	/^	var ClampToEdgeWrapping = 1001;$/;"	r
1001	js/three.min.js	/^f.convert(g.wrapT)),a.texParameteri(c,a.TEXTURE_MAG_FILTER,f.convert(g.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,f.convert(g.minFilter))):(a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(c,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),1001===g.wrapS&&1001===g.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",g),a.texParameteri(c,a.TEXTURE_MAG_FILTER,q(g.magFilter)),a.texParameteri(c,$/;"	r
1002	js/three.js	/^	var MirroredRepeatWrapping = 1002;$/;"	r
1003	js/three.js	/^	var NearestFilter = 1003;$/;"	r
1004	js/three.js	/^	var NearestMipMapNearestFilter = 1004;$/;"	r
1005	js/three.js	/^	var NearestMipMapLinearFilter = 1005;$/;"	r
1006	js/three.js	/^	var LinearFilter = 1006;$/;"	r
1007	js/three.js	/^	var LinearMipMapNearestFilter = 1007;$/;"	r
1008	js/three.js	/^	var LinearMipMapLinearFilter = 1008;$/;"	r
1009	js/three.js	/^	var UnsignedByteType = 1009;$/;"	r
101	js/three.js	/^	var SubtractEquation = 101;$/;"	r
1010	js/three.js	/^	var ByteType = 1010;$/;"	r
1011	js/three.js	/^	var ShortType = 1011;$/;"	r
1012	js/three.js	/^	var UnsignedShortType = 1012;$/;"	r
1012	js/three.min.js	/^(p=a.DEPTH_COMPONENT16);1026===b.format&&p===a.DEPTH_COMPONENT&&1012!==b.type&&1014!==b.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),b.type=1012,B=f.convert(b.type));1027===b.format&&(p=a.DEPTH_STENCIL,1020!==b.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),b.type=1020,B=f.convert(b.type)));c.texImage2D(a.TEXTURE_2D,0,p,v.width,v.height,0,r,B,null)}else if(b.isDataTexture)if(0<$/;"	r
1013	js/three.js	/^	var IntType = 1013;$/;"	r
1014	js/three.js	/^	var UnsignedIntType = 1014;$/;"	r
1015	js/three.js	/^	var FloatType = 1015;$/;"	r
1016	js/three.js	/^	var HalfFloatType = 1016;$/;"	r
1017	js/three.js	/^	var UnsignedShort4444Type = 1017;$/;"	r
1018	js/three.js	/^	var UnsignedShort5551Type = 1018;$/;"	r
1019	js/three.js	/^	var UnsignedShort565Type = 1019;$/;"	r
1019	js/three.min.js	/^1019;m.UnsignedInt248Type=1020;m.AlphaFormat=1021;m.RGBFormat=1022;m.RGBAFormat=1023;m.LuminanceFormat=1024;m.LuminanceAlphaFormat=1025;m.RGBEFormat=1023;m.DepthFormat=1026;m.DepthStencilFormat=1027;m.RGB_S3TC_DXT1_Format=2001;m.RGBA_S3TC_DXT1_Format=2002;m.RGBA_S3TC_DXT3_Format=2003;m.RGBA_S3TC_DXT5_Format=2004;m.RGB_PVRTC_4BPPV1_Format=2100;m.RGB_PVRTC_2BPPV1_Format=2101;m.RGBA_PVRTC_4BPPV1_Format=2102;m.RGBA_PVRTC_2BPPV1_Format=2103;m.RGB_ETC1_Format=2151;m.LoopOnce=2200;m.LoopRepeat=2201;m.LoopPingPong=$/;"	r
102	js/three.js	/^	var ReverseSubtractEquation = 102;$/;"	r
1020	js/three.js	/^	var UnsignedInt248Type = 1020;$/;"	r
1021	js/three.js	/^	var AlphaFormat = 1021;$/;"	r
1022	js/three.js	/^	var RGBFormat = 1022;$/;"	r
1023	js/three.js	/^	var RGBAFormat = 1023;$/;"	r
1024	js/three.js	/^	var LuminanceFormat = 1024;$/;"	r
1025	js/three.js	/^	var LuminanceAlphaFormat = 1025;$/;"	r
1026	js/three.js	/^	var DepthFormat = 1026;$/;"	r
1026	js/three.min.js	/^(p=a.DEPTH_COMPONENT16);1026===b.format&&p===a.DEPTH_COMPONENT&&1012!==b.type&&1014!==b.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),b.type=1012,B=f.convert(b.type));1027===b.format&&(p=a.DEPTH_STENCIL,1020!==b.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),b.type=1020,B=f.convert(b.type)));c.texImage2D(a.TEXTURE_2D,0,p,v.width,v.height,0,r,B,null)}else if(b.isDataTexture)if(0<$/;"	r
1027	js/three.js	/^	var DepthStencilFormat = 1027;$/;"	r
103	js/three.js	/^	var MinEquation = 103;$/;"	r
104	js/three.js	/^	var MaxEquation = 104;$/;"	r
1080	js/three.js	/^		 *   var h = 1080;$/;"	r
11	js/three.js	/^			11, 9, 5, 	11, 5, 19, 	11, 19, 7,$/;"	r
12	js/GLTFLoader.js	/^	var BINARY_EXTENSION_HEADER_LENGTH = 12;$/;"	r
16	js/three.min.js	/^b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);var M=y={vertexShader:"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\n\\tvUV = uv;\\n\\tvec2 pos = position;\\n\\tif ( renderType == 2 ) {\\n\\t\\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\n\\t\\tvVisibility =        visibility.r \/ 9.0;\\n\\t\\tvVisibility *= 1.0 - visibility.g \/ 9.0;\\n\\t\\tvVisibility *=       visibility.b \/ 9.0;\\n\\t\\tvVisibility *= 1.0 - visibility.a \/ 9.0;\\n\\t\\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\n\\t\\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n\\t}\\n\\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}",$/;"	r
17	js/three.js	/^			17, 4, 8, 	17, 8, 10, 	17, 10, 6,$/;"	r
18	js/three.js	/^			18, 1, 9, 	18, 9, 11, 	18, 11, 3,$/;"	r
180	js/three.js	/^				\/\/ otherwise this singularity is angle = 180$/;"	r
19	js/three.js	/^			19, 5, 14, 	19, 14, 4, 	19, 4, 17,$/;"	r
1920	js/three.js	/^		 *   var w = 1920;$/;"	r
2	js/three.js	/^								i1 = 2; \/\/ + 1, using the scan for the details$/;"	r
2	js/three.js	/^					j += 2;$/;"	r
2	js/three.js	/^					oldFogType = 2;$/;"	r
2	js/three.js	/^					sceneFogType = 2;$/;"	r
2	js/three.js	/^				_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );$/;"	r
2	js/three.js	/^				faceType = setBit( faceType, 2, hasFaceUv );$/;"	r
2	js/three.js	/^				rangeFactor = 2;$/;"	r
2	js/three.js	/^			2, 1, 0, 	0, 3, 2,	1, 3, 0,	2, 3, 1$/;"	r
2	js/three.js	/^			2, 16, 18, 	2, 18, 3, 	2, 3, 13,$/;"	r
2	js/three.js	/^			_SkinningFlag = 2,$/;"	r
2	js/three.js	/^			gl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );$/;"	r
2	js/three.js	/^			gl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );$/;"	r
2	js/three.js	/^			gl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );$/;"	r
2	js/three.js	/^			renderTarget.activeCubeFace = 2;$/;"	r
2	js/three.js	/^	var AddOperation = 2;$/;"	r
2	js/three.js	/^	var AdditiveBlending = 2;$/;"	r
2	js/three.js	/^	var CullFaceFront = 2;$/;"	r
2	js/three.js	/^	var DoubleSide = 2;$/;"	r
2	js/three.js	/^	var LessDepth = 2;$/;"	r
2	js/three.js	/^	var PCFSoftShadowMap = 2;$/;"	r
2	js/three.js	/^	var ReinhardToneMapping = 2;$/;"	r
2	js/three.js	/^	var SmoothShading = 2;$/;"	r
2	js/three.js	/^	var TriangleFanDrawMode = 2;$/;"	r
2	js/three.js	/^	var VertexColors = 2;$/;"	r
2	js/three.min.js	/^!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var M=this,H=!1,ka=null,N=null,U=-1,L="",O=null,Z=null,Q=new ba,V=new ba,T=null,G=0,W=t.width,ea=t.height,P=1,ca=new ba(0,0,W,ea),da=new ba(0,0,W,ea),Oe=!1,Td=new ld,Fa=new qg,fa=!1,Ud=!1,md=new K,Jb=new p,Vd={geometries:0,textures:0},Qa={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:Qa,$/;"	r
2	js/three.min.js	/^"color");q=b.getUniformLocation(B,"scale");n=b.getUniformLocation(B,"rotation");u=b.getUniformLocation(B,"screenPosition")}c.useProgram(B);c.initAttributes();c.enableAttribute(r);c.enableAttribute(m);c.disableUnusedAttributes();b.uniform1i(h,0);b.uniform1i(g,1);b.bindBuffer(b.ARRAY_BUFFER,t);b.vertexAttribPointer(r,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(m,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,x);c.disable(b.CULL_FACE);c.buffers.depth.setMask(!1);z=0;for(w=a.length;z<w;z++)if(M=$/;"	r
2	js/three.min.js	/^2;m.NoBlending=0;m.NormalBlending=1;m.AdditiveBlending=2;m.SubtractiveBlending=3;m.MultiplyBlending=4;m.CustomBlending=5;m.AddEquation=100;m.SubtractEquation=101;m.ReverseSubtractEquation=102;m.MinEquation=103;m.MaxEquation=104;m.ZeroFactor=200;m.OneFactor=201;m.SrcColorFactor=202;m.OneMinusSrcColorFactor=203;m.SrcAlphaFactor=204;m.OneMinusSrcAlphaFactor=205;m.DstAlphaFactor=206;m.OneMinusDstAlphaFactor=207;m.DstColorFactor=208;m.OneMinusDstColorFactor=209;m.SrcAlphaSaturateFactor=210;m.NeverDepth=$/;"	r
2	js/three.min.js	/^b){b\/=2;var c=Math.sin(b);this._x=a.x*c;this._y=a.y*c;this._z=a.z*c;this._w=Math.cos(b);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5\/Math.sqrt(l+1),this._w=.25\/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)\/c,this._x=.25*c,this._y=(a+e)\/c,this._z=(d+h)\/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)\/c,this._x=(a+e)\/c,this._y=$/;"	r
2	js/three.min.js	/^c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=l;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)};this.clear=function(a,b,c,d){for(var e=this.renderTarget,f=0;6>f;f++)e.activeCubeFace=f,a.setRenderTarget(e),a.clear(b,c,d);a.setRenderTarget(null)}}function fe(){w.call(this);this.type="AudioListener";this.context=ge.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);$/;"	r
2	js/three.min.js	/^c.disableUnusedAttributes();c.disable(b.CULL_FACE);c.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,ja);b.vertexAttribPointer(A,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(J,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,ma);b.uniformMatrix4fv(r,!1,U.projectionMatrix.elements);c.activeTexture(b.TEXTURE0);b.uniform1i(q,0);na=N=0;(w=p.fog)?(b.uniform3f(B,w.color.r,w.color.g,w.color.b),w.isFog?(b.uniform1f(x,w.near),b.uniform1f(y,w.far),b.uniform1i(m,1),na=N=1):w.isFogExp2&&(b.uniform1f(t,w.density),$/;"	r
200	js/three.js	/^		this.arcLengthDivisions = 200;$/;"	r
200	js/three.js	/^	var ZeroFactor = 200;$/;"	r
2000	js/three.js	/^			 * flipcode.com by John W. Ratcliff  \/\/ July 22, 2000$/;"	r
2001	js/three.js	/^	var RGB_S3TC_DXT1_Format = 2001;$/;"	r
2002	js/three.js	/^	var RGBA_S3TC_DXT1_Format = 2002;$/;"	r
2003	js/three.js	/^	var RGBA_S3TC_DXT3_Format = 2003;$/;"	r
2004	js/three.js	/^	var RGBA_S3TC_DXT5_Format = 2004;$/;"	r
201	js/three.js	/^	var OneFactor = 201;$/;"	r
202	js/three.js	/^	var SrcColorFactor = 202;$/;"	r
203	js/three.js	/^	var OneMinusSrcColorFactor = 203;$/;"	r
204	js/three.js	/^	var SrcAlphaFactor = 204;$/;"	r
205	js/three.js	/^	var OneMinusSrcAlphaFactor = 205;$/;"	r
206	js/three.js	/^	var DstAlphaFactor = 206;$/;"	r
207	js/three.js	/^	var OneMinusDstAlphaFactor = 207;$/;"	r
208	js/three.js	/^	var DstColorFactor = 208;$/;"	r
209	js/three.js	/^	var OneMinusDstColorFactor = 209;$/;"	r
210	js/three.js	/^	var SrcAlphaSaturateFactor = 210;$/;"	r
2100	js/three.js	/^	var RGB_PVRTC_4BPPV1_Format = 2100;$/;"	r
2101	js/three.js	/^	var RGB_PVRTC_2BPPV1_Format = 2101;$/;"	r
2102	js/three.js	/^	var RGBA_PVRTC_4BPPV1_Format = 2102;$/;"	r
2103	js/three.js	/^	var RGBA_PVRTC_2BPPV1_Format = 2103;$/;"	r
2151	js/three.js	/^	var RGB_ETC1_Format = 2151;$/;"	r
2200	js/three.js	/^	var LoopOnce = 2200;$/;"	r
2201	js/three.js	/^	var LoopRepeat = 2201;$/;"	r
2201	js/three.min.js	/^2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function Ye(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Jd(a,b){"string"===typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=b);this.value=a}function ke(){C.call(this);$/;"	r
2202	js/three.js	/^	var LoopPingPong = 2202;$/;"	r
2202	js/three.min.js	/^2202;m.InterpolateDiscrete=2300;m.InterpolateLinear=2301;m.InterpolateSmooth=2302;m.ZeroCurvatureEnding=2400;m.ZeroSlopeEnding=2401;m.WrapAroundEnding=2402;m.TrianglesDrawMode=0;m.TriangleStripDrawMode=1;m.TriangleFanDrawMode=2;m.LinearEncoding=3E3;m.sRGBEncoding=3001;m.GammaEncoding=3007;m.RGBEEncoding=3002;m.LogLuvEncoding=3003;m.RGBM7Encoding=3004;m.RGBM16Encoding=3005;m.RGBDEncoding=3006;m.BasicDepthPacking=3200;m.RGBADepthPacking=3201;m.CubeGeometry=Hb;m.Face4=function(a,b,c,d,e,f,g){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");$/;"	r
2300	js/three.js	/^	var InterpolateDiscrete = 2300;$/;"	r
2301	js/three.js	/^	var InterpolateLinear = 2301;$/;"	r
2302	js/three.js	/^	var InterpolateSmooth = 2302;$/;"	r
2400	js/three.js	/^	var ZeroCurvatureEnding = 2400;$/;"	r
2401	js/three.js	/^	var ZeroSlopeEnding = 2401;$/;"	r
2402	js/three.js	/^	var WrapAroundEnding = 2402;$/;"	r
3	js/three.js	/^				_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	js/three.js	/^				_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	js/three.js	/^				_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );$/;"	r
3	js/three.js	/^				faceType = setBit( faceType, 3, hasFaceVertexUv );$/;"	r
3	js/three.js	/^				groupCount += 3;$/;"	r
3	js/three.js	/^			 3, 9, 4, 	3, 4, 2,	3, 2, 6,	3, 6, 8,	3, 8, 9,$/;"	r
3	js/three.js	/^			3, 11, 7, 	3, 7, 15, 	3, 15, 13,$/;"	r
3	js/three.js	/^			color.toArray( colors, j ); j += 3;$/;"	r
3	js/three.js	/^			renderTarget.activeCubeFace = 3;$/;"	r
3	js/three.js	/^		this.dashSize = 3;$/;"	r
3	js/three.js	/^	var CullFaceFrontBack = 3;$/;"	r
3	js/three.js	/^	var LessEqualDepth = 3;$/;"	r
3	js/three.js	/^	var SubtractiveBlending = 3;$/;"	r
3	js/three.js	/^	var Uncharted2ToneMapping = 3;$/;"	r
3	js/three.min.js	/^3,F.FLOAT,!1,0,0));aa.disableUnusedAttributes();F.drawArrays(F.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){aa.setMaterial(d);var g=u(a,b,d,e);a=c.id+"_"+g.id+"_"+(!0===d.wireframe);var h=!1;a!==L&&(L=a,h=!0);e.morphTargetInfluences&&(va.update(e,c,d,g),h=!0);var l=c.index,k=c.attributes.position;b=1;!0===d.wireframe&&(l=qa.getWireframeAttribute(c),b=2);a=wa;if(null!==l){var n=pa.get(l);a=xa;a.setIndex(n)}if(h){h=void 0;if(c&&c.isInstancedBufferGeometry&&null===ha.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
3	js/three.min.js	/^d.position),F.bufferData(F.ARRAY_BUFFER,a.positionArray,F.DYNAMIC_DRAW),aa.enableAttribute(b.position),F.vertexAttribPointer(b.position,3,F.FLOAT,!1,0,0));if(a.hasNormals){F.bindBuffer(F.ARRAY_BUFFER,d.normal);if(!c.isMeshPhongMaterial&&!c.isMeshStandardMaterial&&!c.isMeshNormalMaterial&&!0===c.flatShading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])\/3,l=(g[e+1]+g[e+4]+g[e+7])\/3,k=(g[e+2]+g[e+5]+g[e+8])\/3;g[e+0]=h;g[e+1]=l;g[e+2]=k;g[e+3]=h;g[e+4]=l;g[e+5]=k;g[e+$/;"	r
30	js/three.js	/^		this.shininess = 30;$/;"	r
30	js/three.min.js	/^this.color=new H(16777215);this.specular=new H(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=$/;"	r
30	script.js	/^\/\/var geometry = new THREE.CubeGeometry(30, 30, 30);$/;"	r
300	js/three.js	/^	var UVMapping = 300;$/;"	r
3000	js/three.js	/^	var LinearEncoding = 3000;$/;"	r
3001	js/three.js	/^	var sRGBEncoding = 3001;$/;"	r
3002	js/three.js	/^	var RGBEEncoding = 3002;$/;"	r
3003	js/three.js	/^	var LogLuvEncoding = 3003;$/;"	r
3004	js/three.js	/^	var RGBM7Encoding = 3004;$/;"	r
3005	js/three.js	/^	var RGBM16Encoding = 3005;$/;"	r
3006	js/three.js	/^	var RGBDEncoding = 3006;$/;"	r
3007	js/three.js	/^	var GammaEncoding = 3007;$/;"	r
301	js/three.js	/^	var CubeReflectionMapping = 301;$/;"	r
302	js/three.js	/^	var CubeRefractionMapping = 302;$/;"	r
303	js/three.js	/^	var EquirectangularReflectionMapping = 303;$/;"	r
304	js/three.js	/^	var EquirectangularRefractionMapping = 304;$/;"	r
305	js/three.js	/^	var SphericalReflectionMapping = 305;$/;"	r
306	js/three.js	/^	var CubeUVReflectionMapping = 306;$/;"	r
307	js/three.js	/^	var CubeUVRefractionMapping = 307;$/;"	r
307	js/three.min.js	/^m.CubeUVRefractionMapping=307;m.RepeatWrapping=1E3;m.ClampToEdgeWrapping=1001;m.MirroredRepeatWrapping=1002;m.NearestFilter=1003;m.NearestMipMapNearestFilter=1004;m.NearestMipMapLinearFilter=1005;m.LinearFilter=1006;m.LinearMipMapNearestFilter=1007;m.LinearMipMapLinearFilter=1008;m.UnsignedByteType=1009;m.ByteType=1010;m.ShortType=1011;m.UnsignedShortType=1012;m.IntType=1013;m.UnsignedIntType=1014;m.FloatType=1015;m.HalfFloatType=1016;m.UnsignedShort4444Type=1017;m.UnsignedShort5551Type=1018;m.UnsignedShort565Type=$/;"	r
3200	js/three.js	/^	var BasicDepthPacking = 3200;$/;"	r
3201	js/three.js	/^	var RGBADepthPacking = 3201;$/;"	r
35	js/three.js	/^		this.filmGauge = 35;	\/\/ width of the film (default in millimeters)$/;"	r
4	js/GLTFLoader.js	/^			chunkIndex += 4;$/;"	r
4	js/three.js	/^						offset += 4;$/;"	r
4	js/three.js	/^				faceType = setBit( faceType, 4, hasFaceNormal );$/;"	r
4	js/three.js	/^			 4, 9, 5, 	2, 4, 11,	6, 2, 10,	8, 6, 7,	9, 8, 1$/;"	r
4	js/three.js	/^			4, 14, 12, 	4, 12, 0, 	4, 0, 8,$/;"	r
4	js/three.js	/^			if ( divisions === undefined ) divisions = 4;$/;"	r
4	js/three.js	/^			renderTarget.activeCubeFace = 4;$/;"	r
4	js/three.js	/^			var precisionPoints = 4; \/\/ number of decimal points, e.g. 4 for epsilon of 0.0001$/;"	r
4	js/three.js	/^		this.maxMorphNormals = 4;$/;"	r
4	js/three.js	/^		this.unpackAlignment = 4;	\/\/ valid values: 1, 2, 4, 8 (see http:\/\/www.khronos.org\/opengles\/sdk\/docs\/man\/xhtml\/glPixelStorei.xml)$/;"	r
4	js/three.js	/^		var geometry = new SphereBufferGeometry( sphereSize, 4, 2 );$/;"	r
4	js/three.js	/^	var CineonToneMapping = 4;$/;"	r
4	js/three.js	/^	var EqualDepth = 4;$/;"	r
4	js/three.js	/^	var MultiplyBlending = 4;$/;"	r
40	js/three.js	/^			if ( divisions === undefined ) divisions = 40;$/;"	r
400	script.js	/^var height  = 400;$/;"	r
44	js/three.js	/^	 * based on the brilliant article by @prideout http:\/\/prideout.net\/blog\/?p=44$/;"	r
5	js/three.js	/^				faceType = setBit( faceType, 5, hasFaceVertexNormal );$/;"	r
5	js/three.js	/^			if ( divisions === undefined ) divisions = 5;$/;"	r
5	js/three.js	/^			renderTarget.activeCubeFace = 5;$/;"	r
5	js/three.js	/^		LightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );$/;"	r
5	js/three.js	/^	var CustomBlending = 5;$/;"	r
5	js/three.js	/^	var GreaterEqualDepth = 5;$/;"	r
5	js/three.min.js	/^5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Lc(a,b){L.call(this);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))\/2,d=1\/c;sa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,$/;"	r
500	script.js	/^directionalLight.position.set(0, 500, 500);$/;"	r
5____4	js/three.js	/^			  5____4$/;"	r
6	js/three.js	/^							gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );$/;"	r
6	js/three.js	/^					faceCount = 6;$/;"	r
6	js/three.js	/^					gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );$/;"	r
6	js/three.js	/^					groupCount += 6;$/;"	r
6	js/three.js	/^				faceType = setBit( faceType, 6, hasFaceColor );$/;"	r
6	js/three.js	/^				gl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );$/;"	r
6	js/three.js	/^				hue \/= 6;$/;"	r
6	js/three.js	/^			6, 10, 2, 	6, 2, 13, 	6, 13, 15,$/;"	r
6	js/three.js	/^	var GreaterDepth = 6;$/;"	r
6	js/three.min.js	/^a;return this},setMimeType:function(a){this.mimeType=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});Object.assign(Qe.prototype,{load:function(a,b,c,d){function e(e){l.load(a[e],function(a){a=g._parser(a,!0);h[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};f+=1;6===f&&(1===a.mipmapCount&&(k.minFilter=1006),k.format=a.format,k.needsUpdate=!0,b&&b(k))},c,d)}var f,g=this,h=[],k=new Nb;k.image=h;var l=new Ja(this.manager);l.setPath(this.path);l.setResponseType("arraybuffer");$/;"	r
6	js/three.min.js	/^d.setTexture2D(G.map||He,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);w.onAfterRender(a,p,U,void 0,G,void 0)}}c.enable(b.CULL_FACE);c.reset()}}}function Q(){Object.defineProperty(this,"id",{value:Lf++});this.uuid=R.generateUUID();this.name="";this.type="Material";this.lights=this.fog=!0;this.blending=1;this.side=0;this.flatShading=!1;this.vertexColors=0;this.opacity=1;this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=$/;"	r
6	js/three.min.js	/^function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new Ta,g=new Wc(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(td.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){var e=new Wc(this.manager);e.setCrossOrigin(this.crossOrigin);e.setPath(this.path);var f=new da;f.image=e.load(a,$/;"	r
60	script.js	/^var vfov     = 60;              \/* vertical field of view *\/$/;"	r
600	script.js	/^var width   = 600;$/;"	r
7	js/three.js	/^				faceType = setBit( faceType, 7, hasFaceVertexColor );$/;"	r
7	js/three.js	/^			7, 19, 17, 	7, 17, 6, 	7, 6, 15,$/;"	r
7	js/three.js	/^	var NotEqualDepth = 7;$/;"	r
7	js/three.min.js	/^7,7,4,0,4,1,5,2,6,3,7]);var c=new Float32Array(24),d=new C;d.setIndex(new O(a,1));d.addAttribute("position",new O(c,3));P.call(this,d,new T({color:b}));this.matrixAutoUpdate=!1;this.update()}function fd(a,b){this.type="Box3Helper";this.box=a;a=void 0!==b?b:16776960;b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var c=new C;c.setIndex(new O(b,1));c.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));P.call(this,c,new T({color:a}));this.geometry.computeBoundingSphere()}$/;"	r
8	js/three.js	/^			8, 0, 16, 	8, 16, 2, 	8, 2, 10,$/;"	r
8	js/three.js	/^			canvas.height = 8;$/;"	r
8	js/three.js	/^			canvas.width = 8;$/;"	r
8	js/three.js	/^		if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;$/;"	r
8	js/three.js	/^		this.maxMorphTargets = 8;$/;"	r
8	js/three.min.js	/^m=b.getUniformLocation(ga,"fogType");t=b.getUniformLocation(ga,"fogDensity");x=b.getUniformLocation(ga,"fogNear");y=b.getUniformLocation(ga,"fogFar");B=b.getUniformLocation(ga,"fogColor");b.getUniformLocation(ga,"fogDepth");I=b.getUniformLocation(ga,"alphaTest");N=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");N.width=8;N.height=8;na=N.getContext("2d");na.fillStyle="white";na.fillRect(0,0,8,8);He=new sc(N)}c.useProgram(ga);c.initAttributes();c.enableAttribute(A);c.enableAttribute(J);$/;"	r
90	js/three.js	/^		var fov = 90, aspect = 1;$/;"	r
ALPHA_MODES	js/GLTFLoader.js	/^	var ALPHA_MODES = {$/;"	r
Aa	js/three.min.js	/^!1;this.setValues(a)}function Aa(a){Q.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}";this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,$/;"	r
Aa	js/three.min.js	/^a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};Aa.prototype=Object.create(Q.prototype);Aa.prototype.constructor=Aa;Aa.prototype.isShaderMaterial=!0;Aa.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;$/;"	r
Ab	js/three.min.js	/^l);b("u1","u2",q);b("u2","u3",q);b("u3","u1",q);b("c","t",n);b("p","c",u);b("cn1","cn2",u);b("cn3","cn4",u);b("cf1","cf2",u);b("cf3","cf4",u);d.addAttribute("position",new z(f,3));d.addAttribute("color",new z(g,3));P.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=h;this.update()}function Ab(a,b){this.object=a;void 0===b&&(b=16776960);a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,$/;"	r
Ac	js/three.min.js	/^c+" "+d)}return b.join("\\n")}function Ac(a){return""!==a}function Me(a,b){return a.replace(\/NUM_DIR_LIGHTS\/g,b.numDirLights).replace(\/NUM_SPOT_LIGHTS\/g,b.numSpotLights).replace(\/NUM_RECT_AREA_LIGHTS\/g,b.numRectAreaLights).replace(\/NUM_POINT_LIGHTS\/g,b.numPointLights).replace(\/NUM_HEMI_LIGHTS\/g,b.numHemiLights)}function Sd(a){return a.replace(\/^[ \\t]*#include +<([\\w\\d.]+)>\/gm,function(a,c){a=V[c];if(void 0===a)throw Error("Can not resolve #include <"+c+">");return Sd(a)})}function Ne(a){return a.replace(\/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}\/g,$/;"	r
Ad	js/three.min.js	/^Ad;m.LightShadow=rb;m.Light=fa;m.StereoCamera=Ue;m.PerspectiveCamera=Y;m.OrthographicCamera=Gb;m.CubeCamera=$c;m.ArrayCamera=nd;m.Camera=Ka;m.AudioListener=fe;m.PositionalAudio=he;m.AudioContext=ge;m.AudioAnalyser=ie;m.Audio=ic;m.VectorKeyframeTrack=ec;m.StringKeyframeTrack=Fd;m.QuaternionKeyframeTrack=Yc;m.NumberKeyframeTrack=fc;m.ColorKeyframeTrack=Hd;m.BooleanKeyframeTrack=Gd;m.PropertyMixer=je;m.PropertyBinding=pa;m.KeyframeTrack=tb;m.AnimationUtils=S;m.AnimationObjectGroup=We;m.AnimationMixer=$/;"	r
AddEquation	js/three.js	/^		this.blendEquation = AddEquation;$/;"	r
AddEquation	js/three.js	/^	exports.AddEquation = AddEquation;$/;"	r
AddEquation	js/three.js	/^	var AddEquation = 100;$/;"	r
AddOperation	js/three.js	/^	exports.AddOperation = AddOperation;$/;"	r
AddOperation	js/three.js	/^	var AddOperation = 2;$/;"	r
AdditiveBlending	js/three.js	/^				AdditiveBlending: AdditiveBlending,$/;"	r
AdditiveBlending	js/three.js	/^	exports.AdditiveBlending = AdditiveBlending;$/;"	r
AdditiveBlending	js/three.js	/^	var AdditiveBlending = 2;$/;"	r
AlphaFormat	js/three.js	/^	exports.AlphaFormat = AlphaFormat;$/;"	r
AlphaFormat	js/three.js	/^	var AlphaFormat = 1021;$/;"	r
AlwaysDepth	js/three.js	/^	exports.AlwaysDepth = AlwaysDepth;$/;"	r
AlwaysDepth	js/three.js	/^	var AlwaysDepth = 1;$/;"	r
AmbientLight	js/three.js	/^	exports.AmbientLight = AmbientLight;$/;"	r
AmbientLight	js/three.js	/^	function AmbientLight( color, intensity ) {$/;"	r
AnimationAction	js/three.js	/^	function AnimationAction( mixer, clip, localRoot ) {$/;"	r
AnimationClip	js/three.js	/^	exports.AnimationClip = AnimationClip;$/;"	r
AnimationClip	js/three.js	/^	function AnimationClip( name, duration, tracks ) {$/;"	r
AnimationMixer	js/three.js	/^	exports.AnimationMixer = AnimationMixer;$/;"	r
AnimationMixer	js/three.js	/^	function AnimationMixer( root ) {$/;"	r
AnimationObjectGroup	js/three.js	/^	exports.AnimationObjectGroup = AnimationObjectGroup;$/;"	r
AnimationObjectGroup	js/three.js	/^	function AnimationObjectGroup() {$/;"	r
AnimationUtils	js/three.js	/^	exports.AnimationUtils = AnimationUtils;$/;"	r
AnimationUtils	js/three.js	/^	var AnimationUtils = {$/;"	r
ArcCurve	js/three.js	/^	ArcCurve.prototype.constructor = ArcCurve;$/;"	r
ArcCurve	js/three.js	/^	exports.ArcCurve = ArcCurve;$/;"	r
ArcCurve	js/three.js	/^	function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
Array	js/three.js	/^				bufferType = Array;$/;"	r
ArrayCamera	js/three.js	/^	exports.ArrayCamera = ArrayCamera;$/;"	r
ArrayCamera	js/three.js	/^	function ArrayCamera( array ) {$/;"	r
ArrayElement	js/three.js	/^				bindingType = this.BindingType.ArrayElement;$/;"	r
ArrayElement	js/three.js	/^			ArrayElement: 2,$/;"	r
ArrowHelper	js/three.js	/^	ArrowHelper.prototype.constructor = ArrowHelper;$/;"	r
ArrowHelper	js/three.js	/^	exports.ArrowHelper = ArrowHelper;$/;"	r
ArrowHelper	js/three.js	/^	function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {$/;"	r
Audio	js/three.js	/^	exports.Audio = Audio;$/;"	r
Audio	js/three.js	/^	function Audio( listener ) {$/;"	r
AudioAnalyser	js/three.js	/^	exports.AudioAnalyser = AudioAnalyser;$/;"	r
AudioAnalyser	js/three.js	/^	function AudioAnalyser( audio, fftSize ) {$/;"	r
AudioContext	js/three.js	/^	exports.AudioContext = AudioContext;$/;"	r
AudioContext	js/three.js	/^	var AudioContext = {$/;"	r
AudioListener	js/three.js	/^	exports.AudioListener = AudioListener;$/;"	r
AudioListener	js/three.js	/^	function AudioListener() {$/;"	r
AudioLoader	js/three.js	/^	exports.AudioLoader = AudioLoader;$/;"	r
AudioLoader	js/three.js	/^	function AudioLoader( manager ) {$/;"	r
AxesHelper	js/three.js	/^	AxesHelper.prototype.constructor = AxesHelper;$/;"	r
AxesHelper	js/three.js	/^	exports.AxesHelper = AxesHelper;$/;"	r
AxesHelper	js/three.js	/^	function AxesHelper( size ) {$/;"	r
AxisHelper	js/three.js	/^	exports.AxisHelper = AxisHelper;$/;"	r
AxisHelper	js/three.js	/^	function AxisHelper( size ) {$/;"	r
B	js/three.js	/^			var B = frames.binormals[ i ];$/;"	r
B	js/three.js	/^		var B = new Vector3();$/;"	r
B	js/three.min.js	/^(a.stencilMask(d),c=d)},setFunc:function(b,c,e){if(d!==b||g!==c||h!==e)a.stencilFunc(b,c,e),d=b,g=c,h=e},setOp:function(b,c,d){if(l!==b||k!==c||n!==d)a.stencilOp(b,c,d),l=b,k=c,n=d},setLocked:function(a){b=a},setClear:function(b){q!==b&&(a.clearStencil(b),q=b)},reset:function(){b=!1;q=n=k=l=h=g=d=c=null}}},m=a.getParameter(a.MAX_VERTEX_ATTRIBS),t=new Uint8Array(m),p=new Uint8Array(m),y=new Uint8Array(m),B={},I=null,A=null,J=null,ya=null,w=null,z=null,ga=null,D=null,E=null,M=!1,C=null,H=null,N=null,$/;"	r
B	js/three.min.js	/^5]);c.set(h[x+6],h[x+7],h[x+8]);e.set(k[y+0],k[y+1]);f.set(k[y+2],k[y+3]);m.set(k[y+4],k[y+5]);d.copy(a).add(b).add(c).divideScalar(3);var B=Math.atan2(d.z,-d.x);g(e,y+0,a,B);g(f,y+2,b,B);g(m,y+4,c,B)}for(a=0;a<k.length;a+=6)b=k[a+0],c=k[a+2],d=k[a+4],e=Math.min(b,c,d),.9<Math.max(b,c,d)&&.1>e&&(.2>b&&(k[a+0]+=1),.2>c&&(k[a+2]+=1),.2>d&&(k[a+4]+=1))})();this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(h.slice(),3));this.addAttribute("uv",new z(k,2));0===d?this.computeVertexNormals():$/;"	r
B	js/three.min.js	/^B,B));B=y.vertexColors;3===B.length?this.colors.push(B[0],B[1],B[2]):(B=y.color,this.colors.push(B,B,B));!0===e&&(B=d[0][l],void 0!==B?this.uvs.push(B[0],B[1],B[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new D,new D,new D)));!0===f&&(B=d[1][l],void 0!==B?this.uvs2.push(B[0],B[1],B[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new D,new D,new D)));for(B=0;B<h;B++){var I=g[B].vertices;k[B].push(I[y.a],$/;"	r
B	js/three.min.js	/^C=Math.sin(C);k.x=t*C;k.y=x*B;k.z=t*M;n.push(k.x,k.y,k.z);u.push(0,B,0);f.x=.5*M+.5;f.y=.5*C*B+.5;m.push(f.x,f.y);v++}for(e=0;e<d;e++)f=w+e,k=z+e,!0===c?q.push(k,k+1,f):q.push(k+1,k,f),r+=3;l.addGroup(y,r,!0===c?1:2);y+=r}C.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:1;b=void 0!==b?b:1;c=c||1;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:$/;"	r
B	js/three.min.js	/^P[N];Ha.isClockWise(U)&&(P[N]=U.reverse())}}var V=Ha.triangulateShape(a,P),X=a;N=0;for(M=P.length;N<M;N++)U=P[N],a=a.concat(U);var Z,Y=a.length,T,ca=V.length,B=[],G=0;var W=X.length;var ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),B[G]=d(X[G],X[ea],X[Z]);var A=[],da=B.concat();N=0;for(M=P.length;N<M;N++){U=P[N];var ba=[];G=0;W=U.length;ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),ba[G]=d(U[G],U[ea],U[Z]);A.push(ba);da=da.concat(ba)}for(ea=0;ea<x;ea++){W=ea\/x;var fa=$/;"	r
B	js/three.min.js	/^reset:function(){for(var b=0;b<p.length;b++)1===p[b]&&(a.disableVertexAttribArray(b),p[b]=0);B={};R=I=null;O={};H=C=J=A=null;n.reset();u.reset();r.reset()}}}function ng(a,b,c){function d(b){if("highp"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return"highp";b="mediump"}return"mediump"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,$/;"	r
BIN	js/GLTFLoader.js	/^	var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };$/;"	r
BINARY_EXTENSION_BUFFER_NAME	js/GLTFLoader.js	/^	var BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';$/;"	r
BINARY_EXTENSION_CHUNK_TYPES	js/GLTFLoader.js	/^	var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };$/;"	r
BINARY_EXTENSION_HEADER_LENGTH	js/GLTFLoader.js	/^	var BINARY_EXTENSION_HEADER_LENGTH = 12;$/;"	r
BINARY_EXTENSION_HEADER_MAGIC	js/GLTFLoader.js	/^	var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';$/;"	r
BLEND	js/GLTFLoader.js	/^		BLEND: 'BLEND'$/;"	r
BOOL	js/three.js	/^			case 0x1404: case 0x8b56: return setValue1i; \/\/ INT, BOOL$/;"	r
BOOL	js/three.js	/^			case 0x1404: case 0x8b56: return setValue1iv; \/\/ INT, BOOL$/;"	r
BYTE	js/three.js	/^				type = gl.BYTE;$/;"	r
BYTES_PER_ELEMENT	js/GLTFLoader.js	/^				var elementBytes = TypedArray.BYTES_PER_ELEMENT;$/;"	r
Ba	js/three.min.js	/^this.material)).copy(this)}});P.prototype=Object.assign(Object.create(oa.prototype),{constructor:P,isLineSegments:!0});rd.prototype=Object.assign(Object.create(oa.prototype),{constructor:rd,isLineLoop:!0});Ba.prototype=Object.create(Q.prototype);Ba.prototype.constructor=Ba;Ba.prototype.isPointsMaterial=!0;Ba.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};Mb.prototype=Object.assign(Object.create(w.prototype),$/;"	r
BackSide	js/three.js	/^							json.side = BackSide;$/;"	r
BackSide	js/three.js	/^				flipSided: material.side === BackSide,$/;"	r
BackSide	js/three.js	/^				if ( side === FrontSide ) side = BackSide;$/;"	r
BackSide	js/three.js	/^	exports.BackSide = BackSide;$/;"	r
BackSide	js/three.js	/^	var BackSide = 1;$/;"	r
BasicDepthPacking	js/three.js	/^		this.depthPacking = BasicDepthPacking;$/;"	r
BasicDepthPacking	js/three.js	/^	exports.BasicDepthPacking = BasicDepthPacking;$/;"	r
BasicDepthPacking	js/three.js	/^	var BasicDepthPacking = 3200;$/;"	r
BasicShadowMap	js/three.js	/^	exports.BasicShadowMap = BasicShadowMap;$/;"	r
BasicShadowMap	js/three.js	/^	var BasicShadowMap = 0;$/;"	r
Bc	js/three.min.js	/^this.color=new H(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)}function Bc(a){w.call(this);this.type="Sprite";this.material=void 0!==a?a:new Ya}function Cc(){w.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Dc(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),$/;"	r
Be	js/three.min.js	/^Be,d)}function uf(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTextureCube(b||Ce,d)}function De(a,b){a.uniform2iv(this.addr,b)}function Ee(a,b){a.uniform3iv(this.addr,b)}function Fe(a,b){a.uniform4iv(this.addr,b)}function vf(a){switch(a){case 5126:return lf;case 35664:return nf;case 35665:return of;case 35666:return pf;case 35674:return qf;case 35675:return rf;case 35676:return sf;case 35678:case 36198:return tf;case 35680:return uf;case 5124:case 35670:return mf;case 35667:case 35671:return De;$/;"	r
BinaryTextureLoader	js/three.js	/^	exports.BinaryTextureLoader = BinaryTextureLoader;$/;"	r
BinaryTextureLoader	js/three.js	/^	function BinaryTextureLoader( manager ) {$/;"	r
BindingType	js/three.js	/^		BindingType: {$/;"	r
BindingType	js/three.min.js	/^_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=$/;"	r
BlendingMode	js/three.js	/^			var BlendingMode = {$/;"	r
Bone	js/three.js	/^	exports.Bone = Bone;$/;"	r
Bone	js/three.js	/^	function Bone() {$/;"	r
BooleanKeyframeTrack	js/three.js	/^	exports.BooleanKeyframeTrack = BooleanKeyframeTrack;$/;"	r
BooleanKeyframeTrack	js/three.js	/^	function BooleanKeyframeTrack( name, times, values ) {$/;"	r
BoundingBoxHelper	js/three.js	/^	exports.BoundingBoxHelper = BoundingBoxHelper;$/;"	r
BoundingBoxHelper	js/three.js	/^	function BoundingBoxHelper( object, color ) {$/;"	r
Box2	js/three.js	/^	exports.Box2 = Box2;$/;"	r
Box2	js/three.js	/^	function Box2( min, max ) {$/;"	r
Box3	js/three.js	/^	exports.Box3 = Box3;$/;"	r
Box3	js/three.js	/^	function Box3( min, max ) {$/;"	r
Box3Helper	js/three.js	/^	Box3Helper.prototype.constructor = Box3Helper;$/;"	r
Box3Helper	js/three.js	/^	exports.Box3Helper = Box3Helper;$/;"	r
Box3Helper	js/three.js	/^	function Box3Helper( box, hex ) {$/;"	r
BoxBufferGeometry	js/three.js	/^		BoxBufferGeometry: BoxBufferGeometry$/;"	r
BoxBufferGeometry	js/three.js	/^	BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;$/;"	r
BoxBufferGeometry	js/three.js	/^	exports.BoxBufferGeometry = BoxBufferGeometry;$/;"	r
BoxBufferGeometry	js/three.js	/^	function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {$/;"	r
BoxGeometry	js/three.js	/^		BoxGeometry: BoxGeometry,$/;"	r
BoxGeometry	js/three.js	/^	BoxGeometry.prototype.constructor = BoxGeometry;$/;"	r
BoxGeometry	js/three.js	/^	exports.BoxGeometry = BoxGeometry;$/;"	r
BoxGeometry	js/three.js	/^	exports.CubeGeometry = BoxGeometry;$/;"	r
BoxGeometry	js/three.js	/^	function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {$/;"	r
BoxHelper	js/three.js	/^	BoxHelper.prototype.constructor = BoxHelper;$/;"	r
BoxHelper	js/three.js	/^	exports.BoxHelper = BoxHelper;$/;"	r
BoxHelper	js/three.js	/^	function BoxHelper( object, color ) {$/;"	r
BufferAttribute	js/three.js	/^	exports.BufferAttribute = BufferAttribute;$/;"	r
BufferAttribute	js/three.js	/^	function BufferAttribute( array, itemSize, normalized ) {$/;"	r
BufferGeometry	js/three.js	/^	exports.BufferGeometry = BufferGeometry;$/;"	r
BufferGeometry	js/three.js	/^	function BufferGeometry() {$/;"	r
BufferGeometryLoader	js/three.js	/^	exports.BufferGeometryLoader = BufferGeometryLoader;$/;"	r
BufferGeometryLoader	js/three.js	/^	function BufferGeometryLoader( manager ) {$/;"	r
ByteType	js/three.js	/^	exports.ByteType = ByteType;$/;"	r
ByteType	js/three.js	/^	var ByteType = 1010;$/;"	r
C	js/three.min.js	/^1]=[];for(f=0;4>f;f++){var A=h[r++];var C=z[2*A];A=z[2*A+1];C=new D(C,A);2!==f&&c.faceVertexUvs[e][t].push(C);0!==f&&c.faceVertexUvs[e][t+1].push(C)}}x&&(x=3*h[r++],v.normal.set(l[x++],l[x++],l[x]),w.normal.copy(v.normal));if(y)for(e=0;4>e;e++)x=3*h[r++],y=new p(l[x++],l[x++],l[x]),2!==e&&v.vertexNormals.push(y),0!==e&&w.vertexNormals.push(y);n&&(n=h[r++],n=m[n],v.color.setHex(n),w.color.setHex(n));if(k)for(e=0;4>e;e++)n=h[r++],n=m[n],2!==e&&v.vertexColors.push(new H(n)),0!==e&&w.vertexColors.push(new H(n));$/;"	r
C	js/three.min.js	/^C=Math.sin(C);k.x=t*C;k.y=x*B;k.z=t*M;n.push(k.x,k.y,k.z);u.push(0,B,0);f.x=.5*M+.5;f.y=.5*C*B+.5;m.push(f.x,f.y);v++}for(e=0;e<d;e++)f=w+e,k=z+e,!0===c?q.push(k,k+1,f):q.push(k+1,k,f),r+=3;l.addGroup(y,r,!0===c?1:2);y+=r}C.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:1;b=void 0!==b?b:1;c=c||1;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:$/;"	r
C	js/three.min.js	/^C=g;E=h;U=k}if(w=b(this,w,u,e,C,E,U,x))I&&I[H]&&(K=I[H],m.copy(K[0]),r.copy(K[1]),v.copy(K[2]),w.uv=a(x,C,E,U,m,r,v)),w.face=N,w.faceIndex=H,p.push(w)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});var ig=0;Y.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Y,isPerspectiveCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,a,b);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;$/;"	r
CATMULLROMSPLINE	js/GLTFLoader.js	/^		CATMULLROMSPLINE: THREE.InterpolateSmooth,$/;"	r
COLOR_BUFFER_BIT	js/three.js	/^			if ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;$/;"	r
CUBICSPLINE	js/GLTFLoader.js	/^		CUBICSPLINE: THREE.InterpolateSmooth,$/;"	r
Cache	js/three.js	/^	exports.Cache = Cache;$/;"	r
Cache	js/three.js	/^	var Cache = {$/;"	r
Camera	js/three.js	/^	exports.Camera = Camera;$/;"	r
Camera	js/three.js	/^	function Camera() {$/;"	r
CameraHelper	js/three.js	/^	CameraHelper.prototype.constructor = CameraHelper;$/;"	r
CameraHelper	js/three.js	/^	exports.CameraHelper = CameraHelper;$/;"	r
CameraHelper	js/three.js	/^	function CameraHelper( camera ) {$/;"	r
CanvasRenderer	js/three.js	/^	exports.CanvasRenderer = CanvasRenderer;$/;"	r
CanvasRenderer	js/three.js	/^	function CanvasRenderer() {$/;"	r
CanvasTexture	js/three.js	/^	CanvasTexture.prototype.constructor = CanvasTexture;$/;"	r
CanvasTexture	js/three.js	/^	exports.CanvasTexture = CanvasTexture;$/;"	r
CanvasTexture	js/three.js	/^	function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {$/;"	r
CatmullRom	js/three.js	/^	function CatmullRom( t, p0, p1, p2, p3 ) {$/;"	r
CatmullRomCurve3	js/three.js	/^	CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;$/;"	r
CatmullRomCurve3	js/three.js	/^	exports.CatmullRomCurve3 = CatmullRomCurve3;$/;"	r
CatmullRomCurve3	js/three.js	/^	function CatmullRomCurve3( points ) {$/;"	r
CineonToneMapping	js/three.js	/^	exports.CineonToneMapping = CineonToneMapping;$/;"	r
CineonToneMapping	js/three.js	/^	var CineonToneMapping = 4;$/;"	r
CircleBufferGeometry	js/three.js	/^		CircleBufferGeometry: CircleBufferGeometry,$/;"	r
CircleBufferGeometry	js/three.js	/^	CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;$/;"	r
CircleBufferGeometry	js/three.js	/^	exports.CircleBufferGeometry = CircleBufferGeometry;$/;"	r
CircleBufferGeometry	js/three.js	/^	function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {$/;"	r
CircleGeometry	js/three.js	/^		CircleGeometry: CircleGeometry,$/;"	r
CircleGeometry	js/three.js	/^	CircleGeometry.prototype.constructor = CircleGeometry;$/;"	r
CircleGeometry	js/three.js	/^	exports.CircleGeometry = CircleGeometry;$/;"	r
CircleGeometry	js/three.js	/^	function CircleGeometry( radius, segments, thetaStart, thetaLength ) {$/;"	r
ClampToEdgeWrapping	js/three.js	/^		ClampToEdgeWrapping: ClampToEdgeWrapping,$/;"	r
ClampToEdgeWrapping	js/three.js	/^	exports.ClampToEdgeWrapping = ClampToEdgeWrapping;$/;"	r
ClampToEdgeWrapping	js/three.js	/^	var ClampToEdgeWrapping = 1001;$/;"	r
Clock	js/three.js	/^	exports.Clock = Clock;$/;"	r
Clock	js/three.js	/^	function Clock( autoStart ) {$/;"	r
ClosedSplineCurve3	js/three.js	/^	exports.ClosedSplineCurve3 = ClosedSplineCurve3;$/;"	r
ClosedSplineCurve3	js/three.js	/^	function ClosedSplineCurve3( points ) {$/;"	r
Color	js/three.js	/^	exports.Color = Color;$/;"	r
Color	js/three.js	/^	function Color( r, g, b ) {$/;"	r
ColorBuffer	js/three.js	/^		function ColorBuffer() {$/;"	r
ColorKeyframeTrack	js/three.js	/^	exports.ColorKeyframeTrack = ColorKeyframeTrack;$/;"	r
ColorKeyframeTrack	js/three.js	/^	function ColorKeyframeTrack( name, times, values, interpolation ) {$/;"	r
ColorKeywords	js/three.js	/^	var ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,$/;"	r
Composite	js/three.js	/^		Composite: Composite,$/;"	r
Composite	js/three.js	/^	function Composite( targetGroup, path, optionalParsedPath ) {$/;"	r
CompressedTexture	js/three.js	/^	CompressedTexture.prototype.constructor = CompressedTexture;$/;"	r
CompressedTexture	js/three.js	/^	exports.CompressedTexture = CompressedTexture;$/;"	r
CompressedTexture	js/three.js	/^	function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {$/;"	r
CompressedTextureLoader	js/three.js	/^	exports.CompressedTextureLoader = CompressedTextureLoader;$/;"	r
CompressedTextureLoader	js/three.js	/^	function CompressedTextureLoader( manager ) {$/;"	r
ConeBufferGeometry	js/three.js	/^		ConeBufferGeometry: ConeBufferGeometry,$/;"	r
ConeBufferGeometry	js/three.js	/^	ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;$/;"	r
ConeBufferGeometry	js/three.js	/^	exports.ConeBufferGeometry = ConeBufferGeometry;$/;"	r
ConeBufferGeometry	js/three.js	/^	function ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
ConeGeometry	js/three.js	/^		ConeGeometry: ConeGeometry,$/;"	r
ConeGeometry	js/three.js	/^	ConeGeometry.prototype.constructor = ConeGeometry;$/;"	r
ConeGeometry	js/three.js	/^	exports.ConeGeometry = ConeGeometry;$/;"	r
ConeGeometry	js/three.js	/^	function ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
CreateClipsFromMorphTargetSequences	js/three.js	/^		CreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {$/;"	r
CreateFromMorphTargetSequence	js/three.js	/^		CreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {$/;"	r
CubeCamera	js/three.js	/^	CubeCamera.prototype.constructor = CubeCamera;$/;"	r
CubeCamera	js/three.js	/^	exports.CubeCamera = CubeCamera;$/;"	r
CubeCamera	js/three.js	/^	function CubeCamera( near, far, cubeResolution ) {$/;"	r
CubeGeometry	js/three.js	/^	exports.CubeGeometry = BoxGeometry;$/;"	r
CubeReflectionMapping	js/three.js	/^		CubeReflectionMapping: CubeReflectionMapping,$/;"	r
CubeReflectionMapping	js/three.js	/^	exports.CubeReflectionMapping = CubeReflectionMapping;$/;"	r
CubeReflectionMapping	js/three.js	/^	var CubeReflectionMapping = 301;$/;"	r
CubeReflectionMapping	js/three.min.js	/^b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var h=b.children,k=0;k<h.length;k++)g.add(this.parseObject(h[k],c,d));if("LOD"===b.type)for(b=b.levels,h=0;h<b.length;h++){var k=b[h],l=g.getObjectByProperty("uuid",k.object);void 0!==l&&g.addLevel(l,k.distance)}return g}}()});var ug={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,$/;"	r
CubeRefractionMapping	js/three.js	/^		CubeRefractionMapping: CubeRefractionMapping,$/;"	r
CubeRefractionMapping	js/three.js	/^	exports.CubeRefractionMapping = CubeRefractionMapping;$/;"	r
CubeRefractionMapping	js/three.js	/^	var CubeRefractionMapping = 302;$/;"	r
CubeTexture	js/three.js	/^	CubeTexture.prototype.constructor = CubeTexture;$/;"	r
CubeTexture	js/three.js	/^	exports.CubeTexture = CubeTexture;$/;"	r
CubeTexture	js/three.js	/^	function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {$/;"	r
CubeTextureLoader	js/three.js	/^	exports.CubeTextureLoader = CubeTextureLoader;$/;"	r
CubeTextureLoader	js/three.js	/^	function CubeTextureLoader( manager ) {$/;"	r
CubeUVReflectionMapping	js/three.js	/^		CubeUVReflectionMapping: CubeUVReflectionMapping,$/;"	r
CubeUVReflectionMapping	js/three.js	/^	exports.CubeUVReflectionMapping = CubeUVReflectionMapping;$/;"	r
CubeUVReflectionMapping	js/three.js	/^	var CubeUVReflectionMapping = 306;$/;"	r
CubeUVReflectionMapping	js/three.min.js	/^CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},hf={RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},jf={NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008};Object.assign(ca.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(a,b){a=this.getUtoTmapping(a);return this.getPoint(a,b)},getPoints:function(a){void 0===$/;"	r
CubeUVRefractionMapping	js/three.js	/^		CubeUVRefractionMapping: CubeUVRefractionMapping$/;"	r
CubeUVRefractionMapping	js/three.js	/^	exports.CubeUVRefractionMapping = CubeUVRefractionMapping;$/;"	r
CubeUVRefractionMapping	js/three.js	/^	var CubeUVRefractionMapping = 307;$/;"	r
CubicBezier	js/three.js	/^	function CubicBezier( t, p0, p1, p2, p3 ) {$/;"	r
CubicBezierCurve	js/three.js	/^	CubicBezierCurve.prototype.constructor = CubicBezierCurve;$/;"	r
CubicBezierCurve	js/three.js	/^	exports.CubicBezierCurve = CubicBezierCurve;$/;"	r
CubicBezierCurve	js/three.js	/^	function CubicBezierCurve( v0, v1, v2, v3 ) {$/;"	r
CubicBezierCurve3	js/three.js	/^	CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;$/;"	r
CubicBezierCurve3	js/three.js	/^	exports.CubicBezierCurve3 = CubicBezierCurve3;$/;"	r
CubicBezierCurve3	js/three.js	/^	function CubicBezierCurve3( v0, v1, v2, v3 ) {$/;"	r
CubicBezierP0	js/three.js	/^	function CubicBezierP0( t, p ) {$/;"	r
CubicBezierP1	js/three.js	/^	function CubicBezierP1( t, p ) {$/;"	r
CubicBezierP2	js/three.js	/^	function CubicBezierP2( t, p ) {$/;"	r
CubicBezierP3	js/three.js	/^	function CubicBezierP3( t, p ) {$/;"	r
CubicInterpolant	js/three.js	/^	exports.CubicInterpolant = CubicInterpolant;$/;"	r
CubicInterpolant	js/three.js	/^	function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
CubicPoly	js/three.js	/^	function CubicPoly() {$/;"	r
CullFaceBack	js/three.js	/^	exports.CullFaceBack = CullFaceBack;$/;"	r
CullFaceBack	js/three.js	/^	var CullFaceBack = 1;$/;"	r
CullFaceFront	js/three.js	/^	exports.CullFaceFront = CullFaceFront;$/;"	r
CullFaceFront	js/three.js	/^	var CullFaceFront = 2;$/;"	r
CullFaceFrontBack	js/three.js	/^	exports.CullFaceFrontBack = CullFaceFrontBack;$/;"	r
CullFaceFrontBack	js/three.js	/^	var CullFaceFrontBack = 3;$/;"	r
CullFaceNone	js/three.js	/^	exports.CullFaceNone = CullFaceNone;$/;"	r
CullFaceNone	js/three.js	/^	var CullFaceNone = 0;$/;"	r
Curve	js/three.js	/^	exports.Curve = Curve;$/;"	r
Curve	js/three.js	/^	function Curve() {$/;"	r
CurvePath	js/three.js	/^	exports.CurvePath = CurvePath;$/;"	r
CurvePath	js/three.js	/^	function CurvePath() {$/;"	r
CustomBlending	js/three.js	/^				CustomBlending: CustomBlending$/;"	r
CustomBlending	js/three.js	/^	exports.CustomBlending = CustomBlending;$/;"	r
CustomBlending	js/three.js	/^	var CustomBlending = 5;$/;"	r
CylinderBufferGeometry	js/three.js	/^		CylinderBufferGeometry: CylinderBufferGeometry,$/;"	r
CylinderBufferGeometry	js/three.js	/^	CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;$/;"	r
CylinderBufferGeometry	js/three.js	/^	exports.CylinderBufferGeometry = CylinderBufferGeometry;$/;"	r
CylinderBufferGeometry	js/three.js	/^	function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
CylinderGeometry	js/three.js	/^		CylinderGeometry: CylinderGeometry,$/;"	r
CylinderGeometry	js/three.js	/^	CylinderGeometry.prototype.constructor = CylinderGeometry;$/;"	r
CylinderGeometry	js/three.js	/^	exports.CylinderGeometry = CylinderGeometry;$/;"	r
CylinderGeometry	js/three.js	/^	function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
Cylindrical	js/three.js	/^	exports.Cylindrical = Cylindrical;$/;"	r
Cylindrical	js/three.js	/^	function Cylindrical( radius, theta, y ) {$/;"	r
D	js/three.js	/^				\/\/ Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,$/;"	r
D	js/three.min.js	/^a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA))}E=D=ga=z=w=ya=null}else{l=l||d;k=k||g;n=n||h;if(d!==ya||l!==ga)a.blendEquationSeparate(c.convert(d),c.convert(l)),ya=d,ga=l;if(g!==w||h!==z||k!==D||n!==E)a.blendFuncSeparate(c.convert(g),c.convert(h),c.convert(k),c.convert(n)),w=g,z=h,D=k,E=n}J=b;M=q}function h(b){C!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),C=b)}$/;"	r
DEFAULT_IMAGE	js/three.js	/^	Texture.DEFAULT_IMAGE = undefined;$/;"	r
DEFAULT_MAPPING	js/three.js	/^	Texture.DEFAULT_MAPPING = UVMapping;$/;"	r
DEG2RAD	js/three.js	/^		DEG2RAD: Math.PI \/ 180,$/;"	r
DEPTH_BUFFER_BIT	js/three.js	/^			if ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;$/;"	r
DEPTH_COMPONENT	js/three.js	/^				var internalFormat = _gl.DEPTH_COMPONENT;$/;"	r
DEPTH_COMPONENT16	js/three.js	/^					internalFormat = _gl.DEPTH_COMPONENT16;$/;"	r
DEPTH_COMPONENT32F	js/three.js	/^					internalFormat = _gl.DEPTH_COMPONENT32F;$/;"	r
DEPTH_STENCIL	js/three.js	/^					internalFormat = _gl.DEPTH_STENCIL;$/;"	r
Da	js/three.min.js	/^0;c<b.material.length;c++)n(b.material[c],a.fog,b);else n(b.material,a.fog,b)})};var Da=!1,Ba=null;this.animate=function(a){Ba=a;Da||((la.getDevice()||window).requestAnimationFrame(h),Da=!0)};this.render=function(a,b,c,d){if(!b||!b.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!H){L="";U=-1;O=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();la.enabled&&(b=la.getCamera(b));md.multiplyMatrices(b.projectionMatrix,$/;"	r
Da	js/three.min.js	/^Da;m.Ray=hb;m.Matrix4=K;m.Matrix3=ta;m.Box3=Na;m.Box2=kd;m.Line3=Ib;m.Euler=Xa;m.Vector4=ba;m.Vector3=p;m.Vector2=D;m.Quaternion=X;m.Color=H;m.ImmediateRenderObject=ad;m.VertexNormalsHelper=bd;m.SpotLightHelper=kc;m.SkeletonHelper=lc;m.PointLightHelper=mc;m.RectAreaLightHelper=nc;m.HemisphereLightHelper=oc;m.GridHelper=cd;m.PolarGridHelper=Kd;m.FaceNormalsHelper=dd;m.DirectionalLightHelper=pc;m.CameraHelper=ed;m.BoxHelper=Ab;m.Box3Helper=fd;m.PlaneHelper=gd;m.ArrowHelper=Bb;m.AxesHelper=hd;m.CatmullRomCurve3=$/;"	r
Da	js/three.min.js	/^a?a:new p(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new p(-Infinity,-Infinity,-Infinity)}function Da(a,b){this.center=void 0!==a?a:new p;this.radius=void 0!==b?b:0}function za(a,b){this.normal=void 0!==a?a:new p(1,0,0);this.constant=void 0!==b?b:0}function ld(a,b,c,d,e,f){this.planes=[void 0!==a?a:new za,void 0!==b?b:new za,void 0!==c?c:new za,void 0!==d?d:new za,void 0!==e?e:new za,void 0!==f?f:new za]}function Ie(a,b,c){function d(b,c,d,e,f,g){var h=b.geometry;var k=n;var l=b.customDepthMaterial;$/;"	r
DataTexture	js/three.js	/^	DataTexture.prototype.constructor = DataTexture;$/;"	r
DataTexture	js/three.js	/^	exports.DataTexture = DataTexture;$/;"	r
DataTexture	js/three.js	/^	function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {$/;"	r
DataTextureLoader	js/three.js	/^	exports.DataTextureLoader = DataTextureLoader;$/;"	r
DataTextureLoader	js/three.js	/^	function DataTextureLoader( manager ) {$/;"	r
DdE1xQ	js/three.js	/^				var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );$/;"	r
DdN	js/three.js	/^					DdN = - DdN;$/;"	r
DdN	js/three.js	/^				var DdN = this.direction.dot( normal );$/;"	r
DdQxE2	js/three.js	/^				var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );$/;"	r
DefaultInterpolation	js/three.js	/^		DefaultInterpolation: InterpolateDiscrete,$/;"	r
DefaultInterpolation	js/three.js	/^		DefaultInterpolation: InterpolateLinear,$/;"	r
DefaultInterpolation	js/three.min.js	/^Fd.prototype=Object.assign(Object.create(ab),{constructor:Fd,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Gd.prototype=Object.assign(Object.create(ab),{constructor:Gd,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Hd.prototype=Object.assign(Object.create(ab),{constructor:Hd,ValueTypeName:"color"});$/;"	r
DefaultInterpolation	js/three.min.js	/^interpolate_:function(a){return this.copySampleValue_(a-1)}});var ab={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(a){return new Dd(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new Xc(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new Cd(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){switch(a){case 2300:var b=$/;"	r
DefaultInterpolation	js/three.min.js	/^interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)\/(d-b);for(c=a+g;a!==c;a+=4)X.slerpFlat(e,0,f,a-g,f,a,b);return e}});Yc.prototype=Object.assign(Object.create(ab),{constructor:Yc,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(a){return new Ed(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});fc.prototype=Object.assign(Object.create(ab),{constructor:fc,ValueTypeName:"number"});$/;"	r
DefaultLoadingManager	js/three.js	/^	exports.DefaultLoadingManager = DefaultLoadingManager;$/;"	r
DefaultLoadingManager	js/three.js	/^	var DefaultLoadingManager = new LoadingManager();$/;"	r
DefaultMatrixAutoUpdate	js/three.js	/^		this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;$/;"	r
DefaultMatrixAutoUpdate	js/three.js	/^	Object3D.DefaultMatrixAutoUpdate = true;$/;"	r
DefaultOrder	js/three.js	/^	Euler.DefaultOrder = 'XYZ';$/;"	r
DefaultOrder	js/three.min.js	/^Xa.DefaultOrder="XYZ";Object.defineProperties(Xa.prototype,{x:{get:function(){return this._x},set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},order:{get:function(){return this._order},set:function(a){this._order=a;this.onChangeCallback()}}});Object.assign(Xa.prototype,{isEuler:!0,set:function(a,b,c,d){this._x=a;this._y=b;this._z=$/;"	r
DefaultSettings_	js/three.js	/^		DefaultSettings_: {$/;"	r
DefaultSettings_	js/three.js	/^		DefaultSettings_: {},$/;"	r
DefaultSettings_	js/three.min.js	/^a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,$/;"	r
DefaultSettings_	js/three.min.js	/^d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(xa.prototype,{beforeStart_:xa.prototype.copySampleValue_,afterEnd_:xa.prototype.copySampleValue_});Cd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Cd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=$/;"	r
DefaultUp	js/three.js	/^	Object3D.DefaultUp = new Vector3( 0, 1, 0 );$/;"	r
DepthBuffer	js/three.js	/^		function DepthBuffer() {$/;"	r
DepthFormat	js/three.js	/^	exports.DepthFormat = DepthFormat;$/;"	r
DepthFormat	js/three.js	/^	var DepthFormat = 1026;$/;"	r
DepthStencilFormat	js/three.js	/^	exports.DepthStencilFormat = DepthStencilFormat;$/;"	r
DepthStencilFormat	js/three.js	/^	var DepthStencilFormat = 1027;$/;"	r
DepthTexture	js/three.js	/^	DepthTexture.prototype.constructor = DepthTexture;$/;"	r
DepthTexture	js/three.js	/^	exports.DepthTexture = DepthTexture;$/;"	r
DepthTexture	js/three.js	/^	function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {$/;"	r
Direct	js/three.js	/^			Direct: 0,$/;"	r
Direct	js/three.js	/^			var bindingType = this.BindingType.Direct;$/;"	r
Direct	js/three.min.js	/^a);c=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(c=0;c<this.node.geometry.morphAttributes.position.length;c++)if(a.geometry.morphAttributes.position[c].name===$/;"	r
DirectGeometry	js/three.js	/^	function DirectGeometry() {$/;"	r
DirectionalLight	js/three.js	/^	exports.DirectionalLight = DirectionalLight;$/;"	r
DirectionalLight	js/three.js	/^	function DirectionalLight( color, intensity ) {$/;"	r
DirectionalLightHelper	js/three.js	/^	DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;$/;"	r
DirectionalLightHelper	js/three.js	/^	exports.DirectionalLightHelper = DirectionalLightHelper;$/;"	r
DirectionalLightHelper	js/three.js	/^	function DirectionalLightHelper( light, size, color ) {$/;"	r
DirectionalLightShadow	js/three.js	/^	exports.DirectionalLightShadow = DirectionalLightShadow;$/;"	r
DirectionalLightShadow	js/three.js	/^	function DirectionalLightShadow( ) {$/;"	r
DiscreteInterpolant	js/three.js	/^	exports.DiscreteInterpolant = DiscreteInterpolant;$/;"	r
DiscreteInterpolant	js/three.js	/^	function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
DodecahedronBufferGeometry	js/three.js	/^		DodecahedronBufferGeometry: DodecahedronBufferGeometry,$/;"	r
DodecahedronBufferGeometry	js/three.js	/^	DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;$/;"	r
DodecahedronBufferGeometry	js/three.js	/^	exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;$/;"	r
DodecahedronBufferGeometry	js/three.js	/^	function DodecahedronBufferGeometry( radius, detail ) {$/;"	r
DodecahedronGeometry	js/three.js	/^		DodecahedronGeometry: DodecahedronGeometry,$/;"	r
DodecahedronGeometry	js/three.js	/^	DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;$/;"	r
DodecahedronGeometry	js/three.js	/^	exports.DodecahedronGeometry = DodecahedronGeometry;$/;"	r
DodecahedronGeometry	js/three.js	/^	function DodecahedronGeometry( radius, detail ) {$/;"	r
DoubleSide	js/GLTFLoader.js	/^				materialParams.side = THREE.DoubleSide;$/;"	r
DoubleSide	js/three.js	/^							json.side = DoubleSide;$/;"	r
DoubleSide	js/three.js	/^				doubleSided: material.side === DoubleSide,$/;"	r
DoubleSide	js/three.js	/^			material.side === DoubleSide$/;"	r
DoubleSide	js/three.js	/^	exports.DoubleSide = DoubleSide;$/;"	r
DoubleSide	js/three.js	/^	var DoubleSide = 2;$/;"	r
DstAlphaFactor	js/three.js	/^	exports.DstAlphaFactor = DstAlphaFactor;$/;"	r
DstAlphaFactor	js/three.js	/^	var DstAlphaFactor = 206;$/;"	r
DstColorFactor	js/three.js	/^	exports.DstColorFactor = DstColorFactor;$/;"	r
DstColorFactor	js/three.js	/^	var DstColorFactor = 208;$/;"	r
DynamicBufferAttribute	js/three.js	/^	exports.DynamicBufferAttribute = DynamicBufferAttribute;$/;"	r
DynamicBufferAttribute	js/three.js	/^	function DynamicBufferAttribute( array, itemSize ) {$/;"	r
E	js/three.min.js	/^0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},toJSON:function(){return this.getHex()}});var E={common:{diffuse:{value:new H(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ta},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},$/;"	r
E2	js/three.js	/^				\/\/ E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by$/;"	r
EPS	js/three.js	/^			var EPS = 0.000001;$/;"	r
EPS	js/three.js	/^		var EPS = 0.00001;$/;"	r
EPSILON	js/three.js	/^		Number.EPSILON = Math.pow( 2, - 52 );$/;"	r
EXTENSIONS	js/GLTFLoader.js	/^	var EXTENSIONS = {$/;"	r
Ea	js/three.min.js	/^Ea={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}},V={alphamap_fragment:"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n",$/;"	r
Eb	js/three.min.js	/^a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Eb.prototype=Object.create(Db.prototype);Eb.prototype.constructor=Eb;Eb.prototype.isWebGLRenderTargetCube=!0;bb.prototype=Object.create(da.prototype);bb.prototype.constructor=bb;bb.prototype.isDataTexture=!0;Ta.prototype=Object.create(da.prototype);Ta.prototype.constructor=$/;"	r
Eb	js/three.min.js	/^b){console.warn("THREE.CubeCamera: .updateCubeMap() is now .update().");return this.update(a,b)};m.WebGLRenderTargetCube=Eb;m.WebGLRenderTarget=Db;m.WebGLRenderer=Wd;m.ShaderLib=ib;m.UniformsLib=E;m.UniformsUtils=Ea;m.ShaderChunk=V;m.FogExp2=Kb;m.Fog=Lb;m.Scene=od;m.LensFlare=Xd;m.Sprite=Bc;m.LOD=Cc;m.SkinnedMesh=qd;m.Skeleton=Dc;m.Bone=pd;m.Mesh=qa;m.LineSegments=P;m.LineLoop=rd;m.Line=oa;m.Points=Mb;m.Group=Ec;m.VideoTexture=sd;m.DataTexture=bb;m.CompressedTexture=Nb;m.CubeTexture=Ta;m.CanvasTexture=$/;"	r
Eb	js/three.min.js	/^b,c){this.uuid=R.generateUUID();this.width=a;this.height=b;this.scissor=new ba(0,0,a,b);this.scissorTest=!1;this.viewport=new ba(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=1006);this.texture=new da(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function Eb(a,b,c){Db.call(this,$/;"	r
EdgesGeometry	js/three.js	/^		EdgesGeometry: EdgesGeometry,$/;"	r
EdgesGeometry	js/three.js	/^	EdgesGeometry.prototype.constructor = EdgesGeometry;$/;"	r
EdgesGeometry	js/three.js	/^	exports.EdgesGeometry = EdgesGeometry;$/;"	r
EdgesGeometry	js/three.js	/^	function EdgesGeometry( geometry, thresholdAngle ) {$/;"	r
EdgesHelper	js/three.js	/^	exports.EdgesHelper = EdgesHelper;$/;"	r
EdgesHelper	js/three.js	/^	function EdgesHelper( object, hex ) {$/;"	r
Ef	js/three.min.js	/^!1,Fb(b,this.size,16))}function Ef(a,b,c){var d=b.length,e=xe(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTexture2D(b[a]||Be,e[a])}function Ff(a,b,c){var d=b.length,e=xe(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTextureCube(b[a]||Ce,e[a])}function Gf(a){switch(a){case 5126:return wf;case 35664:return yf;case 35665:return zf;case 35666:return Af;case 35674:return Bf;case 35675:return Cf;case 35676:return Df;case 35678:return Ef;case 35680:return Ff;case 5124:case 35670:return xf;$/;"	r
EllipseCurve	js/three.js	/^	EllipseCurve.prototype.constructor = EllipseCurve;$/;"	r
EllipseCurve	js/three.js	/^	exports.EllipseCurve = EllipseCurve;$/;"	r
EllipseCurve	js/three.js	/^	function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {$/;"	r
EntireArray	js/three.js	/^				bindingType = this.BindingType.EntireArray;$/;"	r
EntireArray	js/three.js	/^			EntireArray: 1,$/;"	r
EntireArray	js/three.min.js	/^_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=$/;"	r
EqualDepth	js/three.js	/^	exports.EqualDepth = EqualDepth;$/;"	r
EqualDepth	js/three.js	/^	var EqualDepth = 4;$/;"	r
EquirectangularReflectionMapping	js/three.js	/^		EquirectangularReflectionMapping: EquirectangularReflectionMapping,$/;"	r
EquirectangularReflectionMapping	js/three.js	/^	exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;$/;"	r
EquirectangularReflectionMapping	js/three.js	/^	var EquirectangularReflectionMapping = 303;$/;"	r
EquirectangularRefractionMapping	js/three.js	/^		EquirectangularRefractionMapping: EquirectangularRefractionMapping,$/;"	r
EquirectangularRefractionMapping	js/three.js	/^	exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;$/;"	r
EquirectangularRefractionMapping	js/three.js	/^	var EquirectangularRefractionMapping = 304;$/;"	r
Euler	js/three.js	/^	exports.Euler = Euler;$/;"	r
Euler	js/three.js	/^	function Euler( x, y, z, order ) {$/;"	r
EventDispatcher	js/three.js	/^	exports.EventDispatcher = EventDispatcher;$/;"	r
EventDispatcher	js/three.js	/^	function EventDispatcher() {}$/;"	r
ExtrudeBufferGeometry	js/three.js	/^		ExtrudeBufferGeometry: ExtrudeBufferGeometry,$/;"	r
ExtrudeBufferGeometry	js/three.js	/^	ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;$/;"	r
ExtrudeBufferGeometry	js/three.js	/^	exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;$/;"	r
ExtrudeBufferGeometry	js/three.js	/^	function ExtrudeBufferGeometry( shapes, options ) {$/;"	r
ExtrudeGeometry	js/three.js	/^		ExtrudeGeometry: ExtrudeGeometry,$/;"	r
ExtrudeGeometry	js/three.js	/^	ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;$/;"	r
ExtrudeGeometry	js/three.js	/^	exports.ExtrudeGeometry = ExtrudeGeometry;$/;"	r
ExtrudeGeometry	js/three.js	/^	function ExtrudeGeometry( shapes, options ) {$/;"	r
F	js/three.min.js	/^F,aa,S,X);M.info.programs=oa.programs;M.context=F;M.capabilities=X;M.extensions=ha;M.properties=Y;M.renderLists=sa;M.state=aa}function c(a){a.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");H=!0}function d(){console.log("THREE.WebGLRenderer: Context Restored.");H=!1;b()}function e(a){a=a.target;a.removeEventListener("dispose",e);f(a);Y.remove(a)}function f(a){var b=Y.get(a).program;a.program=void 0;void 0!==b&&oa.releaseProgram(b)}function g(a,b,c){a.render(function(a){M.renderBufferImmediate(a,$/;"	r
F	js/three.min.js	/^memory:Vd,programs:null};try{y={alpha:y,depth:B,stencil:I,antialias:A,premultipliedAlpha:J,preserveDrawingBuffer:w};var F=x||t.getContext("webgl",y)||t.getContext("experimental-webgl",y);if(null===F){if(null!==t.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context.";}void 0===F.getShaderPrecisionFormat&&(F.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});t.addEventListener("webglcontextlost",c,!1);$/;"	r
FLOAT	js/GLTFLoader.js	/^		FLOAT: 5126,$/;"	r
FLOAT	js/three.js	/^				type = gl.FLOAT;$/;"	r
FLOAT	js/three.js	/^			var type = gl.FLOAT;$/;"	r
FLOAT_MAT3	js/GLTFLoader.js	/^		FLOAT_MAT3: 35675,$/;"	r
FLOAT_MAT4	js/GLTFLoader.js	/^		FLOAT_MAT4: 35676,$/;"	r
FLOAT_VEC2	js/GLTFLoader.js	/^		FLOAT_VEC2: 35664,$/;"	r
FLOAT_VEC3	js/GLTFLoader.js	/^		FLOAT_VEC3: 35665,$/;"	r
FLOAT_VEC4	js/GLTFLoader.js	/^		FLOAT_VEC4: 35666,$/;"	r
Face3	js/three.js	/^	exports.Face3 = Face3;$/;"	r
Face3	js/three.js	/^	function Face3( a, b, c, normal, color, materialIndex ) {$/;"	r
Face4	js/three.js	/^	exports.Face4 = Face4;$/;"	r
Face4	js/three.js	/^	function Face4( a, b, c, d, normal, color, materialIndex ) {$/;"	r
FaceColors	js/three.js	/^							if ( value === 'face' ) json.vertexColors = FaceColors;$/;"	r
FaceColors	js/three.js	/^	exports.FaceColors = FaceColors;$/;"	r
FaceColors	js/three.js	/^	var FaceColors = 1;$/;"	r
FaceNormalsHelper	js/three.js	/^	FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;$/;"	r
FaceNormalsHelper	js/three.js	/^	exports.FaceNormalsHelper = FaceNormalsHelper;$/;"	r
FaceNormalsHelper	js/three.js	/^	function FaceNormalsHelper( object, size, hex, linewidth ) {$/;"	r
FileLoader	js/three.js	/^	exports.FileLoader = FileLoader;$/;"	r
FileLoader	js/three.js	/^	function FileLoader( manager ) {$/;"	r
FlatShading	js/three.js	/^	exports.FlatShading = FlatShading;$/;"	r
FlatShading	js/three.js	/^	var FlatShading = 1;$/;"	r
Float32Array	js/three.js	/^		Float32Array: Float32Array,$/;"	r
Float32Attribute	js/three.js	/^	exports.Float32Attribute = Float32Attribute;$/;"	r
Float32Attribute	js/three.js	/^	function Float32Attribute( array, itemSize ) {$/;"	r
Float32BufferAttribute	js/three.js	/^	Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;$/;"	r
Float32BufferAttribute	js/three.js	/^	exports.Float32BufferAttribute = Float32BufferAttribute;$/;"	r
Float32BufferAttribute	js/three.js	/^	function Float32BufferAttribute( array, itemSize, normalized ) {$/;"	r
Float64Array	js/three.js	/^		Float64Array: Float64Array$/;"	r
Float64Array	js/three.js	/^		var bufferType = Float64Array,$/;"	r
Float64Attribute	js/three.js	/^	exports.Float64Attribute = Float64Attribute;$/;"	r
Float64Attribute	js/three.js	/^	function Float64Attribute( array, itemSize ) {$/;"	r
Float64BufferAttribute	js/three.js	/^	Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;$/;"	r
Float64BufferAttribute	js/three.js	/^	exports.Float64BufferAttribute = Float64BufferAttribute;$/;"	r
Float64BufferAttribute	js/three.js	/^	function Float64BufferAttribute( array, itemSize, normalized ) {$/;"	r
FloatType	js/three.js	/^	exports.FloatType = FloatType;$/;"	r
FloatType	js/three.js	/^	var FloatType = 1015;$/;"	r
Fog	js/three.js	/^	exports.Fog = Fog;$/;"	r
Fog	js/three.js	/^	function Fog( color, near, far ) {$/;"	r
FogExp2	js/three.js	/^	exports.FogExp2 = FogExp2;$/;"	r
FogExp2	js/three.js	/^	function FogExp2( color, density ) {$/;"	r
Font	js/three.js	/^	exports.Font = Font;$/;"	r
Font	js/three.js	/^	function Font( data ) {$/;"	r
FontLoader	js/three.js	/^	exports.FontLoader = FontLoader;$/;"	r
FontLoader	js/three.js	/^	function FontLoader( manager ) {$/;"	r
FrontFaceDirectionCCW	js/three.js	/^	exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;$/;"	r
FrontFaceDirectionCCW	js/three.js	/^	var FrontFaceDirectionCCW = 1;$/;"	r
FrontFaceDirectionCW	js/three.js	/^	exports.FrontFaceDirectionCW = FrontFaceDirectionCW;$/;"	r
FrontFaceDirectionCW	js/three.js	/^	var FrontFaceDirectionCW = 0;$/;"	r
FrontSide	js/three.js	/^				else if ( side === BackSide ) side = FrontSide;$/;"	r
FrontSide	js/three.js	/^				side = FrontSide;$/;"	r
FrontSide	js/three.js	/^		this.side = FrontSide;$/;"	r
FrontSide	js/three.js	/^	exports.FrontSide = FrontSide;$/;"	r
FrontSide	js/three.js	/^	var FrontSide = 0;$/;"	r
Frustum	js/three.js	/^	exports.Frustum = Frustum;$/;"	r
Frustum	js/three.js	/^	function Frustum( p0, p1, p2, p3, p4, p5 ) {$/;"	r
G	js/three.min.js	/^L.copy(K.binormals[W]).multiplyScalar(S.y),O.copy(H[W]).add(Q).add(L),f(O.x,O.y,O.z)):f(S.x,S.y,l\/w*W);for(ea=x-1;0<=ea;ea--){W=ea\/x;fa=v*Math.cos(W*Math.PI\/2);Z=t*Math.sin(W*Math.PI\/2);G=0;for(W=X.length;G<W;G++)S=c(X[G],B[G],Z),f(S.x,S.y,l+fa);N=0;for(M=P.length;N<M;N++)for(U=P[N],ba=A[N],G=0,W=U.length;G<W;G++)S=c(U[G],ba[G],Z),C?f(S.x,S.y+H[w-1].y,H[w-1].x+fa):f(S.x,S.y,l+fa)}(function(){var a=m.length\/3;if(y){var c=0*Y;for(G=0;G<ca;G++)T=V[G],g(T[2]+c,T[1]+c,T[0]+c);c=Y*(w+2*x);for(G=0;G<ca;G++)T=$/;"	r
G	js/three.min.js	/^v*Math.cos(W*Math.PI\/2);Z=t*Math.sin(W*Math.PI\/2);G=0;for(W=X.length;G<W;G++){var S=c(X[G],B[G],Z);f(S.x,S.y,-fa)}N=0;for(M=P.length;N<M;N++)for(U=P[N],ba=A[N],G=0,W=U.length;G<W;G++)S=c(U[G],ba[G],Z),f(S.x,S.y,-fa)}Z=t;for(G=0;G<Y;G++)S=y?c(a[G],da[G],Z):a[G],C?(Q.copy(K.normals[0]).multiplyScalar(S.x),L.copy(K.binormals[0]).multiplyScalar(S.y),O.copy(H[0]).add(Q).add(L),f(O.x,O.y,O.z)):f(S.x,S.y,0);for(W=1;W<=w;W++)for(G=0;G<Y;G++)S=y?c(a[G],da[G],Z):a[G],C?(Q.copy(K.normals[W]).multiplyScalar(S.x),$/;"	r
GLTFBinaryExtension	js/GLTFLoader.js	/^	function GLTFBinaryExtension( data ) {$/;"	r
GLTFLightsExtension	js/GLTFLoader.js	/^	function GLTFLightsExtension( json ) {$/;"	r
GLTFLoader	js/GLTFLoader.js	/^	function GLTFLoader( manager ) {$/;"	r
GLTFLoader	js/GLTFLoader.js	/^THREE.GLTFLoader = ( function () {$/;"	r
GLTFMaterialsCommonExtension	js/GLTFLoader.js	/^	function GLTFMaterialsCommonExtension( json ) {$/;"	r
GLTFMaterialsPbrSpecularGlossinessExtension	js/GLTFLoader.js	/^	function GLTFMaterialsPbrSpecularGlossinessExtension() {$/;"	r
GLTFParser	js/GLTFLoader.js	/^	function GLTFParser( json, extensions, options ) {$/;"	r
GLTFRegistry	js/GLTFLoader.js	/^	function GLTFRegistry() {$/;"	r
Ga	js/three.min.js	/^Object.create(C.prototype);Ga.prototype.constructor=Ga;Ga.prototype.getArrays=function(){var a=this.getAttribute("position"),a=a?Array.prototype.slice.call(a.array):[],b=this.getAttribute("uv"),b=b?Array.prototype.slice.call(b.array):[],c=this.index,c=c?Array.prototype.slice.call(c.array):[];return{position:a,uv:b,index:c}};Ga.prototype.addShapeList=function(a,b){var c=a.length;b.arrays=this.getArrays();for(var d=0;d<c;d++)this.addShape(a[d],b);this.setIndex(b.arrays.index);this.addAttribute("position",$/;"	r
GammaEncoding	js/three.js	/^				encoding = GammaEncoding;$/;"	r
GammaEncoding	js/three.js	/^	exports.GammaEncoding = GammaEncoding;$/;"	r
GammaEncoding	js/three.js	/^	var GammaEncoding = 3007;$/;"	r
Gc	js/three.min.js	/^l=0,d=k.count\/3;l<d;l++)for(c=0;3>c;c++)g=3*l+c,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z),g=3*l+(c+1)%3,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z)}this.addAttribute("position",new z(b,3))}function Gc(a,b,c){L.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){C.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=$/;"	r
Geometries	js/three.js	/^	var Geometries = Object.freeze({$/;"	r
Geometry	js/three.js	/^	exports.Geometry = Geometry;$/;"	r
Geometry	js/three.js	/^	function Geometry() {$/;"	r
GeometryUtils	js/three.js	/^	exports.GeometryUtils = GeometryUtils;$/;"	r
GeometryUtils	js/three.js	/^	var GeometryUtils = {$/;"	r
GetterByBindingType	js/three.js	/^		GetterByBindingType: [$/;"	r
GetterByBindingType	js/three.min.js	/^_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=$/;"	r
GreaterDepth	js/three.js	/^	exports.GreaterDepth = GreaterDepth;$/;"	r
GreaterDepth	js/three.js	/^	var GreaterDepth = 6;$/;"	r
GreaterEqualDepth	js/three.js	/^	exports.GreaterEqualDepth = GreaterEqualDepth;$/;"	r
GreaterEqualDepth	js/three.js	/^	var GreaterEqualDepth = 5;$/;"	r
GridHelper	js/three.js	/^	GridHelper.prototype.constructor = GridHelper;$/;"	r
GridHelper	js/three.js	/^	exports.GridHelper = GridHelper;$/;"	r
GridHelper	js/three.js	/^	function GridHelper( size, divisions, color1, color2 ) {$/;"	r
Group	js/three.js	/^	exports.Group = Group;$/;"	r
Group	js/three.js	/^	function Group() {$/;"	r
H	js/three.min.js	/^0,H=Z.lensFlares.length;C<H;C++){var E=Z.lensFlares[C];.001<E.opacity&&.001<E.scale&&(ka.x=E.x,ka.y=E.y,ka.z=E.z,M=E.size*E.scale\/ma.w,na.x=M*J,na.y=M,b.uniform3f(u,ka.x,ka.y,ka.z),b.uniform2f(q,na.x,na.y),b.uniform1f(n,E.rotation),b.uniform1f(k,E.opacity),b.uniform3f(l,E.color.r,E.color.g,E.color.b),c.setBlending(E.blending,E.blendEquation,E.blendSrc,E.blendDst),d.setTexture2D(E.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}}c.enable(b.CULL_FACE);c.enable(b.DEPTH_TEST);c.buffers.depth.setMask(!0);$/;"	r
H	js/three.min.js	/^function k(b){0!==b?(e(a.CULL_FACE),b!==H&&(1===b?a.cullFace(a.BACK):2===b?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):f(a.CULL_FACE);H=b}function l(b,c,d){if(b){if(e(a.POLYGON_OFFSET_FILL),U!==c||K!==d)a.polygonOffset(c,d),U=c,K=d}else f(a.POLYGON_OFFSET_FILL)}function q(b){void 0===b&&(b=a.TEXTURE0+L-1);R!==b&&(a.activeTexture(b),R=b)}var n=new function(){var b=!1,c=new ba,d=null,e=new ba(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},$/;"	r
H	js/three.min.js	/^h.length;for(Od.lastIndex=0;;){var l=Od.exec(h),q=Od.lastIndex,n=l[1],u=l[3];"]"===l[2]&&(n|=0);if(void 0===u||"["===u&&q+2===k){h=g;e=void 0===u?new Hf(n,e,f):new If(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else u=g.map[n],void 0===u&&(u=new Ge(n),n=g,g=u,n.seq.push(g),n.map[g.id]=g),g=u}}}function H(a,b,c){return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)}function kd(a,b){this.min=void 0!==a?a:new D(Infinity,Infinity);this.max=void 0!==b?b:new D(-Infinity,-Infinity)}function Jf(a,b,c,$/;"	r
H	js/three.min.js	/^n+r;var H=x[w++]*n+p;var K=x[w++]*n+r;v.quadraticCurveTo(H,K,D,E);if(m=t[t.length-1]){var L=m.x;m=m.y;for(var O=1;O<=c;O++){var P=O\/c;ub(P,L,H,D);ub(P,m,K,E)}}break;case "b":if(D=x[w++]*n+p,E=x[w++]*n+r,H=x[w++]*n+p,K=x[w++]*n+r,C=x[w++]*n+p,A=x[w++]*n+r,v.bezierCurveTo(H,K,C,A,D,E),m=t[t.length-1])for(L=m.x,m=m.y,O=1;O<=c;O++)P=O\/c,vb(P,L,H,C,D),vb(P,m,K,A,E)}n={offsetX:l.ha*n,path:v}}else n=void 0;g+=n.offsetX;b.push(n.path)}}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());$/;"	r
Ha	js/three.min.js	/^Oc.prototype.constructor=Oc;Vb.prototype=Object.create(C.prototype);Vb.prototype.constructor=Vb;var Ha={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g;if(0<Ha.area(a))for(g=0;g<c;g++)e[g]=g;else for(g=0;g<c;g++)e[g]=c-1-g;var h=2*c;for(g=c-1;2<c;){if(0>=h--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}var k=$/;"	r
HalfFloatType	js/three.js	/^	exports.HalfFloatType = HalfFloatType;$/;"	r
HalfFloatType	js/three.js	/^	var HalfFloatType = 1016;$/;"	r
Handlers	js/three.js	/^	Loader.Handlers = {$/;"	r
Handlers	js/three.min.js	/^typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};gc.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};Object.assign(gc.prototype,{crossOrigin:void 0,extractUrlBase:function(a){a=a.split("\/");if(1===a.length)return".\/";a.pop();$/;"	r
HasFromToArray	js/three.js	/^				bindingType = this.BindingType.HasFromToArray;$/;"	r
HasFromToArray	js/three.js	/^			HasFromToArray: 3$/;"	r
Hb	js/three.min.js	/^Hb;m.BoxBufferGeometry=fb;m.ShadowMaterial=cc;m.SpriteMaterial=Ya;m.RawShaderMaterial=dc;m.ShaderMaterial=Aa;m.PointsMaterial=Ba;m.MeshPhysicalMaterial=mb;m.MeshStandardMaterial=La;m.MeshPhongMaterial=Ia;m.MeshToonMaterial=nb;m.MeshNormalMaterial=ob;m.MeshLambertMaterial=pb;m.MeshDepthMaterial=Va;m.MeshDistanceMaterial=Wa;m.MeshBasicMaterial=va;m.LineDashedMaterial=qb;m.LineBasicMaterial=T;m.Material=Q;m.Float64BufferAttribute=yc;m.Float32BufferAttribute=z;m.Uint32BufferAttribute=eb;m.Int32BufferAttribute=$/;"	r
Hb	js/three.min.js	/^{};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Hb(a,b,c,d,e,f){L.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fb(a,b,c,d,e,f));this.mergeVertices()}function fb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,m,ya,ja,ma){var B=f\/ya,v=g\/ja,t=f\/2,x=g\/2,I=m\/2;g=ya+1;var A=ja+1,y=f=0,J,w,z=new p;for(w=0;w<A;w++){var D=w*v-x;for(J=0;J<g;J++)z[a]=$/;"	r
Hc	js/three.min.js	/^new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function Hc(a,b,c,d){L.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new sa(a,b,c,d));this.mergeVertices()}function sa(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){b*=3;c.x=a[b+0];c.y=a[b+1];c.z=a[b+2]}function g(a,b,c,d){0>d&&1===a.x&&(k[b]=a.x-1);0===c.x&&0===c.z&&(k[b]=d\/2\/Math.PI+.5)}C.call(this);this.type="PolyhedronBufferGeometry";$/;"	r
Hd	js/three.min.js	/^c)}function Hd(a,b,c,d){sb.call(this,a,b,c,d)}function tb(a,b,c,d){sb.apply(this,a,b,c,d)}function ra(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=R.generateUUID();0>this.duration&&this.resetDuration();this.optimize()}function Id(a){this.manager=void 0!==a?a:wa;this.textures={}}function ae(a){this.manager=void 0!==a?a:wa}function gc(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}}function be(a){"boolean"===typeof a&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),$/;"	r
HemisphereLight	js/three.js	/^	exports.HemisphereLight = HemisphereLight;$/;"	r
HemisphereLight	js/three.js	/^	function HemisphereLight( skyColor, groundColor, intensity ) {$/;"	r
HemisphereLightHelper	js/three.js	/^	HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;$/;"	r
HemisphereLightHelper	js/three.js	/^	exports.HemisphereLightHelper = HemisphereLightHelper;$/;"	r
HemisphereLightHelper	js/three.js	/^	function HemisphereLightHelper( light, size, color ) {$/;"	r
Hf	js/three.min.js	/^case 35667:case 35671:return De;case 35668:case 35672:return Ee;case 35669:case 35673:return Fe}}function Hf(a,b,c){this.id=a;this.addr=c;this.setValue=vf(b.type)}function If(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=Gf(b.type)}function Ge(a){this.id=a;this.seq=[];this.map={}}function cb(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d<c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=$/;"	r
I	js/three.min.js	/^(J*B-t)*d,z[b]=D*e,z[c]=I,l.push(z.x,z.y,z.z),z[a]=0,z[b]=0,z[c]=0<m?1:-1,q.push(z.x,z.y,z.z),n.push(J\/ya),n.push(1-w\/ja),f+=1}for(w=0;w<ja;w++)for(J=0;J<ya;J++)a=u+J+g*(w+1),b=u+(J+1)+g*(w+1),c=u+(J+1)+g*w,k.push(u+J+g*w,a,c),k.push(a,b,c),y+=6;h.addGroup(r,y,ma);r+=y;u+=f}C.call(this);this.type="BoxBufferGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;a=a||1;b=b||1;c=c||1;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=$/;"	r
I	js/three.min.js	/^1!==p.color.r||1!==p.color.g||1!==p.color.b,I=0<p.vertexColors.length,A=0,A=a(A,0,0),A=a(A,1,!0),A=a(A,2,!1),A=a(A,3,t),A=a(A,4,x),A=a(A,5,y),A=a(A,6,B),A=a(A,7,I);h.push(A);h.push(p.a,p.b,p.c);h.push(p.materialIndex);t&&(t=this.faceVertexUvs[0][g],h.push(d(t[0]),d(t[1]),d(t[2])));x&&h.push(b(p.normal));y&&(x=p.vertexNormals,h.push(b(x[0]),b(x[1]),b(x[2])));B&&h.push(c(p.color));I&&(p=p.vertexColors,h.push(c(p[0]),c(p[1]),c(p[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<q.length&&(e.data.colors=$/;"	r
I	js/three.min.js	/^x);b.bufferData(b.ELEMENT_ARRAY_BUFFER,z,b.STATIC_DRAW);I=b.createTexture();A=b.createTexture();c.bindTexture(b.TEXTURE_2D,I);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);c.bindTexture(b.TEXTURE_2D,A);b.texImage2D(b.TEXTURE_2D,0,$/;"	r
INT	js/three.js	/^				type = gl.INT;$/;"	r
INTERPOLATION	js/GLTFLoader.js	/^	var INTERPOLATION = {$/;"	r
Ia	js/three.min.js	/^!0;mb.prototype.copy=function(a){La.prototype.copy.call(this,a);this.defines={PHYSICAL:""};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this};Ia.prototype=Object.create(Q.prototype);Ia.prototype.constructor=Ia;Ia.prototype.isMeshPhongMaterial=!0;Ia.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=$/;"	r
Ic	js/three.min.js	/^this.normalizeNormals()}function Ic(a,b){L.call(this);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Qb(a,b));this.mergeVertices()}function Qb(a,b){sa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Jc(a,b){L.call(this);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new jb(a,b));this.mergeVertices()}$/;"	r
IcosahedronBufferGeometry	js/three.js	/^		IcosahedronBufferGeometry: IcosahedronBufferGeometry,$/;"	r
IcosahedronBufferGeometry	js/three.js	/^	IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;$/;"	r
IcosahedronBufferGeometry	js/three.js	/^	exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;$/;"	r
IcosahedronBufferGeometry	js/three.js	/^	function IcosahedronBufferGeometry( radius, detail ) {$/;"	r
IcosahedronGeometry	js/three.js	/^		IcosahedronGeometry: IcosahedronGeometry,$/;"	r
IcosahedronGeometry	js/three.js	/^	IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;$/;"	r
IcosahedronGeometry	js/three.js	/^	exports.IcosahedronGeometry = IcosahedronGeometry;$/;"	r
IcosahedronGeometry	js/three.js	/^	function IcosahedronGeometry( radius, detail ) {$/;"	r
ImageLoader	js/three.js	/^	exports.ImageLoader = ImageLoader;$/;"	r
ImageLoader	js/three.js	/^	function ImageLoader( manager ) {$/;"	r
ImageUtils	js/three.js	/^	exports.ImageUtils = ImageUtils;$/;"	r
ImageUtils	js/three.js	/^	var ImageUtils = {$/;"	r
ImmediateRenderObject	js/three.js	/^	ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;$/;"	r
ImmediateRenderObject	js/three.js	/^	exports.ImmediateRenderObject = ImmediateRenderObject;$/;"	r
ImmediateRenderObject	js/three.js	/^	function ImmediateRenderObject( material ) {$/;"	r
IndexAttribute	js/three.js	/^		var IndexAttribute = this.index;$/;"	r
Infinity	js/three.js	/^				var minDistance = Infinity;$/;"	r
Infinity	js/three.js	/^		this.repetitions = Infinity; 		\/\/ no. of repetitions when looping$/;"	r
Infinity	js/three.min.js	/^Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.count;h<k;h++){var l=a.getX(h),q=a.getY(h),n=a.getZ(h);l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new p;return function(b,c){c=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);$/;"	r
Infinity	js/three.min.js	/^a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;return this};Object.assign(Na.prototype,{isBox3:!0,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],q=a[h+1],n=a[h+2];l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromBufferAttribute:function(a){for(var b=$/;"	r
Infinity	js/three.min.js	/^a?a:new p(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new p(-Infinity,-Infinity,-Infinity)}function Da(a,b){this.center=void 0!==a?a:new p;this.radius=void 0!==b?b:0}function za(a,b){this.normal=void 0!==a?a:new p(1,0,0);this.constant=void 0!==b?b:0}function ld(a,b,c,d,e,f){this.planes=[void 0!==a?a:new za,void 0!==b?b:new za,void 0!==c?c:new za,void 0!==d?d:new za,void 0!==e?e:new za,void 0!==f?f:new za]}function Ie(a,b,c){function d(b,c,d,e,f,g){var h=b.geometry;var k=n;var l=b.customDepthMaterial;$/;"	r
Infinity	js/three.min.js	/^new za,b=[new Ib,new Ib,new Ib],c=new p,d=new p;return function(e,f){f=f||new p;var g=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))f.copy(c);else for(b[0].set(this.a,this.b),b[1].set(this.b,this.c),b[2].set(this.c,this.a),e=0;e<b.length;e++){b[e].closestPointToPoint(c,!0,d);var h=c.distanceToSquared(d);h<g&&(g=h,f.copy(d))}return f}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}});qa.prototype=Object.assign(Object.create(w.prototype),$/;"	r
Infinity	js/three.min.js	/^return this}}(),setFromObject:function(a){this.makeEmpty();return this.expandByObject(a)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):$/;"	r
Infinity	js/three.min.js	/^this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(a){a=a||new D;return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=$/;"	r
InstancedBufferAttribute	js/three.js	/^	exports.InstancedBufferAttribute = InstancedBufferAttribute;$/;"	r
InstancedBufferAttribute	js/three.js	/^	function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {$/;"	r
InstancedBufferGeometry	js/three.js	/^	exports.InstancedBufferGeometry = InstancedBufferGeometry;$/;"	r
InstancedBufferGeometry	js/three.js	/^	function InstancedBufferGeometry() {$/;"	r
InstancedInterleavedBuffer	js/three.js	/^	exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;$/;"	r
InstancedInterleavedBuffer	js/three.js	/^	function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {$/;"	r
Int16Array	js/three.js	/^		Int16Array: Int16Array,$/;"	r
Int16Array	js/three.min.js	/^typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};gc.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};Object.assign(gc.prototype,{crossOrigin:void 0,extractUrlBase:function(a){a=a.split("\/");if(1===a.length)return".\/";a.pop();$/;"	r
Int16Attribute	js/three.js	/^	exports.Int16Attribute = Int16Attribute;$/;"	r
Int16Attribute	js/three.js	/^	function Int16Attribute( array, itemSize ) {$/;"	r
Int16BufferAttribute	js/three.js	/^	Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;$/;"	r
Int16BufferAttribute	js/three.js	/^	exports.Int16BufferAttribute = Int16BufferAttribute;$/;"	r
Int16BufferAttribute	js/three.js	/^	function Int16BufferAttribute( array, itemSize, normalized ) {$/;"	r
Int32Array	js/three.js	/^		Int32Array: Int32Array,$/;"	r
Int32Attribute	js/three.js	/^	exports.Int32Attribute = Int32Attribute;$/;"	r
Int32Attribute	js/three.js	/^	function Int32Attribute( array, itemSize ) {$/;"	r
Int32BufferAttribute	js/three.js	/^	Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;$/;"	r
Int32BufferAttribute	js/three.js	/^	exports.Int32BufferAttribute = Int32BufferAttribute;$/;"	r
Int32BufferAttribute	js/three.js	/^	function Int32BufferAttribute( array, itemSize, normalized ) {$/;"	r
Int8Array	js/three.js	/^		Int8Array: Int8Array,$/;"	r
Int8Attribute	js/three.js	/^	exports.Int8Attribute = Int8Attribute;$/;"	r
Int8Attribute	js/three.js	/^	function Int8Attribute( array, itemSize ) {$/;"	r
Int8BufferAttribute	js/three.js	/^	Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;$/;"	r
Int8BufferAttribute	js/three.js	/^	exports.Int8BufferAttribute = Int8BufferAttribute;$/;"	r
Int8BufferAttribute	js/three.js	/^	function Int8BufferAttribute( array, itemSize, normalized ) {$/;"	r
IntType	js/three.js	/^	exports.IntType = IntType;$/;"	r
IntType	js/three.js	/^	var IntType = 1013;$/;"	r
InterleavedBuffer	js/three.js	/^	exports.InterleavedBuffer = InterleavedBuffer;$/;"	r
InterleavedBuffer	js/three.js	/^	function InterleavedBuffer( array, stride ) {$/;"	r
InterleavedBufferAttribute	js/three.js	/^	exports.InterleavedBufferAttribute = InterleavedBufferAttribute;$/;"	r
InterleavedBufferAttribute	js/three.js	/^	function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {$/;"	r
Interpolant	js/three.js	/^	exports.Interpolant = Interpolant;$/;"	r
Interpolant	js/three.js	/^	function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
InterpolantFactoryMethodDiscrete	js/three.js	/^					factoryMethod = this.InterpolantFactoryMethodDiscrete;$/;"	r
InterpolantFactoryMethodDiscrete	js/three.js	/^		InterpolantFactoryMethodDiscrete: function ( result ) {$/;"	r
InterpolantFactoryMethodDiscrete	js/three.min.js	/^this.InterpolantFactoryMethodDiscrete;break;case 2301:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){b="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(b);console.warn("THREE.KeyframeTrackPrototype:",b)}else this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;$/;"	r
InterpolantFactoryMethodLinear	js/three.js	/^					factoryMethod = this.InterpolantFactoryMethodLinear;$/;"	r
InterpolantFactoryMethodLinear	js/three.js	/^		InterpolantFactoryMethodLinear: function ( result ) {$/;"	r
InterpolantFactoryMethodLinear	js/three.js	/^		InterpolantFactoryMethodLinear: undefined,$/;"	r
InterpolantFactoryMethodSmooth	js/three.js	/^					factoryMethod = this.InterpolantFactoryMethodSmooth;$/;"	r
InterpolantFactoryMethodSmooth	js/three.js	/^		InterpolantFactoryMethodSmooth: function ( result ) {$/;"	r
InterpolantFactoryMethodSmooth	js/three.js	/^		InterpolantFactoryMethodSmooth: undefined \/\/ not yet implemented$/;"	r
InterpolantFactoryMethodSmooth	js/three.js	/^		InterpolantFactoryMethodSmooth: undefined$/;"	r
InterpolateDiscrete	js/three.js	/^	exports.InterpolateDiscrete = InterpolateDiscrete;$/;"	r
InterpolateDiscrete	js/three.js	/^	var InterpolateDiscrete = 2300;$/;"	r
InterpolateLinear	js/three.js	/^	exports.InterpolateLinear = InterpolateLinear;$/;"	r
InterpolateLinear	js/three.js	/^	var InterpolateLinear = 2301;$/;"	r
InterpolateSmooth	js/three.js	/^				smoothInterpolation = this.getInterpolation() === InterpolateSmooth,$/;"	r
InterpolateSmooth	js/three.js	/^	exports.InterpolateSmooth = InterpolateSmooth;$/;"	r
InterpolateSmooth	js/three.js	/^	var InterpolateSmooth = 2302;$/;"	r
J	js/three.min.js	/^c;++n){var I=n\/c*e*Math.PI*2;g(I,e,f,a,v);g(I+.01,e,f,a,t);y.subVectors(t,v);B.addVectors(t,v);x.crossVectors(y,B);B.crossVectors(x,y);x.normalize();B.normalize();for(I=0;I<=d;++I){var A=I\/d*Math.PI*2,J=-b*Math.cos(A),A=b*Math.sin(A);u.x=v.x+(J*B.x+A*x.x);u.y=v.y+(J*B.y+A*x.y);u.z=v.z+(J*B.z+A*x.z);k.push(u.x,u.y,u.z);m.subVectors(u,v).normalize();l.push(m.x,m.y,m.z);q.push(n\/c);q.push(I\/d)}}for(I=1;I<=c;I++)for(n=1;n<=d;n++)a=(d+1)*I+(n-1),b=(d+1)*I+n,e=(d+1)*(I-1)+n,h.push((d+1)*(I-1)+(n-1),a,e),$/;"	r
J	js/three.min.js	/^v,"has no shadow.");else{var p=u.camera;h.copy(u.mapSize);h.min(k);if(I){var y=h.x,J=h.y;x[0].set(2*y,J,y,J);x[1].set(0,J,y,J);x[2].set(3*y,J,y,J);x[3].set(y,J,y,J);x[4].set(3*y,0,y,J);x[5].set(y,0,y,J);h.x*=4;h.y*=2}null===u.map&&(u.map=new Db(h.x,h.y,{minFilter:1003,magFilter:1003,format:1023}),u.map.texture.name=v.name+".shadowMap",p.updateProjectionMatrix());u.isSpotLightShadow&&u.update(v);y=u.map;J=u.matrix;q.setFromMatrixPosition(v.matrixWorld);p.position.copy(q);I?(u=6,J.makeTranslation(-q.x,$/;"	r
JSONLoader	js/three.js	/^	exports.JSONLoader = JSONLoader;$/;"	r
JSONLoader	js/three.js	/^	function JSONLoader( manager ) {$/;"	r
Ja	js/three.min.js	/^f,g);if(f===g&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)};this.resolveURL=function(a){return h?h(a):a};this.setURLModifier=function(a){h=a}}function Ja(a){this.manager=void 0!==a?a:wa}function Qe(a){this.manager=void 0!==a?a:wa;this._parser=null}function Zd(a){this.manager=void 0!==a?a:wa;this._parser=null}function Wc(a){this.manager=void 0!==a?a:wa}function $d(a){this.manager=void 0!==a?a:wa}function td(a){this.manager=void 0!==a?a:wa}function fa(a,$/;"	r
K	js/three.min.js	/^n+r;var H=x[w++]*n+p;var K=x[w++]*n+r;v.quadraticCurveTo(H,K,D,E);if(m=t[t.length-1]){var L=m.x;m=m.y;for(var O=1;O<=c;O++){var P=O\/c;ub(P,L,H,D);ub(P,m,K,E)}}break;case "b":if(D=x[w++]*n+p,E=x[w++]*n+r,H=x[w++]*n+p,K=x[w++]*n+r,C=x[w++]*n+p,A=x[w++]*n+r,v.bezierCurveTo(H,K,C,A,D,E),m=t[t.length-1])for(L=m.x,m=m.y,O=1;O<=c;O++)P=O\/c,vb(P,L,H,C,D),vb(P,m,K,A,E)}n={offsetX:l.ha*n,path:v}}else n=void 0;g+=n.offsetX;b.push(n.path)}}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());$/;"	r
KHR_BINARY_GLTF	js/GLTFLoader.js	/^		KHR_BINARY_GLTF: 'KHR_binary_glTF',$/;"	r
KHR_BINARY_GLTF	js/GLTFLoader.js	/^		this.name = EXTENSIONS.KHR_BINARY_GLTF;$/;"	r
KHR_LIGHTS	js/GLTFLoader.js	/^		KHR_LIGHTS: 'KHR_lights',$/;"	r
KHR_LIGHTS	js/GLTFLoader.js	/^		this.name = EXTENSIONS.KHR_LIGHTS;$/;"	r
KHR_MATERIALS_COMMON	js/GLTFLoader.js	/^		KHR_MATERIALS_COMMON: 'KHR_materials_common',$/;"	r
KHR_MATERIALS_COMMON	js/GLTFLoader.js	/^		this.name = EXTENSIONS.KHR_MATERIALS_COMMON;$/;"	r
KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS	js/GLTFLoader.js	/^		KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness'$/;"	r
Ka	js/three.min.js	/^0;this.userData={}}function Ka(){w.call(this);this.type="Camera";this.matrixWorldInverse=new K;this.projectionMatrix=new K}function Gb(a,b,c,d,e,f){Ka.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}function Oa(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&&d.isVector3?d:new p;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&&e.isColor?$/;"	r
Kb	js/three.min.js	/^function Kb(a,b){this.name="";this.color=new H(a);this.density=void 0!==b?b:2.5E-4}function Lb(a,b,c){this.name="";this.color=new H(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}function od(){w.call(this);this.type="Scene";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function Xd(a,b,c,d,e){w.call(this);this.lensFlares=[];this.positionScreen=new p;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)}function Ya(a){Q.call(this);this.type="SpriteMaterial";$/;"	r
Kc	js/three.min.js	/^Kc;Rb.prototype=Object.create(sa.prototype);Rb.prototype.constructor=Rb;Lc.prototype=Object.create(L.prototype);Lc.prototype.constructor=Lc;Sb.prototype=Object.create(sa.prototype);Sb.prototype.constructor=Sb;Mc.prototype=Object.create(L.prototype);Mc.prototype.constructor=Mc;Tb.prototype=Object.create(C.prototype);Tb.prototype.constructor=Tb;Nc.prototype=Object.create(L.prototype);Nc.prototype.constructor=Nc;Ub.prototype=Object.create(C.prototype);Ub.prototype.constructor=Ub;Oc.prototype=Object.create(L.prototype);$/;"	r
Kd	js/three.min.js	/^P.call(this,b,c)}function Kd(a,b,c,d,e,f){a=a||10;b=b||16;c=c||8;d=d||64;e=new H(void 0!==e?e:4473924);f=new H(void 0!==f?f:8947848);var g=[],h=[],k;for(k=0;k<=b;k++){var l=k\/b*2*Math.PI;var q=Math.sin(l)*a;l=Math.cos(l)*a;g.push(0,0,0);g.push(q,0,l);var n=k&1?e:f;h.push(n.r,n.g,n.b);h.push(n.r,n.g,n.b)}for(k=0;k<=c;k++){n=k&1?e:f;var u=a-a\/c*k;for(b=0;b<d;b++)l=b\/d*2*Math.PI,q=Math.sin(l)*u,l=Math.cos(l)*u,g.push(q,0,l),h.push(n.r,n.g,n.b),l=(b+1)\/d*2*Math.PI,q=Math.sin(l)*u,l=Math.cos(l)*u,g.push(q,$/;"	r
KeyframeTrack	js/three.js	/^	KeyframeTrackPrototype.constructor = KeyframeTrack;$/;"	r
KeyframeTrack	js/three.js	/^	exports.KeyframeTrack = KeyframeTrack;$/;"	r
KeyframeTrack	js/three.js	/^	function KeyframeTrack( name, times, values, interpolation ) {$/;"	r
KeyframeTrackConstructor	js/three.js	/^	function KeyframeTrackConstructor( name, times, values, interpolation ) {$/;"	r
KeyframeTrackPrototype	js/three.js	/^	KeyframeTrack.prototype = KeyframeTrackPrototype;$/;"	r
KeyframeTrackPrototype	js/three.js	/^	KeyframeTrackPrototype = {$/;"	r
KeyframeTrackPrototype	js/three.js	/^	var KeyframeTrackPrototype;$/;"	r
L	js/three.min.js	/^e:new H;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}function L(){Object.defineProperty(this,"id",{value:Of+=2});this.uuid=R.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=$/;"	r
LINEAR	js/GLTFLoader.js	/^		LINEAR: 9729,$/;"	r
LINEAR	js/GLTFLoader.js	/^		LINEAR: THREE.InterpolateLinear,$/;"	r
LINES	js/GLTFLoader.js	/^		LINES: 1,$/;"	r
LINE_LOOP	js/GLTFLoader.js	/^		LINE_LOOP: 2,$/;"	r
LINE_STRIP	js/GLTFLoader.js	/^		LINE_STRIP: 3,$/;"	r
LOD	js/three.js	/^			LOD: {},$/;"	r
LOD	js/three.js	/^	exports.LOD = LOD;$/;"	r
LOD	js/three.js	/^	function LOD() {$/;"	r
LTC_MAG_TEXTURE	js/three.js	/^				if ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;$/;"	r
LTC_MAT_TEXTURE	js/three.js	/^				if ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;$/;"	r
LatheBufferGeometry	js/three.js	/^		LatheBufferGeometry: LatheBufferGeometry,$/;"	r
LatheBufferGeometry	js/three.js	/^	LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;$/;"	r
LatheBufferGeometry	js/three.js	/^	exports.LatheBufferGeometry = LatheBufferGeometry;$/;"	r
LatheBufferGeometry	js/three.js	/^	function LatheBufferGeometry( points, segments, phiStart, phiLength ) {$/;"	r
LatheGeometry	js/three.js	/^		LatheGeometry: LatheGeometry,$/;"	r
LatheGeometry	js/three.js	/^	LatheGeometry.prototype.constructor = LatheGeometry;$/;"	r
LatheGeometry	js/three.js	/^	exports.LatheGeometry = LatheGeometry;$/;"	r
LatheGeometry	js/three.js	/^	function LatheGeometry( points, segments, phiStart, phiLength ) {$/;"	r
Layers	js/three.js	/^	exports.Layers = Layers;$/;"	r
Layers	js/three.js	/^	function Layers() {$/;"	r
Lc	js/three.min.js	/^5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Lc(a,b){L.call(this);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))\/2,d=1\/c;sa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,$/;"	r
Le	js/three.min.js	/^""!==a.getShaderInfoLog(d)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b===a.VERTEX_SHADER?"vertex":"fragment",a.getShaderInfoLog(d),cg(c));return d}function Le(a){switch(a){case 3E3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+$/;"	r
LensFlare	js/three.js	/^	exports.LensFlare = LensFlare;$/;"	r
LensFlare	js/three.js	/^	function LensFlare( texture, size, distance, blending, color ) {$/;"	r
LessDepth	js/three.js	/^	exports.LessDepth = LessDepth;$/;"	r
LessDepth	js/three.js	/^	var LessDepth = 2;$/;"	r
LessEqualDepth	js/three.js	/^		this.depthFunc = LessEqualDepth;$/;"	r
LessEqualDepth	js/three.js	/^	exports.LessEqualDepth = LessEqualDepth;$/;"	r
LessEqualDepth	js/three.js	/^	var LessEqualDepth = 3;$/;"	r
Lf	js/three.min.js	/^this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});sc.prototype=Object.create(da.prototype);sc.prototype.constructor=sc;var Lf=0;Object.assign(Q.prototype,ia.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+$/;"	r
Light	js/three.js	/^	exports.Light = Light;$/;"	r
Light	js/three.js	/^	function Light( color, intensity ) {$/;"	r
LightShadow	js/three.js	/^	exports.LightShadow = LightShadow;$/;"	r
LightShadow	js/three.js	/^	function LightShadow( camera ) {$/;"	r
Line	js/three.js	/^			Line: {},$/;"	r
Line	js/three.js	/^	exports.Line = Line;$/;"	r
Line	js/three.js	/^	function Line( geometry, material, mode ) {$/;"	r
Line	js/three.min.js	/^c||1}function Ze(a,b,c,d){this.ray=new hb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function $e(a,b){return a.distance-b.distance}function oe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)oe(a[d],b,c,!0)}}function af(a){this.autoStart=$/;"	r
Line3	js/three.js	/^	exports.Line3 = Line3;$/;"	r
Line3	js/three.js	/^	function Line3( start, end ) {$/;"	r
LineBasicMaterial	js/three.js	/^			LineBasicMaterial: 'basic',$/;"	r
LineBasicMaterial	js/three.js	/^		LineBasicMaterial: LineBasicMaterial,$/;"	r
LineBasicMaterial	js/three.js	/^	LineBasicMaterial.prototype.constructor = LineBasicMaterial;$/;"	r
LineBasicMaterial	js/three.js	/^	exports.LineBasicMaterial = LineBasicMaterial;$/;"	r
LineBasicMaterial	js/three.js	/^	function LineBasicMaterial( parameters ) {$/;"	r
LineBasicMaterial	js/three.min.js	/^LineBasicMaterial:T,Material:Q}),jd={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},wa=new Yd,$a={};Object.assign(Ja.prototype,{load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},$/;"	r
LineCurve	js/three.js	/^	LineCurve.prototype.constructor = LineCurve;$/;"	r
LineCurve	js/three.js	/^	exports.LineCurve = LineCurve;$/;"	r
LineCurve	js/three.js	/^	function LineCurve( v1, v2 ) {$/;"	r
LineCurve3	js/three.js	/^	LineCurve3.prototype.constructor = LineCurve3;$/;"	r
LineCurve3	js/three.js	/^	exports.LineCurve3 = LineCurve3;$/;"	r
LineCurve3	js/three.js	/^	function LineCurve3( v1, v2 ) {$/;"	r
LineDashedMaterial	js/three.js	/^			LineDashedMaterial: 'dashed',$/;"	r
LineDashedMaterial	js/three.js	/^		LineDashedMaterial: LineDashedMaterial,$/;"	r
LineDashedMaterial	js/three.js	/^	LineDashedMaterial.prototype.constructor = LineDashedMaterial;$/;"	r
LineDashedMaterial	js/three.js	/^	exports.LineDashedMaterial = LineDashedMaterial;$/;"	r
LineDashedMaterial	js/three.js	/^	function LineDashedMaterial( parameters ) {$/;"	r
LineLoop	js/three.js	/^	exports.LineLoop = LineLoop;$/;"	r
LineLoop	js/three.js	/^	function LineLoop( geometry, material ) {$/;"	r
LinePieces	js/three.js	/^	exports.LinePieces = LinePieces;$/;"	r
LinePieces	js/three.js	/^	var LinePieces = 1;$/;"	r
LineSegments	js/three.js	/^	exports.LineSegments = LineSegments;$/;"	r
LineSegments	js/three.js	/^	function LineSegments( geometry, material ) {$/;"	r
LineStrip	js/three.js	/^	exports.LineStrip = LineStrip;$/;"	r
LineStrip	js/three.js	/^	var LineStrip = 0;$/;"	r
LinearEncoding	js/three.js	/^				encoding = LinearEncoding;$/;"	r
LinearEncoding	js/three.js	/^	exports.LinearEncoding = LinearEncoding;$/;"	r
LinearEncoding	js/three.js	/^	var LinearEncoding = 3000;$/;"	r
LinearFilter	js/three.js	/^							texture.minFilter = LinearFilter;$/;"	r
LinearFilter	js/three.js	/^						texture.minFilter = LinearFilter;$/;"	r
LinearFilter	js/three.js	/^					texture.minFilter = LinearFilter;$/;"	r
LinearFilter	js/three.js	/^				texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;$/;"	r
LinearFilter	js/three.js	/^		LinearFilter: LinearFilter,$/;"	r
LinearFilter	js/three.js	/^		if ( options.minFilter === undefined ) options.minFilter = LinearFilter;$/;"	r
LinearFilter	js/three.js	/^	exports.LinearFilter = LinearFilter;$/;"	r
LinearFilter	js/three.js	/^	var LinearFilter = 1006;$/;"	r
LinearInterpolant	js/three.js	/^	exports.LinearInterpolant = LinearInterpolant;$/;"	r
LinearInterpolant	js/three.js	/^	function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
LinearMipMapLinearFilter	js/three.js	/^		LinearMipMapLinearFilter: LinearMipMapLinearFilter$/;"	r
LinearMipMapLinearFilter	js/three.js	/^	exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;$/;"	r
LinearMipMapLinearFilter	js/three.js	/^	var LinearMipMapLinearFilter = 1008;$/;"	r
LinearMipMapNearestFilter	js/three.js	/^		LinearMipMapNearestFilter: LinearMipMapNearestFilter,$/;"	r
LinearMipMapNearestFilter	js/three.js	/^	exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;$/;"	r
LinearMipMapNearestFilter	js/three.js	/^	var LinearMipMapNearestFilter = 1007;$/;"	r
LinearToneMapping	js/three.js	/^		this.toneMapping = LinearToneMapping;$/;"	r
LinearToneMapping	js/three.js	/^	exports.LinearToneMapping = LinearToneMapping;$/;"	r
LinearToneMapping	js/three.js	/^	var LinearToneMapping = 1;$/;"	r
Loader	js/three.js	/^	exports.Loader = Loader;$/;"	r
Loader	js/three.js	/^	function Loader() {$/;"	r
LoadingManager	js/three.js	/^	exports.LoadingManager = LoadingManager;$/;"	r
LoadingManager	js/three.js	/^	function LoadingManager( onLoad, onProgress, onError ) {$/;"	r
LogLuvEncoding	js/three.js	/^	exports.LogLuvEncoding = LogLuvEncoding;$/;"	r
LogLuvEncoding	js/three.js	/^	var LogLuvEncoding = 3003;$/;"	r
LoopOnce	js/three.js	/^	exports.LoopOnce = LoopOnce;$/;"	r
LoopOnce	js/three.js	/^	var LoopOnce = 2200;$/;"	r
LoopPingPong	js/three.js	/^	exports.LoopPingPong = LoopPingPong;$/;"	r
LoopPingPong	js/three.js	/^	var LoopPingPong = 2202;$/;"	r
LoopRepeat	js/three.js	/^		this.loop = LoopRepeat;$/;"	r
LoopRepeat	js/three.js	/^	exports.LoopRepeat = LoopRepeat;$/;"	r
LoopRepeat	js/three.js	/^	var LoopRepeat = 2201;$/;"	r
LuminanceAlphaFormat	js/three.js	/^	exports.LuminanceAlphaFormat = LuminanceAlphaFormat;$/;"	r
LuminanceAlphaFormat	js/three.js	/^	var LuminanceAlphaFormat = 1025;$/;"	r
LuminanceFormat	js/three.js	/^	exports.LuminanceFormat = LuminanceFormat;$/;"	r
LuminanceFormat	js/three.js	/^	var LuminanceFormat = 1024;$/;"	r
M	js/three.min.js	/^b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);var M=y={vertexShader:"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\n\\tvUV = uv;\\n\\tvec2 pos = position;\\n\\tif ( renderType == 2 ) {\\n\\t\\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\n\\t\\tvVisibility =        visibility.r \/ 9.0;\\n\\t\\tvVisibility *= 1.0 - visibility.g \/ 9.0;\\n\\t\\tvVisibility *=       visibility.b \/ 9.0;\\n\\t\\tvVisibility *= 1.0 - visibility.a \/ 9.0;\\n\\t\\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\n\\t\\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n\\t}\\n\\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}",$/;"	r
M	js/three.min.js	/^b.bevelSegments:3,y=void 0!==b.bevelEnabled?b.bevelEnabled:!0,B=void 0!==b.curveSegments?b.curveSegments:12,w=void 0!==b.steps?b.steps:1,A=b.extrudePath,C=!1,E=void 0!==b.UVGenerator?b.UVGenerator:Za.WorldUVGenerator;if(A){var H=A.getSpacedPoints(w);C=!0;y=!1;var K=void 0!==b.frames?b.frames:A.computeFrenetFrames(w,!1);var L=new p;var Q=new p;var O=new p}y||(t=v=x=0);var M,R=this,B=a.extractPoints(B);a=B.shape;var P=B.holes;if(!Ha.isClockWise(a)){a=a.reverse();var N=0;for(M=P.length;N<M;N++){var U=$/;"	r
M	js/three.min.js	/^d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A;this.render=function(a,v,ja,ma){if(0!==a.length){v=new p;var J=ma.w\/ma.z,ya=.5*ma.z,Ua=.5*ma.w,M=16\/ma.w,na=new D(M*J,M),ka=new p(1,1,0),N=new D(1,1),U=new kd;U.min.set(ma.x,ma.y);U.max.set(ma.x+(ma.z-16),ma.y+(ma.w-16));if(void 0===B){var M=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),z=new Uint16Array([0,1,2,0,2,3]);t=b.createBuffer();x=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,t);b.bufferData(b.ARRAY_BUFFER,M,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,$/;"	r
MASK	js/GLTFLoader.js	/^		MASK: 'MASK',$/;"	r
MAX_VALUE	js/three.js	/^			var min = Number.MAX_VALUE;$/;"	r
MIDDLE	js/three.js	/^	var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };$/;"	r
MIDDLE	js/three.min.js	/^xc;m.Uint16BufferAttribute=db;m.Int16BufferAttribute=wc;m.Uint8ClampedBufferAttribute=vc;m.Uint8BufferAttribute=uc;m.Int8BufferAttribute=tc;m.BufferAttribute=O;m.REVISION="88dev";m.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};m.CullFaceNone=0;m.CullFaceBack=1;m.CullFaceFront=2;m.CullFaceFrontBack=3;m.FrontFaceDirectionCW=0;m.FrontFaceDirectionCCW=1;m.BasicShadowMap=0;m.PCFShadowMap=1;m.PCFSoftShadowMap=2;m.FrontSide=0;m.BackSide=1;m.DoubleSide=2;m.FlatShading=1;m.SmoothShading=2;m.NoColors=0;m.FaceColors=1;m.VertexColors=$/;"	r
MOUSE	js/three.js	/^	exports.MOUSE = MOUSE;$/;"	r
MOUSE	js/three.js	/^	var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };$/;"	r
Ma	js/three.min.js	/^Ma.prototype.constructor=Ma;Ma.prototype.isLineCurve=!0;Ma.prototype.getPoint=function(a,b){b=b||new D;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Ma.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};Ma.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};hc.prototype=Object.assign(Object.create(ca.prototype),{constructor:hc,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),$/;"	r
Material	js/three.js	/^		Material: Material$/;"	r
Material	js/three.js	/^	exports.Material = Material;$/;"	r
Material	js/three.js	/^	function Material() {$/;"	r
MaterialLoader	js/three.js	/^	exports.MaterialLoader = MaterialLoader;$/;"	r
MaterialLoader	js/three.js	/^	function MaterialLoader( manager ) {$/;"	r
Materials	js/three.js	/^	var Materials = Object.freeze({$/;"	r
Math	js/three.js	/^	exports.Math = _Math;$/;"	r
Matrix3	js/three.js	/^	exports.Matrix3 = Matrix3;$/;"	r
Matrix3	js/three.js	/^	function Matrix3() {$/;"	r
Matrix4	js/three.js	/^	exports.Matrix4 = Matrix4;$/;"	r
Matrix4	js/three.js	/^	function Matrix4() {$/;"	r
MatrixWorldNeedsUpdate	js/three.js	/^				versioning = this.Versioning.MatrixWorldNeedsUpdate;$/;"	r
MatrixWorldNeedsUpdate	js/three.js	/^			MatrixWorldNeedsUpdate: 2$/;"	r
MaxEquation	js/three.js	/^	exports.MaxEquation = MaxEquation;$/;"	r
MaxEquation	js/three.js	/^	var MaxEquation = 104;$/;"	r
Mb	js/three.min.js	/^this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)}function Mb(a,b){w.call(this);this.type="Points";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new Ba({color:16777215*Math.random()})}function Ec(){w.call(this);this.type="Group"}function sd(a,b,c,d,e,f,g,h,k){function l(){var a=q.image;a.readyState>=a.HAVE_CURRENT_DATA&&(q.needsUpdate=!0);requestAnimationFrame(l)}da.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var q=this;requestAnimationFrame(l)}$/;"	r
Mc	js/three.min.js	/^d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Mc(a,b,c,d,e,f){L.call(this);this.type="TubeGeometry";this.parameters={path:a,$/;"	r
Mesh	js/three.js	/^			Mesh: {},$/;"	r
Mesh	js/three.js	/^	exports.Mesh = Mesh;$/;"	r
Mesh	js/three.js	/^	function Mesh( geometry, material ) {$/;"	r
MeshBasicMaterial	js/three.js	/^			MeshBasicMaterial: 'basic',$/;"	r
MeshBasicMaterial	js/three.js	/^		MeshBasicMaterial: MeshBasicMaterial,$/;"	r
MeshBasicMaterial	js/three.js	/^	MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;$/;"	r
MeshBasicMaterial	js/three.js	/^	exports.MeshBasicMaterial = MeshBasicMaterial;$/;"	r
MeshBasicMaterial	js/three.js	/^	function MeshBasicMaterial( parameters ) {$/;"	r
MeshDepthMaterial	js/three.js	/^			MeshDepthMaterial: 'depth',$/;"	r
MeshDepthMaterial	js/three.js	/^		MeshDepthMaterial: MeshDepthMaterial,$/;"	r
MeshDepthMaterial	js/three.js	/^	MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;$/;"	r
MeshDepthMaterial	js/three.js	/^	exports.MeshDepthMaterial = MeshDepthMaterial;$/;"	r
MeshDepthMaterial	js/three.js	/^	function MeshDepthMaterial( parameters ) {$/;"	r
MeshDistanceMaterial	js/three.js	/^			MeshDistanceMaterial: 'distanceRGBA',$/;"	r
MeshDistanceMaterial	js/three.js	/^		MeshDistanceMaterial: MeshDistanceMaterial,$/;"	r
MeshDistanceMaterial	js/three.js	/^	MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;$/;"	r
MeshDistanceMaterial	js/three.js	/^	exports.MeshDistanceMaterial = MeshDistanceMaterial;$/;"	r
MeshDistanceMaterial	js/three.js	/^	function MeshDistanceMaterial( parameters ) {$/;"	r
MeshDistanceMaterial	js/three.min.js	/^this.program=p;this.vertexShader=k;this.fragmentShader=l;return this}function jg(a,b,c){function d(a,b){if(a)a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),c=a.texture.encoding);else var c=3E3;3E3===c&&b&&(c=3007);return c}var e=[],f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",$/;"	r
MeshFaceMaterial	js/three.js	/^	exports.MeshFaceMaterial = MeshFaceMaterial;$/;"	r
MeshFaceMaterial	js/three.js	/^	function MeshFaceMaterial( materials ) {$/;"	r
MeshLambertMaterial	js/three.js	/^			MeshLambertMaterial: 'lambert',$/;"	r
MeshLambertMaterial	js/three.js	/^		MeshLambertMaterial: MeshLambertMaterial,$/;"	r
MeshLambertMaterial	js/three.js	/^	MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;$/;"	r
MeshLambertMaterial	js/three.js	/^	exports.MeshLambertMaterial = MeshLambertMaterial;$/;"	r
MeshLambertMaterial	js/three.js	/^	function MeshLambertMaterial( parameters ) {$/;"	r
MeshNormalMaterial	js/three.js	/^			MeshNormalMaterial: 'normal',$/;"	r
MeshNormalMaterial	js/three.js	/^		MeshNormalMaterial: MeshNormalMaterial,$/;"	r
MeshNormalMaterial	js/three.js	/^	MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;$/;"	r
MeshNormalMaterial	js/three.js	/^	exports.MeshNormalMaterial = MeshNormalMaterial;$/;"	r
MeshNormalMaterial	js/three.js	/^	function MeshNormalMaterial( parameters ) {$/;"	r
MeshPhongMaterial	js/GLTFLoader.js	/^				materialType = THREE.MeshPhongMaterial;$/;"	r
MeshPhongMaterial	js/three.js	/^			MeshPhongMaterial: 'phong',$/;"	r
MeshPhongMaterial	js/three.js	/^		MeshPhongMaterial: MeshPhongMaterial,$/;"	r
MeshPhongMaterial	js/three.js	/^	MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;$/;"	r
MeshPhongMaterial	js/three.js	/^	exports.MeshPhongMaterial = MeshPhongMaterial;$/;"	r
MeshPhongMaterial	js/three.js	/^	function MeshPhongMaterial( parameters ) {$/;"	r
MeshPhongMaterial	js/three.min.js	/^MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},g="precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering".split(" ");$/;"	r
MeshPhysicalMaterial	js/three.js	/^			MeshPhysicalMaterial: 'physical',$/;"	r
MeshPhysicalMaterial	js/three.js	/^		MeshPhysicalMaterial: MeshPhysicalMaterial,$/;"	r
MeshPhysicalMaterial	js/three.js	/^	MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;$/;"	r
MeshPhysicalMaterial	js/three.js	/^	exports.MeshPhysicalMaterial = MeshPhysicalMaterial;$/;"	r
MeshPhysicalMaterial	js/three.js	/^	function MeshPhysicalMaterial( parameters ) {$/;"	r
MeshStandardMaterial	js/GLTFLoader.js	/^				materialType = THREE.MeshStandardMaterial;$/;"	r
MeshStandardMaterial	js/three.js	/^			MeshStandardMaterial: 'physical',$/;"	r
MeshStandardMaterial	js/three.js	/^		MeshStandardMaterial: MeshStandardMaterial,$/;"	r
MeshStandardMaterial	js/three.js	/^	MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;$/;"	r
MeshStandardMaterial	js/three.js	/^	exports.MeshStandardMaterial = MeshStandardMaterial;$/;"	r
MeshStandardMaterial	js/three.js	/^	function MeshStandardMaterial( parameters ) {$/;"	r
MeshToonMaterial	js/three.js	/^			MeshToonMaterial: 'phong',$/;"	r
MeshToonMaterial	js/three.js	/^		MeshToonMaterial: MeshToonMaterial,$/;"	r
MeshToonMaterial	js/three.js	/^	MeshToonMaterial.prototype.constructor = MeshToonMaterial;$/;"	r
MeshToonMaterial	js/three.js	/^	exports.MeshToonMaterial = MeshToonMaterial;$/;"	r
MeshToonMaterial	js/three.js	/^	function MeshToonMaterial( parameters ) {$/;"	r
Mf	js/three.min.js	/^-q.y,-q.z)):(u=1,l.setFromMatrixPosition(v.target.matrixWorld),p.lookAt(l),p.updateMatrixWorld(),J.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),J.multiply(p.projectionMatrix),J.multiply(p.matrixWorldInverse));a.setRenderTarget(y);a.clear();for(v=0;v<u;v++)I&&(l.copy(p.position),l.add(m[v]),p.up.copy(t[v]),p.lookAt(l),p.updateMatrixWorld(),n.viewport(x[v])),g.multiplyMatrices(p.projectionMatrix,p.matrixWorldInverse),f.setFromMatrix(g),e(c,d,p,I)}}A.needsUpdate=!1}}}function Mf(a){var b={};return{get:function(a){a.isInterleavedBufferAttribute&&$/;"	r
MinEquation	js/three.js	/^	exports.MinEquation = MinEquation;$/;"	r
MinEquation	js/three.js	/^	var MinEquation = 103;$/;"	r
MirroredRepeatWrapping	js/three.js	/^						if ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;$/;"	r
MirroredRepeatWrapping	js/three.js	/^						if ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;$/;"	r
MirroredRepeatWrapping	js/three.js	/^		MirroredRepeatWrapping: MirroredRepeatWrapping$/;"	r
MirroredRepeatWrapping	js/three.js	/^	exports.MirroredRepeatWrapping = MirroredRepeatWrapping;$/;"	r
MirroredRepeatWrapping	js/three.js	/^	var MirroredRepeatWrapping = 1002;$/;"	r
MixOperation	js/three.js	/^	exports.MixOperation = MixOperation;$/;"	r
MixOperation	js/three.js	/^	var MixOperation = 1;$/;"	r
MultiMaterial	js/three.js	/^	exports.MultiMaterial = MultiMaterial;$/;"	r
MultiMaterial	js/three.js	/^	function MultiMaterial( materials ) {$/;"	r
MultiplyBlending	js/three.js	/^				MultiplyBlending: MultiplyBlending,$/;"	r
MultiplyBlending	js/three.js	/^	exports.MultiplyBlending = MultiplyBlending;$/;"	r
MultiplyBlending	js/three.js	/^	var MultiplyBlending = 4;$/;"	r
MultiplyOperation	js/three.js	/^		this.combine = MultiplyOperation;$/;"	r
MultiplyOperation	js/three.js	/^	exports.MultiplyOperation = MultiplyOperation;$/;"	r
MultiplyOperation	js/three.js	/^	var MultiplyOperation = 0;$/;"	r
N	js/three.js	/^			var N = frames.normals[ i ];$/;"	r
N	js/three.js	/^		var N = new Vector3();$/;"	r
N	js/three.min.js	/^C),N=C);null!==G.map?(b.uniform2f(f,G.map.offset.x,G.map.offset.y),b.uniform2f(g,G.map.repeat.x,G.map.repeat.y)):(b.uniform2f(f,0,0),b.uniform2f(g,1,1));b.uniform1f(n,G.opacity);b.uniform3f(l,G.color.r,G.color.g,G.color.b);b.uniform1f(h,G.rotation);b.uniform2fv(k,E);c.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha);c.buffers.depth.setTest(G.depthTest);c.buffers.depth.setMask(G.depthWrite);c.buffers.color.setMask(G.colorWrite);$/;"	r
N	js/three.min.js	/^P[N];Ha.isClockWise(U)&&(P[N]=U.reverse())}}var V=Ha.triangulateShape(a,P),X=a;N=0;for(M=P.length;N<M;N++)U=P[N],a=a.concat(U);var Z,Y=a.length,T,ca=V.length,B=[],G=0;var W=X.length;var ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),B[G]=d(X[G],X[ea],X[Z]);var A=[],da=B.concat();N=0;for(M=P.length;N<M;N++){U=P[N];var ba=[];G=0;W=U.length;ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),ba[G]=d(U[G],U[ea],U[Z]);A.push(ba);da=da.concat(ba)}for(ea=0;ea<x;ea++){W=ea\/x;var fa=$/;"	r
N	js/three.min.js	/^b.bindBuffer(b.ARRAY_BUFFER,ja);b.bufferData(b.ARRAY_BUFFER,N,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,ma);b.bufferData(b.ELEMENT_ARRAY_BUFFER,na,b.STATIC_DRAW);N=b.createProgram();na=b.createShader(b.VERTEX_SHADER);var w=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(na,["precision "+e.precision+" float;","#define SHADER_NAME SpriteMaterial\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float fogDepth;\\nvoid main() {\\n\\tvUV = uvOffset + uv * uvScale;\\n\\tvec2 alignedPosition = position * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tvec4 mvPosition;\\n\\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\tfogDepth = - mvPosition.z;\\n}"].join("\\n"));$/;"	r
N	js/three.min.js	/^b.blendDst,b.blendEquationAlpha,b.blendSrcAlpha,b.blendDstAlpha,b.premultipliedAlpha):g(0);u.setFunc(b.depthFunc);u.setTest(b.depthTest);u.setMask(b.depthWrite);n.setMask(b.colorWrite);l(b.polygonOffset,b.polygonOffsetFactor,b.polygonOffsetUnits)},setFlipSided:h,setCullFace:k,setLineWidth:function(b){b!==N&&(Z&&a.lineWidth(b),N=b)},setPolygonOffset:l,setScissorTest:function(b){b?e(a.SCISSOR_TEST):f(a.SCISSOR_TEST)},activeTexture:q,bindTexture:function(b,c){null===R&&q();var d=O[R];void 0===d&&(d=$/;"	r
N	js/three.min.js	/^b.compileShader(na);b.compileShader(w);b.attachShader(N,na);b.attachShader(N,w);b.linkProgram(N);ga=N;A=b.getAttribLocation(ga,"position");J=b.getAttribLocation(ga,"uv");f=b.getUniformLocation(ga,"uvOffset");g=b.getUniformLocation(ga,"uvScale");h=b.getUniformLocation(ga,"rotation");k=b.getUniformLocation(ga,"scale");l=b.getUniformLocation(ga,"color");q=b.getUniformLocation(ga,"map");n=b.getUniformLocation(ga,"opacity");u=b.getUniformLocation(ga,"modelViewMatrix");r=b.getUniformLocation(ga,"projectionMatrix");$/;"	r
N	js/three.min.js	/^b.uniform1i(m,2),na=N=2)):(b.uniform1i(m,0),na=N=0);for(var D=0,ka=v.length;D<ka;D++)w=v[D],w.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,w.matrixWorld),w.z=-w.modelViewMatrix.elements[14];v.sort(ya);for(var E=[],D=0,ka=v.length;D<ka;D++){w=v[D];var G=w.material;if(!1!==G.visible){w.onBeforeRender(a,p,U,void 0,G,void 0);b.uniform1f(I,G.alphaTest);b.uniformMatrix4fv(u,!1,w.modelViewMatrix.elements);w.matrixWorld.decompose(Ua,M,z);E[0]=z.x;E[1]=z.y;var C=0;p.fog&&G.fog&&(C=na);N!==C&&(b.uniform1i(m,$/;"	r
N	js/three.min.js	/^c.disableUnusedAttributes();c.disable(b.CULL_FACE);c.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,ja);b.vertexAttribPointer(A,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(J,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,ma);b.uniformMatrix4fv(r,!1,U.projectionMatrix.elements);c.activeTexture(b.TEXTURE0);b.uniform1i(q,0);na=N=0;(w=p.fog)?(b.uniform3f(B,w.color.r,w.color.g,w.color.b),w.isFog?(b.uniform1f(x,w.near),b.uniform1f(y,w.far),b.uniform1i(m,1),na=N=1):w.isFogExp2&&(b.uniform1f(t,w.density),$/;"	r
Nb	js/three.min.js	/^function Nb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}function Fc(a,b,c,d,e,f,g,h,k,l){l=void 0!==l?l:1026;if(1026!==l&&1027!==l)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===l&&(c=1012);void 0===c&&1027===l&&(c=1020);da.call(this,null,d,e,f,g,h,l,c,k);this.image={width:a,height:b};this.magFilter=void 0!==g?g:1003;this.minFilter=void 0!==$/;"	r
Nc	js/three.min.js	/^1;u<=b;u++)for(n=1;n<=d;n++){var a=(d+1)*u+(n-1),c=(d+1)*u+n,e=(d+1)*(u-1)+n;x.push((d+1)*(u-1)+(n-1),a,e);x.push(a,c,e)}})();this.setIndex(x);this.addAttribute("position",new z(m,3));this.addAttribute("normal",new z(v,3));this.addAttribute("uv",new z(t,2))}function Nc(a,b,c,d,e,f,g){L.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");$/;"	r
NearestFilter	js/three.js	/^		NearestFilter: NearestFilter,$/;"	r
NearestFilter	js/three.js	/^	exports.NearestFilter = NearestFilter;$/;"	r
NearestFilter	js/three.js	/^	var NearestFilter = 1003;$/;"	r
NearestMipMapLinearFilter	js/three.js	/^		NearestMipMapLinearFilter: NearestMipMapLinearFilter,$/;"	r
NearestMipMapLinearFilter	js/three.js	/^	exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;$/;"	r
NearestMipMapLinearFilter	js/three.js	/^	var NearestMipMapLinearFilter = 1005;$/;"	r
NearestMipMapNearestFilter	js/three.js	/^		NearestMipMapNearestFilter: NearestMipMapNearestFilter,$/;"	r
NearestMipMapNearestFilter	js/three.js	/^	exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;$/;"	r
NearestMipMapNearestFilter	js/three.js	/^	var NearestMipMapNearestFilter = 1004;$/;"	r
NeedsUpdate	js/three.js	/^				versioning = this.Versioning.NeedsUpdate;$/;"	r
NeedsUpdate	js/three.js	/^			NeedsUpdate: 1,$/;"	r
NeverDepth	js/three.js	/^	exports.NeverDepth = NeverDepth;$/;"	r
NeverDepth	js/three.js	/^	var NeverDepth = 0;$/;"	r
Nf	js/three.min.js	/^var Nf=0;w.DefaultUp=new p(0,1,0);w.DefaultMatrixAutoUpdate=!0;Object.assign(w.prototype,ia.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(a){this.quaternion.premultiply(a);return this},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,$/;"	r
NoBlending	js/three.js	/^				NoBlending: NoBlending,$/;"	r
NoBlending	js/three.js	/^	exports.NoBlending = NoBlending;$/;"	r
NoBlending	js/three.js	/^	var NoBlending = 0;$/;"	r
NoColors	js/three.js	/^		this.vertexColors = NoColors; \/\/ THREE.NoColors, THREE.VertexColors, THREE.FaceColors$/;"	r
NoColors	js/three.js	/^	exports.NoColors = NoColors;$/;"	r
NoColors	js/three.js	/^	var NoColors = 0;$/;"	r
NoToneMapping	js/three.js	/^	exports.NoToneMapping = NoToneMapping;$/;"	r
NoToneMapping	js/three.js	/^	var NoToneMapping = 0;$/;"	r
None	js/three.js	/^			None: 0,$/;"	r
None	js/three.js	/^			var versioning = this.Versioning.None;$/;"	r
NormalBlending	js/three.js	/^				NormalBlending: NormalBlending,$/;"	r
NormalBlending	js/three.js	/^			if ( blending === undefined ) blending = NormalBlending;$/;"	r
NormalBlending	js/three.js	/^		this.blending = NormalBlending;$/;"	r
NormalBlending	js/three.js	/^	exports.NormalBlending = NormalBlending;$/;"	r
NormalBlending	js/three.js	/^	var NormalBlending = 1;$/;"	r
NormalBlending	js/three.min.js	/^return a.join("\/")+"\/"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a={NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},b=new H,c=new td,d=new Id;return function(e,f,g){function h(a,b,d,e,h){a=f+a;var l=gc.Handlers.get(a);null!==l?a=l.load(a):(c.setCrossOrigin(g),a=c.load(a));void 0!==b&&(a.repeat.fromArray(b),1!==b[0]&&(a.wrapS=1E3),1!==b[1]&&(a.wrapT=$/;"	r
NotEqualDepth	js/three.js	/^	exports.NotEqualDepth = NotEqualDepth;$/;"	r
NotEqualDepth	js/three.js	/^	var NotEqualDepth = 7;$/;"	r
NumberKeyframeTrack	js/GLTFLoader.js	/^									TypedKeyframeTrack = THREE.NumberKeyframeTrack;$/;"	r
NumberKeyframeTrack	js/three.js	/^	exports.NumberKeyframeTrack = NumberKeyframeTrack;$/;"	r
NumberKeyframeTrack	js/three.js	/^	function NumberKeyframeTrack( name, times, values, interpolation ) {$/;"	r
O	js/three.min.js	/^U=null,K=null,L=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(\/^WebGL\\ ([0-9])\/.exec(a.getParameter(a.VERSION))[1]),Z=1<=parseFloat(m),R=null,O={},Q=new ba,G=new ba,W={};W[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);W[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);n.setClear(0,0,0,1);u.setClear(1);r.setClear(0);e(a.DEPTH_TEST);u.setFunc(3);h(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1);return{buffers:{color:n,depth:u,stencil:r},initAttributes:function(){for(var a=$/;"	r
O	js/three.min.js	/^n+r;var H=x[w++]*n+p;var K=x[w++]*n+r;v.quadraticCurveTo(H,K,D,E);if(m=t[t.length-1]){var L=m.x;m=m.y;for(var O=1;O<=c;O++){var P=O\/c;ub(P,L,H,D);ub(P,m,K,E)}}break;case "b":if(D=x[w++]*n+p,E=x[w++]*n+r,H=x[w++]*n+p,K=x[w++]*n+r,C=x[w++]*n+p,A=x[w++]*n+r,v.bezierCurveTo(H,K,C,A,D,E),m=t[t.length-1])for(L=m.x,m=m.y,O=1;O<=c;O++)P=O\/c,vb(P,L,H,C,D),vb(P,m,K,A,E)}n={offsetX:l.ha*n,path:v}}else n=void 0;g+=n.offsetX;b.push(n.path)}}c=[];d=0;for(a=b.length;d<a;d++)Array.prototype.push.apply(c,b[d].toShapes());$/;"	r
O	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
OPAQUE	js/GLTFLoader.js	/^		OPAQUE: 'OPAQUE',$/;"	r
Ob	js/three.min.js	/^h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){C.call(this);this.type="WireframeGeometry";var b=[],c,d,e,f=[0,0],g={},h=["a","b","c"];if(a&&a.isGeometry){var k=a.faces;var l=0;for(d=k.length;l<d;l++){var q=k[l];for(c=0;3>c;c++){var n=q[h[c]];var u=q[h[(c+1)%3]];f[0]=Math.min(n,u);f[1]=Math.max(n,u);n=f[0]+","+f[1];void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]})}}for(n in g)l=g[n],h=a.vertices[l.index1],b.push(h.x,h.y,h.z),h=a.vertices[l.index2],b.push(h.x,h.y,h.z)}else if(a&&a.isBufferGeometry){var h=$/;"	r
Object3D	js/three.js	/^	exports.Object3D = Object3D;$/;"	r
Object3D	js/three.js	/^	function Object3D() {$/;"	r
ObjectLoader	js/three.js	/^	exports.ObjectLoader = ObjectLoader;$/;"	r
ObjectLoader	js/three.js	/^	function ObjectLoader( manager ) {$/;"	r
Oc	js/three.min.js	/^Oc.prototype.constructor=Oc;Vb.prototype=Object.create(C.prototype);Vb.prototype.constructor=Vb;var Ha={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g;if(0<Ha.area(a))for(g=0;g<c;g++)e[g]=g;else for(g=0;g<c;g++)e[g]=c-1-g;var h=2*c;for(g=c-1;2<c;){if(0>=h--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}var k=$/;"	r
Oc	js/three.min.js	/^Oc;m.TorusBufferGeometry=Vb;m.TextGeometry=Pc;m.TextBufferGeometry=Wb;m.SphereGeometry=Qc;m.SphereBufferGeometry=kb;m.RingGeometry=Rc;m.RingBufferGeometry=Xb;m.PlaneGeometry=zc;m.PlaneBufferGeometry=gb;m.LatheGeometry=Sc;m.LatheBufferGeometry=Yb;m.ShapeGeometry=Zb;m.ShapeBufferGeometry=$b;m.ExtrudeGeometry=Za;m.ExtrudeBufferGeometry=Ga;m.EdgesGeometry=ac;m.ConeGeometry=Tc;m.ConeBufferGeometry=Uc;m.CylinderGeometry=lb;m.CylinderBufferGeometry=Ra;m.CircleGeometry=Vc;m.CircleBufferGeometry=bc;m.BoxGeometry=$/;"	r
Oc	js/three.min.js	/^h.push(a,b,e);this.setIndex(h);this.addAttribute("position",new z(k,3));this.addAttribute("normal",new z(l,3));this.addAttribute("uv",new z(q,2))}function Oc(a,b,c,d,e){L.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new Vb(a,b,c,d,e));this.mergeVertices()}function Vb(a,b,c,d,e){C.call(this);this.type="TorusBufferGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||$/;"	r
OctahedronBufferGeometry	js/three.js	/^		OctahedronBufferGeometry: OctahedronBufferGeometry,$/;"	r
OctahedronBufferGeometry	js/three.js	/^	OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;$/;"	r
OctahedronBufferGeometry	js/three.js	/^	exports.OctahedronBufferGeometry = OctahedronBufferGeometry;$/;"	r
OctahedronBufferGeometry	js/three.js	/^	function OctahedronBufferGeometry( radius, detail ) {$/;"	r
OctahedronGeometry	js/three.js	/^		OctahedronGeometry: OctahedronGeometry,$/;"	r
OctahedronGeometry	js/three.js	/^	OctahedronGeometry.prototype.constructor = OctahedronGeometry;$/;"	r
OctahedronGeometry	js/three.js	/^	exports.OctahedronGeometry = OctahedronGeometry;$/;"	r
OctahedronGeometry	js/three.js	/^	function OctahedronGeometry( radius, detail ) {$/;"	r
OneFactor	js/three.js	/^	exports.OneFactor = OneFactor;$/;"	r
OneFactor	js/three.js	/^	var OneFactor = 201;$/;"	r
OneMinusDstAlphaFactor	js/three.js	/^	exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;$/;"	r
OneMinusDstAlphaFactor	js/three.js	/^	var OneMinusDstAlphaFactor = 207;$/;"	r
OneMinusDstColorFactor	js/three.js	/^	exports.OneMinusDstColorFactor = OneMinusDstColorFactor;$/;"	r
OneMinusDstColorFactor	js/three.js	/^	var OneMinusDstColorFactor = 209;$/;"	r
OneMinusSrcAlphaFactor	js/three.js	/^		this.blendDst = OneMinusSrcAlphaFactor;$/;"	r
OneMinusSrcAlphaFactor	js/three.js	/^	exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;$/;"	r
OneMinusSrcAlphaFactor	js/three.js	/^	var OneMinusSrcAlphaFactor = 205;$/;"	r
OneMinusSrcColorFactor	js/three.js	/^	exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;$/;"	r
OneMinusSrcColorFactor	js/three.js	/^	var OneMinusSrcColorFactor = 203;$/;"	r
OrthographicCamera	js/three.js	/^	exports.OrthographicCamera = OrthographicCamera;$/;"	r
OrthographicCamera	js/three.js	/^	function OrthographicCamera( left, right, top, bottom, near, far ) {$/;"	r
P	js/three.js	/^			P = path.getPointAt( i \/ tubularSegments, P );$/;"	r
P	js/three.js	/^		var P = new Vector3();$/;"	r
P	js/three.min.js	/^P,height:ea*P}};this.setDrawingBufferSize=function(a,b,c){W=a;ea=b;P=c;t.width=a*c;t.height=b*c;this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){ca.set(a,ea-b-d,c,d);aa.viewport(Q.copy(ca).multiplyScalar(P))};this.setScissor=function(a,b,c,d){da.set(a,ea-b-d,c,d);aa.scissor(V.copy(da).multiplyScalar(P))};this.setScissorTest=function(a){aa.setScissorTest(Oe=a)};this.getClearColor=function(){return ia.getClearColor()};this.setClearColor=function(){ia.setClearColor.apply(ia,arguments)};$/;"	r
P1	js/three.js	/^		var P1 = new Vector3();$/;"	r
P2	js/three.js	/^		var P2 = new Vector3();$/;"	r
PATH_PROPERTIES	js/GLTFLoader.js	/^	var PATH_PROPERTIES = {$/;"	r
PCFShadowMap	js/three.js	/^		this.type = PCFShadowMap;$/;"	r
PCFShadowMap	js/three.js	/^	exports.PCFShadowMap = PCFShadowMap;$/;"	r
PCFShadowMap	js/three.js	/^	var PCFShadowMap = 1;$/;"	r
PCFSoftShadowMap	js/three.js	/^	exports.PCFSoftShadowMap = PCFSoftShadowMap;$/;"	r
PCFSoftShadowMap	js/three.js	/^	var PCFSoftShadowMap = 2;$/;"	r
PI	js/three.js	/^				angle = Math.PI;$/;"	r
PI	js/three.js	/^	var lights_phong_pars_fragment = "varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n";$/;"	r
POINTS	js/GLTFLoader.js	/^		POINTS: 0,$/;"	r
ParametricBufferGeometry	js/three.js	/^		ParametricBufferGeometry: ParametricBufferGeometry,$/;"	r
ParametricBufferGeometry	js/three.js	/^	ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;$/;"	r
ParametricBufferGeometry	js/three.js	/^	exports.ParametricBufferGeometry = ParametricBufferGeometry;$/;"	r
ParametricBufferGeometry	js/three.js	/^	function ParametricBufferGeometry( func, slices, stacks ) {$/;"	r
ParametricGeometry	js/three.js	/^		ParametricGeometry: ParametricGeometry,$/;"	r
ParametricGeometry	js/three.js	/^	ParametricGeometry.prototype.constructor = ParametricGeometry;$/;"	r
ParametricGeometry	js/three.js	/^	exports.ParametricGeometry = ParametricGeometry;$/;"	r
ParametricGeometry	js/three.js	/^	function ParametricGeometry( func, slices, stacks ) {$/;"	r
ParametricGeometry	js/three.min.js	/^Vc;bc.prototype=Object.create(C.prototype);bc.prototype.constructor=bc;var Ca=Object.freeze({WireframeGeometry:Ob,ParametricGeometry:Gc,ParametricBufferGeometry:Pb,TetrahedronGeometry:Ic,TetrahedronBufferGeometry:Qb,OctahedronGeometry:Jc,OctahedronBufferGeometry:jb,IcosahedronGeometry:Kc,IcosahedronBufferGeometry:Rb,DodecahedronGeometry:Lc,DodecahedronBufferGeometry:Sb,PolyhedronGeometry:Hc,PolyhedronBufferGeometry:sa,TubeGeometry:Mc,TubeBufferGeometry:Tb,TorusKnotGeometry:Nc,TorusKnotBufferGeometry:Ub,$/;"	r
Particle	js/three.js	/^	exports.Particle = Particle;$/;"	r
Particle	js/three.js	/^	function Particle( material ) {$/;"	r
ParticleBasicMaterial	js/three.js	/^	exports.ParticleBasicMaterial = ParticleBasicMaterial;$/;"	r
ParticleBasicMaterial	js/three.js	/^	function ParticleBasicMaterial( parameters ) {$/;"	r
ParticleSystem	js/three.js	/^	exports.ParticleSystem = ParticleSystem;$/;"	r
ParticleSystem	js/three.js	/^	function ParticleSystem( geometry, material ) {$/;"	r
ParticleSystemMaterial	js/three.js	/^	exports.ParticleSystemMaterial = ParticleSystemMaterial;$/;"	r
ParticleSystemMaterial	js/three.js	/^	function ParticleSystemMaterial( parameters ) {$/;"	r
Path	js/three.js	/^	PathPrototype.constructor = Path;$/;"	r
Path	js/three.js	/^	exports.Path = Path;$/;"	r
Path	js/three.js	/^	function Path( points ) {$/;"	r
PathPrototype	js/three.js	/^	Path.prototype = PathPrototype;$/;"	r
PathPrototype	js/three.js	/^	var PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {$/;"	r
Pb	js/three.min.js	/^Pb.prototype.constructor=Pb;Hc.prototype=Object.create(L.prototype);Hc.prototype.constructor=Hc;sa.prototype=Object.create(C.prototype);sa.prototype.constructor=sa;Ic.prototype=Object.create(L.prototype);Ic.prototype.constructor=Ic;Qb.prototype=Object.create(sa.prototype);Qb.prototype.constructor=Qb;Jc.prototype=Object.create(L.prototype);Jc.prototype.constructor=Jc;jb.prototype=Object.create(sa.prototype);jb.prototype.constructor=jb;Kc.prototype=Object.create(L.prototype);Kc.prototype.constructor=$/;"	r
Pc	js/three.min.js	/^Pc;Wb.prototype=Object.create(Ga.prototype);Wb.prototype.constructor=Wb;Qc.prototype=Object.create(L.prototype);Qc.prototype.constructor=Qc;kb.prototype=Object.create(C.prototype);kb.prototype.constructor=kb;Rc.prototype=Object.create(L.prototype);Rc.prototype.constructor=Rc;Xb.prototype=Object.create(C.prototype);Xb.prototype.constructor=Xb;Sc.prototype=Object.create(L.prototype);Sc.prototype.constructor=Sc;Yb.prototype=Object.create(C.prototype);Yb.prototype.constructor=Yb;Zb.prototype=Object.create(L.prototype);$/;"	r
Pe	js/three.min.js	/^b.remove(a);c.add(a)}};m.WebGLUtils=Pe;m.WireframeGeometry=Ob;m.ParametricGeometry=Gc;m.ParametricBufferGeometry=Pb;m.TetrahedronGeometry=Ic;m.TetrahedronBufferGeometry=Qb;m.OctahedronGeometry=Jc;m.OctahedronBufferGeometry=jb;m.IcosahedronGeometry=Kc;m.IcosahedronBufferGeometry=Rb;m.DodecahedronGeometry=Lc;m.DodecahedronBufferGeometry=Sb;m.PolyhedronGeometry=Hc;m.PolyhedronBufferGeometry=sa;m.TubeGeometry=Mc;m.TubeBufferGeometry=Tb;m.TorusKnotGeometry=Nc;m.TorusKnotBufferGeometry=Ub;m.TorusGeometry=$/;"	r
Pe	js/three.min.js	/^h?this.numPlanes:0;this.numPlanes+=k}}}function Pe(a,b){return{convert:function(c){if(1E3===c)return a.REPEAT;if(1001===c)return a.CLAMP_TO_EDGE;if(1002===c)return a.MIRRORED_REPEAT;if(1003===c)return a.NEAREST;if(1004===c)return a.NEAREST_MIPMAP_NEAREST;if(1005===c)return a.NEAREST_MIPMAP_LINEAR;if(1006===c)return a.LINEAR;if(1007===c)return a.LINEAR_MIPMAP_NEAREST;if(1008===c)return a.LINEAR_MIPMAP_LINEAR;if(1009===c)return a.UNSIGNED_BYTE;if(1017===c)return a.UNSIGNED_SHORT_4_4_4_4;if(1018===c)return a.UNSIGNED_SHORT_5_5_5_1;$/;"	r
PerspectiveCamera	js/three.js	/^	exports.PerspectiveCamera = PerspectiveCamera;$/;"	r
PerspectiveCamera	js/three.js	/^	function PerspectiveCamera( fov, aspect, near, far ) {$/;"	r
Pf	js/three.min.js	/^I[y.b],I[y.c])}for(B=0;B<n;B++)I=q[B].vertexNormals[l],m[B].push(I.a,I.b,I.c);t&&this.skinIndices.push(r[y.a],r[y.b],r[y.c]);x&&this.skinWeights.push(p[y.a],p[y.b],p[y.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this}});var Pf=1;Object.assign(C.prototype,ia.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},$/;"	r
Plane	js/three.js	/^	exports.Plane = Plane;$/;"	r
Plane	js/three.js	/^	function Plane( normal, constant ) {$/;"	r
PlaneBufferGeometry	js/three.js	/^		PlaneBufferGeometry: PlaneBufferGeometry,$/;"	r
PlaneBufferGeometry	js/three.js	/^	PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;$/;"	r
PlaneBufferGeometry	js/three.js	/^	exports.PlaneBufferGeometry = PlaneBufferGeometry;$/;"	r
PlaneBufferGeometry	js/three.js	/^	function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {$/;"	r
PlaneGeometry	js/three.js	/^		PlaneGeometry: PlaneGeometry,$/;"	r
PlaneGeometry	js/three.js	/^	PlaneGeometry.prototype.constructor = PlaneGeometry;$/;"	r
PlaneGeometry	js/three.js	/^	exports.PlaneGeometry = PlaneGeometry;$/;"	r
PlaneGeometry	js/three.js	/^	function PlaneGeometry( width, height, widthSegments, heightSegments ) {$/;"	r
PlaneHelper	js/three.js	/^	PlaneHelper.prototype.constructor = PlaneHelper;$/;"	r
PlaneHelper	js/three.js	/^	exports.PlaneHelper = PlaneHelper;$/;"	r
PlaneHelper	js/three.js	/^	function PlaneHelper( plane, size, hex ) {$/;"	r
Point	js/three.js	/^						\/\/ console.log( "Vertex (Hole): " + inHoleIdx + ", Point: " + shape[inShapeIdx].x + "\/" + shape[inShapeIdx].y );$/;"	r
Point	js/three.js	/^						\/\/ console.log( "Vertex (Shape): " + inShapeIdx + ", Point: " + hole[inHoleIdx].x + "\/" + hole[inHoleIdx].y );$/;"	r
PointCloud	js/three.js	/^			PointCloud: {$/;"	r
PointCloud	js/three.js	/^	exports.PointCloud = PointCloud;$/;"	r
PointCloud	js/three.js	/^	function PointCloud( geometry, material ) {$/;"	r
PointCloudMaterial	js/three.js	/^	exports.PointCloudMaterial = PointCloudMaterial;$/;"	r
PointCloudMaterial	js/three.js	/^	function PointCloudMaterial( parameters ) {$/;"	r
PointLight	js/three.js	/^	exports.PointLight = PointLight;$/;"	r
PointLight	js/three.js	/^	function PointLight( color, intensity, distance, decay ) {$/;"	r
PointLightHelper	js/three.js	/^	PointLightHelper.prototype.constructor = PointLightHelper;$/;"	r
PointLightHelper	js/three.js	/^	exports.PointLightHelper = PointLightHelper;$/;"	r
PointLightHelper	js/three.js	/^	function PointLightHelper( light, sphereSize, color ) {$/;"	r
Points	js/three.js	/^			Points: { threshold: 1 },$/;"	r
Points	js/three.js	/^	exports.Points = Points;$/;"	r
Points	js/three.js	/^	function Points( geometry, material ) {$/;"	r
PointsMaterial	js/three.js	/^			PointsMaterial: 'points',$/;"	r
PointsMaterial	js/three.js	/^		PointsMaterial: PointsMaterial,$/;"	r
PointsMaterial	js/three.js	/^	PointsMaterial.prototype.constructor = PointsMaterial;$/;"	r
PointsMaterial	js/three.js	/^	exports.PointsMaterial = PointsMaterial;$/;"	r
PointsMaterial	js/three.js	/^	function PointsMaterial( parameters ) {$/;"	r
PolarGridHelper	js/three.js	/^	PolarGridHelper.prototype.constructor = PolarGridHelper;$/;"	r
PolarGridHelper	js/three.js	/^	exports.PolarGridHelper = PolarGridHelper;$/;"	r
PolarGridHelper	js/three.js	/^	function PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {$/;"	r
PolyhedronBufferGeometry	js/three.js	/^		PolyhedronBufferGeometry: PolyhedronBufferGeometry,$/;"	r
PolyhedronBufferGeometry	js/three.js	/^	PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;$/;"	r
PolyhedronBufferGeometry	js/three.js	/^	exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;$/;"	r
PolyhedronBufferGeometry	js/three.js	/^	function PolyhedronBufferGeometry( vertices, indices, radius, detail ) {$/;"	r
PolyhedronGeometry	js/three.js	/^		PolyhedronGeometry: PolyhedronGeometry,$/;"	r
PolyhedronGeometry	js/three.js	/^	PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;$/;"	r
PolyhedronGeometry	js/three.js	/^	exports.PolyhedronGeometry = PolyhedronGeometry;$/;"	r
PolyhedronGeometry	js/three.js	/^	function PolyhedronGeometry( vertices, indices, radius, detail ) {$/;"	r
PositionalAudio	js/three.js	/^	exports.PositionalAudio = PositionalAudio;$/;"	r
PositionalAudio	js/three.js	/^	function PositionalAudio( listener ) {$/;"	r
Projector	js/three.js	/^	exports.Projector = Projector;$/;"	r
Projector	js/three.js	/^	function Projector() {$/;"	r
PropertyBinding	js/three.js	/^	exports.PropertyBinding = PropertyBinding;$/;"	r
PropertyBinding	js/three.js	/^	function PropertyBinding( rootNode, path, parsedPath ) {$/;"	r
PropertyMixer	js/three.js	/^	exports.PropertyMixer = PropertyMixer;$/;"	r
PropertyMixer	js/three.js	/^	function PropertyMixer( binding, typeName, valueSize ) {$/;"	r
PureArrayUniform	js/three.js	/^	function PureArrayUniform( id, activeInfo, addr ) {$/;"	r
Q	js/three.min.js	/^d.setTexture2D(G.map||He,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);w.onAfterRender(a,p,U,void 0,G,void 0)}}c.enable(b.CULL_FACE);c.reset()}}}function Q(){Object.defineProperty(this,"id",{value:Lf++});this.uuid=R.generateUUID();this.name="";this.type="Material";this.lights=this.fog=!0;this.blending=1;this.side=0;this.flatShading=!1;this.vertexColors=0;this.opacity=1;this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=$/;"	r
Qc	js/three.min.js	/^function Qc(a,b,c,d,e,f,g){L.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new kb(a,b,c,d,e,f,g));this.mergeVertices()}function kb(a,b,c,d,e,f,g){C.call(this);this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==$/;"	r
Qd	js/three.min.js	/^[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function Qd(a){if(0===a.length)return-Infinity;for(var b=a[0],c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}function C(){Object.defineProperty(this,"id",{value:Pf+=2});this.uuid=R.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes=$/;"	r
QdN	js/three.js	/^				var QdN = - sign * diff.dot( normal );$/;"	r
QuadraticBezier	js/three.js	/^	function QuadraticBezier( t, p0, p1, p2 ) {$/;"	r
QuadraticBezierCurve	js/three.js	/^	QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;$/;"	r
QuadraticBezierCurve	js/three.js	/^	exports.QuadraticBezierCurve = QuadraticBezierCurve;$/;"	r
QuadraticBezierCurve	js/three.js	/^	function QuadraticBezierCurve( v0, v1, v2 ) {$/;"	r
QuadraticBezierCurve3	js/three.js	/^	QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;$/;"	r
QuadraticBezierCurve3	js/three.js	/^	exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;$/;"	r
QuadraticBezierCurve3	js/three.js	/^	function QuadraticBezierCurve3( v0, v1, v2 ) {$/;"	r
QuadraticBezierP0	js/three.js	/^	function QuadraticBezierP0( t, p ) {$/;"	r
QuadraticBezierP1	js/three.js	/^	function QuadraticBezierP1( t, p ) {$/;"	r
QuadraticBezierP2	js/three.js	/^	function QuadraticBezierP2( t, p ) {$/;"	r
Quaternion	js/three.js	/^	exports.Quaternion = Quaternion;$/;"	r
Quaternion	js/three.js	/^	function Quaternion( x, y, z, w ) {$/;"	r
QuaternionKeyframeTrack	js/GLTFLoader.js	/^									TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;$/;"	r
QuaternionKeyframeTrack	js/three.js	/^						QuaternionKeyframeTrack, boneName + '.quaternion',$/;"	r
QuaternionKeyframeTrack	js/three.js	/^	exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;$/;"	r
QuaternionKeyframeTrack	js/three.js	/^	function QuaternionKeyframeTrack( name, times, values, interpolation ) {$/;"	r
QuaternionLinearInterpolant	js/three.js	/^	exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;$/;"	r
QuaternionLinearInterpolant	js/three.js	/^	function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
R	js/three.min.js	/^var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){void 0!==this._listeners&&(a=this._listeners[a],void 0!==a&&(b=a.indexOf(b),-1!==b&&a.splice(b,1)))},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var b=b.slice(0),c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}});var R={DEG2RAD:Math.PI\/180,RAD2DEG:180\/Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),$/;"	r
RAD2DEG	js/three.js	/^		RAD2DEG: 180 \/ Math.PI,$/;"	r
RAD2DEG	js/three.min.js	/^var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){void 0!==this._listeners&&(a=this._listeners[a],void 0!==a&&(b=a.indexOf(b),-1!==b&&a.splice(b,1)))},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var b=b.slice(0),c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}});var R={DEG2RAD:Math.PI\/180,RAD2DEG:180\/Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),$/;"	r
REPEAT	js/GLTFLoader.js	/^		REPEAT: 10497,$/;"	r
REVISION	js/three.js	/^	exports.REVISION = REVISION;$/;"	r
REVISION	js/three.js	/^	var REVISION = '88dev';$/;"	r
RGBADepthPacking	js/three.js	/^	exports.RGBADepthPacking = RGBADepthPacking;$/;"	r
RGBADepthPacking	js/three.js	/^	var RGBADepthPacking = 3201;$/;"	r
RGBAFormat	js/three.js	/^	exports.RGBAFormat = RGBAFormat;$/;"	r
RGBAFormat	js/three.js	/^	var RGBAFormat = 1023;$/;"	r
RGBAFormat	js/three.js	/^	var RGBEFormat = RGBAFormat;$/;"	r
RGBA_PVRTC_2BPPV1_Format	js/three.js	/^	exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;$/;"	r
RGBA_PVRTC_2BPPV1_Format	js/three.js	/^	var RGBA_PVRTC_2BPPV1_Format = 2103;$/;"	r
RGBA_PVRTC_4BPPV1_Format	js/three.js	/^	exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;$/;"	r
RGBA_PVRTC_4BPPV1_Format	js/three.js	/^	var RGBA_PVRTC_4BPPV1_Format = 2102;$/;"	r
RGBA_S3TC_DXT1_Format	js/three.js	/^	exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;$/;"	r
RGBA_S3TC_DXT1_Format	js/three.js	/^	var RGBA_S3TC_DXT1_Format = 2002;$/;"	r
RGBA_S3TC_DXT3_Format	js/three.js	/^	exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;$/;"	r
RGBA_S3TC_DXT3_Format	js/three.js	/^	var RGBA_S3TC_DXT3_Format = 2003;$/;"	r
RGBA_S3TC_DXT5_Format	js/three.js	/^	exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;$/;"	r
RGBA_S3TC_DXT5_Format	js/three.js	/^	var RGBA_S3TC_DXT5_Format = 2004;$/;"	r
RGBDEncoding	js/three.js	/^	exports.RGBDEncoding = RGBDEncoding;$/;"	r
RGBDEncoding	js/three.js	/^	var RGBDEncoding = 3006;$/;"	r
RGBEEncoding	js/three.js	/^	exports.RGBEEncoding = RGBEEncoding;$/;"	r
RGBEEncoding	js/three.js	/^	var RGBEEncoding = 3002;$/;"	r
RGBEFormat	js/three.js	/^	exports.RGBEFormat = RGBEFormat;$/;"	r
RGBEFormat	js/three.js	/^	var RGBEFormat = RGBAFormat;$/;"	r
RGBFormat	js/three.js	/^	exports.RGBFormat = RGBFormat;$/;"	r
RGBFormat	js/three.js	/^	var RGBFormat = 1022;$/;"	r
RGBM16Encoding	js/three.js	/^	exports.RGBM16Encoding = RGBM16Encoding;$/;"	r
RGBM16Encoding	js/three.js	/^	var RGBM16Encoding = 3005;$/;"	r
RGBM7Encoding	js/three.js	/^	exports.RGBM7Encoding = RGBM7Encoding;$/;"	r
RGBM7Encoding	js/three.js	/^	var RGBM7Encoding = 3004;$/;"	r
RGB_ETC1_Format	js/three.js	/^	exports.RGB_ETC1_Format = RGB_ETC1_Format;$/;"	r
RGB_ETC1_Format	js/three.js	/^	var RGB_ETC1_Format = 2151;$/;"	r
RGB_PVRTC_2BPPV1_Format	js/three.js	/^	exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;$/;"	r
RGB_PVRTC_2BPPV1_Format	js/three.js	/^	var RGB_PVRTC_2BPPV1_Format = 2101;$/;"	r
RGB_PVRTC_4BPPV1_Format	js/three.js	/^	exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;$/;"	r
RGB_PVRTC_4BPPV1_Format	js/three.js	/^	var RGB_PVRTC_4BPPV1_Format = 2100;$/;"	r
RGB_S3TC_DXT1_Format	js/three.js	/^	exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;$/;"	r
RGB_S3TC_DXT1_Format	js/three.js	/^	var RGB_S3TC_DXT1_Format = 2001;$/;"	r
RawShaderMaterial	js/three.js	/^		RawShaderMaterial: RawShaderMaterial,$/;"	r
RawShaderMaterial	js/three.js	/^	RawShaderMaterial.prototype.constructor = RawShaderMaterial;$/;"	r
RawShaderMaterial	js/three.js	/^	exports.RawShaderMaterial = RawShaderMaterial;$/;"	r
RawShaderMaterial	js/three.js	/^	function RawShaderMaterial( parameters ) {$/;"	r
Ray	js/three.js	/^	exports.Ray = Ray;$/;"	r
Ray	js/three.js	/^	function Ray( origin, direction ) {$/;"	r
Raycaster	js/three.js	/^	exports.Raycaster = Raycaster;$/;"	r
Raycaster	js/three.js	/^	function Raycaster( origin, direction, near, far ) {$/;"	r
Rc	js/three.min.js	/^g),(l!==c-1||h<Math.PI)&&v.push(d,e,g);this.setIndex(v);this.addAttribute("position",new z(t,3));this.addAttribute("normal",new z(x,3));this.addAttribute("uv",new z(y,2))}function Rc(a,b,c,d,e,f){L.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new Xb(a,b,c,d,e,f));this.mergeVertices()}function Xb(a,b,c,d,e,f){C.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:a,$/;"	r
Rd	js/three.min.js	/^a);}}function Rd(a,b){b=Le(b);return"vec4 "+a+"( vec4 value ) { return "+b[0]+"ToLinear"+b[1]+"; }"}function dg(a,b){b=Le(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+b[0]+b[1]+"; }"}function eg(a,b){switch(b){case 1:b="Linear";break;case 2:b="Reinhard";break;case 3:b="Uncharted2";break;case 4:b="OptimizedCineon";break;default:throw Error("unsupported toneMapping: "+b);}return"vec3 "+a+"( vec3 color ) { return "+b+"ToneMapping( color ); }"}function fg(a,b,c){a=a||{};return[a.derivatives||$/;"	r
Re	js/three.min.js	/^a=void 0);this.manager=void 0!==a?a:wa;this.withCredentials=!1}function Re(a){this.manager=void 0!==a?a:wa;this.texturePath=""}function Se(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);var f=a*a;return(2*c-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function ub(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}function vb(a,b,c,d,e){var f=1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}function ca(){this.type="Curve";this.arcLengthDivisions=200}function Ma(a,b){ca.call(this);this.type="LineCurve";this.v1=a;$/;"	r
RePathPart	js/three.js	/^	var RePathPart = \/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;$/;"	r
RectAreaLight	js/three.js	/^	exports.RectAreaLight = RectAreaLight;$/;"	r
RectAreaLight	js/three.js	/^	function RectAreaLight( color, intensity, width, height ) {$/;"	r
RectAreaLightHelper	js/three.js	/^	RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;$/;"	r
RectAreaLightHelper	js/three.js	/^	exports.RectAreaLightHelper = RectAreaLightHelper;$/;"	r
RectAreaLightHelper	js/three.js	/^	function RectAreaLightHelper( light, color ) {$/;"	r
ReinhardToneMapping	js/three.js	/^	exports.ReinhardToneMapping = ReinhardToneMapping;$/;"	r
ReinhardToneMapping	js/three.js	/^	var ReinhardToneMapping = 2;$/;"	r
RepeatWrapping	js/three.js	/^						if ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;$/;"	r
RepeatWrapping	js/three.js	/^						if ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;$/;"	r
RepeatWrapping	js/three.js	/^						if ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;$/;"	r
RepeatWrapping	js/three.js	/^						if ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;$/;"	r
RepeatWrapping	js/three.js	/^		RepeatWrapping: RepeatWrapping,$/;"	r
RepeatWrapping	js/three.js	/^	exports.RepeatWrapping = RepeatWrapping;$/;"	r
RepeatWrapping	js/three.js	/^	var RepeatWrapping = 1000;$/;"	r
ReverseSubtractEquation	js/three.js	/^	exports.ReverseSubtractEquation = ReverseSubtractEquation;$/;"	r
ReverseSubtractEquation	js/three.js	/^	var ReverseSubtractEquation = 102;$/;"	r
Rf	js/three.min.js	/^c.update(l.geometry)),l.material.uniforms.tCube.value=d,b.push(l,l.geometry,l.material,0,null)):d&&d.isTexture&&(void 0===h&&(h=new Gb(-1,1,1,-1,0,1),k=new qa(new gb(2,2),new va({depthTest:!1,depthWrite:!1,fog:!1})),c.update(k.geometry)),k.material.map=d,a.renderBufferDirect(h,null,k.geometry,k.material,k,null))}}}function Rf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program&&b.program&&a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-$/;"	r
RingBufferGeometry	js/three.js	/^		RingBufferGeometry: RingBufferGeometry,$/;"	r
RingBufferGeometry	js/three.js	/^	RingBufferGeometry.prototype.constructor = RingBufferGeometry;$/;"	r
RingBufferGeometry	js/three.js	/^	exports.RingBufferGeometry = RingBufferGeometry;$/;"	r
RingBufferGeometry	js/three.js	/^	function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {$/;"	r
RingGeometry	js/three.js	/^		RingGeometry: RingGeometry,$/;"	r
RingGeometry	js/three.js	/^	RingGeometry.prototype.constructor = RingGeometry;$/;"	r
RingGeometry	js/three.js	/^	exports.RingGeometry = RingGeometry;$/;"	r
RingGeometry	js/three.js	/^	function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {$/;"	r
RotationOrders	js/three.js	/^	Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];$/;"	r
S	js/three.min.js	/^this.width;a.object.height=this.height;return a}});var S={arraySlice:function(a,b,c){return S.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:"number"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-$/;"	r
SAMPLER_2D	js/GLTFLoader.js	/^		SAMPLER_2D: 35678,$/;"	r
SAMPLER_EXTERNAL_OES	js/three.js	/^			case 0x8b5e: case 0x8d66: return setValueT1; \/\/ SAMPLER_2D, SAMPLER_EXTERNAL_OES$/;"	r
SHORT	js/three.js	/^				type = gl.SHORT;$/;"	r
STATES_ENABLES	js/GLTFLoader.js	/^	var STATES_ENABLES = {$/;"	r
STENCIL_BUFFER_BIT	js/three.js	/^			if ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;$/;"	r
STEP	js/GLTFLoader.js	/^		STEP: THREE.InterpolateDiscrete$/;"	r
Sc	js/three.min.js	/^f,q);this.setIndex(g);this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(k,3));this.addAttribute("uv",new z(l,2))}function Sc(a,b,c,d){L.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new Yb(a,b,c,d));this.mergeVertices()}function Yb(a,b,c,d){C.call(this);this.type="LatheBufferGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=R.clamp(d,$/;"	r
Scene	js/three.js	/^	exports.Scene = Scene;$/;"	r
Scene	js/three.js	/^	function Scene() {$/;"	r
SceneUtils	js/three.js	/^	exports.SceneUtils = SceneUtils;$/;"	r
SceneUtils	js/three.js	/^	var SceneUtils = {$/;"	r
SetterByBindingTypeAndVersioning	js/three.js	/^		SetterByBindingTypeAndVersioning: [$/;"	r
Sf	js/three.min.js	/^b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Sf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Tf(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,k){var l=a[b];void 0===l?(l={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:k},a[b]=l):(l.id=e.id,l.object=e,l.geometry=f,l.material=g,l.program=g.program,l.renderOrder=e.renderOrder,$/;"	r
ShaderChunk	js/three.js	/^	exports.ShaderChunk = ShaderChunk;$/;"	r
ShaderChunk	js/three.js	/^	var ShaderChunk = {$/;"	r
ShaderLib	js/three.js	/^	exports.ShaderLib = ShaderLib;$/;"	r
ShaderLib	js/three.js	/^	var ShaderLib = {$/;"	r
ShaderMaterial	js/three.js	/^		ShaderMaterial: ShaderMaterial,$/;"	r
ShaderMaterial	js/three.js	/^	ShaderMaterial.prototype.constructor = ShaderMaterial;$/;"	r
ShaderMaterial	js/three.js	/^	exports.ShaderMaterial = ShaderMaterial;$/;"	r
ShaderMaterial	js/three.js	/^	function ShaderMaterial( parameters ) {$/;"	r
ShadowMaterial	js/three.js	/^			ShadowMaterial: 'shadow'$/;"	r
ShadowMaterial	js/three.js	/^		ShadowMaterial: ShadowMaterial,$/;"	r
ShadowMaterial	js/three.js	/^	ShadowMaterial.prototype.constructor = ShadowMaterial;$/;"	r
ShadowMaterial	js/three.js	/^	exports.ShadowMaterial = ShadowMaterial;$/;"	r
ShadowMaterial	js/three.js	/^	function ShadowMaterial( parameters ) {$/;"	r
Shape	js/three.js	/^	exports.Shape = Shape;$/;"	r
Shape	js/three.js	/^	function Shape() {$/;"	r
ShapeBufferGeometry	js/three.js	/^		ShapeBufferGeometry: ShapeBufferGeometry,$/;"	r
ShapeBufferGeometry	js/three.js	/^	ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;$/;"	r
ShapeBufferGeometry	js/three.js	/^	exports.ShapeBufferGeometry = ShapeBufferGeometry;$/;"	r
ShapeBufferGeometry	js/three.js	/^	function ShapeBufferGeometry( shapes, curveSegments ) {$/;"	r
ShapeGeometry	js/three.js	/^		ShapeGeometry: ShapeGeometry,$/;"	r
ShapeGeometry	js/three.js	/^	ShapeGeometry.prototype.constructor = ShapeGeometry;$/;"	r
ShapeGeometry	js/three.js	/^	exports.ShapeGeometry = ShapeGeometry;$/;"	r
ShapeGeometry	js/three.js	/^	function ShapeGeometry( shapes, curveSegments ) {$/;"	r
ShapePath	js/three.js	/^	exports.ShapePath = ShapePath;$/;"	r
ShapePath	js/three.js	/^	function ShapePath() {$/;"	r
ShapeUtils	js/three.js	/^	exports.ShapeUtils = ShapeUtils;$/;"	r
ShapeUtils	js/three.js	/^	var ShapeUtils = {$/;"	r
ShortType	js/three.js	/^	exports.ShortType = ShortType;$/;"	r
ShortType	js/three.js	/^	var ShortType = 1011;$/;"	r
SingleUniform	js/three.js	/^	function SingleUniform( id, activeInfo, addr ) {$/;"	r
Skeleton	js/three.js	/^	exports.Skeleton = Skeleton;$/;"	r
Skeleton	js/three.js	/^	function Skeleton( bones, boneInverses ) {$/;"	r
SkeletonHelper	js/three.js	/^	SkeletonHelper.prototype.constructor = SkeletonHelper;$/;"	r
SkeletonHelper	js/three.js	/^	exports.SkeletonHelper = SkeletonHelper;$/;"	r
SkeletonHelper	js/three.js	/^	function SkeletonHelper( object ) {$/;"	r
SkinnedMesh	js/three.js	/^	exports.SkinnedMesh = SkinnedMesh;$/;"	r
SkinnedMesh	js/three.js	/^	function SkinnedMesh( geometry, material ) {$/;"	r
SmoothShading	js/three.js	/^	exports.SmoothShading = SmoothShading;$/;"	r
SmoothShading	js/three.js	/^	var SmoothShading = 2;$/;"	r
Sphere	js/three.js	/^	exports.Sphere = Sphere;$/;"	r
Sphere	js/three.js	/^	function Sphere( center, radius ) {$/;"	r
SphereBufferGeometry	js/three.js	/^		SphereBufferGeometry: SphereBufferGeometry,$/;"	r
SphereBufferGeometry	js/three.js	/^	SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;$/;"	r
SphereBufferGeometry	js/three.js	/^	exports.SphereBufferGeometry = SphereBufferGeometry;$/;"	r
SphereBufferGeometry	js/three.js	/^	function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {$/;"	r
SphereGeometry	js/three.js	/^		SphereGeometry: SphereGeometry,$/;"	r
SphereGeometry	js/three.js	/^	SphereGeometry.prototype.constructor = SphereGeometry;$/;"	r
SphereGeometry	js/three.js	/^	exports.SphereGeometry = SphereGeometry;$/;"	r
SphereGeometry	js/three.js	/^	function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {$/;"	r
Spherical	js/three.js	/^	exports.Spherical = Spherical;$/;"	r
Spherical	js/three.js	/^	function Spherical( radius, phi, theta ) {$/;"	r
SphericalReflectionMapping	js/three.js	/^		SphericalReflectionMapping: SphericalReflectionMapping,$/;"	r
SphericalReflectionMapping	js/three.js	/^	exports.SphericalReflectionMapping = SphericalReflectionMapping;$/;"	r
SphericalReflectionMapping	js/three.js	/^	var SphericalReflectionMapping = 305;$/;"	r
Spline	js/three.js	/^	exports.Spline = Spline;$/;"	r
Spline	js/three.js	/^	function Spline( points ) {$/;"	r
SplineCurve	js/three.js	/^	SplineCurve.prototype.constructor = SplineCurve;$/;"	r
SplineCurve	js/three.js	/^	exports.SplineCurve = SplineCurve;$/;"	r
SplineCurve	js/three.js	/^	function SplineCurve( points \/* array of Vector2 *\/ ) {$/;"	r
SplineCurve3	js/three.js	/^	exports.SplineCurve3 = SplineCurve3;$/;"	r
SplineCurve3	js/three.js	/^	function SplineCurve3( points ) {$/;"	r
SpotLight	js/three.js	/^	exports.SpotLight = SpotLight;$/;"	r
SpotLight	js/three.js	/^	function SpotLight( color, intensity, distance, angle, penumbra, decay ) {$/;"	r
SpotLightHelper	js/three.js	/^	SpotLightHelper.prototype.constructor = SpotLightHelper;$/;"	r
SpotLightHelper	js/three.js	/^	exports.SpotLightHelper = SpotLightHelper;$/;"	r
SpotLightHelper	js/three.js	/^	function SpotLightHelper( light, color ) {$/;"	r
SpotLightShadow	js/three.js	/^	exports.SpotLightShadow = SpotLightShadow;$/;"	r
SpotLightShadow	js/three.js	/^	function SpotLightShadow() {$/;"	r
Sprite	js/three.js	/^			Sprite: {}$/;"	r
Sprite	js/three.js	/^	exports.Sprite = Sprite;$/;"	r
Sprite	js/three.js	/^	function Sprite( material ) {$/;"	r
SpriteMaterial	js/three.js	/^		SpriteMaterial: SpriteMaterial,$/;"	r
SpriteMaterial	js/three.js	/^	SpriteMaterial.prototype.constructor = SpriteMaterial;$/;"	r
SpriteMaterial	js/three.js	/^	exports.SpriteMaterial = SpriteMaterial;$/;"	r
SpriteMaterial	js/three.js	/^	function SpriteMaterial( parameters ) {$/;"	r
SpriteMaterial	js/three.min.js	/^qb;qb.prototype.isLineDashedMaterial=!0;qb.prototype.copy=function(a){T.prototype.copy.call(this,a);this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};var tg=Object.freeze({ShadowMaterial:cc,SpriteMaterial:Ya,RawShaderMaterial:dc,ShaderMaterial:Aa,PointsMaterial:Ba,MeshPhysicalMaterial:mb,MeshStandardMaterial:La,MeshPhongMaterial:Ia,MeshToonMaterial:nb,MeshNormalMaterial:ob,MeshLambertMaterial:pb,MeshDepthMaterial:Va,MeshDistanceMaterial:Wa,MeshBasicMaterial:va,LineDashedMaterial:qb,$/;"	r
SrcAlphaFactor	js/three.js	/^		this.blendSrc = SrcAlphaFactor;$/;"	r
SrcAlphaFactor	js/three.js	/^	exports.SrcAlphaFactor = SrcAlphaFactor;$/;"	r
SrcAlphaFactor	js/three.js	/^	var SrcAlphaFactor = 204;$/;"	r
SrcAlphaSaturateFactor	js/three.js	/^	exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;$/;"	r
SrcAlphaSaturateFactor	js/three.js	/^	var SrcAlphaSaturateFactor = 210;$/;"	r
SrcColorFactor	js/three.js	/^	exports.SrcColorFactor = SrcColorFactor;$/;"	r
SrcColorFactor	js/three.js	/^	var SrcColorFactor = 202;$/;"	r
StencilBuffer	js/three.js	/^		function StencilBuffer() {$/;"	r
StereoCamera	js/three.js	/^	exports.StereoCamera = StereoCamera;$/;"	r
StereoCamera	js/three.js	/^	function StereoCamera() {$/;"	r
StringKeyframeTrack	js/three.js	/^	exports.StringKeyframeTrack = StringKeyframeTrack;$/;"	r
StringKeyframeTrack	js/three.js	/^	function StringKeyframeTrack( name, times, values, interpolation ) {$/;"	r
StructuredUniform	js/three.js	/^	function StructuredUniform( id ) {$/;"	r
SubtractEquation	js/three.js	/^	exports.SubtractEquation = SubtractEquation;$/;"	r
SubtractEquation	js/three.js	/^	var SubtractEquation = 101;$/;"	r
SubtractiveBlending	js/three.js	/^				SubtractiveBlending: SubtractiveBlending,$/;"	r
SubtractiveBlending	js/three.js	/^	exports.SubtractiveBlending = SubtractiveBlending;$/;"	r
SubtractiveBlending	js/three.js	/^	var SubtractiveBlending = 3;$/;"	r
T	js/three.js	/^		var T = new Vector3();$/;"	r
T	js/three.js	/^	var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n";$/;"	r
T	js/three.min.js	/^"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});T.prototype=Object.create(Q.prototype);T.prototype.constructor=T;T.prototype.isLineBasicMaterial=!0;T.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};$/;"	r
T	js/three.min.js	/^normalmap_pars_fragment:"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n",$/;"	r
TEXTURE_FILTER	js/three.js	/^	var TEXTURE_FILTER = {$/;"	r
TEXTURE_MAPPING	js/three.js	/^	var TEXTURE_MAPPING = {$/;"	r
TEXTURE_WRAPPING	js/three.js	/^	var TEXTURE_WRAPPING = {$/;"	r
TRIANGLES	js/GLTFLoader.js	/^		TRIANGLES: 4,$/;"	r
TRIANGLE_FAN	js/GLTFLoader.js	/^		TRIANGLE_FAN: 6,$/;"	r
TRIANGLE_STRIP	js/GLTFLoader.js	/^		TRIANGLE_STRIP: 5,$/;"	r
TYPED_ARRAYS	js/three.js	/^	var TYPED_ARRAYS = {$/;"	r
Ta	js/three.min.js	/^Ta;Ta.prototype.isCubeTexture=!0;Object.defineProperty(Ta.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});var Be=new da,Ce=new Ta,we=[],ye=[],Ae=new Float32Array(16),ze=new Float32Array(9);Ge.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var Od=\/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;cb.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};cb.prototype.setOptional=function(a,$/;"	r
Tb	js/three.min.js	/^tubularSegments:b,radius:c,radialSegments:d,closed:e};void 0!==f&&console.warn("THREE.TubeGeometry: taper has been removed.");a=new Tb(a,b,c,d,e);this.tangents=a.tangents;this.normals=a.normals;this.binormals=a.binormals;this.fromBufferGeometry(a);this.mergeVertices()}function Tb(a,b,c,d,e){function f(e){q=a.getPointAt(e\/b,q);var f=g.normals[e];e=g.binormals[e];for(u=0;u<=d;u++){var l=u\/d*Math.PI*2,n=Math.sin(l),l=-Math.cos(l);k.x=l*f.x+n*e.x;k.y=l*f.y+n*e.y;k.z=l*f.z+n*e.z;k.normalize();v.push(k.x,$/;"	r
Tc	js/three.min.js	/^y+=w})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(q);this.addAttribute("position",new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(m,2))}function Tc(a,b,c,d,e,f,g){lb.call(this,0,a,b,c,d,e,f,g);this.type="ConeGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Uc(a,b,c,d,e,f,g){Ra.call(this,0,a,b,c,d,e,f,g);this.type="ConeBufferGeometry";this.parameters={radius:a,height:b,radialSegments:c,$/;"	r
TetrahedronBufferGeometry	js/three.js	/^		TetrahedronBufferGeometry: TetrahedronBufferGeometry,$/;"	r
TetrahedronBufferGeometry	js/three.js	/^	TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;$/;"	r
TetrahedronBufferGeometry	js/three.js	/^	exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;$/;"	r
TetrahedronBufferGeometry	js/three.js	/^	function TetrahedronBufferGeometry( radius, detail ) {$/;"	r
TetrahedronGeometry	js/three.js	/^		TetrahedronGeometry: TetrahedronGeometry,$/;"	r
TetrahedronGeometry	js/three.js	/^	TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;$/;"	r
TetrahedronGeometry	js/three.js	/^	exports.TetrahedronGeometry = TetrahedronGeometry;$/;"	r
TetrahedronGeometry	js/three.js	/^	function TetrahedronGeometry( radius, detail ) {$/;"	r
TextBufferGeometry	js/three.js	/^		TextBufferGeometry: TextBufferGeometry,$/;"	r
TextBufferGeometry	js/three.js	/^	TextBufferGeometry.prototype.constructor = TextBufferGeometry;$/;"	r
TextBufferGeometry	js/three.js	/^	exports.TextBufferGeometry = TextBufferGeometry;$/;"	r
TextBufferGeometry	js/three.js	/^	function TextBufferGeometry( text, parameters ) {$/;"	r
TextGeometry	js/three.js	/^		TextGeometry: TextGeometry,$/;"	r
TextGeometry	js/three.js	/^	TextGeometry.prototype.constructor = TextGeometry;$/;"	r
TextGeometry	js/three.js	/^	exports.TextGeometry = TextGeometry;$/;"	r
TextGeometry	js/three.js	/^	function TextGeometry( text, parameters ) {$/;"	r
Texture	js/three.js	/^	exports.Texture = Texture;$/;"	r
Texture	js/three.js	/^	function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {$/;"	r
TextureLoader	js/three.js	/^	exports.TextureLoader = TextureLoader;$/;"	r
TextureLoader	js/three.js	/^	function TextureLoader( manager ) {$/;"	r
TimeBufferType	js/three.js	/^		TimeBufferType: Float32Array,$/;"	r
TorusBufferGeometry	js/three.js	/^		TorusBufferGeometry: TorusBufferGeometry,$/;"	r
TorusBufferGeometry	js/three.js	/^	TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;$/;"	r
TorusBufferGeometry	js/three.js	/^	exports.TorusBufferGeometry = TorusBufferGeometry;$/;"	r
TorusBufferGeometry	js/three.js	/^	function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {$/;"	r
TorusGeometry	js/three.js	/^		TorusGeometry: TorusGeometry,$/;"	r
TorusGeometry	js/three.js	/^	TorusGeometry.prototype.constructor = TorusGeometry;$/;"	r
TorusGeometry	js/three.js	/^	exports.TorusGeometry = TorusGeometry;$/;"	r
TorusGeometry	js/three.js	/^	function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {$/;"	r
TorusGeometry	js/three.min.js	/^TorusGeometry:Oc,TorusBufferGeometry:Vb,TextGeometry:Pc,TextBufferGeometry:Wb,SphereGeometry:Qc,SphereBufferGeometry:kb,RingGeometry:Rc,RingBufferGeometry:Xb,PlaneGeometry:zc,PlaneBufferGeometry:gb,LatheGeometry:Sc,LatheBufferGeometry:Yb,ShapeGeometry:Zb,ShapeBufferGeometry:$b,ExtrudeGeometry:Za,ExtrudeBufferGeometry:Ga,EdgesGeometry:ac,ConeGeometry:Tc,ConeBufferGeometry:Uc,CylinderGeometry:lb,CylinderBufferGeometry:Ra,CircleGeometry:Vc,CircleBufferGeometry:bc,BoxGeometry:Hb,BoxBufferGeometry:fb});$/;"	r
TorusKnotBufferGeometry	js/three.js	/^		TorusKnotBufferGeometry: TorusKnotBufferGeometry,$/;"	r
TorusKnotBufferGeometry	js/three.js	/^	TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;$/;"	r
TorusKnotBufferGeometry	js/three.js	/^	exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;$/;"	r
TorusKnotBufferGeometry	js/three.js	/^	function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {$/;"	r
TorusKnotGeometry	js/three.js	/^		TorusKnotGeometry: TorusKnotGeometry,$/;"	r
TorusKnotGeometry	js/three.js	/^	TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;$/;"	r
TorusKnotGeometry	js/three.js	/^	exports.TorusKnotGeometry = TorusKnotGeometry;$/;"	r
TorusKnotGeometry	js/three.js	/^	function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {$/;"	r
Triangle	js/three.js	/^	exports.Triangle = Triangle;$/;"	r
Triangle	js/three.js	/^	function Triangle( a, b, c ) {$/;"	r
TriangleFanDrawMode	js/GLTFLoader.js	/^							mesh.drawMode = THREE.TriangleFanDrawMode;$/;"	r
TriangleFanDrawMode	js/three.js	/^	exports.TriangleFanDrawMode = TriangleFanDrawMode;$/;"	r
TriangleFanDrawMode	js/three.js	/^	var TriangleFanDrawMode = 2;$/;"	r
TriangleStripDrawMode	js/GLTFLoader.js	/^							mesh.drawMode = THREE.TriangleStripDrawMode;$/;"	r
TriangleStripDrawMode	js/three.js	/^	exports.TriangleStripDrawMode = TriangleStripDrawMode;$/;"	r
TriangleStripDrawMode	js/three.js	/^	var TriangleStripDrawMode = 1;$/;"	r
TrianglesDrawMode	js/three.js	/^		this.drawMode = TrianglesDrawMode;$/;"	r
TrianglesDrawMode	js/three.js	/^	exports.TrianglesDrawMode = TrianglesDrawMode;$/;"	r
TrianglesDrawMode	js/three.js	/^	var TrianglesDrawMode = 0;$/;"	r
TubeBufferGeometry	js/three.js	/^		TubeBufferGeometry: TubeBufferGeometry,$/;"	r
TubeBufferGeometry	js/three.js	/^	TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;$/;"	r
TubeBufferGeometry	js/three.js	/^	exports.TubeBufferGeometry = TubeBufferGeometry;$/;"	r
TubeBufferGeometry	js/three.js	/^	function TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {$/;"	r
TubeGeometry	js/three.js	/^		TubeGeometry: TubeGeometry,$/;"	r
TubeGeometry	js/three.js	/^	TubeGeometry.prototype.constructor = TubeGeometry;$/;"	r
TubeGeometry	js/three.js	/^	exports.TubeGeometry = TubeGeometry;$/;"	r
TubeGeometry	js/three.js	/^	function TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {$/;"	r
TypeArray	js/three.js	/^				var TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;$/;"	r
TypedArray	js/GLTFLoader.js	/^				var TypedArray = WEBGL_COMPONENT_TYPES[ accessor.componentType ];$/;"	r
TypedKeyframeTrack	js/GLTFLoader.js	/^									TypedKeyframeTrack = THREE.NumberKeyframeTrack;$/;"	r
TypedKeyframeTrack	js/GLTFLoader.js	/^									TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;$/;"	r
TypedKeyframeTrack	js/GLTFLoader.js	/^									TypedKeyframeTrack = THREE.VectorKeyframeTrack;$/;"	r
TypedKeyframeTrack	js/GLTFLoader.js	/^							var TypedKeyframeTrack;$/;"	r
U	js/three.min.js	/^U=null,K=null,L=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(\/^WebGL\\ ([0-9])\/.exec(a.getParameter(a.VERSION))[1]),Z=1<=parseFloat(m),R=null,O={},Q=new ba,G=new ba,W={};W[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);W[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);n.setClear(0,0,0,1);u.setClear(1);r.setClear(0);e(a.DEPTH_TEST);u.setFunc(3);h(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1);return{buffers:{color:n,depth:u,stencil:r},initAttributes:function(){for(var a=$/;"	r
UNSIGNED_BYTE	js/GLTFLoader.js	/^		UNSIGNED_BYTE: 5121,$/;"	r
UNSIGNED_BYTE	js/three.js	/^				type = gl.UNSIGNED_BYTE;$/;"	r
UNSIGNED_INT	js/three.js	/^				type = gl.UNSIGNED_INT;$/;"	r
UNSIGNED_SHORT	js/GLTFLoader.js	/^		UNSIGNED_SHORT: 5123$/;"	r
UNSIGNED_SHORT	js/three.js	/^				type = gl.UNSIGNED_SHORT;$/;"	r
URL	js/GLTFLoader.js	/^		var URL = window.URL || window.webkitURL;$/;"	r
USE_GLOSSINESSMAP	js/GLTFLoader.js	/^					defines.USE_GLOSSINESSMAP = '';$/;"	r
USE_ROUGHNESSMAP	js/GLTFLoader.js	/^					defines.USE_ROUGHNESSMAP = '';$/;"	r
UVMapping	js/three.js	/^		UVMapping: UVMapping,$/;"	r
UVMapping	js/three.js	/^	Texture.DEFAULT_MAPPING = UVMapping;$/;"	r
UVMapping	js/three.js	/^	exports.UVMapping = UVMapping;$/;"	r
UVMapping	js/three.js	/^	var UVMapping = 300;$/;"	r
Ub	js/three.min.js	/^this.fromBufferGeometry(new Ub(a,b,c,d,e,f));this.mergeVertices()}function Ub(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c\/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}C.call(this);this.type="TorusKnotBufferGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],k=[],l=[],q=[],n,u=new p,m=new p,v=new p,t=new p,x=new p,y=new p,B=new p;for(n=0;n<=$/;"	r
Uf	js/three.min.js	/^l.z=h,l.group=k);(!0===g.transparent?d:c).push(l);b++},sort:function(){1<c.length&&c.sort(Rf);1<d.length&&d.sort(Sf)}}}function Uf(){var a={};return{get:function(b,c){b=b.id+","+c.id;c=a[b];void 0===c&&(c=new Tf,a[b]=c);return c},dispose:function(){a={}}}}function Vf(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Wf(a){var b={},c=new Float32Array(8);return{update:function(d,e,f,g){var h=d.morphTargetInfluences,k=h.length;d=b[e.id];if(void 0===d){d=[];for(var l=0;l<k;l++)d[l]=[l,0];b[e.id]=d}var q=$/;"	r
Uint16Array	js/three.js	/^		Uint16Array: Uint16Array,$/;"	r
Uint16Attribute	js/three.js	/^	exports.Uint16Attribute = Uint16Attribute;$/;"	r
Uint16Attribute	js/three.js	/^	function Uint16Attribute( array, itemSize ) {$/;"	r
Uint16BufferAttribute	js/three.js	/^	Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;$/;"	r
Uint16BufferAttribute	js/three.js	/^	exports.Uint16BufferAttribute = Uint16BufferAttribute;$/;"	r
Uint16BufferAttribute	js/three.js	/^	function Uint16BufferAttribute( array, itemSize, normalized ) {$/;"	r
Uint32Array	js/three.js	/^		Uint32Array: Uint32Array,$/;"	r
Uint32Attribute	js/three.js	/^	exports.Uint32Attribute = Uint32Attribute;$/;"	r
Uint32Attribute	js/three.js	/^	function Uint32Attribute( array, itemSize ) {$/;"	r
Uint32BufferAttribute	js/three.js	/^	Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;$/;"	r
Uint32BufferAttribute	js/three.js	/^	exports.Uint32BufferAttribute = Uint32BufferAttribute;$/;"	r
Uint32BufferAttribute	js/three.js	/^	function Uint32BufferAttribute( array, itemSize, normalized ) {$/;"	r
Uint8Array	js/three.js	/^		Uint8Array: Uint8Array,$/;"	r
Uint8Array	js/three.min.js	/^b.setIndex(new O(c,1)));var d=a.data.attributes;for(f in d){var e=d[f];c=new gf[e.type](e.array);b.addAttribute(f,new O(c,e.itemSize,e.normalized))}var f=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==f)for(c=0,d=f.length;c!==d;++c)e=f[c],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(f=new p,void 0!==a.center&&f.fromArray(a.center),b.boundingSphere=new Da(f,a.radius));return b}});var gf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==$/;"	r
Uint8Attribute	js/three.js	/^	exports.Uint8Attribute = Uint8Attribute;$/;"	r
Uint8Attribute	js/three.js	/^	function Uint8Attribute( array, itemSize ) {$/;"	r
Uint8BufferAttribute	js/three.js	/^	Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;$/;"	r
Uint8BufferAttribute	js/three.js	/^	exports.Uint8BufferAttribute = Uint8BufferAttribute;$/;"	r
Uint8BufferAttribute	js/three.js	/^	function Uint8BufferAttribute( array, itemSize, normalized ) {$/;"	r
Uint8ClampedAttribute	js/three.js	/^	exports.Uint8ClampedAttribute = Uint8ClampedAttribute;$/;"	r
Uint8ClampedAttribute	js/three.js	/^	function Uint8ClampedAttribute( array, itemSize ) {$/;"	r
Uint8ClampedBufferAttribute	js/three.js	/^	Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;$/;"	r
Uint8ClampedBufferAttribute	js/three.js	/^	exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;$/;"	r
Uint8ClampedBufferAttribute	js/three.js	/^	function Uint8ClampedBufferAttribute( array, itemSize, normalized ) {$/;"	r
Uncharted2ToneMapping	js/three.js	/^	exports.Uncharted2ToneMapping = Uncharted2ToneMapping;$/;"	r
Uncharted2ToneMapping	js/three.js	/^	var Uncharted2ToneMapping = 3;$/;"	r
Uniform	js/three.js	/^	exports.Uniform = Uniform;$/;"	r
Uniform	js/three.js	/^	function Uniform( value ) {$/;"	r
UniformContainer	js/three.js	/^	function UniformContainer() {$/;"	r
UniformsCache	js/three.js	/^	function UniformsCache() {$/;"	r
UniformsLib	js/three.js	/^	exports.UniformsLib = UniformsLib;$/;"	r
UniformsLib	js/three.js	/^	var UniformsLib = {$/;"	r
UniformsUtils	js/three.js	/^	exports.UniformsUtils = UniformsUtils;$/;"	r
UniformsUtils	js/three.js	/^	var UniformsUtils = {$/;"	r
UnsignedByteType	js/three.js	/^	exports.UnsignedByteType = UnsignedByteType;$/;"	r
UnsignedByteType	js/three.js	/^	var UnsignedByteType = 1009;$/;"	r
UnsignedInt248Type	js/three.js	/^						texture.type = UnsignedInt248Type;$/;"	r
UnsignedInt248Type	js/three.js	/^		if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;$/;"	r
UnsignedInt248Type	js/three.js	/^	exports.UnsignedInt248Type = UnsignedInt248Type;$/;"	r
UnsignedInt248Type	js/three.js	/^	var UnsignedInt248Type = 1020;$/;"	r
UnsignedIntType	js/three.js	/^	exports.UnsignedIntType = UnsignedIntType;$/;"	r
UnsignedIntType	js/three.js	/^	var UnsignedIntType = 1014;$/;"	r
UnsignedShort4444Type	js/three.js	/^	exports.UnsignedShort4444Type = UnsignedShort4444Type;$/;"	r
UnsignedShort4444Type	js/three.js	/^	var UnsignedShort4444Type = 1017;$/;"	r
UnsignedShort5551Type	js/three.js	/^	exports.UnsignedShort5551Type = UnsignedShort5551Type;$/;"	r
UnsignedShort5551Type	js/three.js	/^	var UnsignedShort5551Type = 1018;$/;"	r
UnsignedShort565Type	js/three.js	/^	exports.UnsignedShort565Type = UnsignedShort565Type;$/;"	r
UnsignedShort565Type	js/three.js	/^	var UnsignedShort565Type = 1019;$/;"	r
UnsignedShortType	js/three.js	/^						texture.type = UnsignedShortType;$/;"	r
UnsignedShortType	js/three.js	/^		if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;$/;"	r
UnsignedShortType	js/three.js	/^	exports.UnsignedShortType = UnsignedShortType;$/;"	r
UnsignedShortType	js/three.js	/^	var UnsignedShortType = 1012;$/;"	r
Va	js/three.min.js	/^null;this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.overdraw=0;this.visible=!0;this.userData={};this.needsUpdate=!0}function Va(a){Q.call(this);this.type="MeshDepthMaterial";this.depthPacking=3200;this.morphTargets=this.skinning=!1;this.displacementMap=$/;"	r
ValueBufferType	js/three.js	/^		ValueBufferType: Array,$/;"	r
ValueBufferType	js/three.js	/^		ValueBufferType: Float32Array,$/;"	r
ValueTypeName	js/three.js	/^						track.ValueTypeName, track.getValueSize() );$/;"	r
ValueTypeName	js/three.js	/^			json.type = track.ValueTypeName; \/\/ mandatory$/;"	r
ValueTypeName	js/three.js	/^		ValueTypeName: 'bool',$/;"	r
ValueTypeName	js/three.js	/^		ValueTypeName: 'color'$/;"	r
ValueTypeName	js/three.js	/^		ValueTypeName: 'number'$/;"	r
ValueTypeName	js/three.js	/^		ValueTypeName: 'quaternion',$/;"	r
ValueTypeName	js/three.js	/^		ValueTypeName: 'string',$/;"	r
ValueTypeName	js/three.js	/^		ValueTypeName: 'vector'$/;"	r
ValueTypeName	js/three.min.js	/^Fd.prototype=Object.assign(Object.create(ab),{constructor:Fd,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Gd.prototype=Object.assign(Object.create(ab),{constructor:Gd,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Hd.prototype=Object.assign(Object.create(ab),{constructor:Hd,ValueTypeName:"color"});$/;"	r
ValueTypeName	js/three.min.js	/^l!==l[0]))if(f)a=!0;else{b=k*e;for(var m=b-e,n=b+e,l=0;l!==e;++l){var p=d[b+l];if(p!==d[m+l]||p!==d[n+l]){a=!0;break}}}if(a){if(k!==g)for(c[g]=c[k],b=k*e,a=g*e,l=0;l!==e;++l)d[a+l]=d[b+l];++g}}if(0<h){c[g]=c[h];b=h*e;a=g*e;for(l=0;l!==e;++l)d[a+l]=d[b+l];++g}g!==c.length&&(this.times=S.arraySlice(c,0,g),this.values=S.arraySlice(d,0,g*e));return this}};ec.prototype=Object.assign(Object.create(ab),{constructor:ec,ValueTypeName:"vector"});Ed.prototype=Object.assign(Object.create(xa.prototype),{constructor:Ed,$/;"	r
Vc	js/three.min.js	/^Vc;bc.prototype=Object.create(C.prototype);bc.prototype.constructor=bc;var Ca=Object.freeze({WireframeGeometry:Ob,ParametricGeometry:Gc,ParametricBufferGeometry:Pb,TetrahedronGeometry:Ic,TetrahedronBufferGeometry:Qb,OctahedronGeometry:Jc,OctahedronBufferGeometry:jb,IcosahedronGeometry:Kc,IcosahedronBufferGeometry:Rb,DodecahedronGeometry:Lc,DodecahedronBufferGeometry:Sb,PolyhedronGeometry:Hc,PolyhedronBufferGeometry:sa,TubeGeometry:Mc,TubeBufferGeometry:Tb,TorusKnotGeometry:Nc,TorusKnotBufferGeometry:Ub,$/;"	r
Vc	js/three.min.js	/^heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d){L.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new bc(a,b,c,d));this.mergeVertices()}function bc(a,b,c,d){C.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],k,l=new p,q=new D;f.push(0,$/;"	r
Vd	js/three.min.js	/^!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var M=this,H=!1,ka=null,N=null,U=-1,L="",O=null,Z=null,Q=new ba,V=new ba,T=null,G=0,W=t.width,ea=t.height,P=1,ca=new ba(0,0,W,ea),da=new ba(0,0,W,ea),Oe=!1,Td=new ld,Fa=new qg,fa=!1,Ud=!1,md=new K,Jb=new p,Vd={geometries:0,textures:0},Qa={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:Qa,$/;"	r
Vector2	js/three.js	/^	exports.Vector2 = Vector2;$/;"	r
Vector2	js/three.js	/^	function Vector2( x, y ) {$/;"	r
Vector3	js/three.js	/^	exports.Vector3 = Vector3;$/;"	r
Vector3	js/three.js	/^	function Vector3( x, y, z ) {$/;"	r
Vector4	js/three.js	/^	exports.Vector4 = Vector4;$/;"	r
Vector4	js/three.js	/^	function Vector4( x, y, z, w ) {$/;"	r
VectorKeyframeTrack	js/GLTFLoader.js	/^									TypedKeyframeTrack = THREE.VectorKeyframeTrack;$/;"	r
VectorKeyframeTrack	js/three.js	/^						VectorKeyframeTrack, boneName + '.position',$/;"	r
VectorKeyframeTrack	js/three.js	/^						VectorKeyframeTrack, boneName + '.scale',$/;"	r
VectorKeyframeTrack	js/three.js	/^	exports.VectorKeyframeTrack = VectorKeyframeTrack;$/;"	r
VectorKeyframeTrack	js/three.js	/^	function VectorKeyframeTrack( name, times, values, interpolation ) {$/;"	r
Versioning	js/three.js	/^		Versioning: {$/;"	r
Vertex	js/three.js	/^	exports.Vertex = Vertex;$/;"	r
Vertex	js/three.js	/^	function Vertex( x, y, z ) {$/;"	r
VertexColors	js/GLTFLoader.js	/^							material.vertexColors = THREE.VertexColors;$/;"	r
VertexColors	js/three.js	/^							if ( value === true ) json.vertexColors = VertexColors;$/;"	r
VertexColors	js/three.js	/^		if ( this.color === undefined ) this.material.vertexColors = VertexColors;$/;"	r
VertexColors	js/three.js	/^	exports.VertexColors = VertexColors;$/;"	r
VertexColors	js/three.js	/^	var VertexColors = 2;$/;"	r
VertexNormalsHelper	js/three.js	/^	VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;$/;"	r
VertexNormalsHelper	js/three.js	/^	exports.VertexNormalsHelper = VertexNormalsHelper;$/;"	r
VertexNormalsHelper	js/three.js	/^	function VertexNormalsHelper( object, size, hex, linewidth ) {$/;"	r
VideoTexture	js/three.js	/^	VideoTexture.prototype.constructor = VideoTexture;$/;"	r
VideoTexture	js/three.js	/^	exports.VideoTexture = VideoTexture;$/;"	r
VideoTexture	js/three.js	/^	function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {$/;"	r
WEBGL_BLEND_EQUATIONS	js/GLTFLoader.js	/^	var WEBGL_BLEND_EQUATIONS = {$/;"	r
WEBGL_BLEND_FUNCS	js/GLTFLoader.js	/^	var WEBGL_BLEND_FUNCS = {$/;"	r
WEBGL_COMPONENT_TYPES	js/GLTFLoader.js	/^	var WEBGL_COMPONENT_TYPES = {$/;"	r
WEBGL_CONSTANTS	js/GLTFLoader.js	/^	var WEBGL_CONSTANTS = {$/;"	r
WEBGL_DEPTH_FUNCS	js/GLTFLoader.js	/^	var WEBGL_DEPTH_FUNCS = {$/;"	r
WEBGL_FILTERS	js/GLTFLoader.js	/^	var WEBGL_FILTERS = {$/;"	r
WEBGL_SIDES	js/GLTFLoader.js	/^	var WEBGL_SIDES = {$/;"	r
WEBGL_TEXTURE_DATATYPES	js/GLTFLoader.js	/^	var WEBGL_TEXTURE_DATATYPES = {$/;"	r
WEBGL_TEXTURE_FORMATS	js/GLTFLoader.js	/^	var WEBGL_TEXTURE_FORMATS = {$/;"	r
WEBGL_TYPE	js/GLTFLoader.js	/^	var WEBGL_TYPE = {$/;"	r
WEBGL_TYPE_SIZES	js/GLTFLoader.js	/^	var WEBGL_TYPE_SIZES = {$/;"	r
WEBGL_WRAPPINGS	js/GLTFLoader.js	/^	var WEBGL_WRAPPINGS = {$/;"	r
Wa	js/three.min.js	/^a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};Wa.prototype=Object.create(Q.prototype);Wa.prototype.constructor=Wa;Wa.prototype.isMeshDistanceMaterial=!0;Wa.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.referencePosition.copy(a.referencePosition);this.nearDistance=a.nearDistance;this.farDistance=a.farDistance;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=$/;"	r
Wa	js/three.min.js	/^this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)}function Wa(a){Q.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new p;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.lights=this.fog=!1;this.setValues(a)}function Na(a,b){this.min=void 0!==$/;"	r
Walk_002	js/three.js	/^			\/\/ patterns like Walk_001, Walk_002, Run_001, Run_002$/;"	r
Wb	js/three.min.js	/^this.parameters={text:a,parameters:b};this.fromBufferGeometry(new Wb(a,b));this.mergeVertices()}function Wb(a,b){b=b||{};var c=b.font;if(!c||!c.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new L;a=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);Ga.call(this,a,b);this.type="TextBufferGeometry"}$/;"	r
Wd	js/three.min.js	/^if(2103===c)return d.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(2151===c&&(d=b.get("WEBGL_compressed_texture_etc1"),null!==d))return d.COMPRESSED_RGB_ETC1_WEBGL;if(103===c||104===c)if(d=b.get("EXT_blend_minmax"),null!==d){if(103===c)return d.MIN_EXT;if(104===c)return d.MAX_EXT}return 1020===c&&(d=b.get("WEBGL_depth_texture"),null!==d)?d.UNSIGNED_INT_24_8_WEBGL:0}}}function Wd(a){function b(){ha=new pg(F);ha.get("WEBGL_depth_texture");ha.get("OES_texture_float");ha.get("OES_texture_float_linear");ha.get("OES_texture_half_float");$/;"	r
WebGLAttributes	js/three.js	/^	function WebGLAttributes( gl ) {$/;"	r
WebGLBackground	js/three.js	/^	function WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {$/;"	r
WebGLBufferRenderer	js/three.js	/^	function WebGLBufferRenderer( gl, extensions, infoRender ) {$/;"	r
WebGLCapabilities	js/three.js	/^	function WebGLCapabilities( gl, extensions, parameters ) {$/;"	r
WebGLClipping	js/three.js	/^	function WebGLClipping() {$/;"	r
WebGLExtensions	js/three.js	/^	function WebGLExtensions( gl ) {$/;"	r
WebGLFlareRenderer	js/three.js	/^	function WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {$/;"	r
WebGLGeometries	js/three.js	/^	function WebGLGeometries( gl, attributes, infoMemory ) {$/;"	r
WebGLIndexedBufferRenderer	js/three.js	/^	function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {$/;"	r
WebGLLights	js/three.js	/^	function WebGLLights() {$/;"	r
WebGLMorphtargets	js/three.js	/^	function WebGLMorphtargets( gl ) {$/;"	r
WebGLObjects	js/three.js	/^	function WebGLObjects( geometries, infoRender ) {$/;"	r
WebGLProgram	js/three.js	/^	function WebGLProgram( renderer, extensions, code, material, shader, parameters ) {$/;"	r
WebGLPrograms	js/three.js	/^	function WebGLPrograms( renderer, extensions, capabilities ) {$/;"	r
WebGLProperties	js/three.js	/^	function WebGLProperties() {$/;"	r
WebGLRenderList	js/three.js	/^	function WebGLRenderList() {$/;"	r
WebGLRenderLists	js/three.js	/^	function WebGLRenderLists() {$/;"	r
WebGLRenderTarget	js/three.js	/^	exports.WebGLRenderTarget = WebGLRenderTarget;$/;"	r
WebGLRenderTarget	js/three.js	/^	function WebGLRenderTarget( width, height, options ) {$/;"	r
WebGLRenderTargetCube	js/three.js	/^	WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;$/;"	r
WebGLRenderTargetCube	js/three.js	/^	exports.WebGLRenderTargetCube = WebGLRenderTargetCube;$/;"	r
WebGLRenderTargetCube	js/three.js	/^	function WebGLRenderTargetCube( width, height, options ) {$/;"	r
WebGLRenderer	js/three.js	/^	exports.WebGLRenderer = WebGLRenderer;$/;"	r
WebGLRenderer	js/three.js	/^	function WebGLRenderer( parameters ) {$/;"	r
WebGLShader	js/three.js	/^	function WebGLShader( gl, type, string ) {$/;"	r
WebGLShadowMap	js/three.js	/^	function WebGLShadowMap( _renderer, _objects, maxTextureSize ) {$/;"	r
WebGLSpriteRenderer	js/three.js	/^	function WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {$/;"	r
WebGLState	js/three.js	/^	function WebGLState( gl, extensions, utils ) {$/;"	r
WebGLTextures	js/three.js	/^	function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {$/;"	r
WebGLUniforms	js/three.js	/^	function WebGLUniforms( gl, program, renderer ) {$/;"	r
WebGLUtils	js/three.js	/^	exports.WebGLUtils = WebGLUtils;$/;"	r
WebGLUtils	js/three.js	/^	function WebGLUtils( gl, extensions ) {$/;"	r
WebVRManager	js/three.js	/^	function WebVRManager( renderer ) {$/;"	r
WireframeGeometry	js/three.js	/^		WireframeGeometry: WireframeGeometry,$/;"	r
WireframeGeometry	js/three.js	/^	WireframeGeometry.prototype.constructor = WireframeGeometry;$/;"	r
WireframeGeometry	js/three.js	/^	exports.WireframeGeometry = WireframeGeometry;$/;"	r
WireframeGeometry	js/three.js	/^	function WireframeGeometry( geometry ) {$/;"	r
WireframeHelper	js/three.js	/^	exports.WireframeHelper = WireframeHelper;$/;"	r
WireframeHelper	js/three.js	/^	function WireframeHelper( object, hex ) {$/;"	r
WorldUVGenerator	js/three.js	/^	ExtrudeGeometry.WorldUVGenerator = {$/;"	r
WrapAroundEnding	js/three.js	/^					settings.endingEnd 	 = WrapAroundEnding;$/;"	r
WrapAroundEnding	js/three.js	/^					settings.endingStart = WrapAroundEnding;$/;"	r
WrapAroundEnding	js/three.js	/^	exports.WrapAroundEnding = WrapAroundEnding;$/;"	r
WrapAroundEnding	js/three.js	/^	var WrapAroundEnding = 2402;$/;"	r
X	js/three.min.js	/^P[N];Ha.isClockWise(U)&&(P[N]=U.reverse())}}var V=Ha.triangulateShape(a,P),X=a;N=0;for(M=P.length;N<M;N++)U=P[N],a=a.concat(U);var Z,Y=a.length,T,ca=V.length,B=[],G=0;var W=X.length;var ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),B[G]=d(X[G],X[ea],X[Z]);var A=[],da=B.concat();N=0;for(M=P.length;N<M;N++){U=P[N];var ba=[];G=0;W=U.length;ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),ba[G]=d(U[G],U[ea],U[Z]);A.push(ba);da=da.concat(ba)}for(ea=0;ea<x;ea++){W=ea\/x;var fa=$/;"	r
XHRLoader	js/three.js	/^	exports.XHRLoader = XHRLoader;$/;"	r
XHRLoader	js/three.js	/^	function XHRLoader( manager ) {$/;"	r
Xa	js/three.min.js	/^(a.bufferSubData(d,g.offset*h.BYTES_PER_ELEMENT,h.subarray(g.offset,g.offset+g.count)),g.count=-1),e.version=c.version)}}}function Xa(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||Xa.DefaultOrder}function Pd(){this.mask=1}function w(){Object.defineProperty(this,"id",{value:Nf++});this.uuid=R.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=w.DefaultUp.clone();var a=new p,b=new Xa,c=new X,d=new p(1,1,1);b.onChange(function(){c.setFromEuler(b,$/;"	r
Xe	js/three.min.js	/^get inUse(){return this.total-d.nCachedObjects_}},get bindingsPerObject(){return d._bindings.length}}}function Xe(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:2400,endingEnd:2400},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=$/;"	r
Xf	js/three.min.js	/^f.morphTargets&&e.morphAttributes.position;f=f.morphNormals&&e.morphAttributes.normal;for(l=0;l<k;l++){var n=d[l];0!==n[1]&&(q&&e.removeAttribute("morphTarget"+l),f&&e.removeAttribute("morphNormal"+l))}for(l=0;l<k;l++)n=d[l],n[0]=l,n[1]=h[l];d.sort(Vf);for(l=0;8>l;l++){if(n=d[l])if(h=n[0],n=n[1]){q&&e.addAttribute("morphTarget"+l,q[h]);f&&e.addAttribute("morphNormal"+l,f[h]);c[l]=n;continue}c[l]=0}g.getUniforms().setValue(a,"morphTargetInfluences",c)}}}function Xf(a,b,c){var d,e,f;this.setMode=function(a){d=$/;"	r
Y	js/three.min.js	/^t}}function Y(a,b,c,d){Ka.call(this);this.type="PerspectiveCamera";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function nd(a){Y.call(this);this.cameras=a||[]}function og(a){function b(){if(null!==d&&d.isPresenting){var b=d.getEyeParameters("left"),e=b.renderWidth,b=b.renderHeight;u=a.getPixelRatio();n=a.getSize();a.setDrawingBufferSize(2*$/;"	r
Ye	js/three.min.js	/^2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function Ye(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Jd(a,b){"string"===typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=b);this.value=a}function ke(){C.call(this);$/;"	r
Ye	js/three.min.js	/^Ye;m.AnimationClip=ra;m.Uniform=Jd;m.InstancedBufferGeometry=ke;m.BufferGeometry=C;m.Geometry=L;m.InterleavedBufferAttribute=le;m.InstancedInterleavedBuffer=me;m.InterleavedBuffer=jc;m.InstancedBufferAttribute=ne;m.Face3=Oa;m.Object3D=w;m.Raycaster=Ze;m.Layers=Pd;m.EventDispatcher=ia;m.Clock=af;m.QuaternionLinearInterpolant=Ed;m.LinearInterpolant=Xc;m.DiscreteInterpolant=Dd;m.CubicInterpolant=Cd;m.Interpolant=xa;m.Triangle=Pa;m.Math=R;m.Spherical=bf;m.Cylindrical=cf;m.Plane=za;m.Frustum=ld;m.Sphere=$/;"	r
Yf	js/three.min.js	/^k*g.maxInstancedCount,d===a.TRIANGLES?c.faces+=g.maxInstancedCount*k\/3:d===a.POINTS&&(c.points+=g.maxInstancedCount*k))}}function Yf(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES?c.faces+=f\/3:d===a.POINTS&&(c.points+=f)};this.renderInstances=function(e,f,g){var h=b.get("ANGLE_instanced_arrays");if(null===h)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
Z	js/three.min.js	/^16\/ma.w,na.set(M*J,M),Z=a[z],v.set(Z.matrixWorld.elements[12],Z.matrixWorld.elements[13],Z.matrixWorld.elements[14]),v.applyMatrix4(ja.matrixWorldInverse),v.applyMatrix4(ja.projectionMatrix),ka.copy(v),N.x=ma.x+ka.x*ya+ya-8,N.y=ma.y+ka.y*Ua+Ua-8,!0===U.containsPoint(N)){c.activeTexture(b.TEXTURE0);c.bindTexture(b.TEXTURE_2D,null);c.activeTexture(b.TEXTURE1);c.bindTexture(b.TEXTURE_2D,I);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,N.x,N.y,16,16,0);b.uniform1i(f,0);b.uniform2f(q,na.x,na.y);b.uniform3f(u,$/;"	r
Z	js/three.min.js	/^U=null,K=null,L=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(\/^WebGL\\ ([0-9])\/.exec(a.getParameter(a.VERSION))[1]),Z=1<=parseFloat(m),R=null,O={},Q=new ba,G=new ba,W={};W[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);W[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);n.setClear(0,0,0,1);u.setClear(1);r.setClear(0);e(a.DEPTH_TEST);u.setFunc(3);h(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1);return{buffers:{color:n,depth:u,stencil:r},initAttributes:function(){for(var a=$/;"	r
Z	js/three.min.js	/^v*Math.cos(W*Math.PI\/2);Z=t*Math.sin(W*Math.PI\/2);G=0;for(W=X.length;G<W;G++){var S=c(X[G],B[G],Z);f(S.x,S.y,-fa)}N=0;for(M=P.length;N<M;N++)for(U=P[N],ba=A[N],G=0,W=U.length;G<W;G++)S=c(U[G],ba[G],Z),f(S.x,S.y,-fa)}Z=t;for(G=0;G<Y;G++)S=y?c(a[G],da[G],Z):a[G],C?(Q.copy(K.normals[0]).multiplyScalar(S.x),L.copy(K.binormals[0]).multiplyScalar(S.y),O.copy(H[0]).add(Q).add(L),f(O.x,O.y,O.z)):f(S.x,S.y,0);for(W=1;W<=w;W++)for(G=0;G<Y;G++)S=y?c(a[G],da[G],Z):a[G],C?(Q.copy(K.normals[W]).multiplyScalar(S.x),$/;"	r
Za	js/three.min.js	/^e);this.setIndex(f);this.addAttribute("position",new z(g,3));this.addAttribute("normal",new z(h,3));this.addAttribute("uv",new z(k,2))}function Za(a,b){L.call(this);this.type="ExtrudeGeometry";this.parameters={shapes:a,options:b};this.fromBufferGeometry(new Ga(a,b));this.mergeVertices()}function Ga(a,b){"undefined"!==typeof a&&(C.call(this),this.type="ExtrudeBufferGeometry",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeVertexNormals())}function Pc(a,b){L.call(this);this.type="TextGeometry";$/;"	r
Zb	js/three.min.js	/^Zb.prototype.constructor=Zb;$b.prototype=Object.create(C.prototype);$b.prototype.constructor=$b;ac.prototype=Object.create(C.prototype);ac.prototype.constructor=ac;lb.prototype=Object.create(L.prototype);lb.prototype.constructor=lb;Ra.prototype=Object.create(C.prototype);Ra.prototype.constructor=Ra;Tc.prototype=Object.create(lb.prototype);Tc.prototype.constructor=Tc;Uc.prototype=Object.create(Ra.prototype);Uc.prototype.constructor=Uc;Vc.prototype=Object.create(L.prototype);Vc.prototype.constructor=$/;"	r
Zb	js/three.min.js	/^this.attributes.normal.array,e=new p,f=new p,g=new p,c=b*a.length*3,n=q=0;q<a.length;q++,n+=3)e.x=d[n+0],e.y=d[n+1],e.z=d[n+2],f.x=d[c+n+0],f.y=d[c+n+1],f.z=d[c+n+2],g.addVectors(e,f).normalize(),d[n+0]=d[c+n+0]=g.x,d[n+1]=d[c+n+1]=g.y,d[n+2]=d[c+n+2]=g.z}function Zb(a,b){L.call(this);this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new $b(a,$/;"	r
Zc	js/three.min.js	/^this.type="QuadraticBezierCurve";this.v0=a;this.v1=b;this.v2=c}function Zc(a){hc.call(this);this.type="Path";this.currentPoint=new D;a&&this.fromPoints(a)}function zb(){Zc.apply(this,arguments);this.type="Shape";this.holes=[]}function ce(){this.type="ShapePath";this.subPaths=[];this.currentPath=null}function de(a){this.type="Font";this.data=a}function Te(a){this.manager=void 0!==a?a:wa}function ee(a){this.manager=void 0!==a?a:wa}function Ue(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;$/;"	r
Ze	js/three.min.js	/^c||1}function Ze(a,b,c,d){this.ray=new hb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function $e(a,b){return a.distance-b.distance}function oe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)oe(a[d],b,c,!0)}}function af(a){this.autoStart=$/;"	r
ZeroCurvatureEnding	js/three.js	/^	exports.ZeroCurvatureEnding = ZeroCurvatureEnding;$/;"	r
ZeroCurvatureEnding	js/three.js	/^	var ZeroCurvatureEnding = 2400;$/;"	r
ZeroFactor	js/three.js	/^	exports.ZeroFactor = ZeroFactor;$/;"	r
ZeroFactor	js/three.js	/^	var ZeroFactor = 200;$/;"	r
ZeroSlopeEnding	js/three.js	/^				settings.endingEnd		= ZeroSlopeEnding;$/;"	r
ZeroSlopeEnding	js/three.js	/^				settings.endingStart 	= ZeroSlopeEnding;$/;"	r
ZeroSlopeEnding	js/three.js	/^	exports.ZeroSlopeEnding = ZeroSlopeEnding;$/;"	r
ZeroSlopeEnding	js/three.js	/^	var ZeroSlopeEnding = 2401;$/;"	r
Zf	js/three.min.js	/^else{var k=e.attributes.position;k.isInterleavedBufferAttribute?(g=k.data.count,h.drawArraysInstancedANGLE(d,0,g,e.maxInstancedCount)):h.drawArraysInstancedANGLE(d,f,g,e.maxInstancedCount);c.calls++;c.vertices+=g*e.maxInstancedCount;d===a.TRIANGLES?c.faces+=e.maxInstancedCount*g\/3:d===a.POINTS&&(c.points+=e.maxInstancedCount*g)}}}function Zf(a,b,c){function d(a){a=a.target;var g=e[a.id];null!==g.index&&b.remove(g.index);for(var k in g.attributes)b.remove(g.attributes[k]);a.removeEventListener("dispose",$/;"	r
_Math	js/three.js	/^	exports.Math = _Math;$/;"	r
_Math	js/three.js	/^	var _Math = {$/;"	r
_MorphingFlag	js/three.js	/^				if ( useMorphing ) variantIndex |= _MorphingFlag;$/;"	r
_MorphingFlag	js/three.js	/^			_MorphingFlag = 1,$/;"	r
_NumberOfMaterialVariants	js/three.js	/^			_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,$/;"	r
_SkinningFlag	js/three.js	/^				if ( useSkinning ) variantIndex |= _SkinningFlag;$/;"	r
_SkinningFlag	js/three.js	/^			_SkinningFlag = 2,$/;"	r
__cacheIndex	js/three.js	/^				interpolant.__cacheIndex = lastActiveIndex;$/;"	r
__cacheIndex	js/three.js	/^				prevIndex = interpolant.__cacheIndex,$/;"	r
__cacheIndex	js/three.js	/^			interpolant.__cacheIndex = firstInactiveIndex;$/;"	r
__cacheIndex	js/three.js	/^			lastActiveInterpolant.__cacheIndex = prevIndex;$/;"	r
__directGeometry	js/three.js	/^				var direct = geometry.__directGeometry;$/;"	r
__directGeometry	js/three.js	/^			geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );$/;"	r
__image__webglTextureCube	js/three.js	/^						textureProperties.__image__webglTextureCube = _gl.createTexture();$/;"	r
__originalFaceNormal	js/three.js	/^					face.__originalFaceNormal = face.normal.clone();$/;"	r
__originalFaceNormal	js/three.js	/^				face.normal = face.__originalFaceNormal;$/;"	r
__originalVertexNormals	js/three.js	/^				face.vertexNormals = face.__originalVertexNormals;$/;"	r
__version	js/three.js	/^					textureProperties.__version = texture.version;$/;"	r
__version	js/three.js	/^			textureProperties.__version = texture.version;$/;"	r
__webglDepthbuffer	js/three.js	/^					renderTargetProperties.__webglDepthbuffer = [];$/;"	r
__webglDepthbuffer	js/three.js	/^					renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();$/;"	r
__webglFramebuffer	js/three.js	/^					framebuffer = __webglFramebuffer;$/;"	r
__webglFramebuffer	js/three.js	/^				renderTargetProperties.__webglFramebuffer = [];$/;"	r
__webglFramebuffer	js/three.js	/^				renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();$/;"	r
__webglFramebuffer	js/three.js	/^				var __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;$/;"	r
__webglInit	js/three.js	/^				textureProperties.__webglInit = true;$/;"	r
__webglTexture	js/three.js	/^				textureProperties.__webglTexture = _gl.createTexture();$/;"	r
__webglTexture	js/three.js	/^			textureProperties.__webglTexture = _gl.createTexture();$/;"	r
_accuIndex	js/three.js	/^		this._accuIndex = 0;$/;"	r
_actions	js/three.js	/^			this._actions = []; \/\/ 'nActiveActions' followed by inactive ones$/;"	r
_actions	js/three.js	/^			var actions = this._actions,$/;"	r
_actions	js/three.min.js	/^a):a;a=this._actionsByClip[c?c.uuid:a];return void 0!==a?a.actionByRoot[b]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g)b[g]._update(d,a,e,f);a=this._bindings;$/;"	r
_actions	js/three.min.js	/^f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var b=a._clip.uuid,c=this._actionsByClip,d=c[b],e=d.knownActions,f=e[e.length-1],g=a._byClipCacheIndex;f._byClipCacheIndex=g;e[g]=f;e.pop();a._byClipCacheIndex=null;delete d.actionByRoot[(a._localRoot||this._root).uuid];0===e.length&&delete c[b];this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;$/;"	r
_actionsByClip	js/three.js	/^				actionsByClip = this._actionsByClip,$/;"	r
_actionsByClip	js/three.js	/^				actionsByClip = this._actionsByClip;$/;"	r
_actionsByClip	js/three.js	/^			this._actionsByClip = {};$/;"	r
_actionsByClip	js/three.min.js	/^c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},$/;"	r
_actionsByClip	js/three.min.js	/^this._actionsByClip;for(d in b){var c=b[d].actionByRoot[a];void 0!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}var d=this._bindingsByRootAndName[a];if(void 0!==d)for(var e in d)a=d[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){a=this.existingAction(a,b);null!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}});Jd.prototype.clone=function(){return new Jd(void 0===this.value.clone?this.value:this.value.clone())};ke.prototype=Object.assign(Object.create(C.prototype),$/;"	r
_activateAction	js/three.js	/^		_activateAction: function ( action ) {$/;"	r
_activateAction	js/three.min.js	/^g,m)}f[h]=n;a[h].resultBuffer=n.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=a._propertyBindings,$/;"	r
_addInactiveAction	js/three.js	/^		_addInactiveAction: function ( action, clipUuid, rootUuid ) {$/;"	r
_addInactiveBinding	js/three.js	/^		_addInactiveBinding: function ( binding, rootUuid, trackName ) {$/;"	r
_addInactiveBinding	js/three.min.js	/^for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,e=d[b],f=this._bindings;void 0===e&&(e={},d[b]=$/;"	r
_alpha	js/three.js	/^			_alpha = parameters.alpha !== undefined ? parameters.alpha : false,$/;"	r
_antialias	js/three.js	/^			_antialias = parameters.antialias !== undefined ? parameters.antialias : false,$/;"	r
_bindAction	js/three.js	/^		_bindAction: function ( action, prototypeAction ) {$/;"	r
_bindings	js/three.js	/^					bindings = this._bindings,$/;"	r
_bindings	js/three.js	/^				bindings = this._bindings,$/;"	r
_bindings	js/three.js	/^				bindings = this._bindings;$/;"	r
_bindings	js/three.js	/^			this._bindings = []; \/\/ 'nActiveBindings' followed by inactive ones$/;"	r
_bindings	js/three.js	/^			var bindings = this._bindings,$/;"	r
_bindings	js/three.js	/^			var bindings = this._bindings;$/;"	r
_bindings	js/three.js	/^		this._bindings = []; 				\/\/ inside: Array< PropertyBinding >$/;"	r
_bindings	js/three.js	/^		this._bindings = targetGroup.subscribe_( path, parsedPath );$/;"	r
_bindings	js/three.min.js	/^c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},$/;"	r
_bindingsByRootAndName	js/three.js	/^				bindingsByRoot = this._bindingsByRootAndName,$/;"	r
_bindingsByRootAndName	js/three.js	/^			this._bindingsByRootAndName = {}; \/\/ inside: Map< name, PropertyMixer >$/;"	r
_bindingsByRootAndName	js/three.js	/^			var bindingsByRoot = this._bindingsByRootAndName,$/;"	r
_bindingsIndicesByPath	js/three.js	/^			var indicesByPath = this._bindingsIndicesByPath,$/;"	r
_bindingsIndicesByPath	js/three.js	/^		this._bindingsIndicesByPath = {}; 	\/\/ inside: indices in these arrays$/;"	r
_bindingsIndicesByPath	js/three.min.js	/^a[b],a.pop()}this.nCachedObjects_=e},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,k=this.nCachedObjects_,l=Array(h.length),d=e.length;c[a]=d;f.push(a);g.push(b);e.push(l);c=k;for(d=h.length;c!==d;++c)l[c]=new pa(h[c],a,b);return l},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=$/;"	r
_bufferGeometry	js/three.js	/^					geometry._bufferGeometry = new BufferGeometry().setFromObject( object );$/;"	r
_bufferGeometry	js/three.js	/^				buffergeometry = geometry._bufferGeometry;$/;"	r
_byClipCacheIndex	js/three.js	/^					action._byClipCacheIndex = null;$/;"	r
_byClipCacheIndex	js/three.js	/^				action._byClipCacheIndex = 0;$/;"	r
_byClipCacheIndex	js/three.js	/^				action._byClipCacheIndex = knownActions.length;$/;"	r
_byClipCacheIndex	js/three.js	/^				byClipCacheIndex = action._byClipCacheIndex;$/;"	r
_byClipCacheIndex	js/three.js	/^			action._byClipCacheIndex = null;$/;"	r
_byClipCacheIndex	js/three.js	/^			lastKnownAction._byClipCacheIndex = byClipCacheIndex;$/;"	r
_byClipCacheIndex	js/three.js	/^		this._byClipCacheIndex = null;		\/\/ for the memory manager$/;"	r
_cacheIndex	js/three.js	/^					action._cacheIndex = null;$/;"	r
_cacheIndex	js/three.js	/^					lastInactiveAction._cacheIndex = cacheIndex;$/;"	r
_cacheIndex	js/three.js	/^					var cacheIndex = action._cacheIndex,$/;"	r
_cacheIndex	js/three.js	/^				cacheIndex = action._cacheIndex;$/;"	r
_cacheIndex	js/three.js	/^				cacheIndex = binding._cacheIndex;$/;"	r
_cacheIndex	js/three.js	/^				prevIndex = action._cacheIndex,$/;"	r
_cacheIndex	js/three.js	/^				prevIndex = binding._cacheIndex,$/;"	r
_cacheIndex	js/three.js	/^			action._cacheIndex = actions.length;$/;"	r
_cacheIndex	js/three.js	/^			action._cacheIndex = firstInactiveIndex;$/;"	r
_cacheIndex	js/three.js	/^			action._cacheIndex = lastActiveIndex;$/;"	r
_cacheIndex	js/three.js	/^			action._cacheIndex = null;$/;"	r
_cacheIndex	js/three.js	/^			binding._cacheIndex = bindings.length;$/;"	r
_cacheIndex	js/three.js	/^			binding._cacheIndex = firstInactiveIndex;$/;"	r
_cacheIndex	js/three.js	/^			binding._cacheIndex = lastActiveIndex;$/;"	r
_cacheIndex	js/three.js	/^			firstInactiveAction._cacheIndex = prevIndex;$/;"	r
_cacheIndex	js/three.js	/^			firstInactiveBinding._cacheIndex = prevIndex;$/;"	r
_cacheIndex	js/three.js	/^			lastActiveAction._cacheIndex = prevIndex;$/;"	r
_cacheIndex	js/three.js	/^			lastActiveBinding._cacheIndex = prevIndex;$/;"	r
_cacheIndex	js/three.js	/^			lastInactiveAction._cacheIndex = cacheIndex;$/;"	r
_cacheIndex	js/three.js	/^			lastInactiveBinding._cacheIndex = cacheIndex;$/;"	r
_cacheIndex	js/three.js	/^			var index = action._cacheIndex;$/;"	r
_cacheIndex	js/three.js	/^		this._cacheIndex = null;			\/\/ for the memory manager$/;"	r
_cachedIndex	js/three.js	/^									this._cachedIndex = 0;$/;"	r
_cachedIndex	js/three.js	/^									this._cachedIndex = i1;$/;"	r
_cachedIndex	js/three.js	/^						this._cachedIndex = 0;$/;"	r
_cachedIndex	js/three.js	/^						this._cachedIndex = i1;$/;"	r
_cachedIndex	js/three.js	/^				i1 = this._cachedIndex,$/;"	r
_cachedIndex	js/three.js	/^				this._cachedIndex = i1;$/;"	r
_cachedIndex	js/three.js	/^		this._cachedIndex = 0;$/;"	r
_cachedIndex	js/three.min.js	/^this.width=void 0!==c?c:10;this.height=void 0!==d?d:10}function xa(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}function Cd(a,b,c,d){xa.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}function Xc(a,b,c,d){xa.call(this,a,b,c,d)}function Dd(a,b,c,d){xa.call(this,a,b,c,d)}function sb(a,b,c,d){if(void 0===a)throw Error("track name is undefined");if(void 0===b||0===$/;"	r
_canvas	js/three.js	/^		this.domElement = _canvas;$/;"	r
_canvas	js/three.js	/^		var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http:\/\/www.w3.org\/1999\/xhtml', 'canvas' ),$/;"	r
_clip	js/three.js	/^					clipObject = prototypeAction._clip;$/;"	r
_clip	js/three.js	/^		this._clip = clip;$/;"	r
_clip	js/three.min.js	/^get inUse(){return this.total-d.nCachedObjects_}},get bindingsPerObject(){return d._bindings.length}}}function Xe(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:2400,endingEnd:2400},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=$/;"	r
_clipping	js/three.js	/^			_clipping = new WebGLClipping(),$/;"	r
_clippingEnabled	js/three.js	/^			_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );$/;"	r
_clippingEnabled	js/three.js	/^			_clippingEnabled = false,$/;"	r
_context	js/three.js	/^			_context = parameters.context !== undefined ? parameters.context : null,$/;"	r
_controlInterpolants	js/three.js	/^			this._controlInterpolants = []; \/\/ same game as above$/;"	r
_controlInterpolants	js/three.js	/^			var interpolants = this._controlInterpolants,$/;"	r
_controlInterpolantsResultBuffer	js/three.js	/^		_controlInterpolantsResultBuffer: new Float32Array( 1 ),$/;"	r
_controlInterpolantsResultBuffer	js/three.min.js	/^b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,b){var c=b||this._root,d=c.uuid,c="string"===typeof a?ra.findByName(c,a):a;a=null!==c?c.uuid:a;var e=this._actionsByClip[a],f=null;if(void 0!==e){f=e.actionByRoot[d];if(void 0!==f)return f;f=e.knownActions[0];null===c&&(c=f._clip)}if(null===c)return null;b=new Xe(this,c,b);this._bindAction(b,f);this._addInactiveAction(b,a,d);return b},existingAction:function(a,b){var c=b||this._root;b=c.uuid;c="string"===typeof a?ra.findByName(c,$/;"	r
_currentArrayCamera	js/three.js	/^					_currentArrayCamera = camera;$/;"	r
_currentArrayCamera	js/three.js	/^					_currentArrayCamera = null;$/;"	r
_currentArrayCamera	js/three.js	/^			_currentArrayCamera = null,$/;"	r
_currentCamera	js/three.js	/^					_currentCamera = ( _currentArrayCamera || camera );$/;"	r
_currentCamera	js/three.js	/^			_currentCamera = null,$/;"	r
_currentCamera	js/three.js	/^			_currentCamera = null;$/;"	r
_currentFramebuffer	js/three.js	/^				_currentFramebuffer = framebuffer;$/;"	r
_currentFramebuffer	js/three.js	/^			_currentFramebuffer = null,$/;"	r
_currentGeometryProgram	js/three.js	/^				_currentGeometryProgram = '';$/;"	r
_currentGeometryProgram	js/three.js	/^				_currentGeometryProgram = geometryProgram;$/;"	r
_currentGeometryProgram	js/three.js	/^			_currentGeometryProgram = '',$/;"	r
_currentGeometryProgram	js/three.js	/^			_currentGeometryProgram = '';$/;"	r
_currentMaterialId	js/three.js	/^						material.id === _currentMaterialId;$/;"	r
_currentMaterialId	js/three.js	/^				_currentMaterialId = material.id;$/;"	r
_currentMaterialId	js/three.js	/^			_currentMaterialId = - 1,$/;"	r
_currentMaterialId	js/three.js	/^			_currentMaterialId = - 1;$/;"	r
_currentRenderTarget	js/three.js	/^			_currentRenderTarget = null,$/;"	r
_currentRenderTarget	js/three.js	/^			_currentRenderTarget = renderTarget;$/;"	r
_currentScissor	js/three.js	/^			_currentScissor = new Vector4(),$/;"	r
_currentScissorTest	js/three.js	/^				_currentScissorTest = _scissorTest;$/;"	r
_currentScissorTest	js/three.js	/^				_currentScissorTest = renderTarget.scissorTest;$/;"	r
_currentScissorTest	js/three.js	/^			_currentScissorTest = null,$/;"	r
_currentViewport	js/three.js	/^			_currentViewport = new Vector4(),$/;"	r
_deactivateAction	js/three.js	/^		_deactivateAction: function ( action ) {$/;"	r
_dependencies	js/GLTFLoader.js	/^		var _dependencies = {};$/;"	r
_depth	js/three.js	/^			_depth = parameters.depth !== undefined ? parameters.depth : true,$/;"	r
_depthMaterials	js/three.js	/^			_depthMaterials = new Array( _NumberOfMaterialVariants ),$/;"	r
_depthMaterials	js/three.js	/^			var materialVariants = _depthMaterials;$/;"	r
_distanceMaterials	js/three.js	/^				materialVariants = _distanceMaterials;$/;"	r
_distanceMaterials	js/three.js	/^			_distanceMaterials = new Array( _NumberOfMaterialVariants ),$/;"	r
_each	js/GLTFLoader.js	/^	function _each( object, callback, thisObj ) {$/;"	r
_effectiveTimeScale	js/three.js	/^			this._effectiveTimeScale = this.paused ? 0 : timeScale;$/;"	r
_effectiveTimeScale	js/three.js	/^			this._effectiveTimeScale = timeScale;$/;"	r
_effectiveTimeScale	js/three.js	/^		this._effectiveTimeScale = 1;$/;"	r
_effectiveWeight	js/three.js	/^			this._effectiveWeight = this.enabled ? weight : 0;$/;"	r
_effectiveWeight	js/three.js	/^			this._effectiveWeight = weight;$/;"	r
_effectiveWeight	js/three.js	/^		this._effectiveWeight = 1;$/;"	r
_frustum	js/three.js	/^			_frustum = new Frustum(),$/;"	r
_frustum	js/three.js	/^		var _frustum = new Frustum(),$/;"	r
_getTrackTypeForValueTypeName	js/three.js	/^		_getTrackTypeForValueTypeName: function ( typeName ) {$/;"	r
_getTrackTypeForValueTypeName	js/three.min.js	/^Array)},c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return fc;case "vector":case "vector2":case "vector3":case "vector4":return ec;case "color":return Hd;case "quaternion":return Yc;case "bool":case "boolean":return Gd;case "string":return Fd}throw Error("Unsupported typeName: "+a);}});Object.assign(ra,{parse:function(a){for(var b=$/;"	r
_getValue_unavailable	js/three.js	/^			this.getValue = this._getValue_unavailable;$/;"	r
_getValue_unavailable	js/three.js	/^		_getValue_unavailable: function () {},$/;"	r
_getValue_unbound	js/three.js	/^			this.getValue = this._getValue_unbound;$/;"	r
_getValue_unbound	js/three.js	/^		_getValue_unbound: PropertyBinding.prototype.getValue,$/;"	r
_gl	js/three.js	/^					_gl, materialProperties.uniformsList, m_uniforms, _this );$/;"	r
_gl	js/three.js	/^			_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );$/;"	r
_gl	js/three.js	/^			_this.context = _gl;$/;"	r
_gl	js/three.js	/^			flareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );$/;"	r
_gl	js/three.js	/^			spriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );$/;"	r
_gl	js/three.js	/^			var _gl = _renderer.context;$/;"	r
_gl	js/three.js	/^		var _gl;$/;"	r
_height	js/three.js	/^			_height = _canvas.height,$/;"	r
_height	js/three.js	/^			_height = height;$/;"	r
_height	js/three.js	/^			this.setSize( _width, _height, false );$/;"	r
_indicesByUUID	js/three.js	/^				indicesByUUID = this._indicesByUUID,$/;"	r
_indicesByUUID	js/three.js	/^		this._indicesByUUID = indices;		\/\/ for bookkeeping$/;"	r
_infoMemory	js/three.js	/^			_infoMemory = {$/;"	r
_infoRender	js/three.js	/^			_infoRender = {$/;"	r
_initMemoryManager	js/three.js	/^		_initMemoryManager: function () {$/;"	r
_initMemoryManager	js/three.min.js	/^c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},$/;"	r
_interpolantSettings	js/three.js	/^			var settings = this._interpolantSettings;$/;"	r
_interpolantSettings	js/three.js	/^		this._interpolantSettings = interpolantSettings;$/;"	r
_interpolants	js/three.js	/^				interpolants = action._interpolants,$/;"	r
_interpolants	js/three.js	/^				var interpolants = this._interpolants;$/;"	r
_interpolants	js/three.js	/^		this._interpolants = interpolants;	\/\/ bound by the mixer$/;"	r
_isActiveAction	js/three.js	/^		_isActiveAction: function ( action ) {$/;"	r
_isActiveAction	js/three.min.js	/^get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=f.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);$/;"	r
_isContextLost	js/three.js	/^			_isContextLost = false,$/;"	r
_isContextLost	js/three.js	/^			_isContextLost = false;$/;"	r
_isContextLost	js/three.js	/^			_isContextLost = true;$/;"	r
_isWebGL2	js/three.js	/^		var _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof window.WebGL2RenderingContext );$/;"	r
_lendAction	js/three.js	/^		_lendAction: function ( action ) {$/;"	r
_lendAction	js/three.min.js	/^for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,e=d[b],f=this._bindings;void 0===e&&(e={},d[b]=$/;"	r
_lendBinding	js/three.js	/^		_lendBinding: function ( binding ) {$/;"	r
_lendControlInterpolant	js/three.js	/^		_lendControlInterpolant: function () {$/;"	r
_lendControlInterpolant	js/three.min.js	/^--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new Xc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;$/;"	r
_lerp	js/three.js	/^				mixFunction = this._lerp;$/;"	r
_lerp	js/three.js	/^		_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {$/;"	r
_lightPositionWorld	js/three.js	/^			_lightPositionWorld = new Vector3(),$/;"	r
_listeners	js/three.js	/^			var listeners = this._listeners;$/;"	r
_listeners	js/three.min.js	/^var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){void 0!==this._listeners&&(a=this._listeners[a],void 0!==a&&(b=a.indexOf(b),-1!==b&&a.splice(b,1)))},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var b=b.slice(0),c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}});var R={DEG2RAD:Math.PI\/180,RAD2DEG:180\/Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),$/;"	r
_localClippingEnabled	js/three.js	/^			_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );$/;"	r
_localClippingEnabled	js/three.js	/^			_localClippingEnabled = false,$/;"	r
_localClippingEnabled	js/three.js	/^			_localClippingEnabled = this.localClippingEnabled;$/;"	r
_localRoot	js/three.js	/^		this._localRoot = localRoot || null;$/;"	r
_lookTarget	js/three.js	/^			_lookTarget = new Vector3(),$/;"	r
_loopCount	js/three.js	/^						this._loopCount = loopCount;$/;"	r
_loopCount	js/three.js	/^					this._loopCount = 0;$/;"	r
_loopCount	js/three.js	/^				loopCount = this._loopCount;$/;"	r
_loopCount	js/three.js	/^			this._loopCount = - 1;	\/\/ forget previous loops$/;"	r
_loopCount	js/three.js	/^		this._loopCount = - 1;$/;"	r
_loopCount	js/three.min.js	/^2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function Ye(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Jd(a,b){"string"===typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=b);this.value=a}function ke(){C.call(this);$/;"	r
_material	js/GLTFLoader.js	/^					_material = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );$/;"	r
_material	js/GLTFLoader.js	/^					_material = new materialType( materialParams );$/;"	r
_material	js/GLTFLoader.js	/^				var _material;$/;"	r
_materialCache	js/three.js	/^			_materialCache = {};$/;"	r
_maxShadowMapSize	js/three.js	/^			_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),$/;"	r
_mixBufferRegion	js/three.js	/^		this._mixBufferRegion = mixFunction;$/;"	r
_mixer	js/three.js	/^			var mixer = this._mixer, now = mixer.time,$/;"	r
_mixer	js/three.js	/^		this._mixer = mixer;$/;"	r
_nActiveActions	js/three.js	/^				nActions = this._nActiveActions,$/;"	r
_nActiveActions	js/three.js	/^			this._nActiveActions = 0;$/;"	r
_nActiveActions	js/three.min.js	/^a):a;a=this._actionsByClip[c?c.uuid:a];return void 0!==a?a.actionByRoot[b]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g)b[g]._update(d,a,e,f);a=this._bindings;$/;"	r
_nActiveBindings	js/three.js	/^				nBindings = this._nActiveBindings;$/;"	r
_nActiveBindings	js/three.js	/^			this._nActiveBindings = 0;$/;"	r
_nActiveBindings	js/three.min.js	/^b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=h;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=$/;"	r
_nActiveControlInterpolants	js/three.js	/^			this._nActiveControlInterpolants = 0;$/;"	r
_node	js/GLTFLoader.js	/^					buildNodeHierachy( child, _node, allNodes );$/;"	r
_node	js/GLTFLoader.js	/^			var _node = allNodes[ nodeId ];$/;"	r
_objects	js/three.js	/^				objects = this._objects,$/;"	r
_objects	js/three.js	/^			var objects = this._objects,$/;"	r
_objects	js/three.js	/^		this._objects = Array.prototype.slice.call( arguments );$/;"	r
_objects	js/three.js	/^	function WebGLShadowMap( _renderer, _objects, maxTextureSize ) {$/;"	r
_objects	js/three.min.js	/^w}}else void 0!==a[p]&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){for(var a=this._objects,b=this.nCachedObjects_,c=this._indicesByUUID,d=this._bindings,e=d.length,f=0,g=arguments.length;f!==g;++f){var h=arguments[f],k=h.uuid,l=c[k];if(void 0!==l&&l>=b){var m=b++,n=a[m];c[n.uuid]=l;a[l]=n;c[k]=m;a[m]=h;h=0;for(k=e;h!==k;++h){var n=d[h],p=$/;"	r
_objects	js/three.min.js	/^{isAnimationObjectGroup:!0,add:function(){for(var a=this._objects,b=a.length,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._paths,f=this._parsedPaths,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){var m=arguments[k],n=m.uuid,p=d[n];if(void 0===p){p=b++;d[n]=p;a.push(m);for(var n=0,r=h;n!==r;++n)g[n].push(new pa(m,e[n],f[n]))}else if(p<c){var v=--c,r=a[v];d[r.uuid]=p;a[p]=r;d[n]=v;a[v]=m;n=0;for(r=h;n!==r;++n){var t=g[n],w=t[p];t[p]=t[v];void 0===w&&(w=new pa(m,e[n],f[n]));t[v]=$/;"	r
_offsetNext	js/three.js	/^			this._offsetNext = iNext * stride;$/;"	r
_offsetNext	js/three.js	/^		this._offsetNext = - 0;$/;"	r
_offsetPrev	js/three.js	/^				oP = this._offsetPrev, 	oN = this._offsetNext,$/;"	r
_offsetPrev	js/three.js	/^			this._offsetPrev = iPrev * stride;$/;"	r
_offsetPrev	js/three.js	/^		this._offsetPrev = - 0;$/;"	r
_order	js/three.js	/^				this._order = value;$/;"	r
_order	js/three.js	/^			array[ offset + 3 ] = this._order;$/;"	r
_order	js/three.js	/^			this._order = euler._order;$/;"	r
_order	js/three.js	/^			this._order = order || this._order;$/;"	r
_order	js/three.js	/^			this._order = order;$/;"	r
_order	js/three.js	/^		this._order = order || Euler.DefaultOrder;$/;"	r
_order	js/three.min.js	/^b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-q,a)):(this._x=0,this._y=Math.atan2(g,e))):"XZY"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(n,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a=new K;return function(b,c,d){a.makeRotationFromQuaternion(b);$/;"	r
_order	js/three.min.js	/^c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=R.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],q=e[2],n=e[6],e=e[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=$/;"	r
_parsedPaths	js/three.js	/^					parsedPaths = this._parsedPaths,$/;"	r
_parsedPaths	js/three.js	/^				parsedPaths = this._parsedPaths,$/;"	r
_parsedPaths	js/three.js	/^		this._parsedPaths = [];				\/\/ inside: { we don't care, here }$/;"	r
_parser	js/three.js	/^		this._parser = null;$/;"	r
_paths	js/three.js	/^				paths = this._paths,$/;"	r
_paths	js/three.js	/^				var paths = this._paths,$/;"	r
_paths	js/three.js	/^			var paths = this._paths,$/;"	r
_paths	js/three.js	/^		this._paths = [];					\/\/ inside: string$/;"	r
_paths	js/three.min.js	/^c)}function pa(a,b,c){this.path=b;this.parsedPath=c||pa.parseTrackName(b);this.node=pa.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function We(){this.uuid=R.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var d=this;this.stats={objects:{get total(){return d._objects.length},$/;"	r
_pixelRatio	js/three.js	/^			_pixelRatio = 1,$/;"	r
_pixelRatio	js/three.js	/^			_pixelRatio = pixelRatio;$/;"	r
_pixelRatio	js/three.js	/^			_pixelRatio = value;$/;"	r
_premultipliedAlpha	js/three.js	/^			_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,$/;"	r
_preserveDrawingBuffer	js/three.js	/^			_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;$/;"	r
_projScreenMatrix	js/three.js	/^			_projScreenMatrix = new Matrix4(),$/;"	r
_propertyBindings	js/three.js	/^				bindings = action._propertyBindings,$/;"	r
_propertyBindings	js/three.js	/^				var bindings = action._propertyBindings;$/;"	r
_propertyBindings	js/three.js	/^				var propertyMixers = this._propertyBindings;$/;"	r
_propertyBindings	js/three.js	/^			var bindings = action._propertyBindings;$/;"	r
_propertyBindings	js/three.js	/^		this._propertyBindings = new Array( nTracks );$/;"	r
_propertyBindings	js/three.min.js	/^for(var e=this._propertyBindings,f=0,g=b.length;f!==g;++f)b[f].evaluate(c),e[f].accumulate(d,a)}}else this._updateWeight(a)},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],$/;"	r
_removeInactiveAction	js/three.js	/^		_removeInactiveAction: function ( action ) {$/;"	r
_removeInactiveAction	js/three.min.js	/^f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var b=a._clip.uuid,c=this._actionsByClip,d=c[b],e=d.knownActions,f=e[e.length-1],g=a._byClipCacheIndex;f._byClipCacheIndex=g;e[g]=f;e.pop();a._byClipCacheIndex=null;delete d.actionByRoot[(a._localRoot||this._root).uuid];0===e.length&&delete c[b];this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;$/;"	r
_removeInactiveBinding	js/three.js	/^		_removeInactiveBinding: function ( binding ) {$/;"	r
_removeInactiveBinding	js/three.min.js	/^e);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=$/;"	r
_removeInactiveBindingsForAction	js/three.js	/^		_removeInactiveBindingsForAction: function ( action ) {$/;"	r
_root	js/three.js	/^		this._root = root;$/;"	r
_scene	js/GLTFLoader.js	/^					buildNodeHierachy( nodeId, _scene, dependencies.nodes );$/;"	r
_scene	js/GLTFLoader.js	/^				var _scene = new THREE.Scene();$/;"	r
_scheduleFading	js/three.js	/^		_scheduleFading: function ( duration, weightNow, weightThen ) {$/;"	r
_scissor	js/three.js	/^			_scissor = new Vector4( 0, 0, _width, _height ),$/;"	r
_scissorTest	js/three.js	/^				_currentScissorTest = _scissorTest;$/;"	r
_scissorTest	js/three.js	/^			_scissorTest = false,$/;"	r
_select	js/three.js	/^				mixFunction = this._select;$/;"	r
_select	js/three.js	/^		_select: function ( buffer, dstOffset, srcOffset, t, stride ) {$/;"	r
_setEndings	js/three.js	/^		_setEndings: function ( atStart, atEnd, pingPong ) {$/;"	r
_setEndings	js/three.min.js	/^b,c-b}return this.time=b},_setEndings:function(a,b,c){var d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(d.endingStart=a?this.zeroSlopeAtStart?2401:2400:2402,d.endingEnd=b?this.zeroSlopeAtEnd?2401:2400:2402)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}});Object.assign(Ye.prototype,ia.prototype,$/;"	r
_setValue_unavailable	js/three.js	/^			this.setValue = this._setValue_unavailable;$/;"	r
_setValue_unavailable	js/three.js	/^		_setValue_unavailable: function () {},$/;"	r
_setValue_unavailable	js/three.min.js	/^_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=$/;"	r
_setValue_unbound	js/three.js	/^			this.setValue = this._setValue_unbound;$/;"	r
_setValue_unbound	js/three.js	/^		_setValue_unbound: PropertyBinding.prototype.setValue,$/;"	r
_setValue_unbound	js/three.min.js	/^this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(pa.prototype,{_getValue_unbound:pa.prototype.getValue,_setValue_unbound:pa.prototype.setValue});Object.assign(We.prototype,$/;"	r
_shadowMapSize	js/three.js	/^			_shadowMapSize = new Vector2(),$/;"	r
_skin	js/GLTFLoader.js	/^				var _skin = {$/;"	r
_slerp	js/three.js	/^				mixFunction = this._slerp;$/;"	r
_slerp	js/three.js	/^		_slerp: function ( buffer, dstOffset, srcOffset, t ) {$/;"	r
_slerp	js/three.min.js	/^0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d){X.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}});Object.assign(Ve.prototype,{getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,$/;"	r
_sphere	js/three.js	/^		var _sphere = new Sphere();$/;"	r
_startTime	js/three.js	/^					this._startTime === null && this._mixer._isActiveAction( this );$/;"	r
_startTime	js/three.js	/^				this._startTime = null; \/\/ unschedule$/;"	r
_startTime	js/three.js	/^			this._startTime = null;	\/\/ forget scheduling$/;"	r
_startTime	js/three.js	/^			this._startTime = time;$/;"	r
_startTime	js/three.js	/^			var startTime = this._startTime;$/;"	r
_startTime	js/three.js	/^		this._startTime = null;$/;"	r
_startTime	js/three.min.js	/^this._timeScaleInterpolant;null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,b,c,d){if(this.enabled){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;$/;"	r
_state	js/three.js	/^			var _state = _renderer.state;$/;"	r
_stencil	js/three.js	/^			_stencil = parameters.stencil !== undefined ? parameters.stencil : true,$/;"	r
_takeBackAction	js/three.js	/^		_takeBackAction: function ( action ) {$/;"	r
_takeBackBinding	js/three.js	/^		_takeBackBinding: function ( binding ) {$/;"	r
_takeBackControlInterpolant	js/three.js	/^		_takeBackControlInterpolant: function ( interpolant ) {$/;"	r
_targetGroup	js/three.js	/^		this._targetGroup = targetGroup;$/;"	r
_this	js/three.js	/^		var _this = this,$/;"	r
_timeScaleInterpolant	js/three.js	/^				interpolant = this._timeScaleInterpolant,$/;"	r
_timeScaleInterpolant	js/three.js	/^				this._timeScaleInterpolant = interpolant;$/;"	r
_timeScaleInterpolant	js/three.js	/^				this._timeScaleInterpolant = null;$/;"	r
_timeScaleInterpolant	js/three.js	/^				var interpolant = this._timeScaleInterpolant;$/;"	r
_timeScaleInterpolant	js/three.js	/^			var timeScaleInterpolant = this._timeScaleInterpolant;$/;"	r
_timeScaleInterpolant	js/three.js	/^		this._timeScaleInterpolant = null;$/;"	r
_timeScaleInterpolant	js/three.min.js	/^this._timeScaleInterpolant;null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,b,c,d){if(this.enabled){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;$/;"	r
_update	js/three.js	/^		_update: function ( time, deltaTime, timeDirection, accuIndex ) {$/;"	r
_updateTime	js/three.js	/^		_updateTime: function ( deltaTime ) {$/;"	r
_updateTime	js/three.min.js	/^b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(2200===d)a:{if(-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>a?-1:1})}else{d=2202===d;$/;"	r
_updateTimeScale	js/three.js	/^		_updateTimeScale: function ( time ) {$/;"	r
_updateWeight	js/three.js	/^		_updateWeight: function ( time ) {$/;"	r
_updateWeight	js/three.min.js	/^for(var e=this._propertyBindings,f=0,g=b.length;f!==g;++f)b[f].evaluate(c),e[f].accumulate(d,a)}}else this._updateWeight(a)},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],$/;"	r
_usedTextureUnits	js/three.js	/^			_usedTextureUnits = 0,$/;"	r
_usedTextureUnits	js/three.js	/^			_usedTextureUnits = 0;$/;"	r
_usedTextureUnits	js/three.js	/^			var textureUnit = _usedTextureUnits;$/;"	r
_vector3	js/three.js	/^			_vector3 = new Vector3(),$/;"	r
_viewport	js/three.js	/^			_viewport = new Vector4( 0, 0, _width, _height ),$/;"	r
_w	js/three.js	/^				this._w = ( m13 - m31 ) \/ s;$/;"	r
_w	js/three.js	/^				this._w = ( m21 - m12 ) \/ s;$/;"	r
_w	js/three.js	/^				this._w = ( m32 - m23 ) \/ s;$/;"	r
_w	js/three.js	/^				this._w = - qb._w;$/;"	r
_w	js/three.js	/^				this._w = 0.25 \/ s;$/;"	r
_w	js/three.js	/^				this._w = 0.5 * ( w + this._w );$/;"	r
_w	js/three.js	/^				this._w = 1;$/;"	r
_w	js/three.js	/^				this._w = c1 * c2 * c3 + s1 * s2 * s3;$/;"	r
_w	js/three.js	/^				this._w = c1 * c2 * c3 - s1 * s2 * s3;$/;"	r
_w	js/three.js	/^				this._w = r;$/;"	r
_w	js/three.js	/^				this._w = this._w * l;$/;"	r
_w	js/three.js	/^				this._w = value;$/;"	r
_w	js/three.js	/^				this._w = w;$/;"	r
_w	js/three.js	/^			array[ offset + 3 ] = this._w;$/;"	r
_w	js/three.js	/^			this._w = ( w * ratioA + this._w * ratioB );$/;"	r
_w	js/three.js	/^			this._w = Math.cos( halfAngle );$/;"	r
_w	js/three.js	/^			this._w = array[ offset + 3 ];$/;"	r
_w	js/three.js	/^			this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;$/;"	r
_w	js/three.js	/^			this._w = quaternion.w;$/;"	r
_w	js/three.js	/^			this._w = w;$/;"	r
_w	js/three.js	/^		this._w = ( w !== undefined ) ? w : 1;$/;"	r
_w	js/three.min.js	/^this._w=f*g+this._w*b;this._x=c*g+this._x*b;this._y=d*g+this._y*b;this._z=e*g+this._z*b;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=$/;"	r
_weightInterpolant	js/three.js	/^				interpolant = this._weightInterpolant;$/;"	r
_weightInterpolant	js/three.js	/^				this._weightInterpolant = interpolant;$/;"	r
_weightInterpolant	js/three.js	/^				this._weightInterpolant = null;$/;"	r
_weightInterpolant	js/three.js	/^				var interpolant = this._weightInterpolant;$/;"	r
_weightInterpolant	js/three.js	/^			var weightInterpolant = this._weightInterpolant;$/;"	r
_weightInterpolant	js/three.js	/^		this._weightInterpolant = null;$/;"	r
_weightNext	js/three.js	/^			this._weightNext = halfDt \/ ( tNext - t1 );$/;"	r
_weightNext	js/three.js	/^		this._weightNext = - 0;$/;"	r
_weightPrev	js/three.js	/^				wP = this._weightPrev,	wN = this._weightNext,$/;"	r
_weightPrev	js/three.js	/^			this._weightPrev = halfDt \/ ( t0 - tPrev );$/;"	r
_weightPrev	js/three.js	/^		this._weightPrev = - 0;$/;"	r
_width	js/three.js	/^			_width = _canvas.width,$/;"	r
_width	js/three.js	/^			_width = width;$/;"	r
_withDependencies	js/GLTFLoader.js	/^	GLTFParser.prototype._withDependencies = function ( dependencies ) {$/;"	r
_x	js/three.js	/^					this._x = 0;$/;"	r
_x	js/three.js	/^					this._x = Math.atan2( - m23, m22 );$/;"	r
_x	js/three.js	/^					this._x = Math.atan2( - m23, m33 );$/;"	r
_x	js/three.js	/^					this._x = Math.atan2( m32, m22 );$/;"	r
_x	js/three.js	/^					this._x = Math.atan2( m32, m33 );$/;"	r
_x	js/three.js	/^				this._x = ( m12 + m21 ) \/ s;$/;"	r
_x	js/three.js	/^				this._x = ( m13 + m31 ) \/ s;$/;"	r
_x	js/three.js	/^				this._x = ( m32 - m23 ) * s;$/;"	r
_x	js/three.js	/^				this._x = - qb._x;$/;"	r
_x	js/three.js	/^				this._x = 0.25 * s;$/;"	r
_x	js/three.js	/^				this._x = 0.5 * ( x + this._x );$/;"	r
_x	js/three.js	/^				this._x = 0;$/;"	r
_x	js/three.js	/^				this._x = Math.asin( - clamp( m23, - 1, 1 ) );$/;"	r
_x	js/three.js	/^				this._x = Math.asin( clamp( m32, - 1, 1 ) );$/;"	r
_x	js/three.js	/^				this._x = s1 * c2 * c3 + c1 * s2 * s3;$/;"	r
_x	js/three.js	/^				this._x = s1 * c2 * c3 - c1 * s2 * s3;$/;"	r
_x	js/three.js	/^				this._x = this._x * l;$/;"	r
_x	js/three.js	/^				this._x = v1.x;$/;"	r
_x	js/three.js	/^				this._x = value;$/;"	r
_x	js/three.js	/^				this._x = x;$/;"	r
_x	js/three.js	/^			array[ offset ] = this._x;$/;"	r
_x	js/three.js	/^			this._x = ( x * ratioA + this._x * ratioB );$/;"	r
_x	js/three.js	/^			this._x = array[ 0 ];$/;"	r
_x	js/three.js	/^			this._x = array[ offset ];$/;"	r
_x	js/three.js	/^			this._x = axis.x * s;$/;"	r
_x	js/three.js	/^			this._x = euler._x;$/;"	r
_x	js/three.js	/^			this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;$/;"	r
_x	js/three.js	/^			this._x = quaternion.x;$/;"	r
_x	js/three.js	/^			this._x = x;$/;"	r
_x	js/three.js	/^			var x = euler._x, y = euler._y, z = euler._z, order = euler.order;$/;"	r
_x	js/three.js	/^			var x = this._x, y = this._y, z = this._z, w = this._w;$/;"	r
_x	js/three.js	/^		this._x = x || 0;$/;"	r
_x	js/three.min.js	/^-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1\/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},$/;"	r
_x	js/three.min.js	/^b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new p(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}});Object.assign(Pd.prototype,{set:function(a){this.mask=1<<a|0},enable:function(a){this.mask=this.mask|1<<a|0},toggle:function(a){this.mask^=1<<a|0},disable:function(a){this.mask&=~(1<<a|0)},test:function(a){return 0!==(this.mask&a.mask)}});$/;"	r
_x	js/three.min.js	/^return this},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;a=Math.sqrt(1-g*g);if(.001>Math.abs(a))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var h=Math.atan2(a,g),g=Math.sin((1-b)*h)\/a;b=Math.sin(b*h)\/a;$/;"	r
_x	js/three.min.js	/^this._w=f*g+this._w*b;this._x=c*g+this._x*b;this._y=d*g+this._y*b;this._z=e*g+this._z*b;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=$/;"	r
_y	js/three.js	/^					this._y = 0;$/;"	r
_y	js/three.js	/^					this._y = Math.atan2( - m31, m11 );$/;"	r
_y	js/three.js	/^					this._y = Math.atan2( - m31, m33 );$/;"	r
_y	js/three.js	/^					this._y = Math.atan2( m13, m11 );$/;"	r
_y	js/three.js	/^					this._y = Math.atan2( m13, m33 );$/;"	r
_y	js/three.js	/^				this._y = ( m12 + m21 ) \/ s;$/;"	r
_y	js/three.js	/^				this._y = ( m13 - m31 ) * s;$/;"	r
_y	js/three.js	/^				this._y = ( m23 + m32 ) \/ s;$/;"	r
_y	js/three.js	/^				this._y = - qb._y;$/;"	r
_y	js/three.js	/^				this._y = 0.25 * s;$/;"	r
_y	js/three.js	/^				this._y = 0.5 * ( y + this._y );$/;"	r
_y	js/three.js	/^				this._y = 0;$/;"	r
_y	js/three.js	/^				this._y = Math.asin( - clamp( m31, - 1, 1 ) );$/;"	r
_y	js/three.js	/^				this._y = Math.asin( clamp( m13, - 1, 1 ) );$/;"	r
_y	js/three.js	/^				this._y = c1 * s2 * c3 + s1 * c2 * s3;$/;"	r
_y	js/three.js	/^				this._y = c1 * s2 * c3 - s1 * c2 * s3;$/;"	r
_y	js/three.js	/^				this._y = this._y * l;$/;"	r
_y	js/three.js	/^				this._y = v1.y;$/;"	r
_y	js/three.js	/^				this._y = value;$/;"	r
_y	js/three.js	/^				this._y = y;$/;"	r
_y	js/three.js	/^			array[ offset + 1 ] = this._y;$/;"	r
_y	js/three.js	/^			this._y = ( y * ratioA + this._y * ratioB );$/;"	r
_y	js/three.js	/^			this._y = array[ 1 ];$/;"	r
_y	js/three.js	/^			this._y = array[ offset + 1 ];$/;"	r
_y	js/three.js	/^			this._y = axis.y * s;$/;"	r
_y	js/three.js	/^			this._y = euler._y;$/;"	r
_y	js/three.js	/^			this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;$/;"	r
_y	js/three.js	/^			this._y = quaternion.y;$/;"	r
_y	js/three.js	/^			this._y = y;$/;"	r
_y	js/three.js	/^		this._y = y || 0;$/;"	r
_y	js/three.min.js	/^(a.bufferSubData(d,g.offset*h.BYTES_PER_ELEMENT,h.subarray(g.offset,g.offset+g.count)),g.count=-1),e.version=c.version)}}}function Xa(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||Xa.DefaultOrder}function Pd(){this.mask=1}function w(){Object.defineProperty(this,"id",{value:Nf++});this.uuid=R.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=w.DefaultUp.clone();var a=new p,b=new Xa,c=new X,d=new p(1,1,1);b.onChange(function(){c.setFromEuler(b,$/;"	r
_y	js/three.min.js	/^return this.setFromRotationMatrix(a,c,d)}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new X;return function(b){a.setFromEuler(this);return this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===$/;"	r
_y	js/three.min.js	/^set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},w:{get:function(){return this._w},set:function(a){this._w=a;this.onChangeCallback()}}});Object.assign(X.prototype,{set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,$/;"	r
_y	js/three.min.js	/^this._w)},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!a||!a.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var c=a._x,d=a._y,e=a._z;a=a.order;var f=Math.cos,g=Math.sin,h=f(c\/2),k=f(d\/2),f=f(e\/2),c=g(c\/2),d=g(d\/2),e=g(e\/2);"XYZ"===a?(this._x=c*k*f+h*d*e,this._y=h*d*f-c*k*e,this._z=h*k*e+c*d*f,this._w=h*k*f-c*d*e):"YXZ"===a?(this._x=c*k*f+$/;"	r
_z	js/three.js	/^					this._z = 0;$/;"	r
_z	js/three.js	/^					this._z = Math.atan2( - m12, m11 );$/;"	r
_z	js/three.js	/^					this._z = Math.atan2( - m12, m22 );$/;"	r
_z	js/three.js	/^					this._z = Math.atan2( m21, m11 );$/;"	r
_z	js/three.js	/^					this._z = Math.atan2( m21, m22 );$/;"	r
_z	js/three.js	/^				this._z = ( m13 + m31 ) \/ s;$/;"	r
_z	js/three.js	/^				this._z = ( m21 - m12 ) * s;$/;"	r
_z	js/three.js	/^				this._z = ( m23 + m32 ) \/ s;$/;"	r
_z	js/three.js	/^				this._z = - qb._z;$/;"	r
_z	js/three.js	/^				this._z = 0.25 * s;$/;"	r
_z	js/three.js	/^				this._z = 0.5 * ( z + this._z );$/;"	r
_z	js/three.js	/^				this._z = 0;$/;"	r
_z	js/three.js	/^				this._z = Math.asin( - clamp( m12, - 1, 1 ) );$/;"	r
_z	js/three.js	/^				this._z = Math.asin( clamp( m21, - 1, 1 ) );$/;"	r
_z	js/three.js	/^				this._z = c1 * c2 * s3 + s1 * s2 * c3;$/;"	r
_z	js/three.js	/^				this._z = c1 * c2 * s3 - s1 * s2 * c3;$/;"	r
_z	js/three.js	/^				this._z = this._z * l;$/;"	r
_z	js/three.js	/^				this._z = v1.z;$/;"	r
_z	js/three.js	/^				this._z = value;$/;"	r
_z	js/three.js	/^				this._z = z;$/;"	r
_z	js/three.js	/^			array[ offset + 2 ] = this._z;$/;"	r
_z	js/three.js	/^			this._z = ( z * ratioA + this._z * ratioB );$/;"	r
_z	js/three.js	/^			this._z = array[ 2 ];$/;"	r
_z	js/three.js	/^			this._z = array[ offset + 2 ];$/;"	r
_z	js/three.js	/^			this._z = axis.z * s;$/;"	r
_z	js/three.js	/^			this._z = euler._z;$/;"	r
_z	js/three.js	/^			this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;$/;"	r
_z	js/three.js	/^			this._z = quaternion.z;$/;"	r
_z	js/three.js	/^			this._z = z;$/;"	r
_z	js/three.js	/^		this._z = z || 0;$/;"	r
a	js/GLTFLoader.js	/^					'	glossinessFactor *= texelGlossiness.a;',$/;"	r
a	js/three.js	/^								intersection.index = a; \/\/ triangle number in positions buffer semantics$/;"	r
a	js/three.js	/^							a = i;$/;"	r
a	js/three.js	/^							a = index.getX( i );$/;"	r
a	js/three.js	/^							var a = indices[ i ];$/;"	r
a	js/three.js	/^						a = verts[ u ];$/;"	r
a	js/three.js	/^						destVertexNormal.a = srcVertexNormal.a.clone();$/;"	r
a	js/three.js	/^						face.a = faces[ offset ++ ];$/;"	r
a	js/three.js	/^						faceA.a = faces[ offset ];$/;"	r
a	js/three.js	/^						faceB.a = faces[ offset + 1 ];$/;"	r
a	js/three.js	/^						r *= a; g *= a; b *= a;$/;"	r
a	js/three.js	/^						var a = json.skinIndices[ i ];$/;"	r
a	js/three.js	/^						var a, b, c, s, t;$/;"	r
a	js/three.js	/^					intersection.faceIndex = a;$/;"	r
a	js/three.js	/^					var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );$/;"	r
a	js/three.js	/^					var a = array[ i + 0 ];$/;"	r
a	js/three.js	/^					var a = i + 0;$/;"	r
a	js/three.js	/^					var a = indexArray[ y ][ x ];$/;"	r
a	js/three.js	/^					var a = layeroffset + j + slen1,$/;"	r
a	js/three.js	/^					var a = numberOfVertices + ix + gridX1 * iy;$/;"	r
a	js/three.js	/^					var a, b, c;$/;"	r
a	js/three.js	/^				array[ offset ++ ] = index.a;$/;"	r
a	js/three.js	/^				correctUV( uvA, j + 0, a, azi );$/;"	r
a	js/three.js	/^				face.a = changes[ face.a ];$/;"	r
a	js/three.js	/^				var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );$/;"	r
a	js/three.js	/^				var a = ( tubularSegments + 1 ) * j + i - 1;$/;"	r
a	js/three.js	/^				var a = base;$/;"	r
a	js/three.js	/^				var a = face[ 0 ] + indexOffset;$/;"	r
a	js/three.js	/^				var a = grid[ iy ][ ix + 1 ];$/;"	r
a	js/three.js	/^				var a = i * sliceCount + j;$/;"	r
a	js/three.js	/^				var a = ix + gridX1 * iy;$/;"	r
a	js/three.js	/^				var a = segment;$/;"	r
a	js/three.js	/^				var result = Triangle.barycoordFromPoint( point, a, b, c, v1 );$/;"	r
a	js/three.js	/^			return function barycoordFromPoint( point, a, b, c, optionalTarget ) {$/;"	r
a	js/three.js	/^			return function containsPoint( point, a, b, c ) {$/;"	r
a	js/three.js	/^			this.a = source.a;$/;"	r
a	js/three.js	/^			var a = ( right + left ) \/ ( right - left );$/;"	r
a	js/three.js	/^			var a = 0.0;$/;"	r
a	js/three.js	/^			var a = Math.cos( x ), b = Math.sin( x );$/;"	r
a	js/three.js	/^			var a = new Vector3();$/;"	r
a	js/three.js	/^			var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],$/;"	r
a	js/three.js	/^		this.a = ( a !== undefined ) ? a : new Vector3();$/;"	r
a	js/three.js	/^		this.a = a;$/;"	r
a	js/three.js	/^	var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n";$/;"	r
a	js/three.min.js	/^!1):this.loop},setLoop:function(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(a){this.gain.gain.value=a;return this}});he.prototype=Object.assign(Object.create(ic.prototype),{constructor:he,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=$/;"	r
a	js/three.min.js	/^!1;a=[];e=0;for(f=l.length;e<f;e++)h[e]=[];e=0;for(f=l.length;e<f;e++)for(g=m[e],t=0;t<g.length;t++){k=g[t];n=!0;for(v=0;v<l.length;v++)d(k.p,l[v].p)&&(e!==v&&a.push({froms:e,tos:v,hole:t}),n?(n=!1,h[v].push(k)):p=!0);n&&h[e].push(k)}0<a.length&&(p||(m=h))}p=0;for(e=l.length;p<e;p++)for(h=l[p].s,b.push(h),a=m[p],f=0,g=a.length;f<g;f++)h.holes.push(a[f].h);return b}});Object.assign(de.prototype,{isFont:!0,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split("");$/;"	r
a	js/three.min.js	/^!1;return function(b,c){b&&b.isWebGLRenderTargetCube&&(a||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),a=!0),b=b.texture);b&&b.isCubeTexture||Array.isArray(b.image)&&6===b.image.length?S.setTextureCube(b,c):S.setTextureCubeDynamic(b,c)}}();this.getRenderTarget=function(){return ka};this.setRenderTarget=function(a){(ka=a)&&void 0===Y.get(a).__webglFramebuffer&&S.setupRenderTarget(a);var b=null,c=!1;a?(b=Y.get(a).__webglFramebuffer,$/;"	r
a	js/three.min.js	/^"img");c.addEventListener("load",function(){jd.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);c.addEventListener("error",function(b){d&&d(b);e.manager.itemEnd(a);e.manager.itemError(a)},!1);"data:"!==a.substr(0,5)&&void 0!==this.crossOrigin&&(c.crossOrigin=this.crossOrigin);e.manager.itemStart(a);c.src=a;return c},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign($d.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){function e(c){g.load(a[c],$/;"	r
a	js/three.min.js	/^(d.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(d.wireframeLinejoin=this.wireframeLinejoin);!0===this.morphTargets&&(d.morphTargets=!0);!0===this.skinning&&(d.skinning=!0);!1===this.visible&&(d.visible=!1);"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData);c&&(c=b(a.textures),a=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.fog=a.fog;$/;"	r
a	js/three.min.js	/^0,0,0,0,a];a=new C;a.addAttribute("position",new z(b,3));a.addAttribute("color",new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new T({vertexColors:2});P.call(this,a,b)}function qe(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,k){e=k*(g-e);h=k*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,k,l,q){e=((f-e)\/k-(g-e)\/(k+l)+(g-f)\/l)*l;h=((g-f)\/l-(h-f)\/(l+q)+(h-g)\/q)*l;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+$/;"	r
a	js/three.min.js	/^1E-4);b.emissiveMap&&(a.emissiveMap.value=b.emissiveMap);b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale);b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));b.displacementMap&&(a.displacementMap.value=b.displacementMap,a.displacementScale.value=b.displacementScale,a.displacementBias.value=b.displacementBias)}console.log("THREE.WebGLRenderer","88dev");a=a||{};var t=void 0!==a.canvas?a.canvas:document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml",$/;"	r
a	js/three.min.js	/^1E3));void 0!==d&&a.offset.fromArray(d);void 0!==e&&("repeat"===e[0]&&(a.wrapS=1E3),"mirror"===e[0]&&(a.wrapS=1002),"repeat"===e[1]&&(a.wrapT=1E3),"mirror"===e[1]&&(a.wrapT=1002));void 0!==h&&(a.anisotropy=h);b=R.generateUUID();k[b]=a;return b}var k={},l={uuid:R.generateUUID(),type:"MeshLambertMaterial"},m;for(m in e){var n=e[m];switch(m){case "DbgColor":case "DbgIndex":case "opticalDensity":case "illumination":break;case "DbgName":l.name=n;break;case "blending":l.blending=a[n];break;case "colorAmbient":case "mapAmbient":console.warn("THREE.Loader.createMaterial:",$/;"	r
a	js/three.min.js	/^4),this.addAttribute("skinIndex",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new z(4*a.skinWeights.length,4),this.addAttribute("skinWeight",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Na);var a=this.attributes.position;void 0!==a?this.boundingBox.setFromBufferAttribute(a):$/;"	r
a	js/three.min.js	/^5]);c.set(h[x+6],h[x+7],h[x+8]);e.set(k[y+0],k[y+1]);f.set(k[y+2],k[y+3]);m.set(k[y+4],k[y+5]);d.copy(a).add(b).add(c).divideScalar(3);var B=Math.atan2(d.z,-d.x);g(e,y+0,a,B);g(f,y+2,b,B);g(m,y+4,c,B)}for(a=0;a<k.length;a+=6)b=k[a+0],c=k[a+2],d=k[a+4],e=Math.min(b,c,d),.9<Math.max(b,c,d)&&.1>e&&(.2>b&&(k[a+0]+=1),.2>c&&(k[a+2]+=1),.2>d&&(k[a+4]+=1))})();this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(h.slice(),3));this.addAttribute("uv",new z(k,2));0===d?this.computeVertexNormals():$/;"	r
a	js/three.min.js	/^Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var a=Math.atan2(this.y,this.x);0>a&&(a+=2*Math.PI);return a},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},manhattanDistanceTo:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=$/;"	r
a	js/three.min.js	/^Math.floor(Math.log(a)\/Math.LN2))}};Object.defineProperties(D.prototype,{width:{get:function(){return this.x},set:function(a){this.x=a}},height:{get:function(){return this.y},set:function(a){this.y=a}}});Object.assign(D.prototype,{isVector2:!0,set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;$/;"	r
a	js/three.min.js	/^Object.assign(jc.prototype,{isInterleavedBuffer:!0,setArray:function(a){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==a?a.length\/this.stride:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.count=a.count;this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+$/;"	r
a	js/three.min.js	/^P[N];Ha.isClockWise(U)&&(P[N]=U.reverse())}}var V=Ha.triangulateShape(a,P),X=a;N=0;for(M=P.length;N<M;N++)U=P[N],a=a.concat(U);var Z,Y=a.length,T,ca=V.length,B=[],G=0;var W=X.length;var ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),B[G]=d(X[G],X[ea],X[Z]);var A=[],da=B.concat();N=0;for(M=P.length;N<M;N++){U=P[N];var ba=[];G=0;W=U.length;ea=W-1;for(Z=G+1;G<W;G++,ea++,Z++)ea===W&&(ea=0),Z===W&&(Z=0),ba[G]=d(U[G],U[ea],U[Z]);A.push(ba);da=da.concat(ba)}for(ea=0;ea<x;ea++){W=ea\/x;var fa=$/;"	r
a	js/three.min.js	/^Xa.DefaultOrder="XYZ";Object.defineProperties(Xa.prototype,{x:{get:function(){return this._x},set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},order:{get:function(){return this._order},set:function(a){this._order=a;this.onChangeCallback()}}});Object.assign(Xa.prototype,{isEuler:!0,set:function(a,b,c,d){this._x=a;this._y=b;this._z=$/;"	r
a	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
a	js/three.min.js	/^a&&a.restoreContext()};this.getPixelRatio=function(){return P};this.setPixelRatio=function(a){void 0!==a&&(P=a,this.setSize(W,ea,!1))};this.getSize=function(){return{width:W,height:ea}};this.setSize=function(a,b,c){var d=la.getDevice();d&&d.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(W=a,ea=b,t.width=a*P,t.height=b*P,!1!==c&&(t.style.width=a+"px",t.style.height=b+"px"),this.setViewport(0,0,a,b))};this.getDrawingBufferSize=function(){return{width:W*$/;"	r
a	js/three.min.js	/^a):a;a=this._actionsByClip[c?c.uuid:a];return void 0!==a?a.actionByRoot[b]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g)b[g]._update(d,a,e,f);a=this._bindings;$/;"	r
a	js/three.min.js	/^a);this.lightPlane.lookAt(c);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(c);this.targetLine.scale.z=c.length()}}();ed.prototype=Object.create(P.prototype);ed.prototype.constructor=ed;ed.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=b.getAttribute("position"),$/;"	r
a	js/three.min.js	/^a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this},addLevel:function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)},getObjectForDistance:function(a){for(var b=this.levels,c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object},raycast:function(){var a=new p;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=$/;"	r
a	js/three.min.js	/^a,b);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},$/;"	r
a	js/three.min.js	/^a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function bb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:1003;this.minFilter=void 0!==l?l:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Ta(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];da.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,k,l);this.flipY=!1}function Fb(a,b,c){var d=a[0];if(0>=d||0<d)return a;var e=b*c,f=we[e];void 0===f&&(f=new Float32Array(e),$/;"	r
a	js/three.min.js	/^a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,$/;"	r
a	js/three.min.js	/^a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},expandByObject:function(){function a(a){var f=a.geometry;if(void 0!==f)if(f.isGeometry)for(f=f.vertices,c=0,d=f.length;c<d;c++)e.copy(f[c]),$/;"	r
a	js/three.min.js	/^a.isColor?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a;return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)\/255;this.g=(a>>8&255)\/255;this.b=(a&255)\/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&--d;return d<1\/6?a+6*(c-a)*d:.5>d?c:d<2\/3?a+6*(c-a)*(2\/3-d):a}return function(b,c,d){b=R.euclideanModulo(b,$/;"	r
a	js/three.min.js	/^a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1\/b,c=new K;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new p,b=new p,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===$/;"	r
a	js/three.min.js	/^a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a=new X;return function(b){b&&b.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");$/;"	r
a	js/three.min.js	/^a;g=2*b-c;break;case 2402:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a;h=2*c-b;break;case 2402:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a\/(b-g);this._weightNext=a\/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,k=this._offsetPrev,l=this._offsetNext,m=this._weightPrev,n=this._weightNext,$/;"	r
a	js/three.min.js	/^a;return this},onChangeCallback:function(){}});Object.assign(p.prototype,{isVector3:!0,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;$/;"	r
a	js/three.min.js	/^a;return this},setMimeType:function(a){this.mimeType=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});Object.assign(Qe.prototype,{load:function(a,b,c,d){function e(e){l.load(a[e],function(a){a=g._parser(a,!0);h[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};f+=1;6===f&&(1===a.mipmapCount&&(k.minFilter=1006),k.format=a.format,k.needsUpdate=!0,b&&b(k))},c,d)}var f,g=this,h=[],k=new Nb;k.image=h;var l=new Ja(this.manager);l.setPath(this.path);l.setResponseType("arraybuffer");$/;"	r
a	js/three.min.js	/^a;return this}});Object.assign(Zd.prototype,{load:function(a,b,c,d){var e=this,f=new bb,g=new Ja(this.manager);g.setResponseType("arraybuffer");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:1001,f.wrapT=void 0!==a.wrapT?a.wrapT:1001,f.magFilter=void 0!==a.magFilter?a.magFilter:1006,f.minFilter=void 0!==a.minFilter?a.minFilter:1008,f.anisotropy=void 0!==a.anisotropy?$/;"	r
a	js/three.min.js	/^a;this.g+=a;this.b+=a;return this},sub:function(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=$/;"	r
a	js/three.min.js	/^a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;16>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}});Object.assign(X,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,$/;"	r
a	js/three.min.js	/^a=void 0);this.manager=void 0!==a?a:wa;this.withCredentials=!1}function Re(a){this.manager=void 0!==a?a:wa;this.texturePath=""}function Se(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);var f=a*a;return(2*c-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function ub(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}function vb(a,b,c,d,e){var f=1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}function ca(){this.type="Curve";this.arcLengthDivisions=200}function Ma(a,b){ca.call(this);this.type="LineCurve";this.v1=a;$/;"	r
a	js/three.min.js	/^a?a.length\/this.itemSize:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=$/;"	r
a	js/three.min.js	/^a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=$/;"	r
a	js/three.min.js	/^addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;$/;"	r
a	js/three.min.js	/^addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=$/;"	r
a	js/three.min.js	/^b));this.mergeVertices()}function $b(a,b){function c(a){var c,h=e.length\/3;a=a.extractPoints(b);var l=a.shape,q=a.holes;if(!1===Ha.isClockWise(l))for(l=l.reverse(),a=0,c=q.length;a<c;a++){var m=q[a];!0===Ha.isClockWise(m)&&(q[a]=m.reverse())}var p=Ha.triangulateShape(l,q);a=0;for(c=q.length;a<c;a++)m=q[a],l=l.concat(m);a=0;for(c=l.length;a<c;a++)m=l[a],e.push(m.x,m.y,0),f.push(0,0,1),g.push(m.x,m.y);a=0;for(c=p.length;a<c;a++)l=p[a],d.push(l[0]+h,l[1]+h,l[2]+h),k+=3}C.call(this);this.type="ShapeBufferGeometry";$/;"	r
a	js/three.min.js	/^b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*$/;"	r
a	js/three.min.js	/^b){b=b||new p;b.subVectors(a,this.origin);a=b.dot(this.direction);return 0>a?b.copy(this.origin):b.copy(this.direction).multiplyScalar(a).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new p;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var a=$/;"	r
a	js/three.min.js	/^b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)\/(c-b);return a*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(a){return a*R.DEG2RAD},radToDeg:function(a){return a*R.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},ceilPowerOfTwo:function(a){return Math.pow(2,Math.ceil(Math.log(a)\/Math.LN2))},floorPowerOfTwo:function(a){return Math.pow(2,$/;"	r
a	js/three.min.js	/^b.count);a.addAttribute("color",new O(b,3));this.add(new qa(a,this.material));this.update()}function cd(a,b,c,d){a=a||10;b=b||10;c=new H(void 0!==c?c:4473924);d=new H(void 0!==d?d:8947848);var e=b\/2,f=a\/b,g=a\/2;a=[];for(var h=[],k=0,l=0,q=-g;k<=b;k++,q+=f){a.push(-g,0,q,g,0,q);a.push(q,0,-g,q,0,g);var n=k===e?c:d;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3}b=new C;b.addAttribute("position",new z(a,3));b.addAttribute("color",new z(h,3));c=new T({vertexColors:2});$/;"	r
a	js/three.min.js	/^b.length)throw Error("no keyframes in track named "+a);this.name=a;this.times=S.convertArray(b,this.TimeBufferType);this.values=S.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()}function ec(a,b,c,d){sb.call(this,a,b,c,d)}function Ed(a,b,c,d){xa.call(this,a,b,c,d)}function Yc(a,b,c,d){sb.call(this,a,b,c,d)}function fc(a,b,c,d){sb.call(this,a,b,c,d)}function Fd(a,b,c,d){sb.call(this,a,b,c,d)}function Gd(a,b,c){sb.call(this,a,b,$/;"	r
a	js/three.min.js	/^b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a&&a.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var c=a.elements;a=this.elements;var d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],k=c[5],l=c[6],q=c[7],c=c[8],n=c*h-k*q,m=k*l-c*g,r=q*g-h*l,p=d*n+e*m+f*r;if(0===p){if(!0===$/;"	r
a	js/three.min.js	/^c)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,b=c.length;a<b;a++){var d=c[a].name||String(a);this.morphTargetInfluences.push(0);this.morphTargetDictionary[d]=a}}}else if(c=a.morphTargets,void 0!==c&&0<c.length)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,b=c.length;a<b;a++)d=c[a].name||String(a),this.morphTargetInfluences.push(0),this.morphTargetDictionary[d]=a},raycast:function(){function a(a,b,c,d,e,f,g){Pa.barycoordFromPoint(a,b,c,d,t);e.multiplyScalar(t.x);$/;"	r
a	js/three.min.js	/^c)}function pa(a,b,c){this.path=b;this.parsedPath=c||pa.parseTrackName(b);this.node=pa.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function We(){this.uuid=R.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var d=this;this.stats={objects:{get total(){return d._objects.length},$/;"	r
a	js/three.min.js	/^c,d);this.applyMatrix(a);return this}}(),scale:function(){var a=new K;return function(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a=new w;return function(b){a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a.isPoints||a.isLine){a=new z(3*b.vertices.length,3);var c=new z(3*b.colors.length,$/;"	r
a	js/three.min.js	/^c.faces.push(v)}}d=a;r=void 0!==d.influencesPerVertex?d.influencesPerVertex:2;if(d.skinWeights)for(g=0,h=d.skinWeights.length;g<h;g+=r)c.skinWeights.push(new ba(d.skinWeights[g],1<r?d.skinWeights[g+1]:0,2<r?d.skinWeights[g+2]:0,3<r?d.skinWeights[g+3]:0));if(d.skinIndices)for(g=0,h=d.skinIndices.length;g<h;g+=r)c.skinIndices.push(new ba(d.skinIndices[g],1<r?d.skinIndices[g+1]:0,2<r?d.skinIndices[g+2]:0,3<r?d.skinIndices[g+3]:0));c.bones=d.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||$/;"	r
a	js/three.min.js	/^c.isMeshPhongMaterial||c.isMeshStandardMaterial||c.envMap)f=k.map.cameraPosition,void 0!==f&&f.setValue(F,Jb.setFromMatrixPosition(a.matrixWorld));(c.isMeshPhongMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||c.isMeshStandardMaterial||c.isShaderMaterial||c.skinning)&&k.setValue(F,"viewMatrix",a.matrixWorldInverse)}if(c.skinning&&(k.setOptional(F,d,"bindMatrix"),k.setOptional(F,d,"bindMatrixInverse"),a=d.skeleton))if(f=a.bones,X.floatVertexTextures){if(void 0===a.boneTexture){var f=Math.sqrt(4*$/;"	r
a	js/three.min.js	/^c.skinIndices.length!==c.vertices.length)&&console.warn("When skinning, number of vertices ("+c.vertices.length+"), skinIndices ("+c.skinIndices.length+"), and skinWeights ("+c.skinWeights.length+") should match.");g=a;h=g.scale;if(void 0!==g.morphTargets)for(d=0,r=g.morphTargets.length;d<r;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=g.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,m=g.morphTargets[d].vertices,u=0,k=m.length;u<k;u+=3)n=new p,n.x=m[u]*h,n.y=$/;"	r
a	js/three.min.js	/^c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();Ab.prototype.setFromObject=function(a){this.object=a;this.update();return this};fd.prototype=Object.create(P.prototype);fd.prototype.constructor=fd;fd.prototype.updateMatrixWorld=function(a){var b=this.box;b.isEmpty()||(b.getCenter(this.position),b.getSize(this.scale),this.scale.multiplyScalar(.5),w.prototype.updateMatrixWorld.call(this,$/;"	r
a	js/three.min.js	/^case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},$/;"	r
a	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return this},copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,$/;"	r
a	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),multiply:function(a){return this.multiplyMatrices(this,$/;"	r
a	js/three.min.js	/^createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getSpacedPoints(a);return this.createGeometry(a)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var b=new L,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new p(e.x,e.y,e.z||0))}return b}});ef.prototype=$/;"	r
a	js/three.min.js	/^d.isPresenting)return a;k.near=a.near;l.near=a.near;k.far=a.far;l.far=a.far;q.matrixWorld.copy(a.matrixWorld);q.matrixWorldInverse.copy(a.matrixWorldInverse);k.matrixWorldInverse.fromArray(e.leftViewMatrix);l.matrixWorldInverse.fromArray(e.rightViewMatrix);this.standing&&b&&(k.matrixWorldInverse.multiply(h),l.matrixWorldInverse.multiply(h));a=a.parent;null!==a&&(f.getInverse(a.matrixWorld),k.matrixWorldInverse.multiply(f),l.matrixWorldInverse.multiply(f));k.matrixWorld.getInverse(k.matrixWorldInverse);$/;"	r
a	js/three.min.js	/^d.length&&l(d,a,b,f);e.length&&l(e,a,b,f)}else d.length&&l(d,a,b),e.length&&l(e,a,b);Aa.render(C,a,b);za.render(Ua,a,b,Q);c&&S.updateRenderTargetMipmap(c);aa.buffers.depth.setTest(!0);aa.buffers.depth.setMask(!0);aa.buffers.color.setMask(!0);aa.setPolygonOffset(!1);la.enabled&&la.submitFrame()}};this.setFaceCulling=function(a,b){aa.setCullFace(a);aa.setFlipSided(0===b)};this.allocTextureUnit=function(){var a=G;a>=X.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+a+" texture units while this GPU supports only "+$/;"	r
a	js/three.min.js	/^d.y,d.z,f.x,f.y,f.z))}}()});ic.prototype=Object.assign(Object.create(w.prototype),{constructor:ic,getOutput:function(){return this.gain},setNodeSource:function(a){this.hasPlaybackControl=!1;this.sourceType="audioNode";this.source=a;this.connect();return this},setBuffer:function(a){this.buffer=a;this.sourceType="buffer";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");$/;"	r
a	js/three.min.js	/^d=c.array;d[0]=a;d[1]=-b;d[2]=0;d[3]=a;d[4]=b;d[5]=0;d[6]=-a;d[7]=b;d[8]=0;d[9]=-a;d[10]=-b;d[11]=0;d[12]=a;d[13]=-b;d[14]=0;c.needsUpdate=!0;void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)};oc.prototype=Object.create(w.prototype);oc.prototype.constructor=oc;oc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};oc.prototype.update=function(){var a=new p,b=new H,c=new H;return function(){var d=$/;"	r
a	js/three.min.js	/^d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(a){this.onUploadCallback=a;return this}});me.prototype=Object.assign(Object.create(jc.prototype),{constructor:me,isInstancedInterleavedBuffer:!0,copy:function(a){jc.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this}});ne.prototype=Object.assign(Object.create(O.prototype),{constructor:ne,isInstancedBufferAttribute:!0,$/;"	r
a	js/three.min.js	/^density:this.density}};Lb.prototype.isFog=!0;Lb.prototype.clone=function(){return new Lb(this.color.getHex(),this.near,this.far)};Lb.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};od.prototype=Object.assign(Object.create(w.prototype),{constructor:od,copy:function(a,b){w.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=$/;"	r
a	js/three.min.js	/^e)&&.1>Math.abs(d+h)&&.1>Math.abs(g+k)&&.1>Math.abs(b+f+l-3))return this.set(1,0,0,0),this;a=Math.PI;b=(b+1)\/2;f=(f+1)\/2;l=(l+1)\/2;c=(c+e)\/4;d=(d+h)\/4;g=(g+k)\/4;b>f&&b>l?.01>b?(k=0,c=h=.707106781):(k=Math.sqrt(b),h=c\/k,c=d\/k):f>l?.01>f?(k=.707106781,h=0,c=.707106781):(h=Math.sqrt(f),k=c\/h,c=g\/h):.01>l?(h=k=.707106781,c=0):(c=Math.sqrt(l),k=d\/c,h=g\/c);this.set(k,h,c,a);return this}a=Math.sqrt((k-g)*(k-g)+(d-h)*(d-h)+(e-c)*(e-c));.001>Math.abs(a)&&(a=1);this.x=(k-g)\/a;this.y=(d-h)\/a;this.z=(e-c)\/a;$/;"	r
a	js/three.min.js	/^e);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=$/;"	r
a	js/three.min.js	/^e.manager.itemError(a)},!1);void 0!==this.responseType&&(n.responseType=this.responseType);void 0!==this.withCredentials&&(n.withCredentials=this.withCredentials);n.overrideMimeType&&n.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text\/plain");for(h in this.requestHeader)n.setRequestHeader(h,this.requestHeader[h]);n.send(null)}e.manager.itemStart(a);return n}},setPath:function(a){this.path=a;return this},setResponseType:function(a){this.responseType=a;return this},setWithCredentials:function(a){this.withCredentials=$/;"	r
a	js/three.min.js	/^e[k-1].clone(),f[k]=f[k-1].clone(),g.crossVectors(d[k-1],d[k]),g.length()>Number.EPSILON&&(g.normalize(),c=Math.acos(R.clamp(d[k-1].dot(d[k]),-1,1)),e[k].applyMatrix4(h.makeRotationAxis(g,c))),f[k].crossVectors(d[k],e[k]);if(!0===b)for(c=Math.acos(R.clamp(e[0].dot(e[a]),-1,1)),c\/=a,0<d[0].dot(g.crossVectors(e[0],e[a]))&&(c=-c),k=1;k<=a;k++)e[k].applyMatrix4(h.makeRotationAxis(d[k],c*k)),f[k].crossVectors(d[k],e[k]);return{tangents:d,normals:e,binormals:f}}});Ma.prototype=Object.create(ca.prototype);$/;"	r
a	js/three.min.js	/^function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new Ta,g=new Wc(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(td.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){var e=new Wc(this.manager);e.setCrossOrigin(this.crossOrigin);e.setPath(this.path);var f=new da;f.image=e.load(a,$/;"	r
a	js/three.min.js	/^g&&(this.faceVertexUvs[1]=g)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length\/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==n[b])return n[b];n[b]=q.length;q.push(a.getHex());return n[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==r[b])return r[b];r[b]=m.length\/2;m.push(a.x,a.y);return r[b]}var e=$/;"	r
a	js/three.min.js	/^g,h){this.absellipse(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){a=new Sa(a,b,c,d,e,f,g,h);0<this.curves.length&&(b=a.getPoint(0),b.equals(this.currentPoint)||this.lineTo(b.x,b.y));this.curves.push(a);a=a.getPoint(1);this.currentPoint.copy(a)}});Zc.prototype=se;se.constructor=Zc;zb.prototype=Object.assign(Object.create(se),{constructor:zb,getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},$/;"	r
a	js/three.min.js	/^isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);$/;"	r
a	js/three.min.js	/^k(g[2]);k(g[3])}}}function f(a,b,c){r.push(a);r.push(b);r.push(c)}function g(a,b,c){h(a);h(b);h(c);a=m.length\/3;a=E.generateTopUV(R,m,a-3,a-2,a-1);k(a[0]);k(a[1]);k(a[2])}function h(a){n.push(m.length\/3);m.push(r[3*a+0]);m.push(r[3*a+1]);m.push(r[3*a+2])}function k(a){u.push(a.x);u.push(a.y)}var l=b.arrays?b.arrays:this.getArrays(),m=l.position,n=l.index,u=l.uv,r=[],l=void 0!==b.amount?b.amount:100,v=void 0!==b.bevelThickness?b.bevelThickness:6,t=void 0!==b.bevelSize?b.bevelSize:v-2,x=void 0!==b.bevelSegments?$/;"	r
a	js/three.min.js	/^l.matrixWorld.getInverse(l.matrixWorldInverse);k.projectionMatrix.fromArray(e.leftProjectionMatrix);l.projectionMatrix.fromArray(e.rightProjectionMatrix);q.projectionMatrix.copy(k.projectionMatrix);a=d.getLayers();a.length&&(a=a[0],null!==a.leftBounds&&4===a.leftBounds.length&&k.bounds.fromArray(a.leftBounds),null!==a.rightBounds&&4===a.rightBounds.length&&l.bounds.fromArray(a.rightBounds));return q};this.getStandingMatrix=function(){return g};this.submitFrame=function(){d&&d.isPresenting&&d.submitFrame()};$/;"	r
a	js/three.min.js	/^new L;g.fromBufferGeometry(a)}else g=a.clone();g.mergeVertices();g.computeFaceNormals();a=g.vertices;g=g.faces;for(var h=0,k=g.length;h<k;h++)for(var l=g[h],q=0;3>q;q++){var n=l[f[q]];var u=l[f[(q+1)%3]];d[0]=Math.min(n,u);d[1]=Math.max(n,u);n=d[0]+","+d[1];void 0===e[n]?e[n]={index1:d[0],index2:d[1],face1:h,face2:void 0}:e[n].face2=h}for(n in e)if(d=e[n],void 0===d.face2||g[d.face1].normal.dot(g[d.face2].normal)<=b)f=a[d.index1],c.push(f.x,f.y,f.z),f=a[d.index2],c.push(f.x,f.y,f.z);this.addAttribute("position",$/;"	r
a	js/three.min.js	/^new p;if(null!==a.index){k=a.attributes.position;q=a.index;var r=a.groups;0===r.length&&(r=[{start:0,count:q.count,materialIndex:0}]);a=0;for(e=r.length;a<e;++a)for(l=r[a],c=l.start,d=l.count,l=c,d=c+d;l<d;l+=3)for(c=0;3>c;c++)n=q.getX(l+c),u=q.getX(l+(c+1)%3),f[0]=Math.min(n,u),f[1]=Math.max(n,u),n=f[0]+","+f[1],void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]});for(n in g)l=g[n],h.fromBufferAttribute(k,l.index1),b.push(h.x,h.y,h.z),h.fromBufferAttribute(k,l.index2),b.push(h.x,h.y,h.z)}else for(k=a.attributes.position,$/;"	r
a	js/three.min.js	/^outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||.5;b=b||1;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=[],h=[],k=[],l=[],q=a,n=(b-a)\/d,u=new p,m=new D,v,t;for(v=0;v<=d;v++){for(t=0;t<=c;t++)a=e+t\/c*f,u.x=q*Math.cos(a),u.y=q*Math.sin(a),h.push(u.x,u.y,u.z),k.push(0,0,1),m.x=(u.x\/b+1)\/2,m.y=(u.y\/b+1)\/2,l.push(m.x,m.y);q+=n}for(v=0;v<d;v++)for(b=v*(c+1),t=0;t<c;t++)a=t+b,e=a+c+1,f=a+c+2,q=a+1,g.push(a,e,q),g.push(e,$/;"	r
a	js/three.min.js	/^premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n",dithering_fragment:"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n",dithering_pars_fragment:"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 \/ 255.0, -0.25 \/ 255.0, 0.25 \/ 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n",$/;"	r
a	js/three.min.js	/^r;a++){var p=g[a].clone();void 0!==b&&p.applyMatrix4(b);f.push(p)}a=0;for(r=m.length;a<r;a++)n.push(m[a].clone());a=0;for(r=k.length;a<r;a++){var g=k[a],t=g.vertexNormals,m=g.vertexColors,n=new Oa(g.a+e,g.b+e,g.c+e);n.normal.copy(g.normal);void 0!==d&&n.normal.applyMatrix3(d).normalize();b=0;for(f=t.length;b<f;b++)p=t[b].clone(),void 0!==d&&p.applyMatrix3(d).normalize(),n.vertexNormals.push(p);n.color.copy(g.color);b=0;for(f=m.length;b<f;b++)p=m[b],n.vertexColors.push(p.clone());n.materialIndex=g.materialIndex+$/;"	r
a	js/three.min.js	/^return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x\/=a.x;this.y\/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},applyMatrix3:function(a){var b=this.x,c=this.y;a=a.elements;this.x=a[0]*b+a[3]*c+a[6];this.y=a[1]*b+a[4]*c+a[7];return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=$/;"	r
a	js/three.min.js	/^set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},w:{get:function(){return this._w},set:function(a){this._w=a;this.onChangeCallback()}}});Object.assign(X.prototype,{set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,$/;"	r
a	js/three.min.js	/^setFilter:function(a){return this.setFilters(a?[a]:[])},setPlaybackRate:function(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),$/;"	r
a	js/three.min.js	/^te=new qe,ue=new qe,ve=new qe;la.prototype=Object.create(ca.prototype);la.prototype.constructor=la;la.prototype.isCatmullRomCurve3=!0;la.prototype.getPoint=function(a,b){b=b||new p;var c=this.points,d=c.length;a*=d-(this.closed?0:1);var e=Math.floor(a);a-=e;this.closed?e+=0<e?0:(Math.floor(Math.abs(e)\/c.length)+1)*c.length:0===a&&e===d-1&&(e=d-2,a=1);if(this.closed||0<e)var f=c[(e-1)%d];else Nd.subVectors(c[0],c[1]).add(c[0]),f=Nd;var g=c[e%d];var h=c[(e+1)%d];this.closed||e+2<d?c=c[(e+2)%d]:(Nd.subVectors(c[d-$/;"	r
a	js/three.min.js	/^this,f,g);a=!1;break}if(null!==e&&e>g){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&S.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,f,d);a=!1;break}return a},optimize:function(){for(var a,b,c=this.times,d=this.values,e=this.getValueSize(),f=2302===this.getInterpolation(),g=1,h=c.length-1,k=1;k<h;++k){a=!1;var l=c[k];if(l!==c[k+1]&&(1!==k||$/;"	r
a	js/three.min.js	/^this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,$/;"	r
a	js/three.min.js	/^this.boneInverses=[],a=0,b=this.bones.length;a<b;a++)this.boneInverses.push(new K)}function pd(){w.call(this);this.type="Bone"}function qd(a,b){qa.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new K;this.bindMatrixInverse=new K;a=this.initBones();a=new Dc(a);this.bind(a,this.matrixWorld);this.normalizeSkinWeights()}function T(a){Q.call(this);this.type="LineBasicMaterial";this.color=new H(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.lights=!1;$/;"	r
a	js/three.min.js	/^this.boundingBox&&(this.boundingBox=new Na);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Da);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a&&a.isGeometry){var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0],q=a.faceVertexUvs[0],n=this.colors,m=a.colors;void 0===c&&(c=0);void 0!==b&&(d=(new ta).getNormalMatrix(b));a=0;for(var r=g.length;a<$/;"	r
a	js/three.min.js	/^this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return(a||new p).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new p,b=new ta;return function(c,d){d=d||b.getNormalMatrix(c);c=this.coplanarPoint(a).applyMatrix4(c);d=this.normal.applyMatrix3(d).normalize();this.constant=-c.dot(d);return this}}(),$/;"	r
a	js/three.min.js	/^this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(a){this.gain.gain.value=a},updateMatrixWorld:function(){var a=new p,b=new X,c=new p,d=new p;return function(e){w.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.positionX?(e.positionX.setValueAtTime(a.x,$/;"	r
a	js/three.min.js	/^this.parameters={text:a,parameters:b};this.fromBufferGeometry(new Wb(a,b));this.mergeVertices()}function Wb(a,b){b=b||{};var c=b.font;if(!c||!c.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new L;a=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);Ga.call(this,a,b);this.type="TextBufferGeometry"}$/;"	r
a	js/three.min.js	/^this.shadowMap.cullFace=a}}});Object.defineProperties(Ie.prototype,{cullFace:{get:function(){return this.renderReverseSided?2:1},set:function(a){a=1!==a;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+a+".");this.renderReverseSided=a}}});Object.defineProperties(Db.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");$/;"	r
a	js/three.min.js	/^this.type="QuadraticBezierCurve";this.v0=a;this.v1=b;this.v2=c}function Zc(a){hc.call(this);this.type="Path";this.currentPoint=new D;a&&this.fromPoints(a)}function zb(){Zc.apply(this,arguments);this.type="Shape";this.holes=[]}function ce(){this.type="ShapePath";this.subPaths=[];this.currentPath=null}function de(a){this.type="Font";this.data=a}function Te(a){this.manager=void 0!==a?a:wa}function ee(a){this.manager=void 0!==a?a:wa}function Ue(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;$/;"	r
a	js/three.min.js	/^this.vertices.length;d<b;d++)c[d].normalize();a=0;for(d=this.faces.length;a<d;a++)b=this.faces[a],g=b.vertexNormals,3===g.length?(g[0].copy(c[b.a]),g[1].copy(c[b.b]),g[2].copy(c[b.c])):(g[0]=c[b.a].clone(),g[1]=c[b.b].clone(),g[2]=c[b.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var a;this.computeFaceNormals();var b=0;for(a=this.faces.length;b<a;b++){var c=this.faces[b];var d=c.vertexNormals;3===d.length?(d[0].copy(c.normal),d[1].copy(c.normal),$/;"	r
a	js/three.min.js	/^this;var a=new C,b=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h,k=0,l=0,q=b.length;l<q;l++){h=b[l]*e;for(var n=0;n<e;n++)g[k++]=f[h++]}a.addAttribute(d,new O(g,e))}return a},toJSON:function(){var a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};a.uuid=this.uuid;a.type=this.type;""!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters;for(var c in b)void 0!==b[c]&&$/;"	r
a	js/three.min.js	/^tubularSegments:b,radius:c,radialSegments:d,closed:e};void 0!==f&&console.warn("THREE.TubeGeometry: taper has been removed.");a=new Tb(a,b,c,d,e);this.tangents=a.tangents;this.normals=a.normals;this.binormals=a.binormals;this.fromBufferGeometry(a);this.mergeVertices()}function Tb(a,b,c,d,e){function f(e){q=a.getPointAt(e\/b,q);var f=g.normals[e];e=g.binormals[e];for(u=0;u<=d;u++){var l=u\/d*Math.PI*2,n=Math.sin(l),l=-Math.cos(l);k.x=l*f.x+n*e.x;k.y=l*f.y+n*e.y;k.z=l*f.z+n*e.z;k.normalize();v.push(k.x,$/;"	r
a	js/three.min.js	/^ua.state.spotShadowMap,c.spotShadowMatrix.value=ua.state.spotShadowMatrix,c.pointShadowMap.value=ua.state.pointShadowMap,c.pointShadowMatrix.value=ua.state.pointShadowMatrix);a=d.program.getUniforms();a=cb.seqWithValue(a.seq,c);d.uniformsList=a}function u(a,b,c,d){G=0;var e=Y.get(c);fa&&(Ud||a!==O)&&Fa.setState(c.clippingPlanes,c.clipIntersection,c.clipShadows,a,e,a===O&&c.id===U);!1===c.needsUpdate&&(void 0===e.program?c.needsUpdate=!0:c.fog&&e.fog!==b?c.needsUpdate=!0:c.lights&&e.lightsHash!==ua.state.hash?$/;"	r
a01	js/three.js	/^				var a01 = - this.direction.dot( segDir );$/;"	r
a1	js/three.js	/^		mapLinear: function ( x, a1, a2, b1, b2 ) {$/;"	r
a11	js/three.js	/^			var a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];$/;"	r
a11	js/three.js	/^			var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];$/;"	r
a11	js/three.js	/^			var a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];$/;"	r
a21	js/three.js	/^			var a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];$/;"	r
a21	js/three.js	/^			var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];$/;"	r
a21	js/three.js	/^			var a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];$/;"	r
a31	js/three.js	/^			var a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];$/;"	r
a31	js/three.js	/^			var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];$/;"	r
a41	js/three.js	/^			var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];$/;"	r
aCP1y	js/three.js	/^			this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );$/;"	r
aCP1y	js/three.js	/^		bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {$/;"	r
aCPy	js/three.js	/^			this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );$/;"	r
aCPy	js/three.js	/^		quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {$/;"	r
aCROSSbp	js/three.js	/^					aCROSSbp = aX * bpy - aY * bpx;$/;"	r
aClockwise	js/three.js	/^		this.aClockwise = aClockwise;$/;"	r
aEndAngle	js/three.js	/^		this.aEndAngle = aEndAngle;$/;"	r
aRadius	js/three.js	/^			this.absarc( aX + x0, aY + y0, aRadius,$/;"	r
aRotation	js/three.js	/^		this.aRotation = aRotation || 0;$/;"	r
aStartAngle	js/three.js	/^				aStartAngle, aEndAngle, aClockwise );$/;"	r
aStartAngle	js/three.js	/^		this.aStartAngle = aStartAngle;$/;"	r
aX	js/three.js	/^				aX = cx - bx; aY = cy - by;$/;"	r
aX	js/three.js	/^				var aX, aY, bX, bY, cX, cY;$/;"	r
aX	js/three.js	/^		EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );$/;"	r
aX	js/three.js	/^		this.aX = aX;$/;"	r
aY	js/three.js	/^			this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );$/;"	r
aY	js/three.js	/^			var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );$/;"	r
aY	js/three.js	/^		absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
aY	js/three.js	/^		absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {$/;"	r
aY	js/three.js	/^		arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
aY	js/three.js	/^		ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {$/;"	r
aY	js/three.js	/^		this.aY = aY;$/;"	r
aY	js/three.js	/^	function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
aY	js/three.js	/^	function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {$/;"	r
aY	js/three.min.js	/^this.xRadius*Math.cos(c);var f=this.aY+this.yRadius*Math.sin(c);0!==this.aRotation&&(c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a-this.aX,f-=this.aY,a=e*c-f*d+this.aX,f=e*d+f*c+this.aY);return b.set(a,f)};wb.prototype=Object.create(ca.prototype);wb.prototype.constructor=wb;wb.prototype.isSplineCurve=!0;wb.prototype.getPoint=function(a,b){b=b||new D;var c=this.points,d=(c.length-1)*a;a=Math.floor(d);var d=d-a,e=c[0===a?a:a-1],f=c[a],g=c[a>c.length-2?c.length-1:a+1],c=c[a>c.length-3?c.length-$/;"	r
a_x	js/three.js	/^			var a_x = vertices[ indexA * 3 ];$/;"	r
a_y	js/three.js	/^			var a_y = vertices[ indexA * 3 + 1 ];$/;"	r
a_z	js/three.js	/^			var a_z = vertices[ indexA * 3 + 2 ];$/;"	r
ab	js/three.min.js	/^interpolate_:function(a){return this.copySampleValue_(a-1)}});var ab={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(a){return new Dd(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new Xc(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new Cd(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){switch(a){case 2300:var b=$/;"	r
ab	js/three.min.js	/^tb.prototype=ab;ab.constructor=tb;Object.assign(tb,{parse:function(a){if(void 0===a.type)throw Error("track type undefined, can not parse");var b=tb._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];S.flattenJSON(a.keys,c,d,"value");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:S.convertArray(a.times,Array),values:S.convertArray(a.values,$/;"	r
absNumericalSort	js/three.js	/^	function absNumericalSort( a, b ) {$/;"	r
absarc	js/three.js	/^		absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
absellipse	js/three.js	/^		absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {$/;"	r
absellipse	js/three.min.js	/^g,h){this.absellipse(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){a=new Sa(a,b,c,d,e,f,g,h);0<this.curves.length&&(b=a.getPoint(0),b.equals(this.currentPoint)||this.lineTo(b.x,b.y));this.curves.push(a);a=a.getPoint(1);this.currentPoint.copy(a)}});Zc.prototype=se;se.constructor=Zc;zb.prototype=Object.assign(Object.create(se),{constructor:zb,getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},$/;"	r
ac	js/three.js	/^				var ac = a * c, ad = a * d, bc = b * c, bd = b * d;$/;"	r
ac	js/three.min.js	/^this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,k=0;if(!1===Array.isArray(a))c(a);else for(var l=0;l<a.length;l++)c(a[l]),this.addGroup(h,k,l),h+=k,k=0;this.setIndex(d);this.addAttribute("position",new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function ac(a,b){C.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:b};var c=[];b=Math.cos(R.DEG2RAD*(void 0!==b?b:1));var d=[0,0],e={},f=["a","b","c"];if(a.isBufferGeometry){var g=$/;"	r
accuIndex	js/three.js	/^				accuIndex = this._accuIndex ^= 1;$/;"	r
accumulate	js/three.js	/^		accumulate: function ( accuIndex, weight ) {$/;"	r
acquireProgram	js/three.js	/^		this.acquireProgram = function ( material, shader, parameters, code ) {$/;"	r
action	js/three.js	/^						var action = outline[ i ++ ];$/;"	r
action	js/three.js	/^					action = actionByRoot[ rootUuid ];$/;"	r
action	js/three.js	/^					var action = actionsToRemove[ i ];$/;"	r
action	js/three.js	/^				var action = actions[ i ];$/;"	r
action	js/three.js	/^			actionsForClip.actionByRoot[ rootUuid ] = action;$/;"	r
action	js/three.js	/^			actions[ firstInactiveIndex ] = action;$/;"	r
action	js/three.js	/^			actions[ lastActiveIndex ] = action;$/;"	r
action	js/three.js	/^			var action = this.existingAction( clip, optionalRoot );$/;"	r
action	js/three.min.js	/^-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,d)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b\/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=$/;"	r
action	js/three.min.js	/^b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(2200===d)a:{if(-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>a?-1:1})}else{d=2202===d;$/;"	r
actionByRoot	js/three.js	/^					actionByRoot: {}$/;"	r
actionByRoot	js/three.js	/^				var actionByRoot = actionsByClip[ clipUuid ].actionByRoot,$/;"	r
actionByRoot	js/three.js	/^			var actionByRoot = actionsForClip.actionByRoot,$/;"	r
actions	js/three.js	/^				actions: {$/;"	r
actions	js/three.js	/^			var actions = this._actions,$/;"	r
actionsByClip	js/three.js	/^				actionsByClip = this._actionsByClip,$/;"	r
actionsByClip	js/three.js	/^				actionsByClip = this._actionsByClip;$/;"	r
actionsForClip	js/three.js	/^						actionsForClip = this._actionsByClip[ clipUuid ];$/;"	r
actionsForClip	js/three.js	/^				actionsByClip[ clipUuid ] = actionsForClip;$/;"	r
actionsForClip	js/three.js	/^				actionsForClip = actionsByClip[ clipUuid ],$/;"	r
actionsForClip	js/three.js	/^				actionsForClip = actionsByClip[ clipUuid ];$/;"	r
actionsForClip	js/three.js	/^				actionsForClip = this._actionsByClip[ clipUuid ],$/;"	r
actionsForClip	js/three.js	/^				actionsForClip = this._actionsByClip[ clipUuid ];$/;"	r
actionsForClip	js/three.js	/^				actionsForClip = {$/;"	r
actionsToRemove	js/three.js	/^				var actionsToRemove = actionsForClip.knownActions;$/;"	r
activeCubeFace	js/three.js	/^				renderTarget.activeCubeFace = i;$/;"	r
activeCubeFace	js/three.js	/^			renderTarget.activeCubeFace = 0;$/;"	r
activeCubeFace	js/three.js	/^			renderTarget.activeCubeFace = 1;$/;"	r
activeCubeFace	js/three.js	/^			renderTarget.activeCubeFace = 2;$/;"	r
activeCubeFace	js/three.js	/^			renderTarget.activeCubeFace = 3;$/;"	r
activeCubeFace	js/three.js	/^			renderTarget.activeCubeFace = 4;$/;"	r
activeCubeFace	js/three.js	/^			renderTarget.activeCubeFace = 5;$/;"	r
activeCubeFace	js/three.js	/^		this.activeCubeFace = 0; \/\/ PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5$/;"	r
activeCubeFace	js/three.min.js	/^a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function bb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:1003;this.minFilter=void 0!==l?l:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Ta(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];da.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,k,l);this.flipY=!1}function Fb(a,b,c){var d=a[0];if(0>=d||0<d)return a;var e=b*c,f=we[e];void 0===f&&(f=new Float32Array(e),$/;"	r
activeInfo	js/three.js	/^					new PureArrayUniform( id, activeInfo, addr ) );$/;"	r
activeInfo	js/three.js	/^					new SingleUniform( id, activeInfo, addr ) :$/;"	r
activeInfo	js/three.js	/^	function PureArrayUniform( id, activeInfo, addr ) {$/;"	r
activeInfo	js/three.js	/^	function SingleUniform( id, activeInfo, addr ) {$/;"	r
activeMipMapLevel	js/three.js	/^		this.activeMipMapLevel = 0;$/;"	r
activeMipMapLevel	js/three.min.js	/^a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function bb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:1003;this.minFilter=void 0!==l?l:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Ta(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];da.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,k,l);this.flipY=!1}function Fb(a,b,c){var d=a[0];if(0>=d||0<d)return a;var e=b*c,f=we[e];void 0===f&&(f=new Float32Array(e),$/;"	r
activeTexture	js/three.js	/^			activeTexture: activeTexture,$/;"	r
activeTexture	js/three.js	/^		function activeTexture( webglSlot ) {$/;"	r
ad	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);this.theta=Math.atan2(a.x,a.z);this.y=a.y;return this}});ad.prototype=Object.create(w.prototype);ad.prototype.constructor=ad;ad.prototype.isImmediateRenderObject=!0;bd.prototype=Object.create(P.prototype);bd.prototype.constructor=bd;bd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){var d,e=["a","b","c"];this.object.updateMatrixWorld(!0);$/;"	r
add	js/GLTFLoader.js	/^			add: function ( key, object ) {$/;"	r
add	js/three.js	/^		add: function ( color ) {$/;"	r
add	js/three.js	/^		add: function ( curve ) {$/;"	r
add	js/three.js	/^		add: function ( key, file ) {$/;"	r
add	js/three.js	/^		add: function ( object ) {$/;"	r
add	js/three.js	/^		add: function ( regex, loader ) {$/;"	r
add	js/three.js	/^		add: function ( texture, size, distance, blending, color, opacity ) {$/;"	r
add	js/three.js	/^		add: function ( v, w ) {$/;"	r
add	js/three.js	/^		add: function () {$/;"	r
add	js/three.min.js	/^LineBasicMaterial:T,Material:Q}),jd={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},wa=new Yd,$a={};Object.assign(Ja.prototype,{load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},$/;"	r
add	js/three.min.js	/^Ma.prototype.constructor=Ma;Ma.prototype.isLineCurve=!0;Ma.prototype.getPoint=function(a,b){b=b||new D;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Ma.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};Ma.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};hc.prototype=Object.assign(Object.create(ca.prototype),{constructor:hc,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),$/;"	r
add	js/three.min.js	/^a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new H(16777215));void 0===d&&(d=1);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c=2*-this.positionScreen.x,d=2*-this.positionScreen.y;$/;"	r
add	js/three.min.js	/^add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}if(a===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this;a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a);return this},remove:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);$/;"	r
add	js/three.min.js	/^typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};gc.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};Object.assign(gc.prototype,{crossOrigin:void 0,extractUrlBase:function(a){a=a.split("\/");if(1===a.length)return".\/";a.pop();$/;"	r
add	js/three.min.js	/^{isAnimationObjectGroup:!0,add:function(){for(var a=this._objects,b=a.length,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._paths,f=this._parsedPaths,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){var m=arguments[k],n=m.uuid,p=d[n];if(void 0===p){p=b++;d[n]=p;a.push(m);for(var n=0,r=h;n!==r;++n)g[n].push(new pa(m,e[n],f[n]))}else if(p<c){var v=--c,r=a[v];d[r.uuid]=p;a[p]=r;d[n]=v;a[v]=m;n=0;for(r=h;n!==r;++n){var t=g[n],w=t[p];t[p]=t[v];void 0===w&&(w=new pa(m,e[n],f[n]));t[v]=$/;"	r
addAttribute	js/three.js	/^		addAttribute: function ( name, attribute ) {$/;"	r
addAttribute	js/three.min.js	/^setIndex:function(a){Array.isArray(a)?this.index=new (65535<Qd(a)?eb:db)(a,1):this.index=a},addAttribute:function(a,b,c){if(b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)if("index"===a)console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b);else return this.attributes[a]=b,this;else console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(a,new O(b,c))},getAttribute:function(a){return this.attributes[a]},$/;"	r
addColors	js/three.js	/^		addColors: function ( color1, color2 ) {$/;"	r
addDrawCall	js/three.js	/^		addDrawCall: function ( start, count, indexOffset ) {$/;"	r
addDrawCall	js/three.min.js	/^return this.array.length}}});Object.assign(C.prototype,{addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(a)},addDrawCall:function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(a,b)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");$/;"	r
addEventListener	js/three.js	/^		addEventListener: function ( type, listener ) {$/;"	r
addFace	js/three.js	/^			function addFace( a, b, c, materialIndex ) {$/;"	r
addGroup	js/three.js	/^		addGroup: function ( start, count, materialIndex ) {$/;"	r
addIndex	js/three.js	/^		addIndex: function ( index ) {$/;"	r
addLevel	js/three.js	/^		addLevel: function ( object, distance ) {$/;"	r
addLevel	js/three.min.js	/^a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this},addLevel:function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)},getObjectForDistance:function(a){for(var b=this.levels,c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object},raycast:function(){var a=new p;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=$/;"	r
addLine	js/three.js	/^		function addLine( a, b, color ) {$/;"	r
addLineNumbers	js/three.js	/^	function addLineNumbers( string ) {$/;"	r
addMorphTargets	js/GLTFLoader.js	/^	function addMorphTargets( mesh, meshDef, primitiveDef, dependencies ) {$/;"	r
addNonemptyTrack	js/three.js	/^			var addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {$/;"	r
addPoint	js/three.js	/^		function addPoint( id, color ) {$/;"	r
addPostPlugin	js/three.js	/^		addPostPlugin: function () {$/;"	r
addPrePlugin	js/three.js	/^		addPrePlugin: function () {$/;"	r
addScalar	js/three.js	/^		addScalar: function ( s ) {$/;"	r
addScalar	js/three.min.js	/^addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;$/;"	r
addScalar	js/three.min.js	/^this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,$/;"	r
addScaledVector	js/three.js	/^		addScaledVector: function ( v, s ) {$/;"	r
addShape	js/three.js	/^		function addShape( shape ) {$/;"	r
addShape	js/three.js	/^	ExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {$/;"	r
addShape	js/three.min.js	/^new z(b.arrays.position,3));this.addAttribute("uv",new z(b.arrays.uv,2))};Ga.prototype.addShape=function(a,b){function c(a,b,c){b||console.error("THREE.ExtrudeGeometry: vec does not exist");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=a.x-b.x;var e=a.y-b.y;var f=c.x-a.x;var g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e\/k;b=b.y+d\/k;g=((c.x-g\/l-h)*g-(c.y+f\/l-b)*f)\/(d*g-e*f);f=h+d*g-a.x;d=b+e*g-a.y;e=f*f+d*d;if(2>=e)return new D(f,$/;"	r
addShapeList	js/three.js	/^	ExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {$/;"	r
addUV	js/three.js	/^		function addUV( vector2 ) {$/;"	r
addUniform	js/three.js	/^	function addUniform( container, uniformObject ) {$/;"	r
addVectors	js/three.js	/^		addVectors: function ( a, b ) {$/;"	r
addVectors	js/three.min.js	/^addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;$/;"	r
addVectors	js/three.min.js	/^addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=$/;"	r
addVectors	js/three.min.js	/^this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,$/;"	r
addVertex	js/three.js	/^		function addVertex( index ) {$/;"	r
addr	js/three.js	/^				addr = gl.getUniformLocation( program, path );$/;"	r
addr	js/three.js	/^			parseUniform( info, addr, this );$/;"	r
addr	js/three.js	/^		this.addr = addr;$/;"	r
addr	js/three.js	/^	function parseUniform( activeInfo, addr, container ) {$/;"	r
addr	js/three.min.js	/^case 35667:case 35671:return De;case 35668:case 35672:return Ee;case 35669:case 35673:return Fe}}function Hf(a,b,c){this.id=a;this.addr=c;this.setValue=vf(b.type)}function If(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=Gf(b.type)}function Ge(a){this.id=a;this.seq=[];this.map={}}function cb(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d<c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=$/;"	r
ae	js/three.js	/^				var ae = a * e, af = a * f, be = b * e, bf = b * f;$/;"	r
ae	js/three.js	/^			var ae = a.elements;$/;"	r
afterEnd_	js/three.js	/^		afterEnd_: Interpolant.prototype.copySampleValue_,$/;"	r
ag	js/three.min.js	/^shadowCameraNear:1,shadowCameraFar:1E3};break;case "HemisphereLight":c={direction:new p,skyColor:new H,groundColor:new H};break;case "RectAreaLight":c={color:new H,position:new p,halfWidth:new p,halfHeight:new p}}return a[b.id]=c}}}function ag(){var a=new $f,b={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},c=new p,d=new K,e=new K;return{setup:function(f,$/;"	r
again	js/three.js	/^					\/\/ check boundary cases, again$/;"	r
ahole	js/three.js	/^				ahole = holes[ h ];$/;"	r
ahole	js/three.js	/^			ahole = holes[ h ];$/;"	r
ahole	js/three.js	/^		var ahole, h, hl; \/\/ looping of holes$/;"	r
aj	js/three.js	/^						v[ i ][ j ] = aj;$/;"	r
aj	js/three.js	/^				var aj = a.clone().lerp( c, i \/ cols );$/;"	r
allPointsMap	js/three.js	/^				allPointsMap = {};$/;"	r
allocTexUnits	js/three.js	/^	function allocTexUnits( renderer, n ) {$/;"	r
allocTextureUnit	js/three.js	/^		function allocTextureUnit() {$/;"	r
allocTextureUnit	js/three.js	/^		this.allocTextureUnit = allocTextureUnit;$/;"	r
allocateBones	js/three.js	/^		function allocateBones( object ) {$/;"	r
allpoints	js/three.js	/^			\/\/console.log( "allpoints",allpoints, allpoints.length );$/;"	r
allpoints	js/three.js	/^			var allpoints = contour.concat();$/;"	r
alpha	js/three.js	/^				alpha = ( t - t0 ) \/ ( t1 - t0 );$/;"	r
alpha	js/three.js	/^				alpha: _alpha,$/;"	r
alpha	js/three.js	/^				clearAlpha = alpha;$/;"	r
alpha	js/three.js	/^			state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );$/;"	r
alphaMap	js/GLTFLoader.js	/^					uvScaleMap = material.alphaMap;$/;"	r
alphaMap	js/GLTFLoader.js	/^				material.alphaMap = null;$/;"	r
alphaMap	js/GLTFLoader.js	/^				uniforms.alphaMap.value = material.alphaMap;$/;"	r
alphaMap	js/three.js	/^							json.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );$/;"	r
alphaMap	js/three.js	/^				alphaMap: !! material.alphaMap,$/;"	r
alphaMap	js/three.js	/^				material.alphaMap = getTexture( json.alphaMap );$/;"	r
alphaMap	js/three.js	/^				uniforms.alphaMap.value = material.alphaMap;$/;"	r
alphaMap	js/three.js	/^				uvScaleMap = material.alphaMap;$/;"	r
alphaMap	js/three.js	/^			alphaMap: { value: null },$/;"	r
alphaMap	js/three.js	/^		this.alphaMap = null;$/;"	r
alphaMap	js/three.js	/^		this.alphaMap = source.alphaMap;$/;"	r
alphaMap	js/three.min.js	/^a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};mb.prototype=Object.create(La.prototype);mb.prototype.constructor=mb;mb.prototype.isMeshPhysicalMaterial=$/;"	r
alphaMap	js/three.min.js	/^this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)}function Wa(a){Q.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new p;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.lights=this.fog=!1;this.setValues(a)}function Na(a,b){this.min=void 0!==$/;"	r
alphaMode	js/GLTFLoader.js	/^			var alphaMode = material.alphaMode || ALPHA_MODES.OPAQUE;$/;"	r
alphaTest	js/GLTFLoader.js	/^					materialParams.alphaTest = material.alphaCutoff || 0.5;$/;"	r
alphaTest	js/three.js	/^				alphaTest: gl.getUniformLocation( program, 'alphaTest' )$/;"	r
alphaTest	js/three.js	/^				alphaTest: material.alphaTest,$/;"	r
alphaTest	js/three.js	/^			if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;$/;"	r
alphaTest	js/three.js	/^			if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;$/;"	r
alphaTest	js/three.js	/^			this.alphaTest = source.alphaTest;$/;"	r
alphaTest	js/three.js	/^		this.alphaTest = 0;$/;"	r
alphaTest	js/three.min.js	/^alphaTest:b.alphaTest,doubleSided:2===b.side,flipSided:1===b.side,depthPacking:void 0!==b.depthPacking?b.depthPacking:!1}};this.getProgramCode=function(b,c){var d=[];c.shaderID?d.push(c.shaderID):(d.push(b.fragmentShader),d.push(b.vertexShader));if(void 0!==b.defines)for(var e in b.defines)d.push(e),d.push(b.defines[e]);for(e=0;e<g.length;e++)d.push(c[g[e]]);d.push(b.onBeforeCompile.toString());d.push(a.gammaOutput);return d.join()};this.acquireProgram=function(c,d,f,g){for(var h,l=0,k=e.length;l<$/;"	r
alphamap_fragment	js/three.js	/^		alphamap_fragment: alphamap_fragment,$/;"	r
alphamap_fragment	js/three.js	/^	var alphamap_fragment = "#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n";$/;"	r
alphamap_pars_fragment	js/three.js	/^		alphamap_pars_fragment: alphamap_pars_fragment,$/;"	r
alphamap_pars_fragment	js/three.js	/^	var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n";$/;"	r
alphamap_pars_fragment	js/three.min.js	/^Ea={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}},V={alphamap_fragment:"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n",$/;"	r
alphatest_fragment	js/three.js	/^		alphatest_fragment: alphatest_fragment,$/;"	r
alphatest_fragment	js/three.js	/^	var alphatest_fragment = "#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n";$/;"	r
alphatest_fragment	js/three.min.js	/^alphatest_fragment:"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n",aomap_fragment:"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n",$/;"	r
ambient	js/three.js	/^				uniforms.ambientLightColor.value = lights.state.ambient;$/;"	r
ambient	js/three.js	/^			ambient: [ 0, 0, 0 ],$/;"	r
ambient	js/three.min.js	/^shadowCameraNear:1,shadowCameraFar:1E3};break;case "HemisphereLight":c={direction:new p,skyColor:new H,groundColor:new H};break;case "RectAreaLight":c={color:new H,position:new p,halfWidth:new p,halfHeight:new p}}return a[b.id]=c}}}function ag(){var a=new $f,b={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},c=new p,d=new K,e=new K;return{setup:function(f,$/;"	r
ambientLightColor	js/three.js	/^			ambientLightColor: { value: [] },$/;"	r
ambientLightColor	js/three.js	/^	var lights_pars = "uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n";$/;"	r
ambientLightColor	js/three.min.js	/^lights_pars:"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n",$/;"	r
ambientOcclusion	js/three.js	/^	var aomap_fragment = "#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n";$/;"	r
ambientOcclusion	js/three.min.js	/^alphatest_fragment:"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n",aomap_fragment:"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n",$/;"	r
ambiguous	js/three.js	/^									ambiguous = true;$/;"	r
ambiguous	js/three.js	/^				var ambiguous = false;$/;"	r
amount	js/three.js	/^		parameters.amount = parameters.height !== undefined ? parameters.height : 50;$/;"	r
amount	js/three.js	/^		var amount = options.amount !== undefined ? options.amount : 100;$/;"	r
analyser	js/three.js	/^		this.analyser = audio.context.createAnalyser();$/;"	r
angle	js/GLTFLoader.js	/^					lightNode.angle = light.fallOffAngle;$/;"	r
angle	js/three.js	/^				angle = Math.PI;$/;"	r
angle	js/three.js	/^			if ( this.angle !== undefined ) data.object.angle = this.angle;$/;"	r
angle	js/three.js	/^			this.angle = source.angle;$/;"	r
angle	js/three.js	/^			var angle = Math.atan2( this.y, this.x );$/;"	r
angle	js/three.js	/^			var angle, x, y, z,		\/\/ variables for result$/;"	r
angle	js/three.js	/^		angle: function () {$/;"	r
angle	js/three.js	/^		this.angle = ( angle !== undefined ) ? angle : Math.PI \/ 3;$/;"	r
angle	js/three.js	/^		var angle = this.aStartAngle + t * deltaAngle;$/;"	r
angleTo	js/three.js	/^		angleTo: function ( v ) {$/;"	r
animate	js/three.js	/^		this.animate = function ( callback ) {$/;"	r
animate	js/three.min.js	/^0;c<b.material.length;c++)n(b.material[c],a.fog,b);else n(b.material,a.fog,b)})};var Da=!1,Ba=null;this.animate=function(a){Ba=a;Da||((la.getDevice()||window).requestAnimationFrame(h),Da=!0)};this.render=function(a,b,c,d){if(!b||!b.isCamera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else if(!H){L="";U=-1;O=null;!0===a.autoUpdate&&a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();la.enabled&&(b=la.getCamera(b));md.multiplyMatrices(b.projectionMatrix,$/;"	r
animationKey	js/three.js	/^							var animationKey = animationKeys[ k ];$/;"	r
animationKeys	js/three.js	/^						animationKeys, 'pos', tracks );$/;"	r
animationKeys	js/three.js	/^						animationKeys, 'rot', tracks );$/;"	r
animationKeys	js/three.js	/^						animationKeys, 'scl', tracks );$/;"	r
animationKeys	js/three.js	/^				var animationKeys = hierarchyTracks[ h ].keys;$/;"	r
animationMorphTargets	js/three.js	/^						animationToMorphTargets[ name ] = animationMorphTargets = [];$/;"	r
animationMorphTargets	js/three.js	/^					var animationMorphTargets = animationToMorphTargets[ name ];$/;"	r
animationToMorphTargets	js/three.js	/^			var animationToMorphTargets = {};$/;"	r
animations	js/GLTFLoader.js	/^					animations: animations$/;"	r
animations	js/GLTFLoader.js	/^			var animations = dependencies.animations || [];$/;"	r
animations	js/three.js	/^						animations = animations.concat( json.animations );$/;"	r
animations	js/three.js	/^				object.animations = this.parseAnimations( json.animations );$/;"	r
animations	js/three.js	/^				var animations = [];$/;"	r
animations	js/three.js	/^			var animations = [];$/;"	r
anisotropy	js/three.js	/^						texture.anisotropy = anisotropy;$/;"	r
anisotropy	js/three.js	/^					if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;$/;"	r
anisotropy	js/three.js	/^					properties.get( texture ).__currentAnisotropy = texture.anisotropy;$/;"	r
anisotropy	js/three.js	/^				anisotropy: this.anisotropy,$/;"	r
anisotropy	js/three.js	/^				texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;$/;"	r
anisotropy	js/three.js	/^				this.texture.anisotropy = value;$/;"	r
anisotropy	js/three.js	/^			this.anisotropy = source.anisotropy;$/;"	r
anisotropy	js/three.js	/^		anisotropy: {$/;"	r
anisotropy	js/three.js	/^		this.anisotropy = anisotropy !== undefined ? anisotropy : 1;$/;"	r
antialias	js/three.js	/^				antialias: _antialias,$/;"	r
antiquewhite	js/three.min.js	/^b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};cb.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};cb.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};var sg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,$/;"	r
aoMap	js/GLTFLoader.js	/^				material.aoMap = params.aoMap === undefined ? null : params.aoMap;$/;"	r
aoMap	js/GLTFLoader.js	/^				uniforms.aoMap.value = material.aoMap;$/;"	r
aoMap	js/three.js	/^							json.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );$/;"	r
aoMap	js/three.js	/^				aoMap: !! material.aoMap,$/;"	r
aoMap	js/three.js	/^				uniforms.aoMap.value = material.aoMap;$/;"	r
aoMap	js/three.js	/^			aoMap: { value: null },$/;"	r
aoMap	js/three.js	/^		this.aoMap = null;$/;"	r
aoMap	js/three.js	/^		this.aoMap = source.aoMap;$/;"	r
aoMap	js/three.min.js	/^a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=$/;"	r
aoMapIntensity	js/GLTFLoader.js	/^					materialParams.aoMapIntensity = material.occlusionTexture.strength;$/;"	r
aoMapIntensity	js/GLTFLoader.js	/^				material.aoMapIntensity = 1.0;$/;"	r
aoMapIntensity	js/GLTFLoader.js	/^				uniforms.aoMapIntensity.value = material.aoMapIntensity;$/;"	r
aoMapIntensity	js/three.js	/^				uniforms.aoMapIntensity.value = material.aoMapIntensity;$/;"	r
aoMapIntensity	js/three.js	/^			aoMapIntensity: { value: 1 }$/;"	r
aoMapIntensity	js/three.js	/^			if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;$/;"	r
aoMapIntensity	js/three.js	/^		this.aoMapIntensity = 1.0;$/;"	r
aoMapIntensity	js/three.js	/^		this.aoMapIntensity = source.aoMapIntensity;$/;"	r
aoMapIntensity	js/three.min.js	/^aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new D(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5E-4},fogNear:{value:1},$/;"	r
aomap	js/three.js	/^				UniformsLib.aomap,$/;"	r
aomap	js/three.js	/^		aomap: {$/;"	r
aomap_fragment	js/three.js	/^		aomap_fragment: aomap_fragment,$/;"	r
aomap_fragment	js/three.js	/^	var aomap_fragment = "#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n";$/;"	r
aomap_pars_fragment	js/three.js	/^		aomap_pars_fragment: aomap_pars_fragment,$/;"	r
aomap_pars_fragment	js/three.js	/^	var aomap_pars_fragment = "#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif";$/;"	r
aomap_pars_fragment	js/three.min.js	/^aomap_pars_fragment:"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif",begin_vertex:"\\nvec3 transformed = vec3( position );\\n",beginnormal_vertex:"\\nvec3 objectNormal = vec3( normal );\\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 \/ max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance \/ cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance \/ cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 \/ ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 \/ max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 \/ pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) \/ LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 \/ LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta \/ ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) \/ ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a \/ b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 \/ pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 \/ ( blinnExponent + 2.0 ) );\\n}\\n",$/;"	r
apply	js/three.js	/^		apply: function ( accuIndex ) {$/;"	r
applyAxisAngle	js/three.js	/^			return function applyAxisAngle( axis, angle ) {$/;"	r
applyAxisAngle	js/three.js	/^		applyAxisAngle: function () {$/;"	r
applyAxisAngle	js/three.min.js	/^return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a=new X;return function(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1\/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*$/;"	r
applyEuler	js/three.js	/^			return function applyEuler( euler ) {$/;"	r
applyEuler	js/three.js	/^		applyEuler: function () {$/;"	r
applyMatrix	js/three.js	/^		applyMatrix: function ( matrix ) {$/;"	r
applyMatrix3	js/three.js	/^		applyMatrix3: function ( m ) {$/;"	r
applyMatrix4	js/three.js	/^			return function applyMatrix4( matrix ) {$/;"	r
applyMatrix4	js/three.js	/^			return function applyMatrix4( matrix, optionalNormalMatrix ) {$/;"	r
applyMatrix4	js/three.js	/^		applyMatrix4: function ( m ) {$/;"	r
applyMatrix4	js/three.js	/^		applyMatrix4: function ( matrix ) {$/;"	r
applyMatrix4	js/three.js	/^		applyMatrix4: function ( matrix4 ) {$/;"	r
applyMatrix4	js/three.js	/^		applyMatrix4: function () {$/;"	r
applyMatrix4	js/three.min.js	/^g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e\/f,k)}}(),applyMatrix4:function(a){this.origin.applyMatrix4(a);this.direction.transformDirection(a);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}});Object.assign(Ib.prototype,{set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);$/;"	r
applyProjection	js/three.js	/^		applyProjection: function ( m ) {$/;"	r
applyProjection	js/three.min.js	/^b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(b,a)},applyProjection:function(a){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");return this.applyMatrix4(a)},fromAttribute:function(a,b,c){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},distanceToManhattan:function(a){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");$/;"	r
applyQuaternion	js/three.js	/^		applyQuaternion: function ( q ) {$/;"	r
applyQuaternion	js/three.min.js	/^d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a=new K;return function(b){a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyMatrix4(a)}}(),unproject:function(){var a=new K;return function(b){a.multiplyMatrices(b.matrixWorld,$/;"	r
applyToBuffer	js/three.js	/^		applyToBuffer: function ( buffer \/*, offset, length *\/ ) {$/;"	r
applyToBufferAttribute	js/three.js	/^			return function applyToBufferAttribute( attribute ) {$/;"	r
applyToBufferAttribute	js/three.js	/^		applyToBufferAttribute: function () {$/;"	r
applyToVector3Array	js/three.js	/^		applyToVector3Array: function ( \/* array, offset, length *\/ ) {$/;"	r
applyToVector3Array	js/three.min.js	/^applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(a,b,c,d,e,f){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(a,b,d,c,e,f)}});za.prototype.isIntersectionLine=function(a){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(a)};X.prototype.multiplyVector3=$/;"	r
appplyRadius	js/three.js	/^		function appplyRadius( radius ) {$/;"	r
apx	js/three.js	/^					apx = px - ax; apy = py - ay;$/;"	r
apx	js/three.js	/^				var apx, apy, bpx, bpy, cpx, cpy;$/;"	r
arc	js/three.js	/^								data.arc$/;"	r
arc	js/three.js	/^			arc: arc$/;"	r
arc	js/three.js	/^		arc = arc || Math.PI * 2;$/;"	r
arc	js/three.js	/^		arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {$/;"	r
arcLengthDivisions	js/three.js	/^			if ( divisions === undefined ) divisions = this.arcLengthDivisions;$/;"	r
arcLengthDivisions	js/three.js	/^			this.arcLengthDivisions = value;$/;"	r
arcLengthDivisions	js/three.js	/^		this.arcLengthDivisions = 200;$/;"	r
arcLengthDivisions	js/three.min.js	/^return this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=a}});Y.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};Object.defineProperties(fa.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");$/;"	r
arcLengths	js/three.js	/^			var arcLengths = this.getLengths();$/;"	r
area	js/three.js	/^			return function area() {$/;"	r
area	js/three.js	/^		area: function ( contour ) {$/;"	r
area	js/three.js	/^		area: function () {$/;"	r
array	js/GLTFLoader.js	/^									var m = skinEntry.inverseBindMatrices.array;$/;"	r
array	js/GLTFLoader.js	/^					array = new TypedArray( bufferView );$/;"	r
array	js/GLTFLoader.js	/^					array = new TypedArray( bufferView, accessor.byteOffset, accessor.count * itemSize );$/;"	r
array	js/GLTFLoader.js	/^					var array = metallicRoughness.baseColorFactor;$/;"	r
array	js/GLTFLoader.js	/^					var array = pbrSpecularGlossiness.diffuseFactor;$/;"	r
array	js/GLTFLoader.js	/^				var array;$/;"	r
array	js/three.js	/^						materials[ data.uuid ] = array;$/;"	r
array	js/three.js	/^						var array = [];$/;"	r
array	js/three.js	/^						var array = object.normalArray;$/;"	r
array	js/three.js	/^						var indices = index.array;$/;"	r
array	js/three.js	/^					array: array$/;"	r
array	js/three.js	/^					array: array,$/;"	r
array	js/three.js	/^					var array = attributes.normal.array;$/;"	r
array	js/three.js	/^					var indices = index.array;$/;"	r
array	js/three.js	/^					var positions = attributes.position.array;$/;"	r
array	js/three.js	/^				gl.bufferData( bufferType, array, gl.STATIC_DRAW );$/;"	r
array	js/three.js	/^				this.morphAttributes[ name ] = array;$/;"	r
array	js/three.js	/^				var array = Array.prototype.slice.call( attribute.array );$/;"	r
array	js/three.js	/^				var array = Array.prototype.slice.call( index.array );$/;"	r
array	js/three.js	/^				var array = [];$/;"	r
array	js/three.js	/^				var array = attribute.array;$/;"	r
array	js/three.js	/^				var array = geometryAttributes.position.array;$/;"	r
array	js/three.js	/^				var array = geometryIndex.array;$/;"	r
array	js/three.js	/^				var array = listenerArray.slice( 0 );$/;"	r
array	js/three.js	/^				var array = morphAttributes[ name ];$/;"	r
array	js/three.js	/^				var attributeArray1 = attribute1.array;$/;"	r
array	js/three.js	/^				var attributeArray2 = attribute2.array;$/;"	r
array	js/three.js	/^				var normals = attributes.normal.array;$/;"	r
array	js/three.js	/^				var positions = attributes.position.array;$/;"	r
array	js/three.js	/^			gl.bufferData( bufferType, array, usage );$/;"	r
array	js/three.js	/^			this.array = array;$/;"	r
array	js/three.js	/^			this.array = new source.array.constructor( source.array );$/;"	r
array	js/three.js	/^			var array = [];$/;"	r
array	js/three.js	/^			var array = attribute.array;$/;"	r
array	js/three.js	/^			var array = position.array;$/;"	r
array	js/three.js	/^			var array = this.array, offset = 0;$/;"	r
array	js/three.js	/^			var indices = this.index.array;$/;"	r
array	js/three.js	/^			var normals = this.attributes.normal.array;$/;"	r
array	js/three.js	/^			var positions = attributes.position.array;$/;"	r
array	js/three.js	/^		BufferAttribute.call( this, array, itemSize );$/;"	r
array	js/three.js	/^		InterleavedBuffer.call( this, array, stride );$/;"	r
array	js/three.js	/^		array: {$/;"	r
array	js/three.js	/^		this.array = array;$/;"	r
array	js/three.js	/^		var array = position.array;$/;"	r
array	js/three.min.js	/^(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c];b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),$/;"	r
array	js/three.min.js	/^a?a.length\/this.itemSize:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=$/;"	r
array	js/three.min.js	/^b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new p);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new ba);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;$/;"	r
array	js/three.min.js	/^if(void 0===b.normal)this.addAttribute("normal",new O(new Float32Array(d.length),3));else for(var e=b.normal.array,f=0,g=e.length;f<g;f++)e[f]=0;var e=b.normal.array,h=new p,k=new p,l=new p,q=new p,n=new p;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var m=0,r=c.length;m<r;++m){f=c[m];g=f.start;var v=f.count;f=g;for(g+=v;f<g;f+=3){v=3*a[f+0];var t=3*a[f+1];var x=3*a[f+2];h.fromArray(d,v);k.fromArray(d,t);l.fromArray(d,x);q.subVectors(l,k);n.subVectors(h,k);q.cross(n);e[v]+=q.x;e[v+$/;"	r
array	js/three.min.js	/^this.attributes.normal.array,e=new p,f=new p,g=new p,c=b*a.length*3,n=q=0;q<a.length;q++,n+=3)e.x=d[n+0],e.y=d[n+1],e.z=d[n+2],f.x=d[c+n+0],f.y=d[c+n+1],f.z=d[c+n+2],g.addVectors(e,f).normalize(),d[n+0]=d[c+n+0]=g.x,d[n+1]=d[c+n+1]=g.y,d[n+2]=d[c+n+2]=g.z}function Zb(a,b){L.call(this);this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new $b(a,$/;"	r
array	js/three.min.js	/^{constructor:ke,isInstancedBufferGeometry:!0,copy:function(a){C.prototype.copy.call(this,a);this.maxInstancedCount=a.maxInstancedCount;return this},clone:function(){return(new this.constructor).copy(this)}});Object.defineProperties(le.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(le.prototype,{isInterleavedBufferAttribute:!0,setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*$/;"	r
array2	js/three.js	/^				var array2 = new array.constructor( indices.length * itemSize );$/;"	r
arrayCacheF32	js/three.js	/^	var arrayCacheF32 = [];$/;"	r
arrayCacheI32	js/three.js	/^	var arrayCacheI32 = [];$/;"	r
arrayMax	js/three.js	/^	function arrayMax( array ) {$/;"	r
arraySlice	js/three.js	/^		arraySlice: function ( array, from, to ) {$/;"	r
arrays	js/three.js	/^		options.arrays = this.getArrays();$/;"	r
arrays	js/three.js	/^		var arrays = options.arrays ? options.arrays : this.getArrays();$/;"	r
ascSort	js/three.js	/^	function ascSort( a, b ) {$/;"	r
aspect	js/three.js	/^					aspect = camera.aspect * this.aspect;$/;"	r
aspect	js/three.js	/^				camera.aspect = aspect;$/;"	r
aspect	js/three.js	/^			data.object.aspect = this.aspect;$/;"	r
aspect	js/three.js	/^			this.aspect = fullWidth \/ fullHeight;$/;"	r
aspect	js/three.js	/^			this.aspect = source.aspect;$/;"	r
aspect	js/three.js	/^			var aspect = this.mapSize.width \/ this.mapSize.height;$/;"	r
aspect	js/three.js	/^		this.aspect = 1;$/;"	r
aspect	js/three.js	/^		this.aspect = aspect !== undefined ? aspect : 1;$/;"	r
aspect	js/three.js	/^		var cameraNX = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	js/three.js	/^		var cameraNY = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	js/three.js	/^		var cameraNZ = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	js/three.js	/^		var cameraPX = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	js/three.js	/^		var cameraPY = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	js/three.js	/^		var cameraPZ = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
aspect	js/three.js	/^	function PerspectiveCamera( fov, aspect, near, far ) {$/;"	r
aspect	js/three.min.js	/^this.type="QuadraticBezierCurve";this.v0=a;this.v1=b;this.v2=c}function Zc(a){hc.call(this);this.type="Path";this.currentPoint=new D;a&&this.fromPoints(a)}function zb(){Zc.apply(this,arguments);this.type="Shape";this.holes=[]}function ce(){this.type="ShapePath";this.subPaths=[];this.currentPath=null}function de(a){this.type="Font";this.data=a}function Te(a){this.manager=void 0!==a?a:wa}function ee(a){this.manager=void 0!==a?a:wa}function Ue(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;$/;"	r
aspect	script.js	/^var aspect  = width \/ height;   \/\/ aspect ratio$/;"	r
aspect	script.js	/^var camera = new THREE.PerspectiveCamera(vfov, aspect, near, far);$/;"	r
aspectRatio	js/GLTFLoader.js	/^			camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, params.znear || 1, params.zfar || 2e6 );$/;"	r
aspectRatio	js/GLTFLoader.js	/^			var aspectRatio = params.aspectRatio || 1;$/;"	r
assign	js/three.js	/^			Object.assign = function ( target ) {$/;"	r
assignTexture	js/GLTFLoader.js	/^	GLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {$/;"	r
at	js/three.js	/^		at: function ( t, optionalTarget ) {$/;"	r
atEnd	js/three.js	/^				\/\/ assuming for LoopOnce atStart == atEnd == true$/;"	r
atEnd	js/three.js	/^		_setEndings: function ( atStart, atEnd, pingPong ) {$/;"	r
atStart	js/three.js	/^							var atStart = deltaTime < 0;$/;"	r
attach	js/three.js	/^		attach: function ( child, scene, parent ) {$/;"	r
attachment	js/three.js	/^			_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );$/;"	r
attribute	js/three.js	/^						var attribute = attributes.get( geometryAttribute );$/;"	r
attribute	js/three.js	/^						var attribute = geometry.attributes.position;$/;"	r
attribute	js/three.js	/^					var attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );$/;"	r
attribute	js/three.js	/^				attribute = attributes.get( index );$/;"	r
attribute	js/three.js	/^				attribute = this.attributes.color;$/;"	r
attribute	js/three.js	/^				attribute = this.attributes.lineDistance;$/;"	r
attribute	js/three.js	/^				attribute = this.attributes.normal;$/;"	r
attribute	js/three.js	/^				attribute = this.attributes.position;$/;"	r
attribute	js/three.js	/^				attribute = this.attributes.uv;$/;"	r
attribute	js/three.js	/^				updateBuffer( data.buffer, attribute, bufferType );$/;"	r
attribute	js/three.js	/^				var attribute = attributes[ key ];$/;"	r
attribute	js/three.js	/^				var attribute = attributes[ name ];$/;"	r
attribute	js/three.js	/^			attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );$/;"	r
attribute	js/three.js	/^			attribute = wireframeAttributes[ buffergeometry.id ];$/;"	r
attribute	js/three.js	/^			this.attributes[ name ] = attribute;$/;"	r
attribute	js/three.js	/^			var attribute = wireframeAttributes[ geometry.id ];$/;"	r
attribute	js/three.js	/^			var attribute;$/;"	r
attribute	js/three.js	/^			wireframeAttributes[ geometry.id ] = attribute;$/;"	r
attribute	js/three.js	/^		copyAt: function ( index1, attribute, index2 ) {$/;"	r
attribute	js/three.js	/^		function updateBuffer( buffer, attribute, bufferType ) {$/;"	r
attribute1	js/three.js	/^				var attribute1 = attributes[ key ];$/;"	r
attribute2	js/three.js	/^				var attribute2 = geometry.attributes[ key ];$/;"	r
attributeArray1	js/three.js	/^				var attributeArray1 = attribute1.array;$/;"	r
attributeArray2	js/three.js	/^				var attributeArray2 = attribute2.array;$/;"	r
attributeDivisors	js/three.js	/^		var attributeDivisors = new Uint8Array( maxVertexAttributes );$/;"	r
attributeEntry	js/GLTFLoader.js	/^					var attributeEntry = attributes[ attributeId ];$/;"	r
attributeName	js/GLTFLoader.js	/^				normalAttribute.name = attributeName;$/;"	r
attributeName	js/GLTFLoader.js	/^				positionAttribute.name = attributeName;$/;"	r
attributeName	js/GLTFLoader.js	/^			var attributeName = 'morphTarget' + i;$/;"	r
attributeSize	js/three.js	/^				var attributeSize = attribute2.itemSize;$/;"	r
attributes	js/GLTFLoader.js	/^				var attributes = primitive.attributes;$/;"	r
attributes	js/three.js	/^					var attributes = geometry.attributes;$/;"	r
attributes	js/three.js	/^			attributes = new WebGLAttributes( _gl );$/;"	r
attributes	js/three.js	/^			attributes = {$/;"	r
attributes	js/three.js	/^			attributes: {$/;"	r
attributes	js/three.js	/^			geometries = new WebGLGeometries( _gl, attributes, _infoMemory );$/;"	r
attributes	js/three.js	/^			this.attributes = {};$/;"	r
attributes	js/three.js	/^			var attributes = geometry.attributes;$/;"	r
attributes	js/three.js	/^			var attributes = json.data.attributes;$/;"	r
attributes	js/three.js	/^			var attributes = source.attributes;$/;"	r
attributes	js/three.js	/^			var attributes = this.attributes;$/;"	r
attributes	js/three.js	/^			var geometryAttributes = geometry.attributes;$/;"	r
attributes	js/three.js	/^		this.attributes = {};$/;"	r
attributes	js/three.js	/^		var attributes = {};$/;"	r
attributes	js/three.js	/^	function WebGLGeometries( gl, attributes, infoMemory ) {$/;"	r
attributes	js/three.min.js	/^b.setIndex(new O(c,1)));var d=a.data.attributes;for(f in d){var e=d[f];c=new gf[e.type](e.array);b.addAttribute(f,new O(c,e.itemSize,e.normalized))}var f=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==f)for(c=0,d=f.length;c!==d;++c)e=f[c],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(f=new p,void 0!==a.center&&f.fromArray(a.center),b.boundingSphere=new Da(f,a.radius));return b}});var gf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==$/;"	r
attributes	js/three.min.js	/^g.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=g.getActiveAttrib(p,c).name;a[d]=g.getAttribLocation(p,d)}I=a}return I};this.destroy=function(){g.deleteProgram(p);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=ig++;this.code=c;this.usedTimes=1;$/;"	r
attributes	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
audioBuffer	js/three.js	/^			this.buffer = audioBuffer;$/;"	r
audioLoader	js/three.js	/^		var audioLoader = new AudioLoader();$/;"	r
audioNode	js/three.js	/^			this.source = audioNode;$/;"	r
autoClear	js/three.js	/^		this.autoClear = true;$/;"	r
autoClearColor	js/three.js	/^		this.autoClearColor = true;$/;"	r
autoClearDepth	js/three.js	/^		this.autoClearDepth = true;$/;"	r
autoClearStencil	js/three.js	/^		this.autoClearStencil = true;$/;"	r
autoClose	js/three.js	/^		this.autoClose = false; \/\/ Automatically closes the path$/;"	r
autoStart	js/three.js	/^			this.autoStart = false;$/;"	r
autoStart	js/three.js	/^		this.autoStart = ( autoStart !== undefined ) ? autoStart : true;$/;"	r
autoUpdate	js/three.js	/^			this.autoUpdate = source.autoUpdate;$/;"	r
autoUpdate	js/three.js	/^		this.autoUpdate = true; \/\/ checked by the renderer$/;"	r
autoUpdate	js/three.js	/^		this.autoUpdate = true;$/;"	r
autoUpdate	js/three.min.js	/^a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this},toJSON:function(a){var b=w.prototype.toJSON.call(this,a);null!==this.background&&(b.object.background=this.background.toJSON(a));null!==this.fog&&(b.object.fog=this.fog.toJSON());return b}});Xd.prototype=Object.assign(Object.create(w.prototype),{constructor:Xd,isLensFlare:!0,copy:function(a){w.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=$/;"	r
autoplay	js/three.js	/^		this.autoplay = false;$/;"	r
ax	js/three.js	/^				ax = contour[ verts[ u ] ].x;$/;"	r
ax	js/three.js	/^				var ax, ay, bx, by;$/;"	r
ax	js/three.js	/^			var ax = a.x, ay = a.y, az = a.z;$/;"	r
axis	js/three.js	/^		var axis = new Vector3();$/;"	r
ay	js/three.js	/^				ay = contour[ verts[ u ] ].y;$/;"	r
azi	js/three.js	/^				var azi = azimuth( centroid );$/;"	r
azimuth	js/three.js	/^		function azimuth( vector ) {$/;"	r
b	js/three.js	/^							b = i + 1;$/;"	r
b	js/three.js	/^							b = index.getX( i + 1 );$/;"	r
b	js/three.js	/^							this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) \/ 100;$/;"	r
b	js/three.js	/^							this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) \/ 255;$/;"	r
b	js/three.js	/^							var b = indices[ i + 1 ];$/;"	r
b	js/three.js	/^						b = layeroffset + k + slen1,$/;"	r
b	js/three.js	/^						b = verts[ v ];$/;"	r
b	js/three.js	/^						destVertexNormal.b = srcVertexNormal.b.clone();$/;"	r
b	js/three.js	/^						face.b = faces[ offset ++ ];$/;"	r
b	js/three.js	/^						faceA.b = faces[ offset + 1 ];$/;"	r
b	js/three.js	/^						faceB.b = faces[ offset + 2 ];$/;"	r
b	js/three.js	/^						geometry.skinIndices.push( new Vector4( a, b, c, d ) );$/;"	r
b	js/three.js	/^						var b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;$/;"	r
b	js/three.js	/^					f4( a, b, c, d );$/;"	r
b	js/three.js	/^					indices.push( a, b, b, c, c, a );$/;"	r
b	js/three.js	/^					indices.push( a, b, d );$/;"	r
b	js/three.js	/^					intersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );$/;"	r
b	js/three.js	/^					this.b = hue2rgb( q, p, h - 1 \/ 3 );$/;"	r
b	js/three.js	/^					this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) \/ 255;$/;"	r
b	js/three.js	/^					this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) \/ 255;$/;"	r
b	js/three.js	/^					var b = ( radialSegments + 1 ) * j + ( i - 1 );$/;"	r
b	js/three.js	/^					var b = array[ i + 1 ];$/;"	r
b	js/three.js	/^					var b = i + 1;$/;"	r
b	js/three.js	/^					var b = indexArray[ y + 1 ][ x ];$/;"	r
b	js/three.js	/^					var b = numberOfVertices + ix + gridX1 * ( iy + 1 );$/;"	r
b	js/three.js	/^				array[ offset ++ ] = color.b;$/;"	r
b	js/three.js	/^				array[ offset ++ ] = index.b;$/;"	r
b	js/three.js	/^				correctUV( uvB, j + 2, b, azi );$/;"	r
b	js/three.js	/^				face.b = changes[ face.b ];$/;"	r
b	js/three.js	/^				if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );$/;"	r
b	js/three.js	/^				indices.push( a, b, c );$/;"	r
b	js/three.js	/^				indices.push( a, b, d );$/;"	r
b	js/three.js	/^				subdivideFace( a, b, c, detail );$/;"	r
b	js/three.js	/^				te[ 6 ] = b;$/;"	r
b	js/three.js	/^				var b = ( radialSegments + 1 ) * j + ( i - 1 );$/;"	r
b	js/three.js	/^				var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;$/;"	r
b	js/three.js	/^				var b = base + points.length;$/;"	r
b	js/three.js	/^				var b = face[ 1 ] + indexOffset;$/;"	r
b	js/three.js	/^				var b = grid[ iy ][ ix ];$/;"	r
b	js/three.js	/^				var b = i * sliceCount + j + 1;$/;"	r
b	js/three.js	/^				var b = ix + gridX1 * ( iy + 1 );$/;"	r
b	js/three.js	/^				var b = segment + thetaSegments + 1;$/;"	r
b	js/three.js	/^				var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );$/;"	r
b	js/three.js	/^			array[ offset + 2 ] = this.b;$/;"	r
b	js/three.js	/^			function addFace( a, b, c, materialIndex ) {$/;"	r
b	js/three.js	/^			return function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {$/;"	r
b	js/three.js	/^			return function normal( a, b, c, optionalTarget ) {$/;"	r
b	js/three.js	/^			return function setFromCoplanarPoints( a, b, c ) {$/;"	r
b	js/three.js	/^			state.ambient[ 2 ] = b;$/;"	r
b	js/three.js	/^			this.b *= color.b;$/;"	r
b	js/three.js	/^			this.b += color.b;$/;"	r
b	js/three.js	/^			this.b = ( hex & 255 ) \/ 255;$/;"	r
b	js/three.js	/^			this.b = Math.max( 0, this.b - color.b );$/;"	r
b	js/three.js	/^			this.b = Math.pow( color.b, gammaFactor );$/;"	r
b	js/three.js	/^			this.b = Math.pow( color.b, safeInverse );$/;"	r
b	js/three.js	/^			this.b = Math.sqrt( this.b );$/;"	r
b	js/three.js	/^			this.b = array[ offset + 2 ];$/;"	r
b	js/three.js	/^			this.b = b * b;$/;"	r
b	js/three.js	/^			this.b = b;$/;"	r
b	js/three.js	/^			this.b = color.b;$/;"	r
b	js/three.js	/^			this.b = color1.b + color2.b;$/;"	r
b	js/three.js	/^			this.b = scalar;$/;"	r
b	js/three.js	/^			this.b = source.b;$/;"	r
b	js/three.js	/^			var b = ( top + bottom ) \/ ( top - bottom );$/;"	r
b	js/three.js	/^			var b = new Vector3();$/;"	r
b	js/three.js	/^		function addLine( a, b, color ) {$/;"	r
b	js/three.js	/^		function f3( a, b, c ) {$/;"	r
b	js/three.js	/^		function f4( a, b, c, d ) {$/;"	r
b	js/three.js	/^		function subdivideFace( a, b, c, detail ) {$/;"	r
b	js/three.js	/^		return new Face3( a, b, c, normal, color, materialIndex );$/;"	r
b	js/three.js	/^		set: function ( a, b, c ) {$/;"	r
b	js/three.js	/^		this.b = ( b !== undefined ) ? b : new Vector3();$/;"	r
b	js/three.js	/^		this.b = b;$/;"	r
b	js/three.js	/^		var b, bs, t, z,$/;"	r
b	js/three.js	/^	function Face3( a, b, c, normal, color, materialIndex ) {$/;"	r
b	js/three.js	/^	function Face4( a, b, c, d, normal, color, materialIndex ) {$/;"	r
b	js/three.js	/^	function Triangle( a, b, c ) {$/;"	r
b	js/three.js	/^	var common = "#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) \/ dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n";$/;"	r
b	js/three.min.js	/^!1,Fb(b,this.size,16))}function Ef(a,b,c){var d=b.length,e=xe(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTexture2D(b[a]||Be,e[a])}function Ff(a,b,c){var d=b.length,e=xe(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTextureCube(b[a]||Ce,e[a])}function Gf(a){switch(a){case 5126:return wf;case 35664:return yf;case 35665:return zf;case 35666:return Af;case 35674:return Bf;case 35675:return Cf;case 35676:return Df;case 35678:return Ef;case 35680:return Ff;case 5124:case 35670:return xf;$/;"	r
b	js/three.min.js	/^!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),c.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=$/;"	r
b	js/three.min.js	/^""!==a.getShaderInfoLog(d)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b===a.VERTEX_SHADER?"vertex":"fragment",a.getShaderInfoLog(d),cg(c));return d}function Le(a){switch(a){case 3E3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+$/;"	r
b	js/three.min.js	/^"$"),b=["material","materials","bones"];return function(c){var d=a.exec(c);if(!d)throw Error("PropertyBinding: Cannot parse trackName: "+c);var d={nodeName:d[2],objectName:d[3],objectIndex:d[4],propertyName:d[5],propertyIndex:d[6]},e=d.nodeName&&d.nodeName.lastIndexOf(".");if(void 0!==e&&-1!==e){var f=d.nodeName.substring(e+1);-1!==b.indexOf(f)&&(d.nodeName=d.nodeName.substring(0,e),d.objectName=f)}if(null===d.propertyName||0===d.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+$/;"	r
b	js/three.min.js	/^"\\t\\tattribute vec3 morphNormal2;","\\t\\tattribute vec3 morphNormal3;","\\t#else","\\t\\tattribute vec3 morphTarget4;","\\t\\tattribute vec3 morphTarget5;","\\t\\tattribute vec3 morphTarget6;","\\t\\tattribute vec3 morphTarget7;","\\t#endif","#endif","#ifdef USE_SKINNING","\\tattribute vec4 skinIndex;","\\tattribute vec4 skinWeight;","#endif","\\n"].filter(Ac).join("\\n"),b=[t,"precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+e.name,x,f.alphaTest?"#define ALPHATEST "+f.alphaTest:$/;"	r
b	js/three.min.js	/^(J*B-t)*d,z[b]=D*e,z[c]=I,l.push(z.x,z.y,z.z),z[a]=0,z[b]=0,z[c]=0<m?1:-1,q.push(z.x,z.y,z.z),n.push(J\/ya),n.push(1-w\/ja),f+=1}for(w=0;w<ja;w++)for(J=0;J<ya;J++)a=u+J+g*(w+1),b=u+(J+1)+g*(w+1),c=u+(J+1)+g*w,k.push(u+J+g*w,a,c),k.push(a,b,c),y+=6;h.addGroup(r,y,ma);r+=y;u+=f}C.call(this);this.type="BoxBufferGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;a=a||1;b=b||1;c=c||1;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=$/;"	r
b	js/three.min.js	/^(a.bufferSubData(d,g.offset*h.BYTES_PER_ELEMENT,h.subarray(g.offset,g.offset+g.count)),g.count=-1),e.version=c.version)}}}function Xa(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||Xa.DefaultOrder}function Pd(){this.mask=1}function w(){Object.defineProperty(this,"id",{value:Nf++});this.uuid=R.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=w.DefaultUp.clone();var a=new p,b=new Xa,c=new X,d=new p(1,1,1);b.onChange(function(){c.setFromEuler(b,$/;"	r
b	js/three.min.js	/^(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromBufferAttribute:function(a,$/;"	r
b	js/three.min.js	/^(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);$/;"	r
b	js/three.min.js	/^(r=ra.CreateClipsFromMorphTargetSequences(c.morphTargets,10),d=d.concat(r));0<d.length&&(c.animations=d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};a=gc.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:a}}}()});Object.assign(Re.prototype,{load:function(a,b,c,d){""===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf("\/")+1));var e=this;(new Ja(e.manager)).load(a,function(c){var f=$/;"	r
b	js/three.min.js	/^-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,d)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b\/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=$/;"	r
b	js/three.min.js	/^.25*c,this._z=(g+k)\/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)\/c,this._x=(d+h)\/c,this._y=(g+k)\/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a=new p,b;return function(c,d){void 0===a&&(a=new p);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=$/;"	r
b	js/three.min.js	/^0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();Bb.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};Bb.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a)};hd.prototype=Object.create(P.prototype);hd.prototype.constructor=hd;var Nd=new p,$/;"	r
b	js/three.min.js	/^0,0,0,0,a];a=new C;a.addAttribute("position",new z(b,3));a.addAttribute("color",new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new T({vertexColors:2});P.call(this,a,b)}function qe(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,k){e=k*(g-e);h=k*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,k,l,q){e=((f-e)\/k-(g-e)\/(k+l)+(g-f)\/l)*l;h=((g-f)\/l-(h-f)\/(l+q)+(h-g)\/q)*l;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+$/;"	r
b	js/three.min.js	/^0,b=t.length;a<b;a++)t[a]=0},enableAttribute:function(c){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);0!==y[c]&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,0),y[c]=0)},enableAttributeAndDivisor:function(c,d){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);y[c]!==d&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,d),y[c]=d)},disableUnusedAttributes:function(){for(var b=0,c=p.length;b!==c;++b)p[b]!==t[b]&&(a.disableVertexAttribArray(b),p[b]=0)},enable:e,$/;"	r
b	js/three.min.js	/^0,l),h.push(n.r,n.g,n.b)}a=new C;a.addAttribute("position",new z(g,3));a.addAttribute("color",new z(h,3));g=new T({vertexColors:2});P.call(this,a,g)}function dd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?b=c.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,$/;"	r
b	js/three.min.js	/^1!==p.color.r||1!==p.color.g||1!==p.color.b,I=0<p.vertexColors.length,A=0,A=a(A,0,0),A=a(A,1,!0),A=a(A,2,!1),A=a(A,3,t),A=a(A,4,x),A=a(A,5,y),A=a(A,6,B),A=a(A,7,I);h.push(A);h.push(p.a,p.b,p.c);h.push(p.materialIndex);t&&(t=this.faceVertexUvs[0][g],h.push(d(t[0]),d(t[1]),d(t[2])));x&&h.push(b(p.normal));y&&(x=p.vertexNormals,h.push(b(x[0]),b(x[1]),b(x[2])));B&&h.push(c(p.color));I&&(p=p.vertexColors,h.push(c(p[0]),c(p[1]),c(p[2])))}e.data={};e.data.vertices=f;e.data.normals=k;0<q.length&&(e.data.colors=$/;"	r
b	js/three.min.js	/^1);c=R.clamp(c,0,1);d=R.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1\/3),this.g=a(d,c,b),this.b=a(d,c,b-1\/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=\/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)\/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=\/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d))return this.r=Math.min(255,$/;"	r
b	js/three.min.js	/^1)},getFilmHeight:function(){return this.filmGauge\/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a\/b;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},$/;"	r
b	js/three.min.js	/^1E3));void 0!==d&&a.offset.fromArray(d);void 0!==e&&("repeat"===e[0]&&(a.wrapS=1E3),"mirror"===e[0]&&(a.wrapS=1002),"repeat"===e[1]&&(a.wrapT=1E3),"mirror"===e[1]&&(a.wrapT=1002));void 0!==h&&(a.anisotropy=h);b=R.generateUUID();k[b]=a;return b}var k={},l={uuid:R.generateUUID(),type:"MeshLambertMaterial"},m;for(m in e){var n=e[m];switch(m){case "DbgColor":case "DbgIndex":case "opticalDensity":case "illumination":break;case "DbgName":l.name=n;break;case "blending":l.blending=a[n];break;case "colorAmbient":case "mapAmbient":console.warn("THREE.Loader.createMaterial:",$/;"	r
b	js/three.min.js	/^1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}});Object.assign(Id.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},parse:function(a){function b(a){void 0===c[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a);$/;"	r
b	js/three.min.js	/^2)?Math.ceil(a.y)-a.y:a.y-Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}});Object.assign(ba.prototype,{isVector4:!0,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;$/;"	r
b	js/three.min.js	/^3,F.FLOAT,!1,0,0));aa.disableUnusedAttributes();F.drawArrays(F.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){aa.setMaterial(d);var g=u(a,b,d,e);a=c.id+"_"+g.id+"_"+(!0===d.wireframe);var h=!1;a!==L&&(L=a,h=!0);e.morphTargetInfluences&&(va.update(e,c,d,g),h=!0);var l=c.index,k=c.attributes.position;b=1;!0===d.wireframe&&(l=qa.getWireframeAttribute(c),b=2);a=wa;if(null!==l){var n=pa.get(l);a=xa;a.setIndex(n)}if(h){h=void 0;if(c&&c.isInstancedBufferGeometry&&null===ha.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
b	js/three.min.js	/^3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}});Object.defineProperty(jc.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});$/;"	r
b	js/three.min.js	/^LineBasicMaterial:T,Material:Q}),jd={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},wa=new Yd,$a={};Object.assign(Ja.prototype,{load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},$/;"	r
b	js/three.min.js	/^Math.cos(b);b=Math.sin(b);var d=1-c,e=a.x,f=a.y;a=a.z;var g=d*e,h=d*f;this.set(g*e+c,g*f-b*a,g*a+b*f,0,g*f+b*a,h*f+c,h*a-b*e,0,g*a-b*f,h*a+b*e,d*a*a+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeShear:function(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new p,b=new K;return function(c,$/;"	r
b	js/three.min.js	/^Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute("position",new z(b,3));b=new T({fog:!1});this.cone=new P(a,b);this.add(this.cone);this.update()}function df(a){var b=[];a&&a.isBone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,df(a.children[c]));return b}function lc(a){for(var b=df(a),c=new C,d=[],e=[],f=new H(0,0,1),g=new H(0,1,0),h=0;h<b.length;h++){var k=b[h];k.parent&&k.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.addAttribute("position",$/;"	r
b	js/three.min.js	/^P.call(this,b,c)}function Kd(a,b,c,d,e,f){a=a||10;b=b||16;c=c||8;d=d||64;e=new H(void 0!==e?e:4473924);f=new H(void 0!==f?f:8947848);var g=[],h=[],k;for(k=0;k<=b;k++){var l=k\/b*2*Math.PI;var q=Math.sin(l)*a;l=Math.cos(l)*a;g.push(0,0,0);g.push(q,0,l);var n=k&1?e:f;h.push(n.r,n.g,n.b);h.push(n.r,n.g,n.b)}for(k=0;k<=c;k++){n=k&1?e:f;var u=a-a\/c*k;for(b=0;b<d;b++)l=b\/d*2*Math.PI,q=Math.sin(l)*u,l=Math.cos(l)*u,g.push(q,0,l),h.push(n.r,n.g,n.b),l=(b+1)\/d*2*Math.PI,q=Math.sin(l)*u,l=Math.cos(l)*u,g.push(q,$/;"	r
b	js/three.min.js	/^Pa.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}()});Object.assign(Pa.prototype,{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new p,b=new p;return function(){a.subVectors(this.c,$/;"	r
b	js/three.min.js	/^a&&(a=!0);var b;var c=Array(this.vertices.length);var d=0;for(b=this.vertices.length;d<b;d++)c[d]=new p;if(a){var e=new p,f=new p;a=0;for(d=this.faces.length;a<d;a++){b=this.faces[a];var g=this.vertices[b.a];var h=this.vertices[b.b];var k=this.vertices[b.c];e.subVectors(k,h);f.subVectors(g,h);e.cross(f);c[b.a].add(e);c[b.b].add(e);c[b.c].add(e)}}else for(this.computeFaceNormals(),a=0,d=this.faces.length;a<d;a++)b=this.faces[a],c[b.a].add(b.normal),c[b.b].add(b.normal),c[b.c].add(b.normal);d=0;for(b=$/;"	r
b	js/three.min.js	/^a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));return b},getSpacedPoints:function(a){void 0===a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPointAt(c\/a));return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){void 0===a&&(a=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c=this.getPoint(0),d,e=0;b.push(0);for(d=1;d<=a;d++){var f=$/;"	r
b	js/three.min.js	/^a&&0<a.length){b=new Yd(b);var f=new Wc(b);f.setCrossOrigin(this.crossOrigin);b=0;for(var g=a.length;b<g;b++){var h=a[b],k=\/^(\\\/\\\/)|([a-z]+:(\\\/\\\/)?)\/i.test(h.url)?h.url:d.texturePath+h.url;e[h.uuid]=c(k)}}return e},parseTextures:function(a,b){function c(a,b){if("number"===typeof a)return a;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a);return b[a]}var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',$/;"	r
b	js/three.min.js	/^a.isWebGLRenderTargetCube&&(b=b[a.activeCubeFace],c=!0),Q.copy(a.viewport),V.copy(a.scissor),T=a.scissorTest):(Q.copy(ca).multiplyScalar(P),V.copy(da).multiplyScalar(P),T=Oe);N!==b&&(F.bindFramebuffer(F.FRAMEBUFFER,b),N=b);aa.viewport(Q);aa.scissor(V);aa.setScissorTest(T);c&&(c=Y.get(a.texture),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,c.__webglTexture,a.activeMipMapLevel))};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(a&&a.isWebGLRenderTarget){var g=$/;"	r
b	js/three.min.js	/^a.lightMap&&(d.lightMap=b(a.lightMap));void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(d.aoMap=b(a.aoMap));void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity);void 0!==a.gradientMap&&(d.gradientMap=b(a.gradientMap));return d}});Object.assign(ae.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new C;var c=a.data.index;void 0!==c&&(c=new gf[c.type](c.array),$/;"	r
b	js/three.min.js	/^a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new T({fog:!1});b=new C;b.addAttribute("position",new O(new Float32Array(15),3));this.line=new oa(b,a);this.add(this.line);this.update()}function oc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;a=new jb(b);a.rotateY(.5*Math.PI);this.material=new va({wireframe:!0,fog:!1});void 0===this.color&&(this.material.vertexColors=2);b=a.getAttribute("position");b=new Float32Array(3*$/;"	r
b	js/three.min.js	/^a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[q[a].clone(),q[b].clone(),q[d].clone()]:[],u=void 0!==h?[c.colors[a].clone(),c.colors[b].clone(),c.colors[d].clone()]:[];e=new Oa(a,b,d,f,u,e);c.faces.push(e);void 0!==k&&c.faceVertexUvs[0].push([n[a].clone(),n[b].clone(),n[d].clone()]);void 0!==l&&c.faceVertexUvs[1].push([m[a].clone(),m[b].clone(),m[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,$/;"	r
b	js/three.min.js	/^a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1\/b,c=new K;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new p,b=new p,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===$/;"	r
b	js/three.min.js	/^a.y,a.z)}}()});Object.assign(ie.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=b[c];return a\/b.length}});Object.assign(je.prototype,{accumulate:function(a,b){var c=this.buffer,d=this.valueSize;a=a*d+d;var e=this.cumulativeWeight;if(0===e){for(e=0;e!==d;++e)c[a+e]=c[e];e=b}else e+=b,this._mixBufferRegion(c,a,0,b\/e,d);this.cumulativeWeight=e},apply:function(a){var b=$/;"	r
b	js/three.min.js	/^a=void 0);this.manager=void 0!==a?a:wa;this.withCredentials=!1}function Re(a){this.manager=void 0!==a?a:wa;this.texturePath=""}function Se(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);var f=a*a;return(2*c-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function ub(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}function vb(a,b,c,d,e){var f=1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}function ca(){this.type="Curve";this.arcLengthDivisions=200}function Ma(a,b){ca.call(this);this.type="LineCurve";this.v1=a;$/;"	r
b	js/three.min.js	/^a[13];this.z=a[14];return this},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=$/;"	r
b	js/three.min.js	/^a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});Object.assign(Da.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new Na;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).getCenter(d);for(var e=c=0,f=b.length;e<f;e++)c=Math.max(c,$/;"	r
b	js/three.min.js	/^a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=$/;"	r
b	js/three.min.js	/^a[c]});return c},sortedArray:function(a,b,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==$/;"	r
b	js/three.min.js	/^a[d].clone();this.clippingPlanes=b;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Va.prototype=Object.create(Q.prototype);Va.prototype.constructor=Va;Va.prototype.isMeshDepthMaterial=!0;Va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=$/;"	r
b	js/three.min.js	/^applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(a,b,c,d,e,f){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(a,b,d,c,e,f)}});za.prototype.isIntersectionLine=function(a){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(a)};X.prototype.multiplyVector3=$/;"	r
b	js/three.min.js	/^b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=function(b){var e=b.texture,f=k(b);l(e,f)&&(b=b.isWebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}}function lg(){var a={};return{get:function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c},remove:function(b){delete a[b.uuid]},clear:function(){a={}}}}function mg(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();$/;"	r
b	js/three.min.js	/^b)throw Error("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");console.warn("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");return this.identity()}b=1\/p;a[0]=n*b;a[1]=(f*q-c*e)*b;a[2]=(k*e-f*h)*b;a[3]=m*b;a[4]=(c*d-f*l)*b;a[5]=(f*g-k*d)*b;a[6]=r*b;a[7]=(e*l-q*d)*b;a[8]=(h*d-e*g)*b;return this},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},$/;"	r
b	js/three.min.js	/^b){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(b,a)},applyProjection:function(a){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");return this.applyMatrix4(a)},fromAttribute:function(a,b,c){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},distanceToManhattan:function(a){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");$/;"	r
b	js/three.min.js	/^b){w.call(this);this.type="Light";this.color=new H(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0}function ud(a,b,c){fa.call(this,a,c);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(w.DefaultUp);this.updateMatrix();this.groundColor=new H(b)}function rb(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new D(512,512);this.map=null;this.matrix=new K}function vd(){rb.call(this,new Y(50,1,.5,500))}function wd(a,b,c,d,e,f){fa.call(this,a,b);this.type="SpotLight";$/;"	r
b	js/three.min.js	/^b)}function pf(a,b){void 0===b.x?a.uniform4fv(this.addr,b):a.uniform4f(this.addr,b.x,b.y,b.z,b.w)}function qf(a,b){a.uniformMatrix2fv(this.addr,!1,b.elements||b)}function rf(a,b){void 0===b.elements?a.uniformMatrix3fv(this.addr,!1,b):(ze.set(b.elements),a.uniformMatrix3fv(this.addr,!1,ze))}function sf(a,b){void 0===b.elements?a.uniformMatrix4fv(this.addr,!1,b):(Ae.set(b.elements),a.uniformMatrix4fv(this.addr,!1,Ae))}function tf(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTexture2D(b||$/;"	r
b	js/three.min.js	/^b)}}(),translateZ:function(){var a=new p(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new K;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new K,b=new p;return function(c,d,e){c.isVector3?b.copy(c):b.set(c,d,e);this.isCamera?a.lookAt(this.position,b,this.up):a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),$/;"	r
b	js/three.min.js	/^b*b},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius},clampPoint:function(a,b){var c=this.center.distanceToSquared(a);b=b||new p;b.copy(a);c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center));return b},getBoundingBox:function(a){a=a||new Na;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);$/;"	r
b	js/three.min.js	/^b*e+c*f+d*f*e}}}function la(a){ca.call(this);this.type="CatmullRomCurve3";2>a.length&&console.warn("THREE.CatmullRomCurve3: Points array needs at least two entries.");this.points=a||[];this.closed=!1;this.curveType="centripetal"}function qc(a,b,c,d){ca.call(this);this.type="CubicBezierCurve3";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function rc(a,b,c){ca.call(this);this.type="QuadraticBezierCurve3";this.v0=a;this.v1=b;this.v2=c}function Cb(a,b){ca.call(this);this.type="LineCurve3";this.v1=a;this.v2=$/;"	r
b	js/three.min.js	/^b+"' parameter is undefined.");else if("shading"===b)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c?!0:!1;else{var d=this[b];void 0===d?console.warn("THREE."+this.type+": '"+b+"' is not a property of this material."):d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]="overdraw"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=$/;"	r
b	js/three.min.js	/^b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};cb.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};cb.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};var sg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,$/;"	r
b	js/three.min.js	/^b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)\/(c-b);return a*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(a){return a*R.DEG2RAD},radToDeg:function(a){return a*R.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},ceilPowerOfTwo:function(a){return Math.pow(2,Math.ceil(Math.log(a)\/Math.LN2))},floorPowerOfTwo:function(a){return Math.pow(2,$/;"	r
b	js/three.min.js	/^b,c){this.uuid=R.generateUUID();this.width=a;this.height=b;this.scissor=new ba(0,0,a,b);this.scissorTest=!1;this.viewport=new ba(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=1006);this.texture=new da(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function Eb(a,b,c){Db.call(this,$/;"	r
b	js/three.min.js	/^b,c){void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);this.w=a.getW(b);return this}});Object.assign(Db.prototype,ia.prototype,{isWebGLRenderTarget:!0,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=$/;"	r
b	js/three.min.js	/^b,c)})}function h(a){null!==Ba&&Ba(a);(la.getDevice()||window).requestAnimationFrame(h)}function k(a,b,c){if(!1!==a.visible){if(a.layers.test(b.layers))if(a.isLight)ja.push(a),a.castShadow&&z.push(a);else if(a.isSprite)a.frustumCulled&&!Td.intersectsSprite(a)||C.push(a);else if(a.isLensFlare)Ua.push(a);else if(a.isImmediateRenderObject)c&&Jb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(md),D.push(a,null,a.material,Jb.z,null);else if(a.isMesh||a.isLine||a.isPoints)if(a.isSkinnedMesh&&a.skeleton.update(),$/;"	r
b	js/three.min.js	/^b,c)},distanceToManhattan:function(a){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(a)},lengthManhattan:function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(p.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},$/;"	r
b	js/three.min.js	/^b,c)}function vc(a,b,c){O.call(this,new Uint8ClampedArray(a),b,c)}function wc(a,b,c){O.call(this,new Int16Array(a),b,c)}function db(a,b,c){O.call(this,new Uint16Array(a),b,c)}function xc(a,b,c){O.call(this,new Int32Array(a),b,c)}function eb(a,b,c){O.call(this,new Uint32Array(a),b,c)}function z(a,b,c){O.call(this,new Float32Array(a),b,c)}function yc(a,b,c){O.call(this,new Float64Array(a),b,c)}function Je(){this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=$/;"	r
b	js/three.min.js	/^b,c,d));this.mergeVertices()}function gb(a,b,c,d){C.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a\/2,f=b\/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a\/c,l=b\/d,q=[],n=[],u=[],r=[];for(a=0;a<h;a++){var m=a*l-f;for(b=0;b<g;b++)n.push(b*k-e,-m,0),u.push(0,0,1),r.push(b\/c),r.push(1-a\/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,q.push(b+g*a,e,h),q.push(e,f,h);this.setIndex(q);this.addAttribute("position",$/;"	r
b	js/three.min.js	/^b,c-b}return this.time=b},_setEndings:function(a,b,c){var d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(d.endingStart=a?this.zeroSlopeAtStart?2401:2400:2402,d.endingEnd=b?this.zeroSlopeAtEnd?2401:2400:2402)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}});Object.assign(Ye.prototype,ia.prototype,$/;"	r
b	js/three.min.js	/^b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length\/3-1)}var d=new C,e=new T({color:16777215,vertexColors:1}),f=[],g=[],h={},k=new H(16755200),l=new H(16711680),q=new H(43775),n=new H(16777215),u=new H(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",l);b("p","n2",l);b("p","n3",l);b("p","n4",$/;"	r
b	js/three.min.js	/^b.count);a.addAttribute("color",new O(b,3));this.add(new qa(a,this.material));this.update()}function cd(a,b,c,d){a=a||10;b=b||10;c=new H(void 0!==c?c:4473924);d=new H(void 0!==d?d:8947848);var e=b\/2,f=a\/b,g=a\/2;a=[];for(var h=[],k=0,l=0,q=-g;k<=b;k++,q+=f){a.push(-g,0,q,g,0,q);a.push(q,0,-g,q,0,g);var n=k===e?c:d;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3}b=new C;b.addAttribute("position",new z(a,3));b.addAttribute("color",new z(h,3));c=new T({vertexColors:2});$/;"	r
b	js/three.min.js	/^b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Sf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Tf(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,k){var l=a[b];void 0===l?(l={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:k},a[b]=l):(l.id=e.id,l.object=e,l.geometry=f,l.material=g,l.program=g.program,l.renderOrder=e.renderOrder,$/;"	r
b	js/three.min.js	/^b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),update:function(){var a=new p,b=new p;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=d[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}(),toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.levels=$/;"	r
b	js/three.min.js	/^b;c++)d=this.geometry.bones[c],-1!==d.parent&&null!==d.parent&&void 0!==a[d.parent]?a[d.parent].add(a[c]):this.add(a[c])}this.updateMatrixWorld(!0);return a},bind:function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var a;if(this.geometry&&this.geometry.isGeometry)for(a=0;a<this.geometry.skinWeights.length;a++){var b=$/;"	r
b	js/three.min.js	/^b;c++)if(a=this.bones[c])a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new K,b=new K;return function(){for(var c=this.bones,d=this.boneInverses,e=this.boneMatrices,f=this.boneTexture,g=0,h=c.length;g<h;g++)a.multiplyMatrices(c[g]?c[g].matrixWorld:b,d[g]),a.toArray(e,16*g);void 0!==f&&(f.needsUpdate=!0)}}(),clone:function(){return new Dc(this.bones,$/;"	r
b	js/three.min.js	/^b;return f},setFromPoints:function(a){this.vertices=[];for(var b=0,c=a.length;b<c;b++){var d=a[b];this.vertices.push(new p(d.x,d.y,d.z||0))}return this},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);$/;"	r
b	js/three.min.js	/^b=0,c;return function(){for(var d="",e=0;36>e;e++)8===e||13===e||18===e||23===e?d+="-":14===e?d+="4":(2>=b&&(b=33554432+16777216*Math.random()|0),c=b&15,b>>=4,d+=a[19===e?c&3|8:c]);return d}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)\/(c-b)},lerp:function(a,b,c){return(1-c)*a+c*b},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)\/(c-b);return a*a*(3-2*a)},smootherstep:function(a,$/;"	r
b	js/three.min.js	/^b=0;for(var e=a.length;b<e;b++){var f=a[b];if("MultiMaterial"===f.type){for(var g=[],h=0;h<f.materials.length;h++)g.push(d.parse(f.materials[h]));c[f.uuid]=g}else c[f.uuid]=d.parse(f)}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=ra.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemEnd(a);d.manager.itemError(a)})}var d=this,e={};if(void 0!==$/;"	r
b	js/three.min.js	/^b=3*c.faces.length:c&&c.isBufferGeometry&&(b=c.attributes.normal.count);c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function kc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new C;b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var c=0,d=1;32>c;c++,d++){var e=c\/32*Math.PI*2,f=d\/32*Math.PI*2;b.push(Math.cos(e),$/;"	r
b	js/three.min.js	/^b=Math.sqrt(b-e);e=d-b;d+=b;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)\/b;return 0<=a?a:null},intersectPlane:function(a,b){a=this.distanceToPlane(a);return null===a?null:this.at(a,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);$/;"	r
b	js/three.min.js	/^b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(2200===d)a:{if(-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>a?-1:1})}else{d=2202===d;$/;"	r
b	js/three.min.js	/^b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=h;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=$/;"	r
b	js/three.min.js	/^b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new Ma(b,a))},getPoint:function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],c=a.getLength(),a.getPointAt(0===c?0:1-b\/c);a++}return null},getLength:function(){var a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&$/;"	r
b	js/three.min.js	/^b=this.elements;a=c[0];var e=c[4],f=c[8],g=c[12],h=c[1],k=c[5],l=c[9],q=c[13],n=c[2],m=c[6],r=c[10],p=c[14],t=c[3],x=c[7],y=c[11],c=c[15],B=d[0],I=d[4],A=d[8],J=d[12],w=d[1],z=d[5],D=d[9],C=d[13],E=d[2],H=d[6],M=d[10],L=d[14],K=d[3],N=d[7],U=d[11],d=d[15];b[0]=a*B+e*w+f*E+g*K;b[4]=a*I+e*z+f*H+g*N;b[8]=a*A+e*D+f*M+g*U;b[12]=a*J+e*C+f*L+g*d;b[1]=h*B+k*w+l*E+q*K;b[5]=h*I+k*z+l*H+q*N;b[9]=h*A+k*D+l*M+q*U;b[13]=h*J+k*C+l*L+q*d;b[2]=n*B+m*w+r*E+p*K;b[6]=n*I+m*z+r*H+p*N;b[10]=n*A+m*D+r*M+p*U;b[14]=n*J+m*$/;"	r
b	js/three.min.js	/^b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a&&a.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var c=a.elements;a=this.elements;var d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],k=c[5],l=c[6],q=c[7],c=c[8],n=c*h-k*q,m=k*l-c*g,r=q*g-h*l,p=d*n+e*m+f*r;if(0===p){if(!0===$/;"	r
b	js/three.min.js	/^b[c++]=f.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},$/;"	r
b	js/three.min.js	/^break;case 303:case 304:n="ENVMAP_TYPE_EQUIREC";break;case 305:n="ENVMAP_TYPE_SPHERE"}switch(d.envMap.mapping){case 302:case 304:u="ENVMAP_MODE_REFRACTION"}switch(d.combine){case 0:r="ENVMAP_BLENDING_MULTIPLY";break;case 1:r="ENVMAP_BLENDING_MIX";break;case 2:r="ENVMAP_BLENDING_ADD"}}var m=0<a.gammaFactor?a.gammaFactor:1,t=fg(d.extensions,f,b),x=gg(h),p=g.createProgram();d.isRawShaderMaterial?(h=[x].filter(Ac).join("\\n"),0<h.length&&(h+="\\n"),b=[t,x].filter(Ac).join("\\n"),0<b.length&&(b+="\\n")):(h=$/;"	r
b	js/three.min.js	/^b}function id(a,b,c,d,e,f){Sa.call(this,a,b,c,c,d,e,f);this.type="ArcCurve"}function ef(a){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);this.type="catmullrom";this.closed=!0}function ff(a){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);this.type="catmullrom"}function re(a){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);$/;"	r
b	js/three.min.js	/^c)}function Hd(a,b,c,d){sb.call(this,a,b,c,d)}function tb(a,b,c,d){sb.apply(this,a,b,c,d)}function ra(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=R.generateUUID();0>this.duration&&this.resetDuration();this.optimize()}function Id(a){this.manager=void 0!==a?a:wa;this.textures={}}function ae(a){this.manager=void 0!==a?a:wa}function gc(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}}function be(a){"boolean"===typeof a&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),$/;"	r
b	js/three.min.js	/^c)}function pa(a,b,c){this.path=b;this.parsedPath=c||pa.parseTrackName(b);this.node=pa.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function We(){this.uuid=R.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var d=this;this.stats={objects:{get total(){return d._objects.length},$/;"	r
b	js/three.min.js	/^c.needsUpdate=!0:void 0===e.numClippingPlanes||e.numClippingPlanes===Fa.numPlanes&&e.numIntersection===Fa.numIntersection||(c.needsUpdate=!0));c.needsUpdate&&(n(c,b,d),c.needsUpdate=!1);var f=!1,g=!1,h=!1,l=e.program,k=l.getUniforms(),q=e.shader.uniforms;aa.useProgram(l.program)&&(h=g=f=!0);c.id!==U&&(U=c.id,g=!0);if(f||a!==O){k.setValue(F,"projectionMatrix",a.projectionMatrix);X.logarithmicDepthBuffer&&k.setValue(F,"logDepthBufFC",2\/(Math.log(a.far+1)\/Math.LN2));O!==(Z||a)&&(O=Z||a,h=g=!0);if(c.isShaderMaterial||$/;"	r
b	js/three.min.js	/^c.reset()}}}function sc(a,b,c,d,e,f,g,h,k){da.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0}function Kf(a,b,c,d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A,J;function ya(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var ja,ma,ga,He,Ua=new p,M=new X,z=new p;this.render=function(v,p,U){if(0!==v.length){if(void 0===ga){var N=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),na=new Uint16Array([0,1,2,0,2,3]);ja=b.createBuffer();ma=b.createBuffer();$/;"	r
b	js/three.min.js	/^c?this.setHex(c):console.warn("THREE.Color: Unknown color "+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);b=0<b?1\/b:1;this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},convertGammaToLinear:function(){var a=$/;"	r
b	js/three.min.js	/^case 35667:case 35671:return De;case 35668:case 35672:return Ee;case 35669:case 35673:return Fe}}function Hf(a,b,c){this.id=a;this.addr=c;this.setValue=vf(b.type)}function If(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=Gf(b.type)}function Ge(a){this.id=a;this.seq=[];this.map={}}function cb(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d<c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=$/;"	r
b	js/three.min.js	/^case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),$/;"	r
b	js/three.min.js	/^clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=(this.right-this.left)\/(2*this.zoom),b=(this.top-this.bottom)\/(2*this.zoom),c=(this.right+this.left)\/2,d=(this.top+this.bottom)\/2,e=c-a,c=c+a,a=d+b,b=d-b;if(null!==this.view&&this.view.enabled)var c=this.zoom\/(this.view.width\/this.view.fullWidth),b=this.zoom\/(this.view.height\/this.view.fullHeight),f=(this.right-this.left)\/this.view.width,d=(this.top-this.bottom)\/$/;"	r
b	js/three.min.js	/^color_fragment:"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif",color_pars_fragment:"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n",color_pars_vertex:"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif",color_vertex:"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif",common:"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) \/ dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n",$/;"	r
b	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(R.clamp(a.y\/this.radius,-1,1)));return this}});Object.assign(cf.prototype,{set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
b	js/three.min.js	/^c||1}function Ze(a,b,c,d){this.ray=new hb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function $e(a,b){return a.distance-b.distance}function oe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)oe(a[d],b,c,!0)}}function af(a){this.autoStart=$/;"	r
b	js/three.min.js	/^d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var q=e[f+1],n=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==q||l!==n){f=1-g;var m=h*d+k*q+l*n+c*e,r=0<=m?1:-1,p=1-m*m;p>Number.EPSILON&&(p=Math.sqrt(p),m=Math.atan2(p,m*r),f=Math.sin(f*m)\/p,g=Math.sin(g*m)\/p);r*=g;h=h*f+d*r;k=k*f+q*r;l=l*f+n*r;c=c*f+e*r;f===1-g&&(g=1\/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;a[b+3]=c}});Object.defineProperties(X.prototype,{x:{get:function(){return this._x},$/;"	r
b	js/three.min.js	/^d[2].copy(c.normal)):(d[0]=c.normal.clone(),d[1]=c.normal.clone(),d[2]=c.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b;var c=0;for(b=this.faces.length;c<b;c++){var d=this.faces[c];d.__originalFaceNormal?d.__originalFaceNormal.copy(d.normal):d.__originalFaceNormal=d.normal.clone();d.__originalVertexNormals||(d.__originalVertexNormals=[]);var e=0;for(a=d.vertexNormals.length;e<a;e++)d.__originalVertexNormals[e]?d.__originalVertexNormals[e].copy(d.vertexNormals[e]):$/;"	r
b	js/three.min.js	/^e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1\/Math.sqrt(b)):e.set(0,0,0)}}(),barycoordFromPoint:function(){var a=new p,b=new p,c=new p;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new p;if(0===l)return h.set(-2,-1,-1);l=1\/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}(),containsPoint:function(){var a=new p;return function(b,c,d,e){b=$/;"	r
b	js/three.min.js	/^e[d],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];S.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var m=0;m<k[l].morphTargets.length;m++)f[k[l].morphTargets[m]]=$/;"	r
b	js/three.min.js	/^extractAllPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},extractPoints:function(a){return this.extractAllPoints(a)}});Object.assign(ce.prototype,{moveTo:function(a,b){this.currentPath=new Zc;this.subPaths.push(this.currentPath);this.currentPath.moveTo(a,b)},lineTo:function(a,b){this.currentPath.lineTo(a,b)},quadraticCurveTo:function(a,b,c,d){this.currentPath.quadraticCurveTo(a,b,c,d)},bezierCurveTo:function(a,b,c,d,e,f){this.currentPath.bezierCurveTo(a,b,c,d,e,f)},$/;"	r
b	js/three.min.js	/^f.multiplyScalar(t.y);g.multiplyScalar(t.z);e.add(f).add(g);return e.clone()}function b(a,b,c,d,e,f,g,h){if(null===(1===b.side?d.intersectTriangle(g,f,e,!0,h):d.intersectTriangle(e,f,g,2!==b.side,h)))return null;y.copy(h);y.applyMatrix4(a.matrixWorld);b=c.ray.origin.distanceTo(y);return b<c.near||b>c.far?null:{distance:b,point:y.clone(),object:a}}function c(c,d,e,f,l,n,q,u){g.fromBufferAttribute(f,n);h.fromBufferAttribute(f,q);k.fromBufferAttribute(f,u);if(c=b(c,c.material,d,e,g,h,k,x))l&&(m.fromBufferAttribute(l,$/;"	r
b	js/three.min.js	/^function Kb(a,b){this.name="";this.color=new H(a);this.density=void 0!==b?b:2.5E-4}function Lb(a,b,c){this.name="";this.color=new H(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}function od(){w.call(this);this.type="Scene";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function Xd(a,b,c,d,e){w.call(this);this.lensFlares=[];this.positionScreen=new p;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)}function Ya(a){Q.call(this);this.type="SpriteMaterial";$/;"	r
b	js/three.min.js	/^function Nb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}function Fc(a,b,c,d,e,f,g,h,k,l){l=void 0!==l?l:1026;if(1026!==l&&1027!==l)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===l&&(c=1012);void 0===c&&1027===l&&(c=1020);da.call(this,null,d,e,f,g,h,l,c,k);this.image={width:a,height:b};this.magFilter=void 0!==g?g:1003;this.minFilter=void 0!==$/;"	r
b	js/three.min.js	/^function Qc(a,b,c,d,e,f,g){L.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new kb(a,b,c,d,e,f,g));this.mergeVertices()}function kb(a,b,c,d,e,f,g){C.call(this);this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==$/;"	r
b	js/three.min.js	/^function gd(a,b,c){this.type="PlaneHelper";this.plane=a;this.size=void 0===b?1:b;a=void 0!==c?c:16776960;b=new C;b.addAttribute("position",new z([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));b.computeBoundingSphere();oa.call(this,b,new T({color:a}));b=new C;b.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3));b.computeBoundingSphere();this.add(new qa(b,new va({color:a,opacity:.2,transparent:!0,depthWrite:!1})))}function Bb(a,b,c,d,e,f){w.call(this);$/;"	r
b	js/three.min.js	/^function p(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0}function ta(){this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function da(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,"id",{value:kf++});this.uuid=R.generateUUID();this.name="";this.image=void 0!==a?a:da.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:da.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=void 0!==d?d:1001;this.magFilter=$/;"	r
b	js/three.min.js	/^function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new Ba(a)};m.Vertex=function(a,b,c){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");return new p(a,b,c)};m.DynamicBufferAttribute=function(a,b){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");return(new O(a,b)).setDynamic(!0)};m.Int8Attribute=function(a,b){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.");$/;"	r
b	js/three.min.js	/^g&&(this.faceVertexUvs[1]=g)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length\/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==n[b])return n[b];n[b]=q.length;q.push(a.getHex());return n[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==r[b])return r[b];r[b]=m.length\/2;m.push(a.x,a.y);return r[b]}var e=$/;"	r
b	js/three.min.js	/^g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=Ha.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);b=[];if(1===f.length){var g=f[0];var h=new zb;h.curves=g.curves;b.push(h);return b}var k=!e(f[0].getPoints()),k=a?!k:k;h=[];var l=[],m=[],n=0;l[n]=void 0;m[n]=[];for(var p=0,r=f.length;p<r;p++){g=f[p];var v=g.getPoints();var t=e(v);(t=a?!t:t)?(!k&&l[n]&&n++,l[n]={s:new zb,p:v},l[n].s.curves=g.curves,k&&n++,m[n]=[]):m[n].push({h:g,p:v[0]})}if(!l[0])return c(f);if(1<l.length){p=$/;"	r
b	js/three.min.js	/^get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=f.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);$/;"	r
b	js/three.min.js	/^get inUse(){return this.total-d.nCachedObjects_}},get bindingsPerObject(){return d._bindings.length}}}function Xe(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:2400,endingEnd:2400},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=$/;"	r
b	js/three.min.js	/^getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=pa.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case "materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",$/;"	r
b	js/three.min.js	/^h.push(a,b,e);this.setIndex(h);this.addAttribute("position",new z(k,3));this.addAttribute("normal",new z(l,3));this.addAttribute("uv",new z(q,2))}function Oc(a,b,c,d,e){L.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new Vb(a,b,c,d,e));this.mergeVertices()}function Vb(a,b,c,d,e){C.call(this);this.type="TorusBufferGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||$/;"	r
b	js/three.min.js	/^h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){C.call(this);this.type="WireframeGeometry";var b=[],c,d,e,f=[0,0],g={},h=["a","b","c"];if(a&&a.isGeometry){var k=a.faces;var l=0;for(d=k.length;l<d;l++){var q=k[l];for(c=0;3>c;c++){var n=q[h[c]];var u=q[h[(c+1)%3]];f[0]=Math.min(n,u);f[1]=Math.max(n,u);n=f[0]+","+f[1];void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]})}}for(n in g)l=g[n],h=a.vertices[l.index1],b.push(h.x,h.y,h.z),h=a.vertices[l.index2],b.push(h.x,h.y,h.z)}else if(a&&a.isBufferGeometry){var h=$/;"	r
b	js/three.min.js	/^heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d){L.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new bc(a,b,c,d));this.mergeVertices()}function bc(a,b,c,d){C.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],k,l=new p,q=new D;f.push(0,$/;"	r
b	js/three.min.js	/^if(h>g||g!==g)g=h;if(a<c||c!==c)c=a;return 0>c?null:this.at(0<=g?g:c,b)},intersectsBox:function(){var a=new p;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new p,b=new p,c=new p,d=new p;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;$/;"	r
b	js/three.min.js	/^interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)\/(d-b);for(c=a+g;a!==c;a+=4)X.slerpFlat(e,0,f,a-g,f,a,b);return e}});Yc.prototype=Object.assign(Object.create(ab),{constructor:Yc,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(a){return new Ed(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});fc.prototype=Object.assign(Object.create(ab),{constructor:fc,ValueTypeName:"number"});$/;"	r
b	js/three.min.js	/^isSprite:!0,raycast:function(){var a=new p,b=new p,c=new p;return function(d,e){b.setFromMatrixPosition(this.matrixWorld);d.ray.closestPointToPoint(b,a);c.setFromMatrixScale(this.matrixWorld);var f=c.x*c.y\/4;b.distanceToSquared(a)>f||(f=d.ray.origin.distanceTo(a),f<d.near||f>d.far||e.push({distance:f,point:a.clone(),face:null,object:this}))}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}});Cc.prototype=Object.assign(Object.create(w.prototype),{constructor:Cc,copy:function(a){w.prototype.copy.call(this,$/;"	r
b	js/three.min.js	/^k(g[2]);k(g[3])}}}function f(a,b,c){r.push(a);r.push(b);r.push(c)}function g(a,b,c){h(a);h(b);h(c);a=m.length\/3;a=E.generateTopUV(R,m,a-3,a-2,a-1);k(a[0]);k(a[1]);k(a[2])}function h(a){n.push(m.length\/3);m.push(r[3*a+0]);m.push(r[3*a+1]);m.push(r[3*a+2])}function k(a){u.push(a.x);u.push(a.y)}var l=b.arrays?b.arrays:this.getArrays(),m=l.position,n=l.index,u=l.uv,r=[],l=void 0!==b.amount?b.amount:100,v=void 0!==b.bevelThickness?b.bevelThickness:6,t=void 0!==b.bevelSize?b.bevelSize:v-2,x=void 0!==b.bevelSegments?$/;"	r
b	js/three.min.js	/^k*g.maxInstancedCount,d===a.TRIANGLES?c.faces+=g.maxInstancedCount*k\/3:d===a.POINTS&&(c.points+=g.maxInstancedCount*k))}}function Yf(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES?c.faces+=f\/3:d===a.POINTS&&(c.points+=f)};this.renderInstances=function(e,f,g){var h=b.get("ANGLE_instanced_arrays");if(null===h)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
b	js/three.min.js	/^l(b.texture,n)&&a.generateMipmap(a.TEXTURE_CUBE_MAP);c.bindTexture(a.TEXTURE_CUBE_MAP,null)}else c.bindTexture(a.TEXTURE_2D,f.__webglTexture),m(a.TEXTURE_2D,b.texture,n),t(e.__webglFramebuffer,b,a.COLOR_ATTACHMENT0,a.TEXTURE_2D),l(b.texture,n)&&a.generateMipmap(a.TEXTURE_2D),c.bindTexture(a.TEXTURE_2D,null);if(b.depthBuffer){e=d.get(b);f=!0===b.isWebGLRenderTargetCube;if(b.depthTexture){if(f)throw Error("target.depthTexture not supported in Cube render targets");if(b&&b.isWebGLRenderTargetCube)throw Error("Depth Texture with cube render targets is not supported");$/;"	r
b	js/three.min.js	/^l.type&&delete l.emissive;"MeshPhongMaterial"!==l.type&&delete l.specular;1>l.opacity&&(l.transparent=!0);d.setTextures(k);return d.parse(l)}}()});Object.assign(be.prototype,{load:function(a,b,c,d){var e=this,f=this.texturePath&&"string"===typeof this.texturePath?this.texturePath:gc.prototype.extractUrlBase(a),g=new Ja(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,function(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d&&(d=d.type,void 0!==d)){if("object"===d.toLowerCase()){console.error("THREE.JSONLoader: "+$/;"	r
b	js/three.min.js	/^linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function pc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;void 0===b&&(b=1);a=new C;a.addAttribute("position",new z([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));b=new T({fog:!1});this.lightPlane=new oa(a,b);this.add(this.lightPlane);a=new C;a.addAttribute("position",new z([0,0,0,0,0,1],3));this.targetLine=new oa(a,b);this.add(this.targetLine);this.update()}function ed(a){function b(a,$/;"	r
b	js/three.min.js	/^n[l];n[l]=n[m];n[m]=p}}}this.nCachedObjects_=b},uncache:function(){for(var a,b,c=this._objects,d=c.length,e=this.nCachedObjects_,f=this._indicesByUUID,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){b=arguments[k].uuid;var m=f[b];if(void 0!==m)if(delete f[b],m<e){var n=--e,p=c[n];b=--d;a=c[b];f[p.uuid]=m;c[m]=p;f[a.uuid]=n;c[n]=a;c.pop();for(var p=0,r=h;p!==r;++p){a=g[p];var v=a[b];a[m]=a[n];a[n]=v;a.pop()}}else for(b=--d,a=c[b],f[a.uuid]=m,c[m]=a,c.pop(),p=0,r=h;p!==r;++p)a=g[p],a[m]=$/;"	r
b	js/three.min.js	/^new p,b=new p,c=new p;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),q=-c.dot(b),n=c.lengthSq(),m=Math.abs(1-k*k);if(0<m){d=k*q-l;e=k*l-q;var p=h*m;0<=d?e>=-p?e<=p?(h=1\/m,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*q)+n):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n):e<=-p?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,$/;"	r
b	js/three.min.js	/^new p,b=new p;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1\/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+$/;"	r
b	js/three.min.js	/^new z(b.arrays.position,3));this.addAttribute("uv",new z(b.arrays.uv,2))};Ga.prototype.addShape=function(a,b){function c(a,b,c){b||console.error("THREE.ExtrudeGeometry: vec does not exist");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=a.x-b.x;var e=a.y-b.y;var f=c.x-a.x;var g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e\/k;b=b.y+d\/k;g=((c.x-g\/l-h)*g-(c.y+f\/l-b)*f)\/(d*g-e*f);f=h+d*g-a.x;d=b+e*g-a.y;e=f*f+d*d;if(2>=e)return new D(f,$/;"	r
b	js/three.min.js	/^new z(c,3))}function lb(a,b,c,d,e,f,g,h){L.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Ra(a,b,c,d,e,f,g,h));this.mergeVertices()}function Ra(a,b,c,d,e,f,g,h){function k(c){var e,f=new D,k=new p,r=0,t=!0===c?a:b,B=!0===c?1:-1;var w=v;for(e=1;e<=d;e++)n.push(0,x*B,0),u.push(0,B,0),m.push(.5,.5),v++;var z=v;for(e=0;e<=d;e++){var C=e\/d*h+g,M=Math.cos(C),$/;"	r
b	js/three.min.js	/^new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function Hc(a,b,c,d){L.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new sa(a,b,c,d));this.mergeVertices()}function sa(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){b*=3;c.x=a[b+0];c.y=a[b+1];c.z=a[b+2]}function g(a,b,c,d){0>d&&1===a.x&&(k[b]=a.x-1);0===c.x&&0===c.z&&(k[b]=d\/2\/Math.PI+.5)}C.call(this);this.type="PolyhedronBufferGeometry";$/;"	r
b	js/three.min.js	/^new za,b=[new Ib,new Ib,new Ib],c=new p,d=new p;return function(e,f){f=f||new p;var g=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))f.copy(c);else for(b[0].set(this.a,this.b),b[1].set(this.b,this.c),b[2].set(this.c,this.a),e=0;e<b.length;e++){b[e].closestPointToPoint(c,!0,d);var h=c.distanceToSquared(d);h<g&&(g=h,f.copy(d))}return f}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}});qa.prototype=Object.assign(Object.create(w.prototype),$/;"	r
b	js/three.min.js	/^removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToBufferAttribute(b),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new ta).getNormalMatrix(a).applyToBufferAttribute(b),b.needsUpdate=!0);null!==$/;"	r
b	js/three.min.js	/^return a.join("\/")+"\/"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a={NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},b=new H,c=new td,d=new Id;return function(e,f,g){function h(a,b,d,e,h){a=f+a;var l=gc.Handlers.get(a);null!==l?a=l.load(a):(c.setCrossOrigin(g),a=c.load(a));void 0!==b&&(a.repeat.fromArray(b),1!==b[0]&&(a.wrapS=1E3),1!==b[1]&&(a.wrapT=$/;"	r
b	js/three.min.js	/^return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new p,b=new p;return function(c){c=c||new X;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new X;return function(b){b=b||new Xa;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new p,b=new X;return function(c){c=c||new p;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),$/;"	r
b	js/three.min.js	/^return c}});Object.assign(Te.prototype,{load:function(a,b,c,d){var e=this,f=new Ja(this.manager);f.setPath(this.path);f.load(a,function(a){try{var c=JSON.parse(a)}catch(k){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(a.substring(65,a.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new de(a)},setPath:function(a){this.path=a;return this}});var Md,ge={getContext:function(){void 0===Md&&(Md=new (window.AudioContext||$/;"	r
b	js/three.min.js	/^return new Oa(a,b,c,e,f,g)};m.LineStrip=0;m.LinePieces=1;m.MeshFaceMaterial=function(a){console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead.");return a};m.MultiMaterial=function(a){void 0===a&&(a=[]);console.warn("THREE.MultiMaterial has been removed. Use an Array instead.");a.isMultiMaterial=!0;a.materials=a;a.clone=function(){return a.slice()};return a};m.PointCloud=function(a,b){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new Mb(a,b)};m.Particle=$/;"	r
b	js/three.min.js	/^return new Zd(a)};m.GeometryUtils={merge:function(a,b,c){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");if(b.isMesh){b.matrixAutoUpdate&&b.updateMatrix();var d=b.matrix;b=b.geometry}a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};m.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");$/;"	r
b	js/three.min.js	/^return this.array.length}}});Object.assign(C.prototype,{addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(a)},addDrawCall:function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(a,b)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");$/;"	r
b	js/three.min.js	/^return this.intersectsSphere(a)}});Object.assign(zb.prototype,{extrude:function(a){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new Za(this,a)},makeGeometry:function(a){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");return new Zb(this,a)}});Object.assign(D.prototype,{fromAttribute:function(a,b,c){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,$/;"	r
b	js/three.min.js	/^return this.manhattanDistanceTo(a)},lengthManhattan:function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(ba.prototype,{fromAttribute:function(a,b,c){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},lengthManhattan:function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});$/;"	r
b	js/three.min.js	/^return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(a){a||(a=[]);!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this},getFilter:function(){return this.getFilters()[0]},$/;"	r
b	js/three.min.js	/^return this},rotateAround:function(a,b){var c=Math.cos(b);b=Math.sin(b);var d=this.x-a.x,e=this.y-a.y;this.x=d*c-e*b+a.x;this.y=d*b+e*c+a.y;return this}});Object.assign(K.prototype,{isMatrix4:!0,set:function(a,b,c,d,e,f,g,h,k,l,q,n,u,m,p,t){var r=this.elements;r[0]=a;r[4]=b;r[8]=c;r[12]=d;r[1]=e;r[5]=f;r[9]=g;r[13]=h;r[2]=k;r[6]=l;r[10]=q;r[14]=n;r[3]=u;r[7]=m;r[11]=p;r[15]=t;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new K).fromArray(this.elements)},$/;"	r
b	js/three.min.js	/^setIndex:function(a){Array.isArray(a)?this.index=new (65535<Qd(a)?eb:db)(a,1):this.index=a},addAttribute:function(a,b,c){if(b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)if("index"===a)console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b);else return this.attributes[a]=b,this;else console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(a,new O(b,c))},getAttribute:function(a){return this.attributes[a]},$/;"	r
b	js/three.min.js	/^setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},onUpload:function(a){this.onUploadCallback=a;return this},clone:function(){return(new this.constructor(this.array,$/;"	r
b	js/three.min.js	/^shadowCameraNear:1,shadowCameraFar:1E3};break;case "HemisphereLight":c={direction:new p,skyColor:new H,groundColor:new H};break;case "RectAreaLight":c={color:new H,position:new p,halfWidth:new p,halfHeight:new p}}return a[b.id]=c}}}function ag(){var a=new $f,b={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},c=new p,d=new K,e=new K;return{setup:function(f,$/;"	r
b	js/three.min.js	/^this.boneInverses)}});pd.prototype=Object.assign(Object.create(w.prototype),{constructor:pd,isBone:!0});qd.prototype=Object.assign(Object.create(qa.prototype),{constructor:qd,isSkinnedMesh:!0,initBones:function(){var a=[],b;if(this.geometry&&void 0!==this.geometry.bones){var c=0;for(b=this.geometry.bones.length;c<b;c++){var d=this.geometry.bones[c];var e=new pd;a.push(e);e.name=d.name;e.position.fromArray(d.pos);e.quaternion.fromArray(d.rotq);void 0!==d.scl&&e.scale.fromArray(d.scl)}c=0;for(b=this.geometry.bones.length;c<$/;"	r
b	js/three.min.js	/^this.boundingBox&&(this.boundingBox=new Na);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Da);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a&&a.isGeometry){var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0],q=a.faceVertexUvs[0],n=this.colors,m=a.colors;void 0===c&&(c=0);void 0!==b&&(d=(new ta).getNormalMatrix(b));a=0;for(var r=g.length;a<$/;"	r
b	js/three.min.js	/^this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min\/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new Na,b=new p;return function(){null===this.boundingSphere&&(this.boundingSphere=new Da);var c=this.attributes.position;if(c){var d=this.boundingSphere.center;a.setFromBufferAttribute(c);$/;"	r
b	js/three.min.js	/^this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},getSpacedPoints:function(a){void 0===a&&(a=40);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=[],c,d=0,e=this.curves;d<e.length;d++)for(var f=e[d],f=f.getPoints(f&&f.isEllipseCurve?2*a:f&&f.isLineCurve?1:f&&f.isSplineCurve?a*f.points.length:$/;"	r
b	js/three.min.js	/^this.cameraL=new Y;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new Y;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1}function $c(a,b,c){w.call(this);this.type="CubeCamera";var d=new Y(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new p(1,0,0));this.add(d);var e=new Y(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new p(-1,0,0));this.add(e);var f=new Y(90,1,a,b);f.up.set(0,0,1);f.lookAt(new p(0,1,0));this.add(f);var g=new Y(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new p(0,-1,0));$/;"	r
b	js/three.min.js	/^this.currentPoint.set(c,d)},bezierCurveTo:function(a,b,c,d,e,f){a=new xb(this.currentPoint.clone(),new D(a,b),new D(c,d),new D(e,f));this.curves.push(a);this.currentPoint.set(e,f)},splineThru:function(a){var b=[this.currentPoint.clone()].concat(a),b=new wb(b);this.curves.push(b);this.currentPoint.copy(a[a.length-1])},arc:function(a,b,c,d,e,f){this.absarc(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f)},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},ellipse:function(a,b,c,d,e,f,$/;"	r
b	js/three.min.js	/^this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+$/;"	r
b	js/three.min.js	/^this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],q=a[6],n=a[10],m=a[14];return a[3]*(+e*h*q-d*k*q-e*g*n+c*k*n+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*n+e*f*n-d*f*m+d*k*l-e*h*l)+a[11]*(+b*k*q-b*g*m-e*f*q+c*f*m+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*q+b*g*n+d*f*q-c*f*n+c*h*l)},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},setPosition:function(a){var b=$/;"	r
b	js/three.min.js	/^this.end.copy(a.end);return this},getCenter:function(a){return(a||new p).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new p).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){b=b||new p;return this.delta(b).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new p,b=new p;return function(c,d){a.subVectors(c,$/;"	r
b	js/three.min.js	/^this.fromBufferGeometry(new Ub(a,b,c,d,e,f));this.mergeVertices()}function Ub(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c\/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}C.call(this);this.type="TorusKnotBufferGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],k=[],l=[],q=[],n,u=new p,m=new p,v=new p,t=new p,x=new p,y=new p,B=new p;for(n=0;n<=$/;"	r
b	js/three.min.js	/^this.getClearAlpha=function(){return ia.getClearAlpha()};this.setClearAlpha=function(){ia.setClearAlpha.apply(ia,arguments)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=F.COLOR_BUFFER_BIT;if(void 0===b||b)d|=F.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=F.STENCIL_BUFFER_BIT;F.clear(d)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,$/;"	r
b	js/three.min.js	/^this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a\/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI\/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new vd}function xd(a,b,c,d){fa.call(this,a,b);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=$/;"	r
b	js/three.min.js	/^this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},toJSON:function(a){function b(b,c){void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a));return c.uuid}function c(a){var b=$/;"	r
b	js/three.min.js	/^this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)\/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k\/(e+f):$/;"	r
b	js/three.min.js	/^this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius}});Object.assign(za.prototype,{set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=$/;"	r
b	js/three.min.js	/^this.setValues(a)}function oa(a,b,c){if(1===c)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new P(a,b);w.call(this);this.type="Line";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new T({color:16777215*Math.random()})}function P(a,b){oa.call(this,a,b);this.type="LineSegments"}function rd(a,b){oa.call(this,a,b);this.type="LineLoop"}function Ba(a){Q.call(this);this.type="PointsMaterial";this.color=new H(16777215);$/;"	r
b	js/three.min.js	/^this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.source.stop(),this.offset=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());$/;"	r
b	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
b	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
b	js/three.min.js	/^this.v2=b}function hc(){ca.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}function Sa(a,b,c,d,e,f,g,h){ca.call(this);this.type="EllipseCurve";this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0}function wb(a){ca.call(this);this.type="SplineCurve";this.points=void 0===a?[]:a}function xb(a,b,c,d){ca.call(this);this.type="CubicBezierCurve";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function yb(a,b,c){ca.call(this);$/;"	r
b	js/three.min.js	/^this.w));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new ba,b=new ba);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);$/;"	r
b	js/three.min.js	/^this.width=void 0!==c?c:10;this.height=void 0!==d?d:10}function xa(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}function Cd(a,b,c,d){xa.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}function Xc(a,b,c,d){xa.call(this,a,b,c,d)}function Dd(a,b,c,d){xa.call(this,a,b,c,d)}function sb(a,b,c,d){if(void 0===a)throw Error("track name is undefined");if(void 0===b||0===$/;"	r
b	js/three.min.js	/^this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},cross:function(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)},crossVectors:function(a,b){var c=a.x,d=a.y;a=a.z;var e=b.x,f=b.y;b=b.z;this.x=d*b-a*f;this.y=a*e-c*b;this.z=c*f-d*e;return this},projectOnVector:function(a){var b=$/;"	r
b	js/three.min.js	/^translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}});Object.assign(ld.prototype,{set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,$/;"	r
b	js/three.min.js	/^tubularSegments:b,radius:c,radialSegments:d,closed:e};void 0!==f&&console.warn("THREE.TubeGeometry: taper has been removed.");a=new Tb(a,b,c,d,e);this.tangents=a.tangents;this.normals=a.normals;this.binormals=a.binormals;this.fromBufferGeometry(a);this.mergeVertices()}function Tb(a,b,c,d,e){function f(e){q=a.getPointAt(e\/b,q);var f=g.normals[e];e=g.binormals[e];for(u=0;u<=d;u++){var l=u\/d*Math.PI*2,n=Math.sin(l),l=-Math.cos(l);k.x=l*f.x+n*e.x;k.y=l*f.y+n*e.y;k.z=l*f.z+n*e.z;k.normalize();v.push(k.x,$/;"	r
b	js/three.min.js	/^t}}function Y(a,b,c,d){Ka.call(this);this.type="PerspectiveCamera";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function nd(a){Y.call(this);this.cameras=a||[]}function og(a){function b(){if(null!==d&&d.isPresenting){var b=d.getEyeParameters("left"),e=b.renderWidth,b=b.renderHeight;u=a.getPixelRatio();n=a.getSize();a.setDrawingBufferSize(2*$/;"	r
b	js/three.min.js	/^updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d\/g,b=b-f.offsetY*c\/h,d=f.width\/g*d,c=f.height\/h*c;f=this.filmOffset;0!==f&&(e+=a*f\/this.getFilmWidth());this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=$/;"	r
b	js/three.min.js	/^var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){var k=f*h;var l=f*e;var q=c*h;a=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=l+q*d;b[5]=k-a*d;b[9]=-c*g;b[2]=a-k*d;b[6]=q+l*d;b[10]=f*g}else"YXZ"===a.order?(k=g*h,l=g*e,q=d*h,a=d*e,b[0]=k+a*c,b[4]=q*c-l,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=l*c-q,b[6]=a+k*c,b[10]=f*g):"ZXY"===a.order?(k=g*h,l=g*e,q=d*h,a=d*e,b[0]=k-a*c,b[4]=-f*e,b[8]=q+l*c,b[1]=l+q*c,b[5]=f*h,b[9]=$/;"	r
b	js/three.min.js	/^var e=b\/d.resolution,f=(d.boundingBox.yMax-d.boundingBox.yMin+d.underlineThickness)*e,g=0,h=0;b=[];for(var k=0;k<a.length;k++){var l=a[k];if("\\n"===l)g=0,h-=f;else{var m;var n=e;var p=g,r=h;if(l=d.glyphs[l]||d.glyphs["?"]){var v=new ce,t=[];if(l.o)for(var x=l._cachedOutline||(l._cachedOutline=l.o.split(" ")),w=0,z=x.length;w<z;)switch(x[w++]){case "m":var C=x[w++]*n+p;var A=x[w++]*n+r;v.moveTo(C,A);break;case "l":C=x[w++]*n+p;A=x[w++]*n+r;v.lineTo(C,A);break;case "q":var D=x[w++]*n+p;var E=x[w++]*$/;"	r
b	js/three.min.js	/^var p=k(v[0]),x=f.convert(b.format),B=f.convert(b.type);m(a.TEXTURE_CUBE_MAP,b,p);for(t=0;6>t;t++)if(q)for(var y,I=v[t].mipmaps,w=0,z=I.length;w<z;w++)y=I[w],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(x)?c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,w,x,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,w,x,y.width,y.height,$/;"	r
b	js/three.min.js	/^void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)}function je(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case "quaternion":b=this._slerp;break;case "string":case "bool":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0}function Ve(a,b,c){c=c||pa.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,$/;"	r
b	js/three.min.js	/^void 0===d&&(d=16776960);void 0===c&&(c=1);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);void 0===Ld&&(Ld=new C,Ld.addAttribute("position",new z([0,0,0,0,1,0],3)),pe=new Ra(0,.5,1,5,1),pe.translate(0,-.5,0));this.position.copy(b);this.line=new oa(Ld,new T({color:d}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new qa(pe,new va({color:d}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f)}function hd(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,$/;"	r
b	js/three.min.js	/^window.webkitAudioContext));return Md},setContext:function(a){Md=a}};Object.assign(ee.prototype,{load:function(a,b,c,d){var e=new Ja(this.manager);e.setResponseType("arraybuffer");e.load(a,function(a){ge.getContext().decodeAudioData(a,function(a){b(a)})},c,d)}});Object.assign(Ue.prototype,{update:function(){var a,b,c,d,e,f,g,h,k=new K,l=new K;return function(m){if(a!==this||b!==m.focus||c!==m.fov||d!==m.aspect*this.aspect||e!==m.near||f!==m.far||g!==m.zoom||h!==this.eyeSep){a=this;b=m.focus;c=m.fov;$/;"	r
b	js/three.min.js	/^w}}else void 0!==a[p]&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){for(var a=this._objects,b=this.nCachedObjects_,c=this._indicesByUUID,d=this._bindings,e=d.length,f=0,g=arguments.length;f!==g;++f){var h=arguments[f],k=h.uuid,l=c[k];if(void 0!==l&&l>=b){var m=b++,n=a[m];c[n.uuid]=l;a[l]=n;c[k]=m;a[m]=h;h=0;for(k=e;h!==k;++h){var n=d[h],p=$/;"	r
b	js/three.min.js	/^y+=w})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(q);this.addAttribute("position",new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(m,2))}function Tc(a,b,c,d,e,f,g){lb.call(this,0,a,b,c,d,e,f,g);this.type="ConeGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Uc(a,b,c,d,e,f,g){Ra.call(this,0,a,b,c,d,e,f,g);this.type="ConeBufferGeometry";this.parameters={radius:a,height:b,radialSegments:c,$/;"	r
b	js/three.min.js	/^{clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}});var Of=0;Object.assign(L.prototype,ia.prototype,{isGeometry:!0,applyMatrix:function(a){for(var b=(new ta).getNormalMatrix(a),$/;"	r
b	js/three.min.js	/^{constructor:Mb,isPoints:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<m){a=b.closestPointToPoint(a);a.applyMatrix4(k);var h=d.ray.origin.distanceTo(a);h<d.near||h>d.far||e.push({distance:h,distanceToRay:Math.sqrt(f),point:a.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);$/;"	r
b	js/three.min.js	/^{constructor:ke,isInstancedBufferGeometry:!0,copy:function(a){C.prototype.copy.call(this,a);this.maxInstancedCount=a.maxInstancedCount;return this},clone:function(){return(new this.constructor).copy(this)}});Object.defineProperties(le.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(le.prototype,{isInterleavedBufferAttribute:!0,setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*$/;"	r
b	js/three.min.js	/^{generateTopUV:function(a,b,c,d,e){a=b[3*d];d=b[3*d+1];var f=b[3*e];e=b[3*e+1];return[new D(b[3*c],b[3*c+1]),new D(a,d),new D(f,e)]},generateSideWallUV:function(a,b,c,d,e,f){a=b[3*c];var g=b[3*c+1];c=b[3*c+2];var h=b[3*d],k=b[3*d+1];d=b[3*d+2];var l=b[3*e],m=b[3*e+1];e=b[3*e+2];var n=b[3*f],p=b[3*f+1];b=b[3*f+2];return.01>Math.abs(g-k)?[new D(a,1-c),new D(h,1-d),new D(l,1-e),new D(n,1-b)]:[new D(g,1-c),new D(k,1-d),new D(m,1-e),new D(p,1-b)]}};Pc.prototype=Object.create(L.prototype);Pc.prototype.constructor=$/;"	r
b	js/three.min.js	/^{isAnimationObjectGroup:!0,add:function(){for(var a=this._objects,b=a.length,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._paths,f=this._parsedPaths,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){var m=arguments[k],n=m.uuid,p=d[n];if(void 0===p){p=b++;d[n]=p;a.push(m);for(var n=0,r=h;n!==r;++n)g[n].push(new pa(m,e[n],f[n]))}else if(p<c){var v=--c,r=a[v];d[r.uuid]=p;a[p]=r;d[n]=v;a[v]=m;n=0;for(r=h;n!==r;++n){var t=g[n],w=t[p];t[p]=t[v];void 0===w&&(w=new pa(m,e[n],f[n]));t[v]=$/;"	r
b	js/three.min.js	/^{type:void 0,texture:void 0},O[R]=d);if(d.type!==b||d.texture!==c)a.bindTexture(b,c||W[b]),d.type=b,d.texture=c},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(ea){console.error("THREE.WebGLState:",ea)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(ea){console.error("THREE.WebGLState:",ea)}},scissor:function(b){!1===Q.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),Q.copy(b))},viewport:function(b){!1===G.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),G.copy(b))},$/;"	r
b0	js/three.js	/^				var b0 = diff.dot( this.direction );$/;"	r
b1	js/three.js	/^				var b1 = - diff.dot( segDir );$/;"	r
b11	js/three.js	/^			var b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];$/;"	r
b11	js/three.js	/^			var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];$/;"	r
b21	js/three.js	/^			var b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];$/;"	r
b21	js/three.js	/^			var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];$/;"	r
b31	js/three.js	/^			var b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];$/;"	r
b31	js/three.js	/^			var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];$/;"	r
b41	js/three.js	/^			var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];$/;"	r
bCROSScp	js/three.js	/^					bCROSScp = bX * cpy - bY * cpx;$/;"	r
bX	js/three.js	/^				bX = ax - cx; bY = ay - cy;$/;"	r
b_x	js/three.js	/^			var b_x = vertices[ indexB * 3 ];$/;"	r
b_y	js/three.js	/^			var b_y = vertices[ indexB * 3 + 1 ];$/;"	r
b_z	js/three.js	/^			var b_z = vertices[ indexB * 3 + 2 ];$/;"	r
ba	js/three.min.js	/^void 0!==e?e:1006;this.minFilter=void 0!==f?f:1008;this.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:1023;this.type=void 0!==h?h:1009;this.offset=new D(0,0);this.repeat=new D(1,1);this.center=new D(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new ta;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:3E3;this.version=0;this.onUpdate=null}function ba(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function Db(a,$/;"	r
background	js/three.js	/^								object.background = new Color( data.background );$/;"	r
background	js/three.js	/^				boxMesh.material.uniforms.tCube.value = background;$/;"	r
background	js/three.js	/^				planeMesh.material.map = background;$/;"	r
background	js/three.js	/^			background = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );$/;"	r
background	js/three.js	/^			var background = scene.background;$/;"	r
background	js/three.js	/^		this.background = null;$/;"	r
background	js/three.js	/^		var background, morphtargets, bufferRenderer, indexedBufferRenderer;$/;"	r
barycoord	js/three.js	/^			var barycoord = new Vector3();$/;"	r
barycoordFromPoint	js/three.js	/^			return function barycoordFromPoint( point, a, b, c, optionalTarget ) {$/;"	r
barycoordFromPoint	js/three.js	/^		barycoordFromPoint: function ( point, optionalTarget ) {$/;"	r
barycoordFromPoint	js/three.js	/^		barycoordFromPoint: function () {$/;"	r
barycoordFromPoint	js/three.min.js	/^e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1\/Math.sqrt(b)):e.set(0,0,0)}}(),barycoordFromPoint:function(){var a=new p,b=new p,c=new p;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new p;if(0===l)return h.set(-2,-1,-1);l=1\/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}(),containsPoint:function(){var a=new p;return function(b,c,d,e){b=$/;"	r
base	js/three.js	/^				base = j + i * points.length;$/;"	r
base	js/three.js	/^				var a = base;$/;"	r
base	js/three.js	/^			base = segments * points.length * 3;$/;"	r
base	js/three.js	/^		var base;$/;"	r
baseColorFactor	js/GLTFLoader.js	/^					var array = metallicRoughness.baseColorFactor;$/;"	r
basic	js/three.js	/^		basic: {$/;"	r
bb	js/three.min.js	/^a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function bb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:1003;this.minFilter=void 0!==l?l:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Ta(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];da.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,k,l);this.flipY=!1}function Fb(a,b,c){var d=a[0];if(0>=d||0<d)return a;var e=b*c,f=we[e];void 0===f&&(f=new Float32Array(e),$/;"	r
be	js/three.js	/^			var be = b.elements;$/;"	r
beforeStart_	js/three.js	/^		beforeStart_: Interpolant.prototype.copySampleValue_,$/;"	r
beginShadows	js/three.js	/^		this.beginShadows = function () {$/;"	r
begin_vertex	js/three.js	/^		begin_vertex: begin_vertex,$/;"	r
begin_vertex	js/three.js	/^	var begin_vertex = "\\nvec3 transformed = vec3( position );\\n";$/;"	r
beginnormal_vertex	js/three.js	/^		beginnormal_vertex: beginnormal_vertex,$/;"	r
beginnormal_vertex	js/three.js	/^	var beginnormal_vertex = "\\nvec3 objectNormal = vec3( normal );\\n";$/;"	r
betterShapeHoles	js/three.js	/^					if ( ! ambiguous )	newShapeHoles = betterShapeHoles;$/;"	r
betterShapeHoles	js/three.js	/^			var betterShapeHoles = [];$/;"	r
bevelEnabled	js/three.js	/^			bevelEnabled = false; \/\/ bevels not supported for path extrusion$/;"	r
bevelEnabled	js/three.js	/^		var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; \/\/ false$/;"	r
bevelSegments	js/three.js	/^			\/\/for ( b = bevelSegments; b > 0; b -- ) {$/;"	r
bevelSegments	js/three.js	/^			bevelSegments = 0;$/;"	r
bevelSegments	js/three.js	/^		var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;$/;"	r
bevelSize	js/three.js	/^			bevelSize = 0;$/;"	r
bevelSize	js/three.js	/^		bs = bevelSize;$/;"	r
bevelSize	js/three.js	/^		var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; \/\/ 8$/;"	r
bevelThickness	js/three.js	/^			bevelThickness = 0;$/;"	r
bevelThickness	js/three.js	/^		var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; \/\/ 10$/;"	r
bezierCurveTo	js/three.js	/^		bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {$/;"	r
bezierCurveTo	js/three.min.js	/^this.currentPoint.set(c,d)},bezierCurveTo:function(a,b,c,d,e,f){a=new xb(this.currentPoint.clone(),new D(a,b),new D(c,d),new D(e,f));this.curves.push(a);this.currentPoint.set(e,f)},splineThru:function(a){var b=[this.currentPoint.clone()].concat(a),b=new wb(b);this.curves.push(b);this.currentPoint.copy(a[a.length-1])},arc:function(a,b,c,d,e,f){this.absarc(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f)},absarc:function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},ellipse:function(a,b,c,d,e,f,$/;"	r
bf	js/three.min.js	/^void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function bf(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this}function cf(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function ad(a){w.call(this);this.material=a;this.render=function(){}}function bd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?$/;"	r
bg	js/three.min.js	/^x+","+g.length},state:b}}function bg(a,b){var c={};return{update:function(d){var e=b.frame,f=d.geometry,g=a.get(d,f);c[g.id]!==e&&(f.isGeometry&&g.updateFromObject(d),a.update(g),c[g.id]=e);return g},clear:function(){c={}}}}function cg(a){a=a.split("\\n");for(var b=0;b<a.length;b++)a[b]=b+1+": "+a[b];return a.join("\\n")}function Ke(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");$/;"	r
bias	js/three.js	/^						uniforms.shadowBias = shadow.bias;$/;"	r
bias	js/three.js	/^					if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;$/;"	r
bias	js/three.js	/^				this.shadow.bias = value;$/;"	r
bias	js/three.js	/^			if ( this.bias !== 0 ) object.bias = this.bias;$/;"	r
bias	js/three.js	/^			this.bias = source.bias;$/;"	r
bias	js/three.js	/^		this.bias = 0;$/;"	r
bias	js/three.min.js	/^b){w.call(this);this.type="Light";this.color=new H(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0}function ud(a,b,c){fa.call(this,a,c);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(w.DefaultUp);this.updateMatrix();this.groundColor=new H(b)}function rb(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new D(512,512);this.map=null;this.matrix=new K}function vd(){rb.call(this,new Y(50,1,.5,500))}function wd(a,b,c,d,e,f){fa.call(this,a,b);this.type="SpotLight";$/;"	r
bias	js/three.min.js	/^isHemisphereLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});Object.assign(rb.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var a={};0!==this.bias&&(a.bias=this.bias);1!==this.radius&&(a.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)a.mapSize=this.mapSize.toArray();$/;"	r
bias	js/three.min.js	/^this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=a}}});Object.defineProperties(O.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");$/;"	r
bind	js/three.js	/^		bind: function ( skeleton, bindMatrix ) {$/;"	r
bind	js/three.js	/^		bind: function () {$/;"	r
bind	js/three.min.js	/^b;c++)d=this.geometry.bones[c],-1!==d.parent&&null!==d.parent&&void 0!==a[d.parent]?a[d.parent].add(a[c]):this.add(a[c])}this.updateMatrixWorld(!0);return a},bind:function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var a;if(this.geometry&&this.geometry.isGeometry)for(a=0;a<this.geometry.skinWeights.length;a++){var b=$/;"	r
bindMatrix	js/three.js	/^				bindMatrix = this.matrixWorld;$/;"	r
bindMatrix	js/three.js	/^		this.bindMatrix = new Matrix4();$/;"	r
bindMatrixInverse	js/three.js	/^		this.bindMatrixInverse = new Matrix4();$/;"	r
bindMode	js/three.js	/^		this.bindMode = 'attached';$/;"	r
bindTexture	js/three.js	/^			bindTexture: bindTexture,$/;"	r
bindTexture	js/three.js	/^		function bindTexture( webglType, webglTexture ) {$/;"	r
binding	js/three.js	/^							binding = bindingsForPath[ index ];$/;"	r
binding	js/three.js	/^							binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );$/;"	r
binding	js/three.js	/^						bindingsForPath[ firstActiveIndex ] = binding;$/;"	r
binding	js/three.js	/^						bindingsForPath[ lastCachedIndex ] = binding;$/;"	r
binding	js/three.js	/^					binding = bindingsByName[ trackName ];$/;"	r
binding	js/three.js	/^					binding = bindings[ i ];$/;"	r
binding	js/three.js	/^					binding = new PropertyMixer($/;"	r
binding	js/three.js	/^					bindings[ i ] = binding;$/;"	r
binding	js/three.js	/^					var binding = bindingByName[ trackName ];$/;"	r
binding	js/three.js	/^					var binding = bindings[ i ];$/;"	r
binding	js/three.js	/^				binding = this._bindings[ firstValidIndex ];$/;"	r
binding	js/three.js	/^				binding = this.binding;$/;"	r
binding	js/three.js	/^				propBinding = binding.binding,$/;"	r
binding	js/three.js	/^				var binding = bindings[ i ];$/;"	r
binding	js/three.js	/^			bindingByName[ trackName ] = binding;$/;"	r
binding	js/three.js	/^			bindings[ firstInactiveIndex ] = binding;$/;"	r
binding	js/three.js	/^			bindings[ lastActiveIndex ] = binding;$/;"	r
binding	js/three.js	/^			var binding = this.binding;$/;"	r
binding	js/three.js	/^		this.binding = binding;$/;"	r
bindingByName	js/three.js	/^				bindingByName = bindingsByRoot[ rootUuid ],$/;"	r
bindingByName	js/three.js	/^				bindingByName = bindingsByRoot[ rootUuid ];$/;"	r
bindingByName	js/three.js	/^				bindingByName = {};$/;"	r
bindingByName	js/three.js	/^				bindingsByRoot[ rootUuid ] = bindingByName;$/;"	r
bindingType	js/three.js	/^				bindingType = this.BindingType.ArrayElement;$/;"	r
bindingType	js/three.js	/^				bindingType = this.BindingType.EntireArray;$/;"	r
bindingType	js/three.js	/^				bindingType = this.BindingType.HasFromToArray;$/;"	r
bindingType	js/three.js	/^			var bindingType = this.BindingType.Direct;$/;"	r
bindings	js/three.js	/^					bindings = this._bindings,$/;"	r
bindings	js/three.js	/^				bindings = action._propertyBindings,$/;"	r
bindings	js/three.js	/^				bindings = this._bindings,$/;"	r
bindings	js/three.js	/^				bindings = this._bindings;$/;"	r
bindings	js/three.js	/^				bindings: {$/;"	r
bindings	js/three.js	/^				var bindings = action._propertyBindings;$/;"	r
bindings	js/three.js	/^			var bindings = action._propertyBindings;$/;"	r
bindings	js/three.js	/^			var bindings = this._bindings,$/;"	r
bindings	js/three.js	/^			var bindings = this._bindings;$/;"	r
bindings	js/three.min.js	/^c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},$/;"	r
bindingsByName	js/three.js	/^				bindingsByName = bindingsByRoot[ rootUuid ];$/;"	r
bindingsByName	js/three.js	/^				bindingsByName = {};$/;"	r
bindingsByName	js/three.js	/^				bindingsByRoot[ rootUuid ] = bindingsByName;$/;"	r
bindingsByRoot	js/three.js	/^				bindingsByRoot = this._bindingsByRootAndName,$/;"	r
bindingsByRoot	js/three.js	/^			var bindingsByRoot = this._bindingsByRootAndName,$/;"	r
bindingsForPath	js/three.js	/^							var bindingsForPath = bindings[ j ],$/;"	r
bindingsForPath	js/three.js	/^							var bindingsForPath = bindings[ j ];$/;"	r
bindingsForPath	js/three.js	/^						var bindingsForPath = bindings[ j ],$/;"	r
bindingsForPath	js/three.js	/^				bindingsForPath = new Array( nObjects );$/;"	r
binormal	js/three.js	/^			binormal = new Vector3();$/;"	r
binormals	js/three.js	/^				binormals: binormals$/;"	r
binormals	js/three.js	/^			var binormals = [];$/;"	r
binormals	js/three.js	/^		this.binormals = bufferGeometry.binormals;$/;"	r
binormals	js/three.js	/^		this.binormals = frames.binormals;$/;"	r
bits	js/three.js	/^			var bits = 0;$/;"	r
bj	js/three.js	/^				var bj = b.clone().lerp( c, i \/ cols );$/;"	r
blendDst	js/three.js	/^					currentBlendDst = blendDst;$/;"	r
blendDst	js/three.js	/^			this.blendDst = source.blendDst;$/;"	r
blendDst	js/three.js	/^		this.blendDst = OneMinusSrcAlphaFactor;$/;"	r
blendDstAlpha	js/three.js	/^					currentBlendDstAlpha = blendDstAlpha;$/;"	r
blendDstAlpha	js/three.js	/^				blendDstAlpha = blendDstAlpha || blendDst;$/;"	r
blendDstAlpha	js/three.js	/^			this.blendDstAlpha = source.blendDstAlpha;$/;"	r
blendDstAlpha	js/three.js	/^		this.blendDstAlpha = null;$/;"	r
blendEquation	js/three.js	/^					currentBlendEquation = blendEquation;$/;"	r
blendEquation	js/three.js	/^			this.blendEquation = source.blendEquation;$/;"	r
blendEquation	js/three.js	/^		function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {$/;"	r
blendEquation	js/three.js	/^		this.blendEquation = AddEquation;$/;"	r
blendEquationAlpha	js/three.js	/^					currentBlendEquationAlpha = blendEquationAlpha;$/;"	r
blendEquationAlpha	js/three.js	/^				blendEquationAlpha = blendEquationAlpha || blendEquation;$/;"	r
blendEquationAlpha	js/three.js	/^			this.blendEquationAlpha = source.blendEquationAlpha;$/;"	r
blendEquationAlpha	js/three.js	/^		this.blendEquationAlpha = null;$/;"	r
blendSrc	js/three.js	/^					currentBlendSrc = blendSrc;$/;"	r
blendSrc	js/three.js	/^			this.blendSrc = source.blendSrc;$/;"	r
blendSrc	js/three.js	/^		this.blendSrc = SrcAlphaFactor;$/;"	r
blendSrcAlpha	js/three.js	/^					currentBlendSrcAlpha = blendSrcAlpha;$/;"	r
blendSrcAlpha	js/three.js	/^				blendSrcAlpha = blendSrcAlpha || blendSrc;$/;"	r
blendSrcAlpha	js/three.js	/^			this.blendSrcAlpha = source.blendSrcAlpha;$/;"	r
blendSrcAlpha	js/three.js	/^		this.blendSrcAlpha = null;$/;"	r
blending	js/three.js	/^							json.blending = BlendingMode[ value ];$/;"	r
blending	js/three.js	/^				blending: blending	\/\/ blending$/;"	r
blending	js/three.js	/^			currentBlending = blending;$/;"	r
blending	js/three.js	/^			if ( json.blending !== undefined ) material.blending = json.blending;$/;"	r
blending	js/three.js	/^			if ( this.blending !== NormalBlending ) data.blending = this.blending;$/;"	r
blending	js/three.js	/^			this.blending = source.blending;$/;"	r
blending	js/three.js	/^		this.blending = NormalBlending;$/;"	r
blending	js/three.min.js	/^d.setTexture2D(G.map||He,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);w.onAfterRender(a,p,U,void 0,G,void 0)}}c.enable(b.CULL_FACE);c.reset()}}}function Q(){Object.defineProperty(this,"id",{value:Lf++});this.uuid=R.generateUUID();this.name="";this.type="Material";this.lights=this.fog=!0;this.blending=1;this.side=0;this.flatShading=!1;this.vertexColors=0;this.opacity=1;this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=$/;"	r
blob	js/GLTFLoader.js	/^					var blob = new Blob( [ bufferView ], { type: source.mimeType } );$/;"	r
blockSize	js/three.js	/^				offset += blockSize;$/;"	r
body	js/GLTFLoader.js	/^				this.body = data.slice( byteOffset, byteOffset + chunkLength );$/;"	r
body	js/GLTFLoader.js	/^		this.body = null;$/;"	r
bone	js/three.js	/^						var bone = skeleton.bones[ i ];$/;"	r
bone	js/three.js	/^					bone = new Bone();$/;"	r
bone	js/three.js	/^				bone = this.bones[ i ];$/;"	r
bone	js/three.js	/^				var bone = bones[ i ];$/;"	r
bone	js/three.js	/^				var bone = searchSkeleton( root.skeleton );$/;"	r
bone	js/three.js	/^			var bone = bones[ i ];$/;"	r
bone	js/three.js	/^			var bone, i, il;$/;"	r
bone	js/three.js	/^			var bones = [], bone, gbone;$/;"	r
boneInverses	js/GLTFLoader.js	/^							var boneInverses = [];$/;"	r
boneInverses	js/three.js	/^				this.boneInverses = [];$/;"	r
boneInverses	js/three.js	/^				this.boneInverses = boneInverses.slice( 0 );$/;"	r
boneInverses	js/three.js	/^				var boneInverses = this.boneInverses;$/;"	r
boneInverses	js/three.js	/^			this.boneInverses = [];$/;"	r
boneInverses	js/three.min.js	/^this.boneInverses=[],a=0,b=this.bones.length;a<b;a++)this.boneInverses.push(new K)}function pd(){w.call(this);this.type="Bone"}function qd(a,b){qa.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new K;this.bindMatrixInverse=new K;a=this.initBones();a=new Dc(a);this.bind(a,this.matrixWorld);this.normalizeSkinWeights()}function T(a){Q.call(this);this.type="LineBasicMaterial";this.color=new H(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.lights=!1;$/;"	r
boneList	js/three.js	/^		var boneList = [];$/;"	r
boneMatrices	js/three.js	/^							skeleton.boneMatrices = boneMatrices;$/;"	r
boneMatrices	js/three.js	/^							var boneMatrices = new Float32Array( size * size * 4 ); \/\/ 4 floats per RGBA pixel$/;"	r
boneMatrices	js/three.js	/^				var boneMatrices = this.boneMatrices;$/;"	r
boneMatrices	js/three.js	/^		this.boneMatrices = new Float32Array( this.bones.length * 16 );$/;"	r
boneMatrix	js/three.js	/^		var boneMatrix = new Matrix4();$/;"	r
boneName	js/three.js	/^					var boneName = '.bones[' + bones[ h ].name + ']';$/;"	r
boneTexture	js/three.js	/^							skeleton.boneTexture = boneTexture;$/;"	r
boneTexture	js/three.js	/^							var boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );$/;"	r
boneTexture	js/three.js	/^				var boneTexture = this.boneTexture;$/;"	r
boneTextureSize	js/three.js	/^							skeleton.boneTextureSize = size;$/;"	r
bones	js/GLTFLoader.js	/^							var bones = [];$/;"	r
bones	js/three.js	/^						targetObject = targetObject.skeleton.bones;$/;"	r
bones	js/three.js	/^					var bones = skeleton.bones;$/;"	r
bones	js/three.js	/^				geometry.bones = json.bones;$/;"	r
bones	js/three.js	/^				var bones = this.bones;$/;"	r
bones	js/three.js	/^			var bones = [], bone, gbone;$/;"	r
bones	js/three.js	/^			var bones = skeleton.bones;$/;"	r
bones	js/three.js	/^			var bones = this.bones;$/;"	r
bones	js/three.js	/^		bones = bones || [];$/;"	r
bones	js/three.js	/^		this.bones = bones.slice( 0 );$/;"	r
bones	js/three.js	/^		this.bones = bones;$/;"	r
bones	js/three.js	/^		var bones = getBoneList( object );$/;"	r
bones	js/three.js	/^		var bones = this.initBones();$/;"	r
bones	js/three.min.js	/^this.bones,f=this.geometry,g=f.getAttribute("position");c.getInverse(this.root.matrixWorld);for(var h=0,k=0;h<e.length;h++){var l=e[h];l.parent&&l.parent.isBone&&(b.multiplyMatrices(c,l.matrixWorld),a.setFromMatrixPosition(b),g.setXYZ(k,a.x,a.y,a.z),b.multiplyMatrices(c,l.parent.matrixWorld),a.setFromMatrixPosition(b),g.setXYZ(k+1,a.x,a.y,a.z),k+=2)}f.getAttribute("position").needsUpdate=!0;w.prototype.updateMatrixWorld.call(this,d)}}();mc.prototype=Object.create(qa.prototype);mc.prototype.constructor=$/;"	r
bottom	js/three.js	/^				bottom = top - scaleH * ( this.view.height \/ zoomH );$/;"	r
bottom	js/three.js	/^				this.shadow.camera.bottom = value;$/;"	r
bottom	js/three.js	/^			data.object.bottom = this.bottom;$/;"	r
bottom	js/three.js	/^			this.bottom = source.bottom;$/;"	r
bottom	js/three.js	/^			var bottom = cy - dy;$/;"	r
bottom	js/three.js	/^		this.bottom = bottom;$/;"	r
bottom	js/three.min.js	/^this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");$/;"	r
boundTexture	js/three.js	/^				boundTexture = { type: undefined, texture: undefined };$/;"	r
boundTexture	js/three.js	/^				currentBoundTextures[ currentTextureSlot ] = boundTexture;$/;"	r
boundTexture	js/three.js	/^			var boundTexture = currentBoundTextures[ currentTextureSlot ];$/;"	r
boundingBox	js/three.js	/^					this.boundingBox = geometry.boundingBox.clone();$/;"	r
boundingBox	js/three.js	/^				this.boundingBox = boundingBox.clone();$/;"	r
boundingBox	js/three.js	/^				this.boundingBox = geometry.boundingBox.clone();$/;"	r
boundingBox	js/three.js	/^				this.boundingBox = new Box3();$/;"	r
boundingBox	js/three.js	/^			this.boundingBox = null;$/;"	r
boundingBox	js/three.js	/^			var boundingBox = source.boundingBox;$/;"	r
boundingBox	js/three.js	/^		this.boundingBox = null;$/;"	r
boundingSphere	js/three.js	/^					this.boundingSphere = geometry.boundingSphere.clone();$/;"	r
boundingSphere	js/three.js	/^					this.boundingSphere = new Sphere();$/;"	r
boundingSphere	js/three.js	/^				data.data.boundingSphere = {$/;"	r
boundingSphere	js/three.js	/^				geometry.boundingSphere = new Sphere( center, boundingSphere.radius );$/;"	r
boundingSphere	js/three.js	/^				this.boundingSphere = boundingSphere.clone();$/;"	r
boundingSphere	js/three.js	/^				this.boundingSphere = geometry.boundingSphere.clone();$/;"	r
boundingSphere	js/three.js	/^				this.boundingSphere = new Sphere();$/;"	r
boundingSphere	js/three.js	/^			this.boundingSphere = null;$/;"	r
boundingSphere	js/three.js	/^			var boundingSphere = json.data.boundingSphere;$/;"	r
boundingSphere	js/three.js	/^			var boundingSphere = source.boundingSphere;$/;"	r
boundingSphere	js/three.js	/^			var boundingSphere = this.boundingSphere;$/;"	r
boundingSphere	js/three.js	/^		this.boundingSphere = null;$/;"	r
bounds	js/three.js	/^							var bounds = camera2.bounds;$/;"	r
bounds	js/three.js	/^		cameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );$/;"	r
bounds	js/three.js	/^		cameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );$/;"	r
box	js/three.js	/^			var box = new Box3();$/;"	r
box	js/three.js	/^			var box = optionalTarget || new Box3();$/;"	r
box	js/three.js	/^		this.box = box;$/;"	r
box	js/three.js	/^		var box = new Box3();$/;"	r
box	js/three.js	/^		var box = this.box;$/;"	r
boxMesh	js/three.js	/^					boxMesh = new Mesh($/;"	r
boxMesh	js/three.js	/^		var boxMesh;$/;"	r
bpx	js/three.js	/^					bpx = px - bx; bpy = py - by;$/;"	r
break	js/GLTFLoader.js	/^									break;$/;"	r
break	js/GLTFLoader.js	/^							break;$/;"	r
break	js/GLTFLoader.js	/^					break;$/;"	r
break	js/GLTFLoader.js	/^				break;$/;"	r
break	js/three.js	/^									break;$/;"	r
break	js/three.js	/^								break;$/;"	r
break	js/three.js	/^							break;$/;"	r
break	js/three.js	/^						break;$/;"	r
break	js/three.js	/^					break;$/;"	r
break	js/three.js	/^					case b: hue = ( r - g ) \/ delta + 4; break;$/;"	r
break	js/three.js	/^					case g: hue = ( b - r ) \/ delta + 2; break;$/;"	r
break	js/three.js	/^					case r: hue = ( g - b ) \/ delta + ( g < b ? 6 : 0 ); break;$/;"	r
break	js/three.js	/^				break;$/;"	r
break	js/three.min.js	/^JSON.parse(g);break;default:m=g}window.setTimeout(function(){b&&b(m);e.manager.itemEnd(a)},0)}catch(u){window.setTimeout(function(){d&&d(u);e.manager.itemEnd(a);e.manager.itemError(a)},0)}}else{$a[a]=[];$a[a].push({onLoad:b,onProgress:c,onError:d});var n=new XMLHttpRequest;n.open("GET",a,!0);n.addEventListener("load",function(b){var c=b.target.response;jd.add(a,c);var d=$a[a];delete $a[a];if(200===this.status){for(var f=0,g=d.length;f<g;f++){var h=d[f];if(h.onLoad)h.onLoad(c)}e.manager.itemEnd(a)}else if(0===$/;"	r
break	js/three.min.js	/^a);}}function Rd(a,b){b=Le(b);return"vec4 "+a+"( vec4 value ) { return "+b[0]+"ToLinear"+b[1]+"; }"}function dg(a,b){b=Le(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+b[0]+b[1]+"; }"}function eg(a,b){switch(b){case 1:b="Linear";break;case 2:b="Reinhard";break;case 3:b="Uncharted2";break;case 4:b="OptimizedCineon";break;default:throw Error("unsupported toneMapping: "+b);}return"vec3 "+a+"( vec3 color ) { return "+b+"ToneMapping( color ); }"}function fg(a,b,c){a=a||{};return[a.derivatives||$/;"	r
break	js/three.min.js	/^a.blendFunc(a.SRC_ALPHA,a.ONE));break;case 3:q?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR));break;case 4:q?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR));break;default:q?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,$/;"	r
break	js/three.min.js	/^b.width,b.height);break;case "SpotLight":g=new wd(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case "HemisphereLight":g=new ud(b.color,b.groundColor,b.intensity);break;case "SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case "Mesh":g=e(b.geometry);var h=f(b.material);g=g.bones&&0<g.bones.length?new qd(g,h):new qa(g,h);break;case "LOD":g=new Cc;break;case "Line":g=new oa(e(b.geometry),f(b.material),b.mode);break;case "LineLoop":g=$/;"	r
break	js/three.min.js	/^b.zoom&&(g.zoom=b.zoom);void 0!==b.filmGauge&&(g.filmGauge=b.filmGauge);void 0!==b.filmOffset&&(g.filmOffset=b.filmOffset);void 0!==b.view&&(g.view=Object.assign({},b.view));break;case "OrthographicCamera":g=new Gb(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "AmbientLight":g=new Ad(b.color,b.intensity);break;case "DirectionalLight":g=new zd(b.color,b.intensity);break;case "PointLight":g=new xd(b.color,b.intensity,b.distance,b.decay);break;case "RectAreaLight":g=new Bd(b.color,b.intensity,$/;"	r
break	js/three.min.js	/^break;case "RingGeometry":case "RingBufferGeometry":h=new Ca[g.type](g.innerRadius,g.outerRadius,g.thetaSegments,g.phiSegments,g.thetaStart,g.thetaLength);break;case "TorusGeometry":case "TorusBufferGeometry":h=new Ca[g.type](g.radius,g.tube,g.radialSegments,g.tubularSegments,g.arc);break;case "TorusKnotGeometry":case "TorusKnotBufferGeometry":h=new Ca[g.type](g.radius,g.tube,g.tubularSegments,g.radialSegments,g.p,g.q);break;case "LatheGeometry":case "LatheBufferGeometry":h=new Ca[g.type](g.points,$/;"	r
break	js/three.min.js	/^break;case "WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case "WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case "WEBGL_compressed_texture_etc1":d=a.getExtension("WEBGL_compressed_texture_etc1");break;default:d=a.getExtension(c)}null===d&&console.warn("THREE.WebGLRenderer: "+$/;"	r
break	js/three.min.js	/^break;case "mapMetalnessRepeat":case "mapMetalnessOffset":case "mapMetalnessWrap":case "mapMetalnessAnisotropy":break;case "mapRoughness":l.roughnessMap=h(n,e.mapRoughnessRepeat,e.mapRoughnessOffset,e.mapRoughnessWrap,e.mapRoughnessAnisotropy);break;case "mapRoughnessRepeat":case "mapRoughnessOffset":case "mapRoughnessWrap":case "mapRoughnessAnisotropy":break;case "mapAlpha":l.alphaMap=h(n,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case "mapAlphaRepeat":case "mapAlphaOffset":case "mapAlphaWrap":case "mapAlphaAnisotropy":break;$/;"	r
break	js/three.min.js	/^break;case "mapNormalFactor":l.normalScale=[n,n];break;case "mapNormalRepeat":case "mapNormalOffset":case "mapNormalWrap":case "mapNormalAnisotropy":break;case "mapSpecular":l.specularMap=h(n,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case "mapSpecularRepeat":case "mapSpecularOffset":case "mapSpecularWrap":case "mapSpecularAnisotropy":break;case "mapMetalness":l.metalnessMap=h(n,e.mapMetalnessRepeat,e.mapMetalnessOffset,e.mapMetalnessWrap,e.mapMetalnessAnisotropy);$/;"	r
break	js/three.min.js	/^break;case 2:a.setMode(F.TRIANGLE_FAN)}else e.isLine?(d=d.linewidth,void 0===d&&(d=1),aa.setLineWidth(d*(null===ka?P:1)),e.isLineSegments?a.setMode(F.LINES):e.isLineLoop?a.setMode(F.LINE_LOOP):a.setMode(F.LINE_STRIP)):e.isPoints&&a.setMode(F.POINTS);c&&c.isInstancedBufferGeometry?0<c.maxInstancedCount&&a.renderInstances(c,J,f):a.render(J,f)}};this.compile=function(a,b){ja.length=0;z.length=0;a.traverse(function(a){a.isLight&&(ja.push(a),a.castShadow&&z.push(a))});ua.setup(ja,z,b);a.traverse(function(b){if(b.material)if(Array.isArray(b.material))for(var c=$/;"	r
break	js/three.min.js	/^break;case 303:case 304:n="ENVMAP_TYPE_EQUIREC";break;case 305:n="ENVMAP_TYPE_SPHERE"}switch(d.envMap.mapping){case 302:case 304:u="ENVMAP_MODE_REFRACTION"}switch(d.combine){case 0:r="ENVMAP_BLENDING_MULTIPLY";break;case 1:r="ENVMAP_BLENDING_MIX";break;case 2:r="ENVMAP_BLENDING_ADD"}}var m=0<a.gammaFactor?a.gammaFactor:1,t=fg(d.extensions,f,b),x=gg(h),p=g.createProgram();d.isRawShaderMaterial?(h=[x].filter(Ac).join("\\n"),0<h.length&&(h+="\\n"),b=[t,x].filter(Ac).join("\\n"),0<b.length&&(b+="\\n")):(h=$/;"	r
break	js/three.min.js	/^break;case 4:a.depthFunc(a.EQUAL);break;case 5:a.depthFunc(a.GEQUAL);break;case 6:a.depthFunc(a.GREATER);break;case 7:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);d=b}},setLocked:function(a){b=a},setClear:function(b){g!==b&&(a.clearDepth(b),g=b)},reset:function(){b=!1;g=d=c=null}}},r=new function(){var b=!1,c=null,d=null,g=null,h=null,l=null,k=null,n=null,q=null;return{setTest:function(b){b?e(a.STENCIL_TEST):f(a.STENCIL_TEST)},setMask:function(d){c===d||b||$/;"	r
break	js/three.min.js	/^case "mapAO":l.aoMap=h(n,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case "mapAORepeat":case "mapAOOffset":case "mapAOWrap":case "mapAOAnisotropy":break;case "mapBump":l.bumpMap=h(n,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case "mapBumpScale":l.bumpScale=n;break;case "mapBumpRepeat":case "mapBumpOffset":case "mapBumpWrap":case "mapBumpAnisotropy":break;case "mapNormal":l.normalMap=h(n,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);$/;"	r
break	js/three.min.js	/^d}}}function $f(){var a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];switch(b.type){case "DirectionalLight":var c={direction:new p,color:new H,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "SpotLight":c={position:new p,direction:new p,color:new H,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "PointLight":c={position:new p,color:new H,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D,$/;"	r
break	js/three.min.js	/^e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case "mapDiffuseRepeat":case "mapDiffuseOffset":case "mapDiffuseWrap":case "mapDiffuseAnisotropy":break;case "mapEmissive":l.emissiveMap=h(n,e.mapEmissiveRepeat,e.mapEmissiveOffset,e.mapEmissiveWrap,e.mapEmissiveAnisotropy);break;case "mapEmissiveRepeat":case "mapEmissiveOffset":case "mapEmissiveWrap":case "mapEmissiveAnisotropy":break;case "mapLight":l.lightMap=h(n,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case "mapLightRepeat":case "mapLightOffset":case "mapLightWrap":case "mapLightAnisotropy":break;$/;"	r
break	js/three.min.js	/^f);b.push(d[f])}return b}void 0===d[a]&&console.warn("THREE.ObjectLoader: Undefined material",a);return d[a]}}switch(b.type){case "Scene":var g=new od;void 0!==b.background&&Number.isInteger(b.background)&&(g.background=new H(b.background));void 0!==b.fog&&("Fog"===b.fog.type?g.fog=new Lb(b.fog.color,b.fog.near,b.fog.far):"FogExp2"===b.fog.type&&(g.fog=new Kb(b.fog.color,b.fog.density)));break;case "PerspectiveCamera":g=new Y(b.fov,b.aspect,b.near,b.far);void 0!==b.focus&&(g.focus=b.focus);void 0!==$/;"	r
break	js/three.min.js	/^g.heightSegments,g.openEnded,g.thetaStart,g.thetaLength);break;case "SphereGeometry":case "SphereBufferGeometry":h=new Ca[g.type](g.radius,g.widthSegments,g.heightSegments,g.phiStart,g.phiLength,g.thetaStart,g.thetaLength);break;case "DodecahedronGeometry":case "DodecahedronBufferGeometry":case "IcosahedronGeometry":case "IcosahedronBufferGeometry":case "OctahedronGeometry":case "OctahedronBufferGeometry":case "TetrahedronGeometry":case "TetrahedronBufferGeometry":h=new Ca[g.type](g.radius,g.detail);$/;"	r
break	js/three.min.js	/^g.segments,g.phiStart,g.phiLength);break;case "PolyhedronGeometry":case "PolyhedronBufferGeometry":h=new Ca[g.type](g.vertices,g.indices,g.radius,g.details);break;case "BufferGeometry":h=d.parse(g);break;case "Geometry":h=c.parse(g,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+g.type+'"');continue}h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);b[g.uuid]=h}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new Id;d.setTextures(b);$/;"	r
break	js/three.min.js	/^k\/(2-e-f);switch(e){case b:g=(c-d)\/k+(c<d?6:0);break;case c:g=(d-b)\/k+2;break;case d:g=(b-c)\/k+4}g\/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=$/;"	r
break	js/three.min.js	/^new Ca[g.type](g.width,g.height,g.depth,g.widthSegments,g.heightSegments,g.depthSegments);break;case "CircleGeometry":case "CircleBufferGeometry":h=new Ca[g.type](g.radius,g.segments,g.thetaStart,g.thetaLength);break;case "CylinderGeometry":case "CylinderBufferGeometry":h=new Ca[g.type](g.radiusTop,g.radiusBottom,g.height,g.radialSegments,g.heightSegments,g.openEnded,g.thetaStart,g.thetaLength);break;case "ConeGeometry":case "ConeBufferGeometry":h=new Ca[g.type](g.radius,g.height,g.radialSegments,$/;"	r
break	js/three.min.js	/^new rd(e(b.geometry),f(b.material));break;case "LineSegments":g=new P(e(b.geometry),f(b.material));break;case "PointCloud":case "Points":g=new Mb(e(b.geometry),f(b.material));break;case "Sprite":g=new Bc(f(b.material));break;case "Group":g=new Ec;break;default:g=new w}g.uuid=b.uuid;void 0!==b.name&&(g.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(g.position,g.quaternion,g.scale)):(void 0!==b.position&&g.position.fromArray(b.position),void 0!==b.rotation&&g.rotation.fromArray(b.rotation),$/;"	r
break	js/three.min.js	/^p);break;default:F.vertexAttrib1fv(m,p)}}}aa.disableUnusedAttributes()}null!==l&&F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,n.buffer)}n=0;null!==l?n=l.count:void 0!==k&&(n=k.count);l=c.drawRange.start*b;k=null!==f?f.start*b:0;var J=Math.max(l,k);f=Math.max(0,Math.min(n,l+c.drawRange.count*b,k+(null!==f?f.count*b:Infinity))-1-J+1);if(0!==f){if(e.isMesh)if(!0===d.wireframe)aa.setLineWidth(d.wireframeLinewidth*(null===ka?P:1)),a.setMode(F.LINES);else switch(e.drawMode){case 0:a.setMode(F.TRIANGLES);break;case 1:a.setMode(F.TRIANGLE_STRIP);$/;"	r
break	js/three.min.js	/^shadowCameraNear:1,shadowCameraFar:1E3};break;case "HemisphereLight":c={direction:new p,skyColor:new H,groundColor:new H};break;case "RectAreaLight":c={color:new H,position:new p,halfWidth:new p,halfHeight:new p}}return a[b.id]=c}}}function ag(){var a=new $f,b={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},c=new p,d=new K,e=new K;return{setup:function(f,$/;"	r
break	js/three.min.js	/^this.dispose=function(){window.removeEventListener("vrdisplaypresentchange",b)}}function pg(a){var b={};return{get:function(c){if(void 0!==b[c])return b[c];switch(c){case "WEBGL_depth_texture":var d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");$/;"	r
break	js/three.min.js	/^url:h}}c.image=d.uuid}b||(a.textures[this.uuid]=c);return c},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(300===this.mapping){a.applyMatrix3(this.matrix);if(0>a.x||1<a.x)switch(this.wrapS){case 1E3:a.x-=Math.floor(a.x);break;case 1001:a.x=0>a.x?0:1;break;case 1002:a.x=1===Math.abs(Math.floor(a.x)%2)?Math.ceil(a.x)-a.x:a.x-Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case 1E3:a.y-=Math.floor(a.y);break;case 1001:a.y=0>a.y?0:1;break;case 1002:a.y=1===Math.abs(Math.floor(a.y)%$/;"	r
bs	js/three.js	/^			bs = bevelSize * Math.sin( t * Math.PI \/ 2 );$/;"	r
bs	js/three.js	/^		bs = bevelSize;$/;"	r
bsdfs	js/three.js	/^		bsdfs: bsdfs,$/;"	r
bsdfs	js/three.js	/^	var bsdfs = "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 \/ max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance \/ cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance \/ cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 \/ ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 \/ max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 \/ pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) \/ LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 \/ LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta \/ ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) \/ ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a \/ b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 \/ pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 \/ ( blinnExponent + 2.0 ) );\\n}\\n";$/;"	r
buffer	js/three.js	/^								response = view.buffer;$/;"	r
buffer	js/three.js	/^						var buffer = attribute.buffer;$/;"	r
buffer	js/three.js	/^					buffer, offset, originalValueOffset, 1 - weight, stride );$/;"	r
buffer	js/three.js	/^				buffer = this.buffer,$/;"	r
buffer	js/three.js	/^				buffer: buffer,$/;"	r
buffer	js/three.js	/^				interpolants[ i ].resultBuffer = binding.buffer;$/;"	r
buffer	js/three.js	/^			source.buffer = this.buffer;$/;"	r
buffer	js/three.js	/^			this.buffer = audioBuffer;$/;"	r
buffer	js/three.js	/^			var buffer = gl.createBuffer();$/;"	r
buffer	js/three.js	/^			var buffer = this.buffer,$/;"	r
buffer	js/three.js	/^		this.buffer = new bufferType( valueSize * 4 );$/;"	r
buffer	js/three.js	/^		this.buffer = null;$/;"	r
buffer	js/three.min.js	/^else{var a=this.context.createBufferSource();a.buffer=this.buffer;a.loop=this.loop;a.onended=this.onEnded.bind(this);a.playbackRate.setValueAtTime(this.playbackRate,this.startTime);this.startTime=this.context.currentTime;a.start(this.startTime,this.offset);this.isPlaying=!0;this.source=a;return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-$/;"	r
bufferAttribute	js/GLTFLoader.js	/^					var bufferAttribute = dependencies.accessors[ attributeEntry ];$/;"	r
bufferDef	js/GLTFLoader.js	/^		var bufferDef = this.json.buffers[ bufferIndex ];$/;"	r
bufferGeometry	js/three.js	/^		var bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );$/;"	r
bufferGeometryId	js/three.js	/^	var bufferGeometryId = 1; \/\/ BufferGeometry uses odd numbers as Id$/;"	r
bufferGeometryLoader	js/three.js	/^				var bufferGeometryLoader = new BufferGeometryLoader();$/;"	r
bufferRenderer	js/three.js	/^			bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );$/;"	r
bufferRenderer	js/three.js	/^			var renderer = bufferRenderer;$/;"	r
bufferType	js/three.js	/^				bufferType = Array;$/;"	r
bufferType	js/three.js	/^		var bufferType = Float64Array,$/;"	r
bufferViewDef	js/GLTFLoader.js	/^		var bufferViewDef = this.json.bufferViews[ bufferViewIndex ];$/;"	r
buffergeometry	js/three.js	/^				buffergeometry = geometry._bufferGeometry;$/;"	r
buffergeometry	js/three.js	/^				buffergeometry = geometry;$/;"	r
buffergeometry	js/three.js	/^			geometries[ geometry.id ] = buffergeometry;$/;"	r
buffergeometry	js/three.js	/^			var buffergeometry = geometries.get( object, geometry );$/;"	r
buffergeometry	js/three.js	/^			var buffergeometry = geometries[ geometry.id ];$/;"	r
buffers	js/three.js	/^			buffers: {$/;"	r
buffers	js/three.js	/^			var buffers = properties.get( object );$/;"	r
buffers	js/three.js	/^		var buffers = {};$/;"	r
buildLidFaces	js/three.js	/^		function buildLidFaces() {$/;"	r
buildNodeHierachy	js/GLTFLoader.js	/^		function buildNodeHierachy( nodeId, parentObject, allNodes ) {$/;"	r
buildPlane	js/three.js	/^		function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {$/;"	r
buildSideFaces	js/three.js	/^		function buildSideFaces() {$/;"	r
bumpMap	js/GLTFLoader.js	/^					uvScaleMap = material.bumpMap;$/;"	r
bumpMap	js/GLTFLoader.js	/^				material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;$/;"	r
bumpMap	js/GLTFLoader.js	/^				uniforms.bumpMap.value = material.bumpMap;$/;"	r
bumpMap	js/three.js	/^							json.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );$/;"	r
bumpMap	js/three.js	/^				bumpMap: !! material.bumpMap,$/;"	r
bumpMap	js/three.js	/^				data.bumpMap = this.bumpMap.toJSON( meta ).uuid;$/;"	r
bumpMap	js/three.js	/^				uniforms.bumpMap.value = material.bumpMap;$/;"	r
bumpMap	js/three.js	/^				uvScaleMap = material.bumpMap;$/;"	r
bumpMap	js/three.js	/^			bumpMap: { value: null },$/;"	r
bumpMap	js/three.js	/^		this.bumpMap = null;$/;"	r
bumpMap	js/three.js	/^		this.bumpMap = source.bumpMap;$/;"	r
bumpScale	js/GLTFLoader.js	/^				material.bumpScale = 1;$/;"	r
bumpScale	js/three.js	/^							json.bumpScale = value;$/;"	r
bumpScale	js/three.js	/^				data.bumpScale = this.bumpScale;$/;"	r
bumpScale	js/three.js	/^				uniforms.bumpScale.value = material.bumpScale;$/;"	r
bumpScale	js/three.js	/^			bumpScale: { value: 1 }$/;"	r
bumpScale	js/three.js	/^			if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;$/;"	r
bumpScale	js/three.js	/^		this.bumpScale = 1;$/;"	r
bumpScale	js/three.js	/^		this.bumpScale = source.bumpScale;$/;"	r
bumpmap	js/three.js	/^				UniformsLib.bumpmap,$/;"	r
bumpmap	js/three.js	/^		bumpmap: {$/;"	r
bumpmap_pars_fragment	js/three.js	/^		bumpmap_pars_fragment: bumpmap_pars_fragment,$/;"	r
bumpmap_pars_fragment	js/three.js	/^	var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n";$/;"	r
bumpmap_pars_fragment	js/three.min.js	/^bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n",$/;"	r
but	js/three.js	/^					\/\/ is no way to parse 'foo.bar.baz': 'baz' must be a property, but$/;"	r
bx	js/three.js	/^				bx = contour[ verts[ v ] ].x;$/;"	r
bx	js/three.js	/^			var bx = b.x, by = b.y, bz = b.z;$/;"	r
by	js/three.js	/^				by = contour[ verts[ v ] ].y;$/;"	r
byClipCacheIndex	js/three.js	/^				byClipCacheIndex = action._byClipCacheIndex;$/;"	r
byClipCacheIndex	js/three.js	/^			lastKnownAction._byClipCacheIndex = byClipCacheIndex;$/;"	r
byteLength	js/GLTFLoader.js	/^			var byteLength = bufferViewDef.byteLength || 0;$/;"	r
byteOffset	js/GLTFLoader.js	/^				var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;$/;"	r
byteOffset	js/GLTFLoader.js	/^			var byteOffset = bufferViewDef.byteOffset || 0;$/;"	r
byteStride	js/GLTFLoader.js	/^				var byteStride = json.bufferViews[ accessor.bufferView ].byteStride;$/;"	r
bytesPerElement	js/three.js	/^						var bytesPerElement = attribute.bytesPerElement;$/;"	r
bytesPerElement	js/three.js	/^				bytesPerElement: array.BYTES_PER_ELEMENT,$/;"	r
bytesPerElement	js/three.js	/^			bytesPerElement = value.bytesPerElement;$/;"	r
c	js/three.js	/^							c = i + 2;$/;"	r
c	js/three.js	/^							c = index.getX( i + 2 );$/;"	r
c	js/three.js	/^						c = layeroffset + k + slen2,$/;"	r
c	js/three.js	/^						c = verts[ w ];$/;"	r
c	js/three.js	/^						destVertexNormal.c = srcVertexNormal.c.clone();$/;"	r
c	js/three.js	/^						face.c = faces[ offset ++ ];$/;"	r
c	js/three.js	/^						faceA.c = faces[ offset + 3 ];$/;"	r
c	js/three.js	/^						faceB.c = faces[ offset + 3 ];$/;"	r
c	js/three.js	/^						var c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;$/;"	r
c	js/three.js	/^					indices.push( b, c, d );$/;"	r
c	js/three.js	/^					var c = ( radialSegments + 1 ) * j + i;$/;"	r
c	js/three.js	/^					var c = array[ i + 2 ];$/;"	r
c	js/three.js	/^					var c = i + 2;$/;"	r
c	js/three.js	/^					var c = indexArray[ y + 1 ][ x + 1 ];$/;"	r
c	js/three.js	/^					var c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );$/;"	r
c	js/three.js	/^				 c, 0, s, 0,$/;"	r
c	js/three.js	/^				array[ offset ++ ] = index.c;$/;"	r
c	js/three.js	/^				c, - s, 0, 0,$/;"	r
c	js/three.js	/^				correctUV( uvC, j + 4, c, azi );$/;"	r
c	js/three.js	/^				face.c = changes[ face.c ];$/;"	r
c	js/three.js	/^				if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );$/;"	r
c	js/three.js	/^				indices.push( b, c, d );$/;"	r
c	js/three.js	/^				var c = ( i + 1 ) * sliceCount + j + 1;$/;"	r
c	js/three.js	/^				var c = ( ix + 1 ) + gridX1 * ( iy + 1 );$/;"	r
c	js/three.js	/^				var c = ( radialSegments + 1 ) * j + i;$/;"	r
c	js/three.js	/^				var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;$/;"	r
c	js/three.js	/^				var c = base + points.length + 1;$/;"	r
c	js/three.js	/^				var c = centerIndexStart + x;$/;"	r
c	js/three.js	/^				var c = diff.lengthSq();$/;"	r
c	js/three.js	/^				var c = face[ 2 ] + indexOffset;$/;"	r
c	js/three.js	/^				var c = grid[ iy + 1 ][ ix ];$/;"	r
c	js/three.js	/^				var c = segment + thetaSegments + 2;$/;"	r
c	js/three.js	/^			this.c = source.c;$/;"	r
c	js/three.js	/^			var c = - ( far + near ) \/ ( far - near );$/;"	r
c	js/three.js	/^			var c = Math.cos( angle ), s = Math.sin( angle );$/;"	r
c	js/three.js	/^			var c = Math.cos( angle );$/;"	r
c	js/three.js	/^			var c = Math.cos( rotation );$/;"	r
c	js/three.js	/^			var c = Math.cos( theta ), s = Math.sin( theta );$/;"	r
c	js/three.js	/^			var c = Math.cos( theta );$/;"	r
c	js/three.js	/^			var c = Math.cos( y ), d = Math.sin( y );$/;"	r
c	js/three.js	/^			var c = new Vector3();$/;"	r
c	js/three.js	/^		this.c = ( c !== undefined ) ? c : new Vector3();$/;"	r
c	js/three.js	/^		this.c = c;$/;"	r
c	js/three.min.js	/^!1;break a}}}y=!0}}if(y){d.push([a[e[k]],a[e[g]],a[e[l]]]);f.push([e[k],e[g],e[l]]);k=g;for(l=g+1;l<c;k++,l++)e[k]=e[l];c--;h=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a){var b=a.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function d(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-c.x,l=e.y-c.y,m=a.x-c.x,n=a.y-c.y,q=h*k-g*l,p=h*m-g*n;if(Math.abs(q)>Number.EPSILON){if(0<$/;"	r
c	js/three.min.js	/^(a.stencilMask(d),c=d)},setFunc:function(b,c,e){if(d!==b||g!==c||h!==e)a.stencilFunc(b,c,e),d=b,g=c,h=e},setOp:function(b,c,d){if(l!==b||k!==c||n!==d)a.stencilOp(b,c,d),l=b,k=c,n=d},setLocked:function(a){b=a},setClear:function(b){q!==b&&(a.clearStencil(b),q=b)},reset:function(){b=!1;q=n=k=l=h=g=d=c=null}}},m=a.getParameter(a.MAX_VERTEX_ATTRIBS),t=new Uint8Array(m),p=new Uint8Array(m),y=new Uint8Array(m),B={},I=null,A=null,J=null,ya=null,w=null,z=null,ga=null,D=null,E=null,M=!1,C=null,H=null,N=null,$/;"	r
c	js/three.min.js	/^(h.minFilter=c(g.minFilter,jf));void 0!==g.magFilter&&(h.magFilter=c(g.magFilter,jf));void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);void 0!==g.flipY&&(h.flipY=g.flipY);d[g.uuid]=h}return d},parseObject:function(){var a=new K;return function(b,c,d){function e(a){void 0===c[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a);return c[a]}function f(a){if(void 0!==a){if(Array.isArray(a)){for(var b=[],c=0,e=a.length;c<e;c++){var f=a[c];void 0===d[f]&&console.warn("THREE.ObjectLoader: Undefined material",$/;"	r
c	js/three.min.js	/^(n*k*g-h*m*g-n*e*q+a*m*q+h*e*p-a*k*p)*b;c[12]=J*b;c[13]=(n*x*f-t*m*f+t*e*r-a*x*r-n*e*y+a*m*y)*b;c[14]=(t*k*f-h*x*f-t*e*l+a*x*l+h*e*y-a*k*y)*b;c[15]=(h*m*f-n*k*f+n*e*l-a*m*l-h*e*r+a*k*r)*b;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],$/;"	r
c	js/three.min.js	/^.4;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=[],g=[],h=[],k=[],l=new p,q=new p,n=new p,u,m;for(u=0;u<=c;u++)for(m=0;m<=d;m++){var v=m\/d*e,t=u\/c*Math.PI*2;q.x=(a+b*Math.cos(t))*Math.cos(v);q.y=(a+b*Math.cos(t))*Math.sin(v);q.z=b*Math.sin(t);g.push(q.x,q.y,q.z);l.x=a*Math.cos(v);l.y=a*Math.sin(v);n.subVectors(q,l).normalize();h.push(n.x,n.y,n.z);k.push(m\/d);k.push(u\/c)}for(u=1;u<=c;u++)for(m=1;m<=d;m++)a=(d+1)*(u-1)+m-1,b=(d+1)*(u-1)+m,e=(d+1)*u+m,f.push((d+1)*u+m-1,a,e),f.push(a,b,$/;"	r
c	js/three.min.js	/^0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new H);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new D);$/;"	r
c	js/three.min.js	/^1);c=R.clamp(c,0,1);d=R.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1\/3),this.g=a(d,c,b),this.b=a(d,c,b-1\/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=\/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)\/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=\/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d))return this.r=Math.min(255,$/;"	r
c	js/three.min.js	/^1;u<=b;u++)for(n=1;n<=d;n++){var a=(d+1)*u+(n-1),c=(d+1)*u+n,e=(d+1)*(u-1)+n;x.push((d+1)*(u-1)+(n-1),a,e);x.push(a,c,e)}})();this.setIndex(x);this.addAttribute("position",new z(m,3));this.addAttribute("normal",new z(v,3));this.addAttribute("uv",new z(t,2))}function Nc(a,b,c,d,e,f,g){L.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");$/;"	r
c	js/three.min.js	/^1]),e(A[l+1][m]))}})(d);(function(a){for(var b=new p,c=0;c<h.length;c+=3)b.x=h[c+0],b.y=h[c+1],b.z=h[c+2],b.normalize().multiplyScalar(a),h[c+0]=b.x,h[c+1]=b.y,h[c+2]=b.z})(c);(function(){for(var a=new p,b=0;b<h.length;b+=3)a.x=h[b+0],a.y=h[b+1],a.z=h[b+2],k.push(Math.atan2(a.z,-a.x)\/2\/Math.PI+.5,1-(Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))\/Math.PI+.5));for(var a=new p,b=new p,c=new p,d=new p,e=new D,f=new D,m=new D,x=0,y=0;x<h.length;x+=9,y+=6){a.set(h[x+0],h[x+1],h[x+2]);b.set(h[x+3],h[x+4],h[x+$/;"	r
c	js/three.min.js	/^1],c[d-2]).add(c[d-1]),c=Nd);if("centripetal"===this.curveType||"chordal"===this.curveType){var k="chordal"===this.curveType?.5:.25,d=Math.pow(f.distanceToSquared(g),k),e=Math.pow(g.distanceToSquared(h),k),k=Math.pow(h.distanceToSquared(c),k);1E-4>e&&(e=1);1E-4>d&&(d=e);1E-4>k&&(k=e);te.initNonuniformCatmullRom(f.x,g.x,h.x,c.x,d,e,k);ue.initNonuniformCatmullRom(f.y,g.y,h.y,c.y,d,e,k);ve.initNonuniformCatmullRom(f.z,g.z,h.z,c.z,d,e,k)}else"catmullrom"===this.curveType&&(d=void 0!==this.tension?this.tension:$/;"	r
c	js/three.min.js	/^7,7,4,0,4,1,5,2,6,3,7]);var c=new Float32Array(24),d=new C;d.setIndex(new O(a,1));d.addAttribute("position",new O(c,3));P.call(this,d,new T({color:b}));this.matrixAutoUpdate=!1;this.update()}function fd(a,b){this.type="Box3Helper";this.box=a;a=void 0!==b?b:16776960;b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var c=new C;c.setIndex(new O(b,1));c.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));P.call(this,c,new T({color:a}));this.geometry.computeBoundingSphere()}$/;"	r
c	js/three.min.js	/^Array)},c=a.getInterpolation();c!==a.DefaultInterpolation&&(b.interpolation=c)}b.type=a.ValueTypeName;return b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case "scalar":case "double":case "float":case "number":case "integer":return fc;case "vector":case "vector2":case "vector3":case "vector4":return ec;case "color":return Hd;case "quaternion":return Yc;case "bool":case "boolean":return Gd;case "string":return Fd}throw Error("Unsupported typeName: "+a);}});Object.assign(ra,{parse:function(a){for(var b=$/;"	r
c	js/three.min.js	/^Ea={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}},V={alphamap_fragment:"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n",$/;"	r
c	js/three.min.js	/^F,aa,S,X);M.info.programs=oa.programs;M.context=F;M.capabilities=X;M.extensions=ha;M.properties=Y;M.renderLists=sa;M.state=aa}function c(a){a.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");H=!0}function d(){console.log("THREE.WebGLRenderer: Context Restored.");H=!1;b()}function e(a){a=a.target;a.removeEventListener("dispose",e);f(a);Y.remove(a)}function f(a){var b=Y.get(a).program;a.program=void 0;void 0!==b&&oa.releaseProgram(b)}function g(a,b,c){a.render(function(a){M.renderBufferImmediate(a,$/;"	r
c	js/three.min.js	/^F.checkFramebufferStatus(F.FRAMEBUFFER)===F.FRAMEBUFFER_COMPLETE?0<=b&&b<=a.width-d&&0<=c&&c<=a.height-e&&F.readPixels(b,c,d,e,ra.convert(k),ra.convert(n),f):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")}finally{h&&F.bindFramebuffer(F.FRAMEBUFFER,N)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}}$/;"	r
c	js/three.min.js	/^Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.count;h<k;h++){var l=a.getX(h),q=a.getY(h),n=a.getZ(h);l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new p;return function(b,c){c=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);$/;"	r
c	js/three.min.js	/^Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a=new p,b=new p;return function(c,d){a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=$/;"	r
c	js/three.min.js	/^Oc.prototype.constructor=Oc;Vb.prototype=Object.create(C.prototype);Vb.prototype.constructor=Vb;var Ha={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g;if(0<Ha.area(a))for(g=0;g<c;g++)e[g]=g;else for(g=0;g<c;g++)e[g]=c-1-g;var h=2*c;for(g=c-1;2<c;){if(0>=h--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}var k=$/;"	r
c	js/three.min.js	/^Pa.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}()});Object.assign(Pa.prototype,{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new p,b=new p;return function(){a.subVectors(this.c,$/;"	r
c	js/three.min.js	/^V[G],g(T[0]+c,T[1]+c,T[2]+c)}else{for(G=0;G<ca;G++)T=V[G],g(T[2],T[1],T[0]);for(G=0;G<ca;G++)T=V[G],g(T[0]+Y*w,T[1]+Y*w,T[2]+Y*w)}R.addGroup(a,m.length\/3-a,void 0!==b.material?b.material:0)})();(function(){var a=m.length\/3,c=0;e(X,c);c+=X.length;N=0;for(M=P.length;N<M;N++)U=P[N],e(U,c),c+=U.length;R.addGroup(a,m.length\/3-a,void 0!==b.extrudeMaterial?b.extrudeMaterial:1)})();b.arrays||(this.setIndex(n),this.addAttribute("position",new z(m,3)),this.addAttribute("uv",new z(b.arrays.uv,2)))};Za.WorldUVGenerator=$/;"	r
c	js/three.min.js	/^[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var d=void 0===a||"string"===typeof a,e={};d&&(a={geometries:{},materials:{},textures:{},images:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var f={};f.uuid=this.uuid;f.type=this.type;""!==this.name&&(f.name=this.name);!0===this.castShadow&&(f.castShadow=!0);!0===this.receiveShadow&&(f.receiveShadow=!0);!1===this.visible&&(f.visible=!1);"{}"!==JSON.stringify(this.userData)&&(f.userData=this.userData);f.matrix=$/;"	r
c	js/three.min.js	/^[],c=0,d=a.length;c<d;c++){var e=a[c];b.push(e.x,e.y,e.z||0)}this.addAttribute("position",new z(b,3));return this},updateFromObject:function(a){var b=a.geometry;if(a.isMesh){var c=b.__directGeometry;!0===b.elementsNeedUpdate&&(c=void 0,b.elementsNeedUpdate=!1);if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=$/;"	r
c	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
c	js/three.min.js	/^[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});Object.assign(Dc.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new K;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){var a,b;var c=0;for(b=this.bones.length;c<b;c++)(a=this.bones[c])&&a.matrixWorld.getInverse(this.boneInverses[c]);c=0;for(b=this.bones.length;c<$/;"	r
c	js/three.min.js	/^[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function Qd(a){if(0===a.length)return-Infinity;for(var b=a[0],c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}function C(){Object.defineProperty(this,"id",{value:Pf+=2});this.uuid=R.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes=$/;"	r
c	js/three.min.js	/^a&&(a=!0);var b;var c=Array(this.vertices.length);var d=0;for(b=this.vertices.length;d<b;d++)c[d]=new p;if(a){var e=new p,f=new p;a=0;for(d=this.faces.length;a<d;a++){b=this.faces[a];var g=this.vertices[b.a];var h=this.vertices[b.b];var k=this.vertices[b.c];e.subVectors(k,h);f.subVectors(g,h);e.cross(f);c[b.a].add(e);c[b.b].add(e);c[b.c].add(e)}}else for(this.computeFaceNormals(),a=0,d=this.faces.length;a<d;a++)b=this.faces[a],c[b.a].add(b.normal),c[b.b].add(b.normal),c[b.c].add(b.normal);d=0;for(b=$/;"	r
c	js/three.min.js	/^a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));return b},getSpacedPoints:function(a){void 0===a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPointAt(c\/a));return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){void 0===a&&(a=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c=this.getPoint(0),d,e=0;b.push(0);for(d=1;d<=a;d++){var f=$/;"	r
c	js/three.min.js	/^a&&0<a.length){b=new Yd(b);var f=new Wc(b);f.setCrossOrigin(this.crossOrigin);b=0;for(var g=a.length;b<g;b++){var h=a[b],k=\/^(\\\/\\\/)|([a-z]+:(\\\/\\\/)?)\/i.test(h.url)?h.url:d.texturePath+h.url;e[h.uuid]=c(k)}}return e},parseTextures:function(a,b){function c(a,b){if("number"===typeof a)return a;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a);return b[a]}var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',$/;"	r
c	js/three.min.js	/^a);c=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(c=0;c<this.node.geometry.morphAttributes.position.length;c++)if(a.geometry.morphAttributes.position[c].name===$/;"	r
c	js/three.min.js	/^a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){if(0<a.normal.x){var b=a.normal.x*this.min.x;var c=a.normal.x*this.max.x}else b=a.normal.x*this.max.x,c=a.normal.x*this.min.x;0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,$/;"	r
c	js/three.min.js	/^a+" should be loaded with THREE.ObjectLoader instead.");return}if("scene"===d.toLowerCase()){console.error("THREE.JSONLoader: "+a+" should be loaded with THREE.SceneLoader instead.");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(){return function(a,b){void 0!==a.data&&(a=a.data);a.scale=void 0!==a.scale?1\/a.scale:1;var c=new L,d=a,e,f,g,h=d.faces;var k=d.vertices;var l=d.normals,m=d.colors;var n=d.scale;var u=0;if(void 0!==d.uvs){for(e=$/;"	r
c	js/three.min.js	/^a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,$/;"	r
c	js/three.min.js	/^a-k*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(k=f*h,l=f*e,q=c*h,a=c*e,b[0]=g*h,b[4]=q*d-l,b[8]=k*d+a,b[1]=g*e,b[5]=a*d+k,b[9]=l*d-q,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(k=f*g,l=f*d,q=c*g,a=c*d,b[0]=g*h,b[4]=a-k*e,b[8]=q*e+l,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=l*e+q,b[10]=k-a*e):"XZY"===a.order&&(k=f*g,l=f*d,q=c*g,a=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=k*e+a,b[5]=f*h,b[9]=l*e-q,b[2]=q*e-l,b[6]=c*h,b[10]=a*e+k);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=$/;"	r
c	js/three.min.js	/^a.ARRAY_BUFFER);c=c.morphAttributes;for(f in c)for(var d=c[f],e=0,g=d.length;e<g;e++)b.update(d[e],a.ARRAY_BUFFER)},getWireframeAttribute:function(c){var d=f[c.id];if(d)return d;d=[];var e=c.index;var g=c.attributes;if(null!==e){var q=e.array;for(var n=0,u=q.length;n<u;n+=3){var r=q[n+0];g=q[n+1];e=q[n+2];d.push(r,g,g,e,e,r)}}else for(q=g.position.array,n=0,u=q.length\/3-1;n<u;n+=3)r=n+0,g=n+1,e=n+2,d.push(r,g,g,e,e,r);d=new (65535<Qd(d)?eb:db)(d,1);b.update(d,a.ELEMENT_ARRAY_BUFFER);return f[c.id]=$/;"	r
c	js/three.min.js	/^a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},expandByObject:function(){function a(a){var f=a.geometry;if(void 0!==f)if(f.isGeometry)for(f=f.vertices,c=0,d=f.length;c<d;c++)e.copy(f[c]),$/;"	r
c	js/three.min.js	/^a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=1006),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}});Object.assign(Wc.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},0),f;c=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml",$/;"	r
c	js/three.min.js	/^a.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});vd.prototype=Object.assign(Object.create(rb.prototype),{constructor:vd,isSpotLightShadow:!0,update:function(a){var b=this.camera,c=2*R.RAD2DEG*a.angle,d=this.mapSize.width\/this.mapSize.height;a=a.distance||b.far;if(c!==b.fov||d!==b.aspect||a!==b.far)b.fov=c,b.aspect=d,b.far=a,b.updateProjectionMatrix()}});wd.prototype=Object.assign(Object.create(fa.prototype),{constructor:wd,isSpotLight:!0,copy:function(a){fa.prototype.copy.call(this,$/;"	r
c	js/three.min.js	/^a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new H(16777215));void 0===d&&(d=1);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c=2*-this.positionScreen.x,d=2*-this.positionScreen.y;$/;"	r
c	js/three.min.js	/^a.getInverse(b.projectionMatrix));return this.applyMatrix4(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x\/=a.x;this.y\/=a.y;this.z\/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=$/;"	r
c	js/three.min.js	/^a.isWebGLRenderTargetCube&&(b=b[a.activeCubeFace],c=!0),Q.copy(a.viewport),V.copy(a.scissor),T=a.scissorTest):(Q.copy(ca).multiplyScalar(P),V.copy(da).multiplyScalar(P),T=Oe);N!==b&&(F.bindFramebuffer(F.FRAMEBUFFER,b),N=b);aa.viewport(Q);aa.scissor(V);aa.setScissorTest(T);c&&(c=Y.get(a.texture),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,c.__webglTexture,a.activeMipMapLevel))};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(a&&a.isWebGLRenderTarget){var g=$/;"	r
c	js/three.min.js	/^a.lightMap&&(d.lightMap=b(a.lightMap));void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(d.aoMap=b(a.aoMap));void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity);void 0!==a.gradientMap&&(d.gradientMap=b(a.gradientMap));return d}});Object.assign(ae.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new C;var c=a.data.index;void 0!==c&&(c=new gf[c.type](c.array),$/;"	r
c	js/three.min.js	/^a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},manhattanDistanceTo:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this},setFromCylindrical:function(a){this.x=a.radius*Math.sin(a.theta);this.y=a.y;this.z=a.radius*Math.cos(a.theta);return this},setFromMatrixPosition:function(a){a=a.elements;this.x=a[12];this.y=$/;"	r
c	js/three.min.js	/^a.y,a.z)}}()});Object.assign(ie.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=b[c];return a\/b.length}});Object.assign(je.prototype,{accumulate:function(a,b){var c=this.buffer,d=this.valueSize;a=a*d+d;var e=this.cumulativeWeight;if(0===e){for(e=0;e!==d;++e)c[a+e]=c[e];e=b}else e+=b,this._mixBufferRegion(c,a,0,b\/e,d);this.cumulativeWeight=e},apply:function(a){var b=$/;"	r
c	js/three.min.js	/^a?a.length\/this.itemSize:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=$/;"	r
c	js/three.min.js	/^a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});Object.assign(Da.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new Na;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).getCenter(d);for(var e=c=0,f=b.length;e<f;e++)c=Math.max(c,$/;"	r
c	js/three.min.js	/^a||null===a)throw new TypeError("Cannot convert undefined or null to object");for(var b=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(void 0!==d&&null!==d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b}}();Object.assign(ia.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;$/;"	r
c	js/three.min.js	/^b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new be,d=new ae,e=0,f=a.length;e<f;e++){var g=a[e];switch(g.type){case "PlaneGeometry":case "PlaneBufferGeometry":var h=new Ca[g.type](g.width,g.height,g.widthSegments,g.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":h=$/;"	r
c	js/three.min.js	/^b){b\/=2;var c=Math.sin(b);this._x=a.x*c;this._y=a.y*c;this._z=a.z*c;this._w=Math.cos(b);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5\/Math.sqrt(l+1),this._w=.25\/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)\/c,this._x=.25*c,this._y=(a+e)\/c,this._z=(d+h)\/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)\/c,this._x=(a+e)\/c,this._y=$/;"	r
c	js/three.min.js	/^b+"' parameter is undefined.");else if("shading"===b)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c?!0:!1;else{var d=this[b];void 0===d?console.warn("THREE."+this.type+": '"+b+"' is not a property of this material."):d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]="overdraw"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=$/;"	r
c	js/three.min.js	/^b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length\/3-1)}var d=new C,e=new T({color:16777215,vertexColors:1}),f=[],g=[],h={},k=new H(16755200),l=new H(16711680),q=new H(43775),n=new H(16777215),u=new H(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",l);b("p","n2",l);b("p","n3",l);b("p","n4",$/;"	r
c	js/three.min.js	/^b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(a.fragDepth||b.logarithmicDepthBuffer)&&c.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",a.drawBuffers&&c.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(a.shaderTextureLOD||b.envMap)&&c.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ac).join("\\n")}function gg(a){var b=[],c;for(c in a){var d=a[c];!1!==d&&b.push("#define "+$/;"	r
c	js/three.min.js	/^b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Sf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Tf(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,k){var l=a[b];void 0===l?(l={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:k},a[b]=l):(l.id=e.id,l.object=e,l.geometry=f,l.material=g,l.program=g.program,l.renderOrder=e.renderOrder,$/;"	r
c	js/three.min.js	/^b;return f},setFromPoints:function(a){this.vertices=[];for(var b=0,c=a.length;b<c;b++){var d=a[b];this.vertices.push(new p(d.x,d.y,d.z||0))}return this},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);$/;"	r
c	js/three.min.js	/^b=0;for(var e=a.length;b<e;b++){var f=a[b];if("MultiMaterial"===f.type){for(var g=[],h=0;h<f.materials.length;h++)g.push(d.parse(f.materials[h]));c[f.uuid]=g}else c[f.uuid]=d.parse(f)}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=ra.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemEnd(a);d.manager.itemError(a)})}var d=this,e={};if(void 0!==$/;"	r
c	js/three.min.js	/^b=3*c.faces.length:c&&c.isBufferGeometry&&(b=c.attributes.normal.count);c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function kc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new C;b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var c=0,d=1;32>c;c++,d++){var e=c\/32*Math.PI*2,f=d\/32*Math.PI*2;b.push(Math.cos(e),$/;"	r
c	js/three.min.js	/^b?b:new p;this.c=void 0!==c?c:new p}function qa(a,b){w.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new va({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Qf(a,b,c,d){function e(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d)}var f=new H(0),g=0,h,k,l;return{getClearColor:function(){return f},setClearColor:function(a,b){f.set(a);g=void 0!==b?b:1;e(f,g)},getClearAlpha:function(){return g},setClearAlpha:function(a){g=a;e(f,$/;"	r
c	js/three.min.js	/^b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new p);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new ba);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;$/;"	r
c	js/three.min.js	/^b[l]);l=0;for(g=k.length;l<g;l++){var m=k[l].x+":"+k[l].y;void 0!==h[m]&&console.warn("THREE.ShapeUtils: Duplicate point",m,l);h[m]=l}l=function(a,b){function c(a,b){var c=h.length-1,d=a-1;0>d&&(d=c);var e=a+1;e>c&&(e=0);c=f(h[a],h[d],h[e],C[b]);if(!c)return!1;c=C.length-1;d=b-1;0>d&&(d=c);e=b+1;e>c&&(e=0);return(c=f(C[b],C[d],C[e],h[a]))?!0:!1}function d(a,b){var c;for(c=0;c<h.length;c++){var d=c+1;d%=h.length;d=e(a,b,h[c],h[d],!0);if(0<d.length)return!0}return!1}function g(a,c){var d,f;for(d=0;d<$/;"	r
c	js/three.min.js	/^c,d);this.applyMatrix(a);return this}}(),scale:function(){var a=new K;return function(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a=new w;return function(b){a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a.isPoints||a.isLine){a=new z(3*b.vertices.length,3);var c=new z(3*b.colors.length,$/;"	r
c	js/three.min.js	/^c,d)};this.dispose=function(){t.removeEventListener("webglcontextlost",c,!1);t.removeEventListener("webglcontextrestored",d,!1);sa.dispose();la.dispose()};this.renderBufferImmediate=function(a,b,c){aa.initAttributes();var d=Y.get(a);a.hasPositions&&!d.position&&(d.position=F.createBuffer());a.hasNormals&&!d.normal&&(d.normal=F.createBuffer());a.hasUvs&&!d.uv&&(d.uv=F.createBuffer());a.hasColors&&!d.color&&(d.color=F.createBuffer());b=b.getAttributes();a.hasPositions&&(F.bindBuffer(F.ARRAY_BUFFER,$/;"	r
c	js/three.min.js	/^c;++n){var I=n\/c*e*Math.PI*2;g(I,e,f,a,v);g(I+.01,e,f,a,t);y.subVectors(t,v);B.addVectors(t,v);x.crossVectors(y,B);B.crossVectors(x,y);x.normalize();B.normalize();for(I=0;I<=d;++I){var A=I\/d*Math.PI*2,J=-b*Math.cos(A),A=b*Math.sin(A);u.x=v.x+(J*B.x+A*x.x);u.y=v.y+(J*B.y+A*x.y);u.z=v.z+(J*B.z+A*x.z);k.push(u.x,u.y,u.z);m.subVectors(u,v).normalize();l.push(m.x,m.y,m.z);q.push(n\/c);q.push(I\/d)}}for(I=1;I<=c;I++)for(n=1;n<=d;n++)a=(d+1)*I+(n-1),b=(d+1)*I+n,e=(d+1)*(I-1)+n,h.push((d+1)*(I-1)+(n-1),a,e),$/;"	r
c	js/three.min.js	/^c;for(var n=c.cameras,u=0,r=n.length;u<r;u++){var m=n[u];if(h.layers.test(m.layers)){var v=m.bounds;aa.viewport(Q.set(v.x*W,v.y*ea,v.z*W,v.w*ea).multiplyScalar(P));q(h,b,m,l,k,g)}}}else Z=null,q(h,b,c,l,k,g)}}function q(a,b,c,d,e,f){a.onBeforeRender(M,b,c,d,e,f);a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld);a.normalMatrix.getNormalMatrix(a.modelViewMatrix);if(a.isImmediateRenderObject){aa.setMaterial(e);var h=u(c,b.fog,e,a);L="";g(a,h,e)}else M.renderBufferDirect(c,b.fog,$/;"	r
c	js/three.min.js	/^c;h.push(n)}a=0;for(r=q.length;a<r;a++)if(c=q[a],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a)},mergeMesh:function(a){a&&a.isMesh?(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a)},mergeVertices:function(){var a={},b=[],c=[],d=Math.pow(10,4),e;var f=0;for(e=this.vertices.length;f<$/;"	r
c	js/three.min.js	/^c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=R.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],q=e[2],n=e[6],e=e[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=$/;"	r
c	js/three.min.js	/^c=0,d=b.length;c!==d;++c){var e=b[c];0===--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},$/;"	r
c	js/three.min.js	/^c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var a=new K;return function(b){a.makeRotationX(b);this.applyMatrix(a);$/;"	r
c	js/three.min.js	/^c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],q=c[8],n=c[9],m=c[10],r=c[11],p=c[12],t=c[13],x=c[14],c=c[15];b[0].setComponents(f-a,l-g,r-q,c-p).normalize();b[1].setComponents(f+a,l+g,r+q,c+p).normalize();b[2].setComponents(f+d,l+h,r+n,c+t).normalize();b[3].setComponents(f-d,l-h,r-n,c-t).normalize();b[4].setComponents(f-e,l-k,r-m,c-x).normalize();b[5].setComponents(f+e,l+k,r+m,c+x).normalize();return this},intersectsObject:function(){var a=new Da;return function(b){var c=$/;"	r
c	js/three.min.js	/^c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}});Object.assign(pa,{Composite:Ve,create:function(a,b,c){return a&&a.isAnimationObjectGroup?new pa.Composite(a,b,c):new pa(a,b,c)},sanitizeNodeName:function(a){return a.replace(\/\\s\/g,"_").replace(\/[^\\w-]\/g,"")},parseTrackName:function(){var a=new RegExp("^"+\/((?:[\\w-]+[\\\/:])*)\/.source+\/([\\w-\\.]+)?\/.source+\/(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?\/.source+\/\\.([\\w-]+)(?:\\[(.+)\\])?\/.source+$/;"	r
c	js/three.min.js	/^case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length\/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},scale:function(a){if(1!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,$/;"	r
c	js/three.min.js	/^createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getSpacedPoints(a);return this.createGeometry(a)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var b=new L,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new p(e.x,e.y,e.z||0))}return b}});ef.prototype=$/;"	r
c	js/three.min.js	/^d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.copy(this);c=1\/g;var f=1\/h,l=1\/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makePerspective:function(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");$/;"	r
c	js/three.min.js	/^d,e,a,f);a.onAfterRender(M,b,c,d,e,f)}function n(a,b,c){var d=Y.get(a);c=oa.getParameters(a,ua.state,z,b,Fa.numPlanes,Fa.numIntersection,c);var g=oa.getProgramCode(a,c),h=d.program,l=!0;if(void 0===h)a.addEventListener("dispose",e);else if(h.code!==g)f(a);else{if(void 0!==c.shaderID)return;l=!1}l&&(c.shaderID?(h=ib[c.shaderID],d.shader={name:a.type,uniforms:Ea.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}):d.shader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,$/;"	r
c	js/three.min.js	/^d[2].copy(c.normal)):(d[0]=c.normal.clone(),d[1]=c.normal.clone(),d[2]=c.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b;var c=0;for(b=this.faces.length;c<b;c++){var d=this.faces[c];d.__originalFaceNormal?d.__originalFaceNormal.copy(d.normal):d.__originalFaceNormal=d.normal.clone();d.__originalVertexNormals||(d.__originalVertexNormals=[]);var e=0;for(a=d.vertexNormals.length;e<a;e++)d.__originalVertexNormals[e]?d.__originalVertexNormals[e].copy(d.vertexNormals[e]):$/;"	r
c	js/three.min.js	/^e);e[c]=a;a._cacheIndex=f.length;f.push(a)},_removeInactiveBinding:function(a){var b=this._bindings,c=a.binding,d=c.rootNode.uuid,c=c.path,e=this._bindingsByRootAndName,f=e[d],g=b[b.length-1];a=a._cacheIndex;g._cacheIndex=a;b[a]=g;b.pop();delete f[c];a:{for(var h in f)break a;delete e[d]}},_lendBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackBinding:function(a){var b=this._bindings,c=a._cacheIndex,d=$/;"	r
c	js/three.min.js	/^e){e=c;break}}else{if(!a.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(c=0;c<this.node.geometry.morphTargets.length;c++)if(a.geometry.morphTargets[c].name===e){e=c;break}}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):Array.isArray(f)?(c=this.BindingType.EntireArray,$/;"	r
c	js/three.min.js	/^e,c=e.x):(b=e,q=e.x,l=c,c=c.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),c.y<e.y?(b=c,q=c.y,l=e,c=e.y):(b=e,q=e.y,l=c,c=c.y));return k<=q?a<q?[]:a===q?f?[]:[b]:a<=c?[b,h]:[b,l]:k>c?[]:k===c?f?[]:[g]:a<=c?[g,h]:[g,l]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}c(a);b.forEach(c);var g,h={},k=a.concat();var l=0;for(g=b.length;l<g;l++)Array.prototype.push.apply(k,$/;"	r
c	js/three.min.js	/^e[d],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];S.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var m=0;m<k[l].morphTargets.length;m++)f[k[l].morphTargets[m]]=$/;"	r
c	js/three.min.js	/^e[k-1].clone(),f[k]=f[k-1].clone(),g.crossVectors(d[k-1],d[k]),g.length()>Number.EPSILON&&(g.normalize(),c=Math.acos(R.clamp(d[k-1].dot(d[k]),-1,1)),e[k].applyMatrix4(h.makeRotationAxis(g,c))),f[k].crossVectors(d[k],e[k]);if(!0===b)for(c=Math.acos(R.clamp(e[0].dot(e[a]),-1,1)),c\/=a,0<d[0].dot(g.crossVectors(e[0],e[a]))&&(c=-c),k=1;k<=a;k++)e[k].applyMatrix4(h.makeRotationAxis(d[k],c*k)),f[k].crossVectors(d[k],e[k]);return{tangents:d,normals:e,binormals:f}}});Ma.prototype=Object.create(ca.prototype);$/;"	r
c	js/three.min.js	/^else{if(void 0===c.__webglInit)break a;a.deleteTexture(c.__webglTexture)}d.remove(b)}g.textures--}function u(b){b=b.target;b.removeEventListener("dispose",u);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==e.__webglTexture&&a.deleteTexture(e.__webglTexture);b.depthTexture&&b.depthTexture.dispose();if(b.isWebGLRenderTargetCube)for(e=0;6>e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),$/;"	r
c	js/three.min.js	/^f instanceof Uint16Array?d=a.UNSIGNED_SHORT:f instanceof Int16Array?d=a.SHORT:f instanceof Uint32Array?d=a.UNSIGNED_INT:f instanceof Int32Array?d=a.INT:f instanceof Int8Array?d=a.BYTE:f instanceof Uint8Array&&(d=a.UNSIGNED_BYTE);b[e]={buffer:h,type:d,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}else e.version<c.version&&(f=c,h=f.array,g=f.updateRange,a.bindBuffer(d,e.buffer),!1===f.dynamic?a.bufferData(d,h,a.STATIC_DRAW):-1===g.count?a.bufferSubData(d,0,h):0===g.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):$/;"	r
c	js/three.min.js	/^f.actionByRoot[c]=a},_removeInactiveAction:function(a){var b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d;b[d]=c;b.pop();a._cacheIndex=null;var b=a._clip.uuid,c=this._actionsByClip,d=c[b],e=d.knownActions,f=e[e.length-1],g=a._byClipCacheIndex;f._byClipCacheIndex=g;e[g]=f;e.pop();a._byClipCacheIndex=null;delete d.actionByRoot[(a._localRoot||this._root).uuid];0===e.length&&delete c[b];this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){a=a._propertyBindings;$/;"	r
c	js/three.min.js	/^f.computeVertexNormals();c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(d.normal),k.a.copy(d.vertexNormals[0]),k.b.copy(d.vertexNormals[1]),k.c.copy(d.vertexNormals[2])}c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],d.normal=d.__originalFaceNormal,d.vertexNormals=d.__originalVertexNormals},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===$/;"	r
c	js/three.min.js	/^f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}});Object.assign(Xe.prototype,{play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},$/;"	r
c	js/three.min.js	/^for(var b=0,c=a.length;b!==c;++b){var d=a[b];0===--d.referenceCount&&this._removeInactiveBinding(d)}},_lendAction:function(a){var b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_takeBackAction:function(a){var b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_addInactiveBinding:function(a,b,c){var d=this._bindingsByRootAndName,e=d[b],f=this._bindings;void 0===e&&(e={},d[b]=$/;"	r
c	js/three.min.js	/^fragmentShader:a.fragmentShader},a.onBeforeCompile(d.shader),h=oa.acquireProgram(a,d.shader,c,g),d.program=h,a.program=h);c=h.getAttributes();if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<M.maxMorphTargets;g++)0<=c["morphTarget"+g]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(g=a.numSupportedMorphNormals=0;g<M.maxMorphNormals;g++)0<=c["morphNormal"+g]&&a.numSupportedMorphNormals++;c=d.shader.uniforms;if(!a.isShaderMaterial&&!a.isRawShaderMaterial||!0===a.clipping)d.numClippingPlanes=$/;"	r
c	js/three.min.js	/^function k(b){0!==b?(e(a.CULL_FACE),b!==H&&(1===b?a.cullFace(a.BACK):2===b?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):f(a.CULL_FACE);H=b}function l(b,c,d){if(b){if(e(a.POLYGON_OFFSET_FILL),U!==c||K!==d)a.polygonOffset(c,d),U=c,K=d}else f(a.POLYGON_OFFSET_FILL)}function q(b){void 0===b&&(b=a.TEXTURE0+L-1);R!==b&&(a.activeTexture(b),R=b)}var n=new function(){var b=!1,c=new ba,d=null,e=new ba(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},$/;"	r
c	js/three.min.js	/^function(){var c=0<a.search(\/\\.(jpg|jpeg)$\/)||0===a.search(\/^data\\:image\\\/jpeg\/);f.format=c?1022:1023;f.needsUpdate=!0;void 0!==b&&b(f)},c,d);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});fa.prototype=Object.assign(Object.create(w.prototype),{constructor:fa,isLight:!0,copy:function(a){w.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=w.prototype.toJSON.call(this,$/;"	r
c	js/three.min.js	/^function(a,c,d,e){a="";for(c=parseInt(c);c<parseInt(d);c++)a+=e.replace(\/\\[ i \\]\/g,"[ "+c+" ]");return a})}function hg(a,b,c,d,e,f){var g=a.context,h=d.defines,k=e.vertexShader,l=e.fragmentShader,q="SHADOWMAP_TYPE_BASIC";1===f.shadowMapType?q="SHADOWMAP_TYPE_PCF":2===f.shadowMapType&&(q="SHADOWMAP_TYPE_PCF_SOFT");var n="ENVMAP_TYPE_CUBE",u="ENVMAP_MODE_REFLECTION",r="ENVMAP_BLENDING_MULTIPLY";if(f.envMap){switch(d.envMap.mapping){case 301:case 302:n="ENVMAP_TYPE_CUBE";break;case 306:case 307:n="ENVMAP_TYPE_CUBE_UV";$/;"	r
c	js/three.min.js	/^g,h){this.absellipse(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){a=new Sa(a,b,c,d,e,f,g,h);0<this.curves.length&&(b=a.getPoint(0),b.equals(this.currentPoint)||this.lineTo(b.x,b.y));this.curves.push(a);a=a.getPoint(1);this.currentPoint.copy(a)}});Zc.prototype=se;se.constructor=Zc;zb.prototype=Object.assign(Object.create(se),{constructor:zb,getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},$/;"	r
c	js/three.min.js	/^g,m)}f[h]=n;a[h].resultBuffer=n.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=a._propertyBindings,$/;"	r
c	js/three.min.js	/^g.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=g.getActiveAttrib(p,c).name;a[d]=g.getAttribLocation(p,d)}I=a}return I};this.destroy=function(){g.deleteProgram(p);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=ig++;this.code=c;this.usedTimes=1;$/;"	r
c	js/three.min.js	/^getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,$/;"	r
c	js/three.min.js	/^h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){C.call(this);this.type="WireframeGeometry";var b=[],c,d,e,f=[0,0],g={},h=["a","b","c"];if(a&&a.isGeometry){var k=a.faces;var l=0;for(d=k.length;l<d;l++){var q=k[l];for(c=0;3>c;c++){var n=q[h[c]];var u=q[h[(c+1)%3]];f[0]=Math.min(n,u);f[1]=Math.max(n,u);n=f[0]+","+f[1];void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]})}}for(n in g)l=g[n],h=a.vertices[l.index1],b.push(h.x,h.y,h.z),h=a.vertices[l.index2],b.push(h.x,h.y,h.z)}else if(a&&a.isBufferGeometry){var h=$/;"	r
c	js/three.min.js	/^l.z=h,l.group=k);(!0===g.transparent?d:c).push(l);b++},sort:function(){1<c.length&&c.sort(Rf);1<d.length&&d.sort(Sf)}}}function Uf(){var a={};return{get:function(b,c){b=b.id+","+c.id;c=a[b];void 0===c&&(c=new Tf,a[b]=c);return c},dispose:function(){a={}}}}function Vf(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Wf(a){var b={},c=new Float32Array(8);return{update:function(d,e,f,g){var h=d.morphTargetInfluences,k=h.length;d=b[e.id];if(void 0===d){d=[];for(var l=0;l<k;l++)d[l]=[l,0];b[e.id]=d}var q=$/;"	r
c	js/three.min.js	/^memory:Vd,programs:null};try{y={alpha:y,depth:B,stencil:I,antialias:A,premultipliedAlpha:J,preserveDrawingBuffer:w};var F=x||t.getContext("webgl",y)||t.getContext("experimental-webgl",y);if(null===F){if(null!==t.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context.";}void 0===F.getShaderPrecisionFormat&&(F.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});t.addEventListener("webglcontextlost",c,!1);$/;"	r
c	js/three.min.js	/^n[l];n[l]=n[m];n[m]=p}}}this.nCachedObjects_=b},uncache:function(){for(var a,b,c=this._objects,d=c.length,e=this.nCachedObjects_,f=this._indicesByUUID,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){b=arguments[k].uuid;var m=f[b];if(void 0!==m)if(delete f[b],m<e){var n=--e,p=c[n];b=--d;a=c[b];f[p.uuid]=m;c[m]=p;f[a.uuid]=n;c[n]=a;c.pop();for(var p=0,r=h;p!==r;++p){a=g[p];var v=a[b];a[m]=a[n];a[n]=v;a.pop()}}else for(b=--d,a=c[b],f[a.uuid]=m,c[m]=a,c.pop(),p=0,r=h;p!==r;++p)a=g[p],a[m]=$/;"	r
c	js/three.min.js	/^new z(b.arrays.position,3));this.addAttribute("uv",new z(b.arrays.uv,2))};Ga.prototype.addShape=function(a,b){function c(a,b,c){b||console.error("THREE.ExtrudeGeometry: vec does not exist");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=a.x-b.x;var e=a.y-b.y;var f=c.x-a.x;var g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)>Number.EPSILON){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e\/k;b=b.y+d\/k;g=((c.x-g\/l-h)*g-(c.y+f\/l-b)*f)\/(d*g-e*f);f=h+d*g-a.x;d=b+e*g-a.y;e=f*f+d*d;if(2>=e)return new D(f,$/;"	r
c	js/three.min.js	/^new z(d,3));c.addAttribute("color",new z(e,3));d=new T({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});P.call(this,c,d);this.root=a;this.bones=b;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1}function mc(a,b,c){this.light=a;this.light.updateMatrixWorld();this.color=c;a=new kb(b,4,2);b=new va({wireframe:!0,fog:!1});qa.call(this,a,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function nc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=$/;"	r
c	js/three.min.js	/^p=(c-b)\/(d-b);c=p*p;d=c*p;b=-m*d+2*m*c-m*p;m=(1+m)*d+(-1.5-2*m)*c+(-.5+m)*p+1;p=(-1-n)*d+(1.5+n)*c+.5*p;n=n*d-n*c;for(c=0;c!==g;++c)e[c]=b*f[k+c]+m*f[h+c]+p*f[a+c]+n*f[l+c];return e}});Xc.prototype=Object.assign(Object.create(xa.prototype),{constructor:Xc,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)\/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});Dd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Dd,$/;"	r
c	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
c	js/three.min.js	/^return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new p,b=new p;return function(c){c=c||new X;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new X;return function(b){b=b||new Xa;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new p,b=new X;return function(c){c=c||new p;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),$/;"	r
c	js/three.min.js	/^return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a=new X;return function(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1\/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*$/;"	r
c	js/three.min.js	/^return this.setFromRotationMatrix(a,c,d)}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new X;return function(b){a.setFromEuler(this);return this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===$/;"	r
c	js/three.min.js	/^return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x\/=a.x;this.y\/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},applyMatrix3:function(a){var b=this.x,c=this.y;a=a.elements;this.x=a[0]*b+a[3]*c+a[6];this.y=a[1]*b+a[4]*c+a[7];return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=$/;"	r
c	js/three.min.js	/^return this},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;a=Math.sqrt(1-g*g);if(.001>Math.abs(a))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var h=Math.atan2(a,g),g=Math.sin((1-b)*h)\/a;b=Math.sin(b*h)\/a;$/;"	r
c	js/three.min.js	/^return this},toJSON:function(a){var b=void 0===a||"string"===typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];var c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};$/;"	r
c	js/three.min.js	/^return this}}(),rotateY:function(){var a=new K;return function(b){a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a=new K;return function(b){a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a=new K;return function(b,c,d){a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a=new K;return function(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a=new w;return function(b){a.lookAt(b);$/;"	r
c	js/three.min.js	/^splineThru:function(a){this.currentPath.splineThru(a)},toShapes:function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new zb;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(Math.abs(l)>Number.EPSILON){if(0>l&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=$/;"	r
c	js/three.min.js	/^this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(){var a=new K;return function(b){a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a=new K;return function(b){a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a=new K;return function(b){a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a=new K;return function(b,c,d){a.makeTranslation(b,$/;"	r
c	js/three.min.js	/^this.elements,c=a._x,d=a._y,e=a._z,f=a._w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,q=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(q+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new p,b=new p,c=new p;return function(d,e,f){var g=this.elements;c.subVectors(d,e);0===c.lengthSq()&&(c.z=1);c.normalize();a.crossVectors(f,c);0===a.lengthSq()&&(1===Math.abs(f.z)?c.x+=1E-4:c.z+=1E-4,$/;"	r
c	js/three.min.js	/^this.geometry.skinWeights[a];var c=1\/b.manhattanLength();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var b=new ba,d=this.geometry.attributes.skinWeight;for(a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),b.z=d.getZ(a),b.w=d.getW(a),c=1\/b.manhattanLength(),Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)}},updateMatrixWorld:function(a){qa.prototype.updateMatrixWorld.call(this,a);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):$/;"	r
c	js/three.min.js	/^this.getPoint(d\/a);e+=f.distanceTo(c);b.push(e);c=f}return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=c.length;b=b?b:a*c[d-1];for(var e=0,f=d-1,g;e<=f;)if(a=Math.floor(e+(f-e)\/2),g=c[a]-b,0>g)e=a+1;else if(0<g)f=a-1;else{f=a;break}a=f;if(c[a]===b)return a\/(d-1);e=c[a];return(a+(b-e)\/(c[a+1]-e))\/(d-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},$/;"	r
c	js/three.min.js	/^this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},toJSON:function(a){function b(b,c){void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a));return c.uuid}function c(a){var b=$/;"	r
c	js/three.min.js	/^this.start);b.subVectors(this.end,this.start);c=b.dot(b);c=b.dot(a)\/c;d&&(c=R.clamp(c,0,1));return c}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new p;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}});Object.assign(Pa,{normal:function(){var a=new p;return function(b,c,d,e){e=e||new p;$/;"	r
c	js/three.min.js	/^this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);break}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=$/;"	r
c	js/three.min.js	/^translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}});Object.assign(ld.prototype,{set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,$/;"	r
c	js/three.min.js	/^typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};gc.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};Object.assign(gc.prototype,{crossOrigin:void 0,extractUrlBase:function(a){a=a.split("\/");if(1===a.length)return".\/";a.pop();$/;"	r
c	js/three.min.js	/^updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d\/g,b=b-f.offsetY*c\/h,d=f.width\/g*d,c=f.height\/h*c;f=this.filmOffset;0!==f&&(e+=a*f\/this.getFilmWidth());this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=$/;"	r
c	js/three.min.js	/^var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){void 0!==this._listeners&&(a=this._listeners[a],void 0!==a&&(b=a.indexOf(b),-1!==b&&a.splice(b,1)))},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var b=b.slice(0),c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}});var R={DEG2RAD:Math.PI\/180,RAD2DEG:180\/Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),$/;"	r
c	js/three.min.js	/^var c=this.light.distance?this.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}();lc.prototype=Object.create(P.prototype);lc.prototype.constructor=lc;lc.prototype.updateMatrixWorld=function(){var a=new p,b=new K,c=new K;return function(d){var e=$/;"	r
c	js/three.min.js	/^var e=new td;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadTextureCube:function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var e=new $d;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};$/;"	r
c0	js/three.js	/^			c0 = x0;$/;"	r
c0	js/three.js	/^		var c0 = 0, c1 = 0, c2 = 0, c3 = 0;$/;"	r
c1	js/three.js	/^			c1 = t0;$/;"	r
c1	js/three.js	/^			var c1 = cos( x \/ 2 );$/;"	r
c2	js/three.js	/^			c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;$/;"	r
c2	js/three.js	/^			var c2 = cos( y \/ 2 );$/;"	r
c3	js/three.js	/^			c3 = 2 * x0 - 2 * x1 + t0 + t1;$/;"	r
c3	js/three.js	/^			var c3 = cos( z \/ 2 );$/;"	r
cCROSSap	js/three.js	/^					cCROSSap = cX * apy - cY * apx;$/;"	r
cCROSSap	js/three.js	/^				var cCROSSap, bCROSScp, aCROSSbp;$/;"	r
cX	js/three.js	/^				cX = bx - ax; cY = by - ay;$/;"	r
c_x	js/three.js	/^			var c_x = vertices[ indexC * 3 ];$/;"	r
c_y	js/three.js	/^			var c_y = vertices[ indexC * 3 + 1 ];$/;"	r
c_z	js/three.js	/^			var c_z = vertices[ indexC * 3 + 2 ];$/;"	r
cache	js/GLTFLoader.js	/^		this.cache = new GLTFRegistry();$/;"	r
cache	js/three.js	/^			this.cacheArcLengths = cache;$/;"	r
cache	js/three.js	/^			var cache = [];$/;"	r
cache	js/three.js	/^		var cache = new UniformsCache();$/;"	r
cacheArcLengths	js/three.js	/^			this.cacheArcLengths = cache;$/;"	r
cacheIndex	js/three.js	/^					lastInactiveAction._cacheIndex = cacheIndex;$/;"	r
cacheIndex	js/three.js	/^					var cacheIndex = action._cacheIndex,$/;"	r
cacheIndex	js/three.js	/^				cacheIndex = action._cacheIndex;$/;"	r
cacheIndex	js/three.js	/^				cacheIndex = binding._cacheIndex;$/;"	r
cacheIndex	js/three.js	/^			lastInactiveAction._cacheIndex = cacheIndex;$/;"	r
cacheIndex	js/three.js	/^			lastInactiveBinding._cacheIndex = cacheIndex;$/;"	r
cacheKey	js/GLTFLoader.js	/^		var cacheKey = type + ':' + index;$/;"	r
cacheLengths	js/three.js	/^			this.cacheLengths = lengths;$/;"	r
cacheLengths	js/three.js	/^			this.cacheLengths = null;$/;"	r
cached	js/GLTFLoader.js	/^				_dependencies[ dependency ] = cached;$/;"	r
cached	js/GLTFLoader.js	/^			var cached = this.cache.get( dependency );$/;"	r
cached	js/three.js	/^			var cached = Cache.get( url );$/;"	r
cachedAttributes	js/three.js	/^				cachedAttributes = fetchAttributeLocations( gl, program );$/;"	r
cachedAttributes	js/three.js	/^		var cachedAttributes;$/;"	r
cachedMaterial	js/three.js	/^					cachedMaterial = result.clone();$/;"	r
cachedMaterial	js/three.js	/^					materialsForVariant[ keyB ] = cachedMaterial;$/;"	r
cachedMaterial	js/three.js	/^				result = cachedMaterial;$/;"	r
cachedMaterial	js/three.js	/^				var cachedMaterial = materialsForVariant[ keyB ];$/;"	r
cachedUniforms	js/three.js	/^				cachedUniforms = new WebGLUniforms( gl, program, renderer );$/;"	r
cachedUniforms	js/three.js	/^		var cachedUniforms;$/;"	r
cadetblue	js/three.min.js	/^cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,$/;"	r
calc	js/three.js	/^			calc: function ( t ) {$/;"	r
calculateInverses	js/three.js	/^		calculateInverses: function () {$/;"	r
calculatePositionOnCurve	js/three.js	/^		function calculatePositionOnCurve( u, p, q, radius, position ) {$/;"	r
callback	js/GLTFLoader.js	/^	function _each( object, callback, thisObj ) {$/;"	r
callback	js/three.js	/^							var callback = callbacks[ i ];$/;"	r
callback	js/three.js	/^						var callback = callbacks[ i ];$/;"	r
callback	js/three.js	/^			onAnimationFrame = callback;$/;"	r
callback	js/three.js	/^			this.onChangeCallback = callback;$/;"	r
callback	js/three.js	/^			this.onUploadCallback = callback;$/;"	r
callbacks	js/three.js	/^					var callbacks = loading[ url ];$/;"	r
calls	js/three.js	/^				calls: 0,$/;"	r
calls	js/three.js	/^			_infoRender.calls = 0;$/;"	r
camera	js/GLTFLoader.js	/^			camera = new THREE.OrthographicCamera( params.xmag \/ -2, params.xmag \/ 2, params.ymag \/ 2, params.ymag \/ -2, params.znear, params.zfar );$/;"	r
camera	js/GLTFLoader.js	/^			camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, params.znear || 1, params.zfar || 2e6 );$/;"	r
camera	js/GLTFLoader.js	/^		var camera;$/;"	r
camera	js/three.js	/^						camera === _currentCamera &&$/;"	r
camera	js/three.js	/^						camera, materialProperties, useCache );$/;"	r
camera	js/three.js	/^					_currentArrayCamera = camera;$/;"	r
camera	js/three.js	/^					renderObject( scene, camera, shadowCamera, isPointLight );$/;"	r
camera	js/three.js	/^				camera = vr.getCamera( camera );$/;"	r
camera	js/three.js	/^				dstArray = projectPlanes( planes, camera, lGlobal, fromCache );$/;"	r
camera	js/three.js	/^				projectObject( children[ i ], camera, sortObjects );$/;"	r
camera	js/three.js	/^				renderObject( children[ i ], camera, shadowCamera, isPointLight );$/;"	r
camera	js/three.js	/^				var shadowCamera = shadow.camera;$/;"	r
camera	js/three.js	/^			globalState = projectPlanes( planes, camera, 0 );$/;"	r
camera	js/three.js	/^			object.camera = this.camera.toJSON( false ).object;$/;"	r
camera	js/three.js	/^			projectObject( scene, camera, _this.sortObjects );$/;"	r
camera	js/three.js	/^			this.camera = source.camera.clone();$/;"	r
camera	js/three.js	/^			var camera = this.camera;$/;"	r
camera	js/three.js	/^		function projectObject( object, camera, sortObjects ) {$/;"	r
camera	js/three.js	/^		function projectPlanes( planes, camera, dstOffset, skipTransform ) {$/;"	r
camera	js/three.js	/^		function renderObject( object, camera, shadowCamera, isPointLight ) {$/;"	r
camera	js/three.js	/^		this.camera = camera;$/;"	r
camera	js/three.js	/^		this.render = function ( scene, camera, renderTarget, forceClear ) {$/;"	r
camera	js/three.js	/^		var camera = new Camera();$/;"	r
camera	js/three.min.js	/^a.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});vd.prototype=Object.assign(Object.create(rb.prototype),{constructor:vd,isSpotLightShadow:!0,update:function(a){var b=this.camera,c=2*R.RAD2DEG*a.angle,d=this.mapSize.width\/this.mapSize.height;a=a.distance||b.far;if(c!==b.fov||d!==b.aspect||a!==b.far)b.fov=c,b.aspect=d,b.far=a,b.updateProjectionMatrix()}});wd.prototype=Object.assign(Object.create(fa.prototype),{constructor:wd,isSpotLight:!0,copy:function(a){fa.prototype.copy.call(this,$/;"	r
camera	js/three.min.js	/^l);b("u1","u2",q);b("u2","u3",q);b("u3","u1",q);b("c","t",n);b("p","c",u);b("cn1","cn2",u);b("cn3","cn4",u);b("cf1","cf2",u);b("cf3","cf4",u);d.addAttribute("position",new z(f,3));d.addAttribute("color",new z(g,3));P.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=h;this.update()}function Ab(a,b){this.object=a;void 0===b&&(b=16776960);a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,$/;"	r
camera	script.js	/^var camera = new THREE.PerspectiveCamera(vfov, aspect, near, far);$/;"	r
camera2	js/three.js	/^						var camera2 = cameras[ j ];$/;"	r
cameraDef	js/GLTFLoader.js	/^		var cameraDef = this.json.cameras[ cameraIndex ];$/;"	r
cameraL	js/three.js	/^		this.cameraL = new PerspectiveCamera();$/;"	r
cameraL	js/three.js	/^		var cameraL = new PerspectiveCamera();$/;"	r
cameraL	js/three.min.js	/^this.cameraL=new Y;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new Y;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1}function $c(a,b,c){w.call(this);this.type="CubeCamera";var d=new Y(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new p(1,0,0));this.add(d);var e=new Y(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new p(-1,0,0));this.add(e);var f=new Y(90,1,a,b);f.up.set(0,0,1);f.lookAt(new p(0,1,0));this.add(f);var g=new Y(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new p(0,-1,0));$/;"	r
cameraNX	js/three.js	/^			renderer.render( scene, cameraNX, renderTarget );$/;"	r
cameraNX	js/three.js	/^		var cameraNX = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraNY	js/three.js	/^			renderer.render( scene, cameraNY, renderTarget );$/;"	r
cameraNY	js/three.js	/^		var cameraNY = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraNZ	js/three.js	/^			renderer.render( scene, cameraNZ, renderTarget );$/;"	r
cameraNZ	js/three.js	/^		var cameraNZ = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraPX	js/three.js	/^			renderer.render( scene, cameraPX, renderTarget );$/;"	r
cameraPX	js/three.js	/^		var cameraPX = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraPY	js/three.js	/^			renderer.render( scene, cameraPY, renderTarget );$/;"	r
cameraPY	js/three.js	/^		var cameraPY = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraPZ	js/three.js	/^			renderer.render( scene, cameraPZ, renderTarget );$/;"	r
cameraPZ	js/three.js	/^		var cameraPZ = new PerspectiveCamera( fov, aspect, near, far );$/;"	r
cameraPosition	js/three.js	/^					var uCamPos = p_uniforms.map.cameraPosition;$/;"	r
cameraPosition	js/three.min.js	/^c.isMeshPhongMaterial||c.isMeshStandardMaterial||c.envMap)f=k.map.cameraPosition,void 0!==f&&f.setValue(F,Jb.setFromMatrixPosition(a.matrixWorld));(c.isMeshPhongMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||c.isMeshStandardMaterial||c.isShaderMaterial||c.skinning)&&k.setValue(F,"viewMatrix",a.matrixWorldInverse)}if(c.skinning&&(k.setOptional(F,d,"bindMatrix"),k.setOptional(F,d,"bindMatrixInverse"),a=d.skeleton))if(f=a.bones,X.floatVertexTextures){if(void 0===a.boneTexture){var f=Math.sqrt(4*$/;"	r
cameraR	js/three.js	/^		this.cameraR = new PerspectiveCamera();$/;"	r
cameraR	js/three.js	/^		var cameraR = new PerspectiveCamera();$/;"	r
cameraVR	js/three.js	/^		var cameraVR = new ArrayCamera( [ cameraL, cameraR ] );$/;"	r
cameras	js/GLTFLoader.js	/^					cameras: cameras,$/;"	r
cameras	js/three.js	/^					var cameras = camera.cameras;$/;"	r
cameras	js/three.js	/^		this.cameras = array || [];$/;"	r
canvas	js/three.js	/^					canvas = document.createElementNS( 'http:\/\/www.w3.org\/1999\/xhtml', 'canvas' );$/;"	r
canvas	js/three.js	/^					canvas = image;$/;"	r
canvas	js/three.js	/^				var canvas = document.createElementNS( 'http:\/\/www.w3.org\/1999\/xhtml', 'canvas' );$/;"	r
canvas	js/three.js	/^				var canvas;$/;"	r
canvas	js/three.js	/^			var canvas = document.createElementNS( 'http:\/\/www.w3.org\/1999\/xhtml', 'canvas' );$/;"	r
canvas	js/three.js	/^		Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );$/;"	r
capabilities	js/three.js	/^			_this.capabilities = capabilities;$/;"	r
capabilities	js/three.js	/^			capabilities = new WebGLCapabilities( _gl, extensions, parameters );$/;"	r
capabilities	js/three.js	/^			capabilities = {};$/;"	r
capabilities	js/three.js	/^		var capabilities = {};$/;"	r
castShadow	js/three.js	/^					uniforms.shadow = light.castShadow;$/;"	r
castShadow	js/three.js	/^				if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;$/;"	r
castShadow	js/three.js	/^			this.castShadow = source.castShadow;$/;"	r
castShadow	js/three.js	/^		this.castShadow = false;$/;"	r
castShadow	js/three.js	/^		this.castShadow = undefined;$/;"	r
cb	js/three.js	/^				var cb = new Vector3(), ab = new Vector3();$/;"	r
cb	js/three.js	/^			var cb = new Vector3(), ab = new Vector3();$/;"	r
cc	js/three.min.js	/^0,0);g.push(0,0,1);h.push(.5,.5);var n=0;for(k=3;n<=b;n++,k+=3){var u=c+n\/b*d;l.x=a*Math.cos(u);l.y=a*Math.sin(u);f.push(l.x,l.y,l.z);g.push(0,0,1);q.x=(f[k]\/a+1)\/2;q.y=(f[k+1]\/a+1)\/2;h.push(q.x,q.y)}for(k=1;k<=b;k++)e.push(k,k+1,0);this.setIndex(e);this.addAttribute("position",new z(f,3));this.addAttribute("normal",new z(g,3));this.addAttribute("uv",new z(h,2))}function cc(a){Q.call(this);this.type="ShadowMaterial";this.color=new H(0);this.opacity=1;this.transparent=this.lights=!0;this.setValues(a)}$/;"	r
cc	js/three.min.js	/^cc.prototype=Object.create(Q.prototype);cc.prototype.constructor=cc;cc.prototype.isShadowMaterial=!0;dc.prototype=Object.create(Aa.prototype);dc.prototype.constructor=dc;dc.prototype.isRawShaderMaterial=!0;La.prototype=Object.create(Q.prototype);La.prototype.constructor=La;La.prototype.isMeshStandardMaterial=!0;La.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.defines={STANDARD:""};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=$/;"	r
cd	js/three.min.js	/^b.count);a.addAttribute("color",new O(b,3));this.add(new qa(a,this.material));this.update()}function cd(a,b,c,d){a=a||10;b=b||10;c=new H(void 0!==c?c:4473924);d=new H(void 0!==d?d:8947848);var e=b\/2,f=a\/b,g=a\/2;a=[];for(var h=[],k=0,l=0,q=-g;k<=b;k++,q+=f){a.push(-g,0,q,g,0,q);a.push(q,0,-g,q,0,g);var n=k===e?c:d;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3}b=new C;b.addAttribute("position",new z(a,3));b.addAttribute("color",new z(h,3));c=new T({vertexColors:2});$/;"	r
ce	js/three.js	/^				var ce = c * e, cf = c * f, de = d * e, df = d * f;$/;"	r
ceil	js/three.js	/^		ceil: function () {$/;"	r
ceil	js/three.min.js	/^Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=$/;"	r
ceilPowerOfTwo	js/three.js	/^		ceilPowerOfTwo: function ( value ) {$/;"	r
center	js/GLTFLoader.js	/^							var center = uvScaleMap.center;$/;"	r
center	js/three.js	/^					center: boundingSphere.center.toArray(),$/;"	r
center	js/three.js	/^					var center = material.map.center;$/;"	r
center	js/three.js	/^					var center = this.boundingSphere.center;$/;"	r
center	js/three.js	/^					var center = uvScaleMap.center;$/;"	r
center	js/three.js	/^				center = sphere.center,$/;"	r
center	js/three.js	/^				center: [ this.center.x, this.center.y ],$/;"	r
center	js/three.js	/^				var center = new Vector3();$/;"	r
center	js/three.js	/^				var center = this.center;$/;"	r
center	js/three.js	/^			var center = sphere.center;$/;"	r
center	js/three.js	/^			var center = this.boundingSphere.center;$/;"	r
center	js/three.js	/^		center: function ( geometry ) {$/;"	r
center	js/three.js	/^		center: function ( optionalTarget ) {$/;"	r
center	js/three.js	/^		center: function () {$/;"	r
center	js/three.js	/^		this.center = ( center !== undefined ) ? center : new Vector3();$/;"	r
center	js/three.js	/^		this.center = new Vector2( 0, 0 );$/;"	r
center	js/three.js	/^		var center = divisions \/ 2;$/;"	r
center	js/three.js	/^		var center = new Vector3();$/;"	r
center	js/three.js	/^	Line3.prototype.center = function ( optionalTarget ) {$/;"	r
center	js/three.min.js	/^a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1\/b,c=new K;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new p,b=new p,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===$/;"	r
center	js/three.min.js	/^c,d);this.applyMatrix(a);return this}}(),scale:function(){var a=new K;return function(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a=new w;return function(b){a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a.isPoints||a.isLine){a=new z(3*b.vertices.length,3);var c=new z(3*b.colors.length,$/;"	r
center	js/three.min.js	/^isIntersectionSphere:function(a){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(a)},size:function(a){console.warn("THREE.Box3: .size() has been renamed to .getSize().");return this.getSize(a)}});Ib.prototype.center=function(a){console.warn("THREE.Line3: .center() has been renamed to .getCenter().");return this.getCenter(a)};Object.assign(R,{random16:function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");$/;"	r
center	js/three.min.js	/^return new Zd(a)};m.GeometryUtils={merge:function(a,b,c){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");if(b.isMesh){b.matrixAutoUpdate&&b.updateMatrix();var d=b.matrix;b=b.geometry}a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};m.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");$/;"	r
center	js/three.min.js	/^v[e],t=f.start,x=f.count,r=t,t=t+x;r<t;r+=3)void 0!==d?b(d[r],d[r+1],d[r+2],f.materialIndex):b(r,r+1,r+2,f.materialIndex);else if(void 0!==d)for(e=0;e<d.length;e+=3)b(d[e],d[e+1],d[e+2]);else for(e=0;e<f.length\/3;e+=3)b(e,e+1,e+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,$/;"	r
centerIndexEnd	js/three.js	/^			centerIndexEnd = index;$/;"	r
centerIndexStart	js/three.js	/^			centerIndexStart = index;$/;"	r
centroid	js/three.js	/^			var centroid = new Vector3();$/;"	r
channel	js/GLTFLoader.js	/^					var channel = animation.channels[ i ];$/;"	r
char	js/three.js	/^					var char = chars[ i ];$/;"	r
chars	js/three.js	/^				var chars = String( text ).split( '' );$/;"	r
chars	js/three.js	/^			var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );$/;"	r
checkBufferGeometryIntersection	js/three.js	/^			function checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {$/;"	r
checkIntersection	js/three.js	/^			function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {$/;"	r
child	js/GLTFLoader.js	/^					var child = children[ i ];$/;"	r
child	js/three.js	/^						var child = object.getObjectByProperty( 'uuid', level.object );$/;"	r
child	js/three.js	/^					var child = source.children[ i ];$/;"	r
child	js/three.js	/^				var child = this.children[ i ];$/;"	r
childNode	js/three.js	/^						var childNode = children[ i ];$/;"	r
children	js/GLTFLoader.js	/^				var children = node.children;$/;"	r
children	js/three.js	/^					var children = data.children;$/;"	r
children	js/three.js	/^				object.children = [];$/;"	r
children	js/three.js	/^			var children = object.children;$/;"	r
children	js/three.js	/^			var children = this.children;$/;"	r
children	js/three.js	/^		this.children = [];$/;"	r
children	js/three.min.js	/^(a.bufferSubData(d,g.offset*h.BYTES_PER_ELEMENT,h.subarray(g.offset,g.offset+g.count)),g.count=-1),e.version=c.version)}}}function Xa(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||Xa.DefaultOrder}function Pd(){this.mask=1}function w(){Object.defineProperty(this,"id",{value:Nf++});this.uuid=R.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=w.DefaultUp.clone();var a=new p,b=new Xa,c=new X,d=new p(1,1,1);b.onChange(function(){c.setFromEuler(b,$/;"	r
chkHole	js/three.js	/^						chkHole = holes[ indepHoles[ ihIdx ] ];$/;"	r
chunkIndex	js/GLTFLoader.js	/^		var chunkIndex = 0;$/;"	r
chunkLength	js/GLTFLoader.js	/^			chunkIndex += chunkLength;$/;"	r
chunkLength	js/GLTFLoader.js	/^			var chunkLength = chunkView.getUint32( chunkIndex, true );$/;"	r
chunkType	js/GLTFLoader.js	/^			var chunkType = chunkView.getUint32( chunkIndex, true );$/;"	r
chunkView	js/GLTFLoader.js	/^		var chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );$/;"	r
chunks	js/three.js	/^		var chunks = [$/;"	r
chunks	js/three.js	/^		var chunks = [];$/;"	r
circles	js/three.js	/^		circles = circles || 8;$/;"	r
clamp	js/three.js	/^			var clamp = _Math.clamp;$/;"	r
clamp	js/three.js	/^		clamp: function ( min, max ) {$/;"	r
clamp	js/three.js	/^		clamp: function ( value, min, max ) {$/;"	r
clamp	js/three.min.js	/^Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a=new p,b=new p;return function(c,d){a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=$/;"	r
clamp	js/three.min.js	/^Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a=new D,b=new D;return function(c,d){a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);$/;"	r
clamp	js/three.min.js	/^b=0,c;return function(){for(var d="",e=0;36>e;e++)8===e||13===e||18===e||23===e?d+="-":14===e?d+="4":(2>=b&&(b=33554432+16777216*Math.random()|0),c=b&15,b>>=4,d+=a[19===e?c&3|8:c]);return d}}(),clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)\/(c-b)},lerp:function(a,b,c){return(1-c)*a+c*b},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)\/(c-b);return a*a*(3-2*a)},smootherstep:function(a,$/;"	r
clamp	js/three.min.js	/^this.w=Math.acos((b+f+l-1)\/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,$/;"	r
clampLength	js/three.js	/^		clampLength: function ( min, max ) {$/;"	r
clampPoint	js/three.js	/^		clampPoint: function ( point, optionalTarget ) {$/;"	r
clampPoint	js/three.min.js	/^a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){if(0<a.normal.x){var b=a.normal.x*this.min.x;var c=a.normal.x*this.max.x}else b=a.normal.x*this.max.x,c=a.normal.x*this.min.x;0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,$/;"	r
clampScalar	js/three.js	/^			return function clampScalar( minVal, maxVal ) {$/;"	r
clampScalar	js/three.js	/^		clampScalar: function () {$/;"	r
clampScalar	js/three.min.js	/^this.w));return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new ba,b=new ba);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);$/;"	r
clampToLine	js/three.js	/^		closestPointToPoint: function ( point, clampToLine, optionalTarget ) {$/;"	r
clampToMaxSize	js/three.js	/^		function clampToMaxSize( image, maxSize ) {$/;"	r
clampWhenFinished	js/three.js	/^		this.clampWhenFinished 	= false;	\/\/ keep feeding the last frame?$/;"	r
clampedPoint	js/three.js	/^				var clampedPoint = v1.copy( point ).clamp( this.min, this.max );$/;"	r
clear	js/three.js	/^			clear: clear$/;"	r
clear	js/three.js	/^		clear: function () {$/;"	r
clear	js/three.js	/^		function clear() {$/;"	r
clear	js/three.js	/^		this.clear = function ( color, depth, stencil ) {$/;"	r
clear	js/three.js	/^		this.clear = function ( renderer, color, depth, stencil ) {$/;"	r
clear	js/three.js	/^		this.clear = function () {};$/;"	r
clear	js/three.min.js	/^c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=l;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)};this.clear=function(a,b,c,d){for(var e=this.renderTarget,f=0;6>f;f++)e.activeCubeFace=f,a.setRenderTarget(e),a.clear(b,c,d);a.setRenderTarget(null)}}function fe(){w.call(this);this.type="AudioListener";this.context=ge.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);$/;"	r
clear	js/three.min.js	/^this.domElement=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};Object.defineProperty(m,"__esModule",{value:!0})});$/;"	r
clear	js/three.min.js	/^x+","+g.length},state:b}}function bg(a,b){var c={};return{update:function(d){var e=b.frame,f=d.geometry,g=a.get(d,f);c[g.id]!==e&&(f.isGeometry&&g.updateFromObject(d),a.update(g),c[g.id]=e);return g},clear:function(){c={}}}}function cg(a){a=a.split("\\n");for(var b=0;b<a.length;b++)a[b]=b+1+": "+a[b];return a.join("\\n")}function Ke(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");$/;"	r
clearAlpha	js/three.js	/^				clearAlpha = alpha !== undefined ? alpha : 1;$/;"	r
clearAlpha	js/three.js	/^				clearAlpha = alpha;$/;"	r
clearAlpha	js/three.js	/^		var clearAlpha = 0;$/;"	r
clearCoat	js/three.js	/^				clearCoat: { value: 0 },$/;"	r
clearCoat	js/three.js	/^			if ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;$/;"	r
clearCoat	js/three.js	/^			if ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;$/;"	r
clearCoat	js/three.js	/^			uniforms.clearCoat.value = material.clearCoat;$/;"	r
clearCoat	js/three.js	/^		this.clearCoat = 0.0;$/;"	r
clearCoat	js/three.js	/^		this.clearCoat = source.clearCoat;$/;"	r
clearCoatRoughness	js/three.js	/^				clearCoatRoughness: { value: 0 }$/;"	r
clearCoatRoughness	js/three.js	/^			if ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;$/;"	r
clearCoatRoughness	js/three.js	/^			if ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;$/;"	r
clearCoatRoughness	js/three.js	/^			uniforms.clearCoatRoughness.value = material.clearCoatRoughness;$/;"	r
clearCoatRoughness	js/three.js	/^		this.clearCoatRoughness = 0.0;$/;"	r
clearCoatRoughness	js/three.js	/^		this.clearCoatRoughness = source.clearCoatRoughness;$/;"	r
clearCoatRoughness	js/three.min.js	/^fragmentShader:V.shadow_frag}};ib.physical={uniforms:Ea.merge([ib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:V.meshphysical_vert,fragmentShader:V.meshphysical_frag};Object.assign(kd.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new D;return function(b,c){c=a.copy(c).multiplyScalar(.5);$/;"	r
clearColor	js/three.js	/^		this.clearColor = function () {$/;"	r
clearColor	js/three.js	/^		var clearColor = new Color( 0x000000 );$/;"	r
clearDepth	js/three.js	/^		this.clearDepth = function () {$/;"	r
clearDrawCalls	js/three.js	/^		clearDrawCalls: function () {$/;"	r
clearGroups	js/three.js	/^		clearGroups: function () {$/;"	r
clearStencil	js/three.js	/^		this.clearStencil = function () {$/;"	r
clearTarget	js/three.js	/^		this.clearTarget = function ( renderTarget, color, depth, stencil ) {$/;"	r
clearViewOffset	js/three.js	/^		clearViewOffset: function () {$/;"	r
clearViewOffset	js/three.min.js	/^clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a=(this.right-this.left)\/(2*this.zoom),b=(this.top-this.bottom)\/(2*this.zoom),c=(this.right+this.left)\/2,d=(this.top+this.bottom)\/2,e=c-a,c=c+a,a=d+b,b=d-b;if(null!==this.view&&this.view.enabled)var c=this.zoom\/(this.view.width\/this.view.fullWidth),b=this.zoom\/(this.view.height\/this.view.fullHeight),f=(this.right-this.left)\/this.view.width,d=(this.top-this.bottom)\/$/;"	r
clip	js/three.js	/^					var clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );$/;"	r
clip	js/three.js	/^				var clip = AnimationClip.parse( json[ i ] );$/;"	r
clip	js/three.js	/^			var clip = new AnimationClip( clipName, duration, tracks );$/;"	r
clip	js/three.js	/^		this._clip = clip;$/;"	r
clip	js/three.js	/^	function AnimationAction( mixer, clip, localRoot ) {$/;"	r
clipAction	js/three.js	/^		clipAction: function ( clip, optionalRoot ) {$/;"	r
clipAction	js/three.min.js	/^b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,b){var c=b||this._root,d=c.uuid,c="string"===typeof a?ra.findByName(c,a):a;a=null!==c?c.uuid:a;var e=this._actionsByClip[a],f=null;if(void 0!==e){f=e.actionByRoot[d];if(void 0!==f)return f;f=e.knownActions[0];null===c&&(c=f._clip)}if(null===c)return null;b=new Xe(this,c,b);this._bindAction(b,f);this._addInactiveAction(b,a,d);return b},existingAction:function(a,b){var c=b||this._root;b=c.uuid;c="string"===typeof a?ra.findByName(c,$/;"	r
clipArray	js/three.js	/^				clipArray = o.geometry && o.geometry.animations || o.animations;$/;"	r
clipArray	js/three.js	/^			var clipArray = objectOrClipArray;$/;"	r
clipIntersection	js/three.js	/^			result.clipIntersection = material.clipIntersection;$/;"	r
clipIntersection	js/three.js	/^			this.clipIntersection = source.clipIntersection;$/;"	r
clipIntersection	js/three.js	/^		this.clipIntersection = false;$/;"	r
clipIntersection	js/three.js	/^		this.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {$/;"	r
clipName	js/three.js	/^			var clipName = animation.name || 'default';$/;"	r
clipObject	js/three.js	/^					clipObject = prototypeAction._clip;$/;"	r
clipObject	js/three.js	/^				clipObject = typeof clip === 'string' ?$/;"	r
clipObject	js/three.js	/^			var newAction = new AnimationAction( this, clipObject, optionalRoot );$/;"	r
clipShadows	js/three.js	/^					material.clipShadows === true &&$/;"	r
clipShadows	js/three.js	/^			result.clipShadows = material.clipShadows;$/;"	r
clipShadows	js/three.js	/^			this.clipShadows = source.clipShadows;$/;"	r
clipShadows	js/three.js	/^		this.clipShadows = false;$/;"	r
clipTime	js/three.js	/^			var clipTime = this._updateTime( deltaTime );$/;"	r
clipTracks	js/three.js	/^				clipTracks = clip.tracks;$/;"	r
clipUuid	js/three.js	/^						clipUuid = action._clip.uuid,$/;"	r
clipUuid	js/three.js	/^					this._addInactiveAction( action, clipUuid, rootUuid );$/;"	r
clipUuid	js/three.js	/^				clipUuid = clip.uuid,$/;"	r
clipUuid	js/three.js	/^				clipUuid = clipObject !== null ? clipObject.uuid : clip,$/;"	r
clipUuid	js/three.js	/^				clipUuid = clipObject ? clipObject.uuid : clip,$/;"	r
clipUuid	js/three.js	/^			this._addInactiveAction( newAction, clipUuid, rootUuid );$/;"	r
clipUuid	js/three.js	/^			var clipUuid = action._clip.uuid,$/;"	r
clipUuid	js/three.js	/^		_addInactiveAction: function ( action, clipUuid, rootUuid ) {$/;"	r
clipping	js/three.js	/^				material.clipping === true ) {$/;"	r
clipping	js/three.js	/^		this.clipping = false; \/\/ set to use user-defined clipping planes$/;"	r
clipping	js/three.js	/^		this.clipping = source.clipping;$/;"	r
clippingPlanes	js/three.js	/^						material.clippingPlanes, material.clipIntersection, material.clipShadows,$/;"	r
clippingPlanes	js/three.js	/^				uniforms.clippingPlanes = _clipping.uniform;$/;"	r
clippingPlanes	js/three.js	/^			result.clippingPlanes = material.clippingPlanes;$/;"	r
clippingPlanes	js/three.js	/^			this.clippingPlanes = dstPlanes;$/;"	r
clippingPlanes	js/three.js	/^			var planes = _this.clippingPlanes,$/;"	r
clippingPlanes	js/three.js	/^			var srcPlanes = source.clippingPlanes,$/;"	r
clippingPlanes	js/three.js	/^		this.clippingPlanes = [];$/;"	r
clippingPlanes	js/three.js	/^		this.clippingPlanes = null;$/;"	r
clippingPlanes	js/three.min.js	/^a[d].clone();this.clippingPlanes=b;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Va.prototype=Object.create(Q.prototype);Va.prototype.constructor=Va;Va.prototype.isMeshDepthMaterial=!0;Va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=$/;"	r
clippingState	js/three.js	/^				cache.clippingState = dstArray;$/;"	r
clipping_planes_fragment	js/three.js	/^		clipping_planes_fragment: clipping_planes_fragment,$/;"	r
clipping_planes_fragment	js/three.js	/^	var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n";$/;"	r
clipping_planes_pars_fragment	js/three.js	/^		clipping_planes_pars_fragment: clipping_planes_pars_fragment,$/;"	r
clipping_planes_pars_fragment	js/three.js	/^	var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n";$/;"	r
clipping_planes_pars_fragment	js/three.min.js	/^clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n",$/;"	r
clipping_planes_pars_vertex	js/three.js	/^		clipping_planes_pars_vertex: clipping_planes_pars_vertex,$/;"	r
clipping_planes_pars_vertex	js/three.js	/^	var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n";$/;"	r
clipping_planes_vertex	js/three.js	/^		clipping_planes_vertex: clipping_planes_vertex,$/;"	r
clipping_planes_vertex	js/three.js	/^	var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n";$/;"	r
clips	js/three.js	/^			var clips = [];$/;"	r
clone	js/three.js	/^		clone: function ( recursive ) {$/;"	r
clone	js/three.js	/^		clone: function ( uniforms_src ) {$/;"	r
clone	js/three.js	/^		clone: function () {$/;"	r
clone	js/three.js	/^		materials.clone = function () {$/;"	r
clone	js/three.js	/^	Fog.prototype.clone = function () {$/;"	r
clone	js/three.js	/^	FogExp2.prototype.clone = function () {$/;"	r
clone	js/three.js	/^	Uniform.prototype.clone = function () {$/;"	r
clone	js/three.min.js	/^"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});T.prototype=Object.create(Q.prototype);T.prototype.constructor=T;T.prototype.isLineBasicMaterial=!0;T.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};$/;"	r
clone	js/three.min.js	/^(d.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(d.wireframeLinejoin=this.wireframeLinejoin);!0===this.morphTargets&&(d.morphTargets=!0);!0===this.skinning&&(d.skinning=!0);!1===this.visible&&(d.visible=!1);"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData);c&&(c=b(a.textures),a=b(a.images),0<c.length&&(d.textures=c),0<a.length&&(d.images=a));return d},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.fog=a.fog;$/;"	r
clone	js/three.min.js	/^(e.geometries=d),0<g.length&&(e.materials=g),0<h.length&&(e.textures=h),0<k.length&&(e.images=k));e.object=f;return e},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;$/;"	r
clone	js/three.min.js	/^C=g;E=h;U=k}if(w=b(this,w,u,e,C,E,U,x))I&&I[H]&&(K=I[H],m.copy(K[0]),r.copy(K[1]),v.copy(K[2]),w.uv=a(x,C,E,U,m,r,v)),w.face=N,w.faceIndex=H,p.push(w)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});var ig=0;Y.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Y,isPerspectiveCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,a,b);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;$/;"	r
clone	js/three.min.js	/^Ea={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}},V={alphamap_fragment:"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n",$/;"	r
clone	js/three.min.js	/^b;c++)if(a=this.bones[c])a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new K,b=new K;return function(){for(var c=this.bones,d=this.boneInverses,e=this.boneMatrices,f=this.boneTexture,g=0,h=c.length;g<h;g++)a.multiplyMatrices(c[g]?c[g].matrixWorld:b,d[g]),a.toArray(e,16*g);void 0!==f&&(f.needsUpdate=!0)}}(),clone:function(){return new Dc(this.bones,$/;"	r
clone	js/three.min.js	/^c.radius+=l;if(!1!==d.ray.intersectsSphere(c)){a.getInverse(k);b.copy(d.ray).applyMatrix4(a);var l=l\/((this.scale.x+this.scale.y+this.scale.z)\/3),m=l*l,l=new p;if(h.isBufferGeometry){var n=h.index,h=h.attributes.position.array;if(null!==n)for(var u=n.array,n=0,r=u.length;n<r;n++){var v=u[n];l.fromArray(h,3*v);f(l,v)}else for(n=0,u=h.length\/3;n<u;n++)l.fromArray(h,3*n),f(l,n)}else for(l=h.vertices,n=0,u=l.length;n<u;n++)f(l[n],n)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});$/;"	r
clone	js/three.min.js	/^c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=R.clamp,e=a.elements;a=e[0];var f=e[4],g=e[8],h=e[1],k=e[5],l=e[9],q=e[2],n=e[6],e=e[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,e),this._z=$/;"	r
clone	js/three.min.js	/^c?this.setHex(c):console.warn("THREE.Color: Unknown color "+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);b=0<b?1\/b:1;this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},convertGammaToLinear:function(){var a=$/;"	r
clone	js/three.min.js	/^case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},$/;"	r
clone	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(R.clamp(a.y\/this.radius,-1,1)));return this}});Object.assign(cf.prototype,{set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
clone	js/three.min.js	/^d.distanceToSquared(b[e]));this.radius=Math.sqrt(c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=$/;"	r
clone	js/three.min.js	/^density:this.density}};Lb.prototype.isFog=!0;Lb.prototype.clone=function(){return new Lb(this.color.getHex(),this.near,this.far)};Lb.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};od.prototype=Object.assign(Object.create(w.prototype),{constructor:od,copy:function(a,b){w.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=$/;"	r
clone	js/three.min.js	/^m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g.isGeometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=n)m=b.distanceSqToSegment(k[g],k[g+1],q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,$/;"	r
clone	js/three.min.js	/^new p,b=new p;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1\/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+$/;"	r
clone	js/three.min.js	/^q);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){return(new L).copy(this)},copy:function(a){var b,c,d;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var e=a.vertices;var f=0;for(b=e.length;f<b;f++)this.vertices.push(e[f].clone());e=a.colors;f=0;for(b=e.length;f<b;f++)this.colors.push(e[f].clone());$/;"	r
clone	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
clone	js/three.min.js	/^set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},w:{get:function(){return this._w},set:function(a){this._w=a;this.onChangeCallback()}}});Object.assign(X.prototype,{set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,$/;"	r
clone	js/three.min.js	/^this._actionsByClip;for(d in b){var c=b[d].actionByRoot[a];void 0!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}var d=this._bindingsByRootAndName[a];if(void 0!==d)for(var e in d)a=d[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){a=this.existingAction(a,b);null!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}});Jd.prototype.clone=function(){return new Jd(void 0===this.value.clone?this.value:this.value.clone())};ke.prototype=Object.assign(Object.create(C.prototype),$/;"	r
clone	js/three.min.js	/^this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}});var kf=0;da.DEFAULT_IMAGE=void 0;da.DEFAULT_MAPPING=300;Object.defineProperty(da.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(da.prototype,ia.prototype,{constructor:da,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=$/;"	r
clone	js/three.min.js	/^this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(a){a=a||new D;return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=$/;"	r
clone	js/three.min.js	/^this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});nd.prototype=Object.assign(Object.create(Y.prototype),{constructor:nd,isArrayCamera:!0});Kb.prototype.isFogExp2=!0;Kb.prototype.clone=function(){return new Kb(this.color.getHex(),this.density)};Kb.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),$/;"	r
clone	js/three.min.js	/^translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}});Object.assign(ld.prototype,{set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,$/;"	r
clone	js/three.min.js	/^{set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new p).copy(this.direction).multiplyScalar(a).add(this.origin)},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize();return this},recast:function(){var a=new p;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,$/;"	r
cloneMaterial	js/GLTFLoader.js	/^			cloneMaterial: function ( source ) {$/;"	r
closePath	js/three.js	/^		closePath: function () {$/;"	r
closed	js/three.js	/^			closed: closed$/;"	r
closed	js/three.js	/^		closed = closed || false;$/;"	r
closed	js/three.js	/^		this.closed = false;$/;"	r
closed	js/three.js	/^		this.closed = true;$/;"	r
closestPoint	js/three.js	/^			var closestPoint = new Vector3();$/;"	r
closestPointToPoint	js/three.js	/^			return function closestPointToPoint( point, optionalTarget ) {$/;"	r
closestPointToPoint	js/three.js	/^		closestPointToPoint: function ( point, clampToLine, optionalTarget ) {$/;"	r
closestPointToPoint	js/three.js	/^		closestPointToPoint: function ( point, optionalTarget ) {$/;"	r
closestPointToPoint	js/three.js	/^		closestPointToPoint: function () {$/;"	r
closestPointToPoint	js/three.min.js	/^this.start);b.subVectors(this.end,this.start);c=b.dot(b);c=b.dot(a)\/c;d&&(c=R.clamp(c,0,1));return c}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new p;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}});Object.assign(Pa,{normal:function(){var a=new p;return function(b,c,d,e){e=e||new p;$/;"	r
closestPointToPointParameter	js/three.js	/^			return function closestPointToPointParameter( point, clampToLine ) {$/;"	r
closestPointToPointParameter	js/three.js	/^		closestPointToPointParameter: function () {$/;"	r
code	js/three.js	/^			var code = programCache.getProgramCode( material, parameters );$/;"	r
code	js/three.js	/^		this.code = code;$/;"	r
collinear0	js/three.js	/^			var collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );$/;"	r
color	js/GLTFLoader.js	/^					materialParams.color = new THREE.Color().fromArray( material.emissiveFactor );$/;"	r
color	js/GLTFLoader.js	/^				material.color = params.color;$/;"	r
color	js/GLTFLoader.js	/^				materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );$/;"	r
color	js/GLTFLoader.js	/^				params.color = new THREE.Color( 1.0, 1.0, 1.0 );$/;"	r
color	js/GLTFLoader.js	/^			color: 0xFFFFFF,$/;"	r
color	js/GLTFLoader.js	/^			materialParams.color = new THREE.Color().fromArray( materialValues.diffuseFactor );$/;"	r
color	js/GLTFLoader.js	/^			var color = new THREE.Color().fromArray( light.color );$/;"	r
color	js/three.js	/^							color: new Color(),$/;"	r
color	js/three.js	/^							json.color = color.fromArray( value ).getHex();$/;"	r
color	js/three.js	/^					'		gl_FragColor.rgb *= color;',$/;"	r
color	js/three.js	/^					color = faceVertexColors[ j ];$/;"	r
color	js/three.js	/^					color = new Color();$/;"	r
color	js/three.js	/^					color: { value: new Color( 0x00000 ) },$/;"	r
color	js/three.js	/^					m_uniforms.color.value = material.color;$/;"	r
color	js/three.js	/^					this.colors.push( color, color, color );$/;"	r
color	js/three.js	/^					uniforms.color$/;"	r
color	js/three.js	/^					var color = ( i < ( l \/ 2 ) ) ? color1 : color2;$/;"	r
color	js/three.js	/^					var color = face.color;$/;"	r
color	js/three.js	/^				attribute = this.attributes.color;$/;"	r
color	js/three.js	/^				color: color,		\/\/ color$/;"	r
color	js/three.js	/^				color: colorBuffer,$/;"	r
color	js/three.js	/^				color: gl.getUniformLocation( program, 'color' ),$/;"	r
color	js/three.js	/^				color: {},$/;"	r
color	js/three.js	/^				uniforms.diffuse.value = material.color;$/;"	r
color	js/three.js	/^				var color = colors[ i ];$/;"	r
color	js/three.js	/^				var color = light.color;$/;"	r
color	js/three.js	/^				var color;$/;"	r
color	js/three.js	/^			color = ( i & 1 ) ? color1 : color2;$/;"	r
color	js/three.js	/^			color: this.color.getHex(),$/;"	r
color	js/three.js	/^			data.object.color = this.color.getHex();$/;"	r
color	js/three.js	/^			uniforms.diffuse.value = material.color;$/;"	r
color	js/three.js	/^			uniforms.fogColor.value = fog.color;$/;"	r
color	js/three.js	/^			var color = i === center ? color1 : color2;$/;"	r
color	js/three.js	/^			var color = new Color();$/;"	r
color	js/three.js	/^			var color = new Vector4();$/;"	r
color	js/three.js	/^		Light.call( this, color, intensity );$/;"	r
color	js/three.js	/^		this.clear = function ( renderer, color, depth, stencil ) {$/;"	r
color	js/three.js	/^		this.clearTarget = function ( renderTarget, color, depth, stencil ) {$/;"	r
color	js/three.js	/^		this.color = ( color && color.isColor ) ? color : new Color();$/;"	r
color	js/three.js	/^		this.color = color;$/;"	r
color	js/three.js	/^		this.color = new Color( 0x000000 );$/;"	r
color	js/three.js	/^		this.color = new Color( 0xffffff ); \/\/ diffuse$/;"	r
color	js/three.js	/^		this.color = new Color( 0xffffff ); \/\/ emissive$/;"	r
color	js/three.js	/^		this.color = new Color( 0xffffff );$/;"	r
color	js/three.js	/^		this.color = new Color( color );$/;"	r
color	js/three.js	/^		var color = ( hex !== undefined ) ? hex : 0xff0000;$/;"	r
color	js/three.js	/^		var color = ( hex !== undefined ) ? hex : 0xffff00;$/;"	r
color	js/three.min.js	/^a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==this.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);void 0!==this.shadow&&(a.object.shadow=this.shadow.toJSON());return a}});ud.prototype=Object.assign(Object.create(fa.prototype),{constructor:ud,$/;"	r
color	js/three.min.js	/^d}}}function $f(){var a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];switch(b.type){case "DirectionalLight":var c={direction:new p,color:new H,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "SpotLight":c={position:new p,direction:new p,color:new H,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "PointLight":c={position:new p,color:new H,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D,$/;"	r
color	js/three.min.js	/^function Kb(a,b){this.name="";this.color=new H(a);this.density=void 0!==b?b:2.5E-4}function Lb(a,b,c){this.name="";this.color=new H(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}function od(){w.call(this);this.type="Scene";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function Xd(a,b,c,d,e){w.call(this);this.lensFlares=[];this.positionScreen=new p;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)}function Ya(a){Q.call(this);this.type="SpriteMaterial";$/;"	r
color	js/three.min.js	/^this.color=new H(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)}function Bc(a){w.call(this);this.type="Sprite";this.material=void 0!==a?a:new Ya}function Cc(){w.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Dc(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),$/;"	r
color	js/three.min.js	/^this.color=new H(16777215);this.specular=new H(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=$/;"	r
color1	js/three.js	/^		color1 = new Color( color1 !== undefined ? color1 : 0x444444 );$/;"	r
color1	js/three.js	/^		var color1 = new Color( 0, 0, 1 );$/;"	r
color1	js/three.js	/^		var color1 = new Color();$/;"	r
color2	js/three.js	/^		color2 = new Color( color2 !== undefined ? color2 : 0x888888 );$/;"	r
color2	js/three.js	/^		var color2 = new Color( 0, 1, 0 );$/;"	r
color2	js/three.js	/^		var color2 = new Color();$/;"	r
colorBuffer	js/three.js	/^		var colorBuffer = new ColorBuffer();$/;"	r
colorCone	js/three.js	/^		var colorCone = new Color( 0xff0000 );$/;"	r
colorCross	js/three.js	/^		var colorCross = new Color( 0x333333 );$/;"	r
colorFrustum	js/three.js	/^		var colorFrustum = new Color( 0xffaa00 );$/;"	r
colorIndex	js/three.js	/^								colorIndex = faces[ offset ++ ];$/;"	r
colorIndex	js/three.js	/^							colorIndex = faces[ offset ++ ];$/;"	r
colorIndex	js/three.js	/^					colorIndex, normalIndex, uvIndex, materialIndex,$/;"	r
colorMask	js/three.js	/^						currentColorMask = colorMask;$/;"	r
colorMask	js/three.js	/^						gl.colorMask( colorMask, colorMask, colorMask, colorMask );$/;"	r
colorTarget	js/three.js	/^		var colorTarget = new Color( 0xffffff );$/;"	r
colorUp	js/three.js	/^		var colorUp = new Color( 0x00aaff );$/;"	r
colorWrite	js/three.js	/^			if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;$/;"	r
colorWrite	js/three.js	/^			this.colorWrite = source.colorWrite;$/;"	r
colorWrite	js/three.js	/^		this.colorWrite = true;$/;"	r
color_fragment	js/three.js	/^		color_fragment: color_fragment,$/;"	r
color_fragment	js/three.js	/^	var color_fragment = "#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif";$/;"	r
color_pars_fragment	js/three.js	/^		color_pars_fragment: color_pars_fragment,$/;"	r
color_pars_fragment	js/three.js	/^	var color_pars_fragment = "#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n";$/;"	r
color_pars_fragment	js/three.min.js	/^color_fragment:"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif",color_pars_fragment:"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n",color_pars_vertex:"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif",color_vertex:"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif",common:"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) \/ dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n",$/;"	r
color_pars_vertex	js/three.js	/^		color_pars_vertex: color_pars_vertex,$/;"	r
color_pars_vertex	js/three.js	/^	var color_pars_vertex = "#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif";$/;"	r
color_vertex	js/three.js	/^		color_vertex: color_vertex,$/;"	r
color_vertex	js/three.js	/^	var color_vertex = "#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif";$/;"	r
colors	js/three.js	/^					colors = json.colors,$/;"	r
colors	js/three.js	/^				colors1 = this.colors,$/;"	r
colors	js/three.js	/^				colors2 = geometry.colors;$/;"	r
colors	js/three.js	/^				var colors = mesh.geometry.getAttribute( 'color' );$/;"	r
colors	js/three.js	/^				var colors = new Float32Array( geometry.colors.length * 3 );$/;"	r
colors	js/three.js	/^				var colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );$/;"	r
colors	js/three.js	/^			if ( colors.length > 0 ) data.data.colors = colors;$/;"	r
colors	js/three.js	/^			this.colors = [];$/;"	r
colors	js/three.js	/^			var colors = [];$/;"	r
colors	js/three.js	/^			var colors = attributes.color !== undefined ? attributes.color.array : undefined;$/;"	r
colors	js/three.js	/^			var colors = source.colors;$/;"	r
colors	js/three.js	/^		this.colors = [];$/;"	r
colors	js/three.js	/^		var colors = [$/;"	r
colors	js/three.js	/^		var colors = [];$/;"	r
colors	js/three.js	/^		var colors = new Float32Array( position.count * 3 );$/;"	r
colors1	js/three.js	/^				colors1 = this.colors,$/;"	r
colors2	js/three.js	/^				colors2 = geometry.colors;$/;"	r
colorsHash	js/three.js	/^			var colorsHash = {};$/;"	r
colorsNeedUpdate	js/three.js	/^				direct.colorsNeedUpdate = geometry.colorsNeedUpdate;$/;"	r
colorsNeedUpdate	js/three.js	/^				geometry.colorsNeedUpdate = false;$/;"	r
colorsNeedUpdate	js/three.js	/^			this.colorsNeedUpdate = geometry.colorsNeedUpdate;$/;"	r
colorsNeedUpdate	js/three.js	/^			this.colorsNeedUpdate = source.colorsNeedUpdate;$/;"	r
colorsNeedUpdate	js/three.js	/^		this.colorsNeedUpdate = false;$/;"	r
colorsNeedUpdate	js/three.min.js	/^a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.lineDistancesNeedUpdate=a.lineDistancesNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(O.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(O.prototype,{isBufferAttribute:!0,setArray:function(a){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==$/;"	r
cols	js/three.js	/^			var cols = Math.pow( 2, detail );$/;"	r
column2	js/three.js	/^							\/\/      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)$/;"	r
combine	js/three.js	/^				combine: material.combine,$/;"	r
combine	js/three.js	/^		this.combine = MultiplyOperation;$/;"	r
combine	js/three.js	/^		this.combine = source.combine;$/;"	r
common	js/three.js	/^				UniformsLib.common,$/;"	r
common	js/three.js	/^		common: common,$/;"	r
common	js/three.js	/^		common: {$/;"	r
common	js/three.js	/^	var common = "#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) \/ dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n";$/;"	r
compareTime	js/three.js	/^			function compareTime( i, j ) {$/;"	r
comparison	js/three.js	/^				comparison = arcLengths[ i ] - targetArcLength;$/;"	r
compile	js/three.js	/^		this.compile = function ( scene, camera ) {$/;"	r
compile	js/three.min.js	/^break;case 2:a.setMode(F.TRIANGLE_FAN)}else e.isLine?(d=d.linewidth,void 0===d&&(d=1),aa.setLineWidth(d*(null===ka?P:1)),e.isLineSegments?a.setMode(F.LINES):e.isLineLoop?a.setMode(F.LINE_LOOP):a.setMode(F.LINE_STRIP)):e.isPoints&&a.setMode(F.POINTS);c&&c.isInstancedBufferGeometry?0<c.maxInstancedCount&&a.renderInstances(c,J,f):a.render(J,f)}};this.compile=function(a,b){ja.length=0;z.length=0;a.traverse(function(a){a.isLight&&(ja.push(a),a.castShadow&&z.push(a))});ua.setup(ja,z,b);a.traverse(function(b){if(b.material)if(Array.isArray(b.material))for(var c=$/;"	r
components	js/three.js	/^				var components = m[ 2 ];$/;"	r
components	js/three.js	/^		var components = getEncodingComponents( encoding );$/;"	r
componentwise	js/three.js	/^			\/\/ assumes min < max, componentwise$/;"	r
compose	js/three.js	/^		compose: function ( position, quaternion, scale ) {$/;"	r
compressedTexImage2D	js/three.js	/^			compressedTexImage2D: compressedTexImage2D,$/;"	r
compressedTexImage2D	js/three.js	/^		function compressedTexImage2D() {$/;"	r
compressedTexImage2D	js/three.min.js	/^{type:void 0,texture:void 0},O[R]=d);if(d.type!==b||d.texture!==c)a.bindTexture(b,c||W[b]),d.type=b,d.texture=c},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(ea){console.error("THREE.WebGLState:",ea)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(ea){console.error("THREE.WebGLState:",ea)}},scissor:function(b){!1===Q.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),Q.copy(b))},viewport:function(b){!1===G.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),G.copy(b))},$/;"	r
compressedTextureFormats	js/three.js	/^				compressedTextureFormats = [];$/;"	r
compressedTextureFormats	js/three.js	/^			compressedTextureFormats = null;$/;"	r
compressedTextureFormats	js/three.js	/^		var compressedTextureFormats = null;$/;"	r
computeBoundingBox	js/three.js	/^		computeBoundingBox: function () {$/;"	r
computeBoundingBox	js/three.min.js	/^4),this.addAttribute("skinIndex",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new z(4*a.skinWeights.length,4),this.addAttribute("skinWeight",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Na);var a=this.attributes.position;void 0!==a?this.boundingBox.setFromBufferAttribute(a):$/;"	r
computeBoundingSphere	js/three.js	/^			return function computeBoundingSphere() {$/;"	r
computeBoundingSphere	js/three.js	/^		computeBoundingSphere: function () {$/;"	r
computeBoundingSphere	js/three.min.js	/^this.boundingBox&&(this.boundingBox=new Na);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Da);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a&&a.isGeometry){var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0],q=a.faceVertexUvs[0],n=this.colors,m=a.colors;void 0===c&&(c=0);void 0!==b&&(d=(new ta).getNormalMatrix(b));a=0;for(var r=g.length;a<$/;"	r
computeBoundingSphere	js/three.min.js	/^this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min\/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new Na,b=new p;return function(){null===this.boundingSphere&&(this.boundingSphere=new Da);var c=this.attributes.position;if(c){var d=this.boundingSphere.center;a.setFromBufferAttribute(c);$/;"	r
computeFaceNormals	js/three.js	/^		computeFaceNormals: function () {$/;"	r
computeFaceNormals	js/three.min.js	/^a.getCenter(d);for(var e=0,f=0,g=c.count;f<g;f++)b.x=c.getX(f),b.y=c.getY(f),b.z=c.getZ(f),e=Math.max(e,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;$/;"	r
computeFlatVertexNormals	js/three.js	/^		computeFlatVertexNormals: function () {$/;"	r
computeFlatVertexNormals	js/three.min.js	/^this.vertices.length;d<b;d++)c[d].normalize();a=0;for(d=this.faces.length;a<d;a++)b=this.faces[a],g=b.vertexNormals,3===g.length?(g[0].copy(c[b.a]),g[1].copy(c[b.b]),g[2].copy(c[b.c])):(g[0]=c[b.a].clone(),g[1]=c[b.b].clone(),g[2]=c[b.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var a;this.computeFaceNormals();var b=0;for(a=this.faces.length;b<a;b++){var c=this.faces[b];var d=c.vertexNormals;3===d.length?(d[0].copy(c.normal),d[1].copy(c.normal),$/;"	r
computeFrenetFrames	js/three.js	/^		computeFrenetFrames: function ( segments, closed ) {$/;"	r
computeFrenetFrames	js/three.min.js	/^getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)},computeFrenetFrames:function(a,b){var c=new p,d=[],e=[],f=[],g=new p,h=new K,k;for(k=0;k<=a;k++){var l=k\/a;d[k]=this.getTangentAt(l);d[k].normalize()}e[0]=new p;f[0]=new p;k=Number.MAX_VALUE;l=Math.abs(d[0].x);var m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0));m<=k&&(k=m,c.set(0,1,0));n<=k&&c.set(0,0,1);g.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],g);f[0].crossVectors(d[0],e[0]);for(k=1;k<=a;k++)e[k]=$/;"	r
computeGroups	js/three.js	/^		computeGroups: function ( geometry ) {$/;"	r
computeLineDistances	js/three.js	/^		computeLineDistances: function () {$/;"	r
computeLineDistances	js/three.min.js	/^f.computeVertexNormals();c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(d.normal),k.a.copy(d.vertexNormals[0]),k.b.copy(d.vertexNormals[1]),k.c.copy(d.vertexNormals[2])}c=0;for(b=this.faces.length;c<b;c++)d=this.faces[c],d.normal=d.__originalFaceNormal,d.vertexNormals=d.__originalVertexNormals},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===$/;"	r
computeMorphNormals	js/three.js	/^		computeMorphNormals: function () {$/;"	r
computeMorphNormals	js/three.min.js	/^d[2].copy(c.normal)):(d[0]=c.normal.clone(),d[1]=c.normal.clone(),d[2]=c.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var a,b;var c=0;for(b=this.faces.length;c<b;c++){var d=this.faces[c];d.__originalFaceNormal?d.__originalFaceNormal.copy(d.normal):d.__originalFaceNormal=d.normal.clone();d.__originalVertexNormals||(d.__originalVertexNormals=[]);var e=0;for(a=d.vertexNormals.length;e<a;e++)d.__originalVertexNormals[e]?d.__originalVertexNormals[e].copy(d.vertexNormals[e]):$/;"	r
computeOffsets	js/three.js	/^		computeOffsets: function () {$/;"	r
computeTangents	js/three.js	/^		computeTangents: function () {$/;"	r
computeTangents	js/three.js	/^	Geometry.prototype.computeTangents = function () {$/;"	r
computeTangents	js/three.min.js	/^L.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")};Object.assign(w.prototype,{getChildByName:function(a){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");$/;"	r
computeTangents	js/three.min.js	/^this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(C.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});$/;"	r
computeVertexNormals	js/three.js	/^		computeVertexNormals: function ( areaWeighted ) {$/;"	r
computeVertexNormals	js/three.js	/^		computeVertexNormals: function () {$/;"	r
cone	js/three.js	/^		this.cone = new LineSegments( geometry, material );$/;"	r
cone	js/three.js	/^		this.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );$/;"	r
coneCos	js/three.js	/^							coneCos: 0,$/;"	r
coneCos	js/three.js	/^					uniforms.coneCos = Math.cos( light.angle );$/;"	r
coneCos	js/three.js	/^				coneCos: {},$/;"	r
coneGeometry	js/three.js	/^			coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );$/;"	r
coneGeometry	js/three.js	/^	var coneGeometry;$/;"	r
coneLength	js/three.js	/^			var coneLength = this.light.distance ? this.light.distance : 1000;$/;"	r
coneWidth	js/three.js	/^			this.cone.scale.set( coneWidth, coneWidth, coneLength );$/;"	r
coneWidth	js/three.js	/^			var coneWidth = coneLength * Math.tan( this.light.angle );$/;"	r
conjugate	js/three.js	/^		conjugate: function () {$/;"	r
connect	js/three.js	/^		connect: function () {$/;"	r
connect	js/three.min.js	/^this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.source.stop(),this.offset=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());$/;"	r
constant	js/three.js	/^						dstArray[ i4 + 3 ] = plane.constant;$/;"	r
constant	js/three.js	/^				this.constant = - referencePoint.dot( normal );$/;"	r
constant	js/three.js	/^			this.constant = - point.dot( this.normal );$/;"	r
constant	js/three.js	/^			this.constant = constant;$/;"	r
constant	js/three.js	/^			this.constant = plane.constant;$/;"	r
constant	js/three.js	/^			this.constant = w;$/;"	r
constant	js/three.js	/^		this.constant = ( constant !== undefined ) ? constant : 0;$/;"	r
constant	js/three.min.js	/^this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius}});Object.assign(za.prototype,{set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=$/;"	r
constantAttenuation	js/GLTFLoader.js	/^					lightNode.intensity = light.constantAttenuation;$/;"	r
construct	js/three.js	/^		construct.prototype.constructor = construct;$/;"	r
constructor	js/GLTFLoader.js	/^		constructor: GLTFLoader,$/;"	r
constructor	js/three.js	/^			var trackType = track.constructor;$/;"	r
constructor	js/three.js	/^		construct.prototype.constructor = construct;$/;"	r
constructor	js/three.js	/^		constructor: AmbientLight,$/;"	r
constructor	js/three.js	/^		constructor: ArrayCamera,$/;"	r
constructor	js/three.js	/^		constructor: Audio,$/;"	r
constructor	js/three.js	/^		constructor: AudioListener,$/;"	r
constructor	js/three.js	/^		constructor: Bone,$/;"	r
constructor	js/three.js	/^		constructor: BooleanKeyframeTrack,$/;"	r
constructor	js/three.js	/^		constructor: Camera,$/;"	r
constructor	js/three.js	/^		constructor: ColorKeyframeTrack,$/;"	r
constructor	js/three.js	/^		constructor: CubicInterpolant,$/;"	r
constructor	js/three.js	/^		constructor: CurvePath,$/;"	r
constructor	js/three.js	/^		constructor: DirectionalLight,$/;"	r
constructor	js/three.js	/^		constructor: DirectionalLightShadow$/;"	r
constructor	js/three.js	/^		constructor: DiscreteInterpolant,$/;"	r
constructor	js/three.js	/^		constructor: Group$/;"	r
constructor	js/three.js	/^		constructor: HemisphereLight,$/;"	r
constructor	js/three.js	/^		constructor: InstancedBufferAttribute,$/;"	r
constructor	js/three.js	/^		constructor: InstancedBufferGeometry,$/;"	r
constructor	js/three.js	/^		constructor: InstancedInterleavedBuffer,$/;"	r
constructor	js/three.js	/^		constructor: LOD,$/;"	r
constructor	js/three.js	/^		constructor: LensFlare,$/;"	r
constructor	js/three.js	/^		constructor: Light,$/;"	r
constructor	js/three.js	/^		constructor: Line,$/;"	r
constructor	js/three.js	/^		constructor: LineLoop,$/;"	r
constructor	js/three.js	/^		constructor: LineSegments,$/;"	r
constructor	js/three.js	/^		constructor: LinearInterpolant,$/;"	r
constructor	js/three.js	/^		constructor: Mesh,$/;"	r
constructor	js/three.js	/^		constructor: NumberKeyframeTrack,$/;"	r
constructor	js/three.js	/^		constructor: OrthographicCamera,$/;"	r
constructor	js/three.js	/^		constructor: PerspectiveCamera,$/;"	r
constructor	js/three.js	/^		constructor: PointLight,$/;"	r
constructor	js/three.js	/^		constructor: Points,$/;"	r
constructor	js/three.js	/^		constructor: PositionalAudio,$/;"	r
constructor	js/three.js	/^		constructor: QuaternionKeyframeTrack,$/;"	r
constructor	js/three.js	/^		constructor: QuaternionLinearInterpolant,$/;"	r
constructor	js/three.js	/^		constructor: RectAreaLight,$/;"	r
constructor	js/three.js	/^		constructor: Scene,$/;"	r
constructor	js/three.js	/^		constructor: Shape,$/;"	r
constructor	js/three.js	/^		constructor: SkinnedMesh,$/;"	r
constructor	js/three.js	/^		constructor: SpotLight,$/;"	r
constructor	js/three.js	/^		constructor: SpotLightShadow,$/;"	r
constructor	js/three.js	/^		constructor: Sprite,$/;"	r
constructor	js/three.js	/^		constructor: StringKeyframeTrack,$/;"	r
constructor	js/three.js	/^		constructor: Texture,$/;"	r
constructor	js/three.js	/^		constructor: VectorKeyframeTrack,$/;"	r
constructor	js/three.js	/^	ArcCurve.prototype.constructor = ArcCurve;$/;"	r
constructor	js/three.js	/^	ArrowHelper.prototype.constructor = ArrowHelper;$/;"	r
constructor	js/three.js	/^	AxesHelper.prototype.constructor = AxesHelper;$/;"	r
constructor	js/three.js	/^	Box3Helper.prototype.constructor = Box3Helper;$/;"	r
constructor	js/three.js	/^	BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;$/;"	r
constructor	js/three.js	/^	BoxGeometry.prototype.constructor = BoxGeometry;$/;"	r
constructor	js/three.js	/^	BoxHelper.prototype.constructor = BoxHelper;$/;"	r
constructor	js/three.js	/^	CameraHelper.prototype.constructor = CameraHelper;$/;"	r
constructor	js/three.js	/^	CanvasTexture.prototype.constructor = CanvasTexture;$/;"	r
constructor	js/three.js	/^	CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;$/;"	r
constructor	js/three.js	/^	CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;$/;"	r
constructor	js/three.js	/^	CircleGeometry.prototype.constructor = CircleGeometry;$/;"	r
constructor	js/three.js	/^	CompressedTexture.prototype.constructor = CompressedTexture;$/;"	r
constructor	js/three.js	/^	ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;$/;"	r
constructor	js/three.js	/^	ConeGeometry.prototype.constructor = ConeGeometry;$/;"	r
constructor	js/three.js	/^	CubeCamera.prototype.constructor = CubeCamera;$/;"	r
constructor	js/three.js	/^	CubeTexture.prototype.constructor = CubeTexture;$/;"	r
constructor	js/three.js	/^	CubicBezierCurve.prototype.constructor = CubicBezierCurve;$/;"	r
constructor	js/three.js	/^	CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;$/;"	r
constructor	js/three.js	/^	CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;$/;"	r
constructor	js/three.js	/^	CylinderGeometry.prototype.constructor = CylinderGeometry;$/;"	r
constructor	js/three.js	/^	DataTexture.prototype.constructor = DataTexture;$/;"	r
constructor	js/three.js	/^	DepthTexture.prototype.constructor = DepthTexture;$/;"	r
constructor	js/three.js	/^	DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;$/;"	r
constructor	js/three.js	/^	DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;$/;"	r
constructor	js/three.js	/^	DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;$/;"	r
constructor	js/three.js	/^	EdgesGeometry.prototype.constructor = EdgesGeometry;$/;"	r
constructor	js/three.js	/^	EllipseCurve.prototype.constructor = EllipseCurve;$/;"	r
constructor	js/three.js	/^	ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;$/;"	r
constructor	js/three.js	/^	ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;$/;"	r
constructor	js/three.js	/^	FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;$/;"	r
constructor	js/three.js	/^	Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;$/;"	r
constructor	js/three.js	/^	Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;$/;"	r
constructor	js/three.js	/^	GridHelper.prototype.constructor = GridHelper;$/;"	r
constructor	js/three.js	/^	HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;$/;"	r
constructor	js/three.js	/^	IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;$/;"	r
constructor	js/three.js	/^	IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;$/;"	r
constructor	js/three.js	/^	ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;$/;"	r
constructor	js/three.js	/^	Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;$/;"	r
constructor	js/three.js	/^	Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;$/;"	r
constructor	js/three.js	/^	Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;$/;"	r
constructor	js/three.js	/^	KeyframeTrackPrototype.constructor = KeyframeTrack;$/;"	r
constructor	js/three.js	/^	LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;$/;"	r
constructor	js/three.js	/^	LatheGeometry.prototype.constructor = LatheGeometry;$/;"	r
constructor	js/three.js	/^	LineBasicMaterial.prototype.constructor = LineBasicMaterial;$/;"	r
constructor	js/three.js	/^	LineCurve.prototype.constructor = LineCurve;$/;"	r
constructor	js/three.js	/^	LineCurve3.prototype.constructor = LineCurve3;$/;"	r
constructor	js/three.js	/^	LineDashedMaterial.prototype.constructor = LineDashedMaterial;$/;"	r
constructor	js/three.js	/^	MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;$/;"	r
constructor	js/three.js	/^	MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;$/;"	r
constructor	js/three.js	/^	MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;$/;"	r
constructor	js/three.js	/^	MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;$/;"	r
constructor	js/three.js	/^	MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;$/;"	r
constructor	js/three.js	/^	MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;$/;"	r
constructor	js/three.js	/^	MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;$/;"	r
constructor	js/three.js	/^	MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;$/;"	r
constructor	js/three.js	/^	MeshToonMaterial.prototype.constructor = MeshToonMaterial;$/;"	r
constructor	js/three.js	/^	OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;$/;"	r
constructor	js/three.js	/^	OctahedronGeometry.prototype.constructor = OctahedronGeometry;$/;"	r
constructor	js/three.js	/^	ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;$/;"	r
constructor	js/three.js	/^	ParametricGeometry.prototype.constructor = ParametricGeometry;$/;"	r
constructor	js/three.js	/^	PathPrototype.constructor = Path;$/;"	r
constructor	js/three.js	/^	PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;$/;"	r
constructor	js/three.js	/^	PlaneGeometry.prototype.constructor = PlaneGeometry;$/;"	r
constructor	js/three.js	/^	PlaneHelper.prototype.constructor = PlaneHelper;$/;"	r
constructor	js/three.js	/^	PointLightHelper.prototype.constructor = PointLightHelper;$/;"	r
constructor	js/three.js	/^	PointsMaterial.prototype.constructor = PointsMaterial;$/;"	r
constructor	js/three.js	/^	PolarGridHelper.prototype.constructor = PolarGridHelper;$/;"	r
constructor	js/three.js	/^	PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;$/;"	r
constructor	js/three.js	/^	PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;$/;"	r
constructor	js/three.js	/^	QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;$/;"	r
constructor	js/three.js	/^	QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;$/;"	r
constructor	js/three.js	/^	RawShaderMaterial.prototype.constructor = RawShaderMaterial;$/;"	r
constructor	js/three.js	/^	RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;$/;"	r
constructor	js/three.js	/^	RingBufferGeometry.prototype.constructor = RingBufferGeometry;$/;"	r
constructor	js/three.js	/^	RingGeometry.prototype.constructor = RingGeometry;$/;"	r
constructor	js/three.js	/^	ShaderMaterial.prototype.constructor = ShaderMaterial;$/;"	r
constructor	js/three.js	/^	ShadowMaterial.prototype.constructor = ShadowMaterial;$/;"	r
constructor	js/three.js	/^	ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;$/;"	r
constructor	js/three.js	/^	ShapeGeometry.prototype.constructor = ShapeGeometry;$/;"	r
constructor	js/three.js	/^	SkeletonHelper.prototype.constructor = SkeletonHelper;$/;"	r
constructor	js/three.js	/^	SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;$/;"	r
constructor	js/three.js	/^	SphereGeometry.prototype.constructor = SphereGeometry;$/;"	r
constructor	js/three.js	/^	SplineCurve.prototype.constructor = SplineCurve;$/;"	r
constructor	js/three.js	/^	SpotLightHelper.prototype.constructor = SpotLightHelper;$/;"	r
constructor	js/three.js	/^	SpriteMaterial.prototype.constructor = SpriteMaterial;$/;"	r
constructor	js/three.js	/^	TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;$/;"	r
constructor	js/three.js	/^	TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;$/;"	r
constructor	js/three.js	/^	TextBufferGeometry.prototype.constructor = TextBufferGeometry;$/;"	r
constructor	js/three.js	/^	TextGeometry.prototype.constructor = TextGeometry;$/;"	r
constructor	js/three.js	/^	TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;$/;"	r
constructor	js/three.js	/^	TorusGeometry.prototype.constructor = TorusGeometry;$/;"	r
constructor	js/three.js	/^	TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;$/;"	r
constructor	js/three.js	/^	TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;$/;"	r
constructor	js/three.js	/^	TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;$/;"	r
constructor	js/three.js	/^	TubeGeometry.prototype.constructor = TubeGeometry;$/;"	r
constructor	js/three.js	/^	Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;$/;"	r
constructor	js/three.js	/^	Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;$/;"	r
constructor	js/three.js	/^	Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;$/;"	r
constructor	js/three.js	/^	Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;$/;"	r
constructor	js/three.js	/^	VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;$/;"	r
constructor	js/three.js	/^	VideoTexture.prototype.constructor = VideoTexture;$/;"	r
constructor	js/three.js	/^	WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;$/;"	r
constructor	js/three.js	/^	WireframeGeometry.prototype.constructor = WireframeGeometry;$/;"	r
constructor	js/three.min.js	/^"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});T.prototype=Object.create(Q.prototype);T.prototype.constructor=T;T.prototype.isLineBasicMaterial=!0;T.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};$/;"	r
constructor	js/three.min.js	/^Ma.prototype.constructor=Ma;Ma.prototype.isLineCurve=!0;Ma.prototype.getPoint=function(a,b){b=b||new D;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Ma.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};Ma.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};hc.prototype=Object.assign(Object.create(ca.prototype),{constructor:hc,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),$/;"	r
constructor	js/three.min.js	/^Object.create(C.prototype);Ga.prototype.constructor=Ga;Ga.prototype.getArrays=function(){var a=this.getAttribute("position"),a=a?Array.prototype.slice.call(a.array):[],b=this.getAttribute("uv"),b=b?Array.prototype.slice.call(b.array):[],c=this.index,c=c?Array.prototype.slice.call(c.array):[];return{position:a,uv:b,index:c}};Ga.prototype.addShapeList=function(a,b){var c=a.length;b.arrays=this.getArrays();for(var d=0;d<c;d++)this.addShape(a[d],b);this.setIndex(b.arrays.index);this.addAttribute("position",$/;"	r
constructor	js/three.min.js	/^Oc.prototype.constructor=Oc;Vb.prototype=Object.create(C.prototype);Vb.prototype.constructor=Vb;var Ha={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g;if(0<Ha.area(a))for(g=0;g<c;g++)e[g]=g;else for(g=0;g<c;g++)e[g]=c-1-g;var h=2*c;for(g=c-1;2<c;){if(0>=h--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}var k=$/;"	r
constructor	js/three.min.js	/^Pb.prototype.constructor=Pb;Hc.prototype=Object.create(L.prototype);Hc.prototype.constructor=Hc;sa.prototype=Object.create(C.prototype);sa.prototype.constructor=sa;Ic.prototype=Object.create(L.prototype);Ic.prototype.constructor=Ic;Qb.prototype=Object.create(sa.prototype);Qb.prototype.constructor=Qb;Jc.prototype=Object.create(L.prototype);Jc.prototype.constructor=Jc;jb.prototype=Object.create(sa.prototype);jb.prototype.constructor=jb;Kc.prototype=Object.create(L.prototype);Kc.prototype.constructor=$/;"	r
constructor	js/three.min.js	/^Zb.prototype.constructor=Zb;$b.prototype=Object.create(C.prototype);$b.prototype.constructor=$b;ac.prototype=Object.create(C.prototype);ac.prototype.constructor=ac;lb.prototype=Object.create(L.prototype);lb.prototype.constructor=lb;Ra.prototype=Object.create(C.prototype);Ra.prototype.constructor=Ra;Tc.prototype=Object.create(lb.prototype);Tc.prototype.constructor=Tc;Uc.prototype=Object.create(Ra.prototype);Uc.prototype.constructor=Uc;Vc.prototype=Object.create(L.prototype);Vc.prototype.constructor=$/;"	r
constructor	js/three.min.js	/^dd.prototype.constructor=dd;dd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var m=f[k],n=m.normal;a.copy(g[m.a]).add(g[m.b]).add(g[m.c]).divideScalar(3).applyMatrix4(d);b.copy(n).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);e.setXYZ(h,$/;"	r
constructor	js/three.min.js	/^eb;z.prototype=Object.create(O.prototype);z.prototype.constructor=z;yc.prototype=Object.create(O.prototype);yc.prototype.constructor=yc;Object.assign(Je.prototype,{computeGroups:function(a){var b=[],c=void 0;a=a.faces;for(var d=0;d<a.length;d++){var e=a[d];if(e.materialIndex!==c){c=e.materialIndex;void 0!==f&&(f.count=3*d-f.start,b.push(f));var f={start:3*d,materialIndex:c}}}void 0!==f&&(f.count=3*d-f.start,b.push(f));this.groups=b},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,$/;"	r
container	js/three.js	/^				container = next;$/;"	r
containsBox	js/three.js	/^		containsBox: function ( box ) {$/;"	r
containsPoint	js/three.js	/^			return function containsPoint( point, a, b, c ) {$/;"	r
containsPoint	js/three.js	/^		containsPoint: function ( point ) {$/;"	r
containsPoint	js/three.js	/^		containsPoint: function () {$/;"	r
containsPoint	js/three.min.js	/^e.applyMatrix4(a.matrixWorld),b.expandByPoint(e);else if(f.isBufferGeometry&&(f=f.attributes.position,void 0!==f))for(c=0,d=f.count;c<d;c++)e.fromBufferAttribute(f,c).applyMatrix4(a.matrixWorld),b.expandByPoint(e)}var b,c,d,e=new p;return function(c){b=this;c.updateMatrixWorld(!0);c.traverse(a);return this}}(),containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=$/;"	r
containsPoint	js/three.min.js	/^new p;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}});Xa.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");$/;"	r
content	js/GLTFLoader.js	/^					content = convertUint8ArrayToString( new Uint8Array( data ) );$/;"	r
content	js/GLTFLoader.js	/^					content = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;$/;"	r
content	js/GLTFLoader.js	/^				content = data;$/;"	r
content	js/GLTFLoader.js	/^				this.content = convertUint8ArrayToString( contentArray );$/;"	r
content	js/GLTFLoader.js	/^			var content;$/;"	r
content	js/GLTFLoader.js	/^		this.content = null;$/;"	r
contentArray	js/GLTFLoader.js	/^				var contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );$/;"	r
context	js/three.js	/^					var context = canvas.getContext( '2d' );$/;"	r
context	js/three.js	/^				context = new ( window.AudioContext || window.webkitAudioContext )();$/;"	r
context	js/three.js	/^				var context = AudioContext.getContext();$/;"	r
context	js/three.js	/^				var context = canvas.getContext( '2d' );$/;"	r
context	js/three.js	/^			_this.context = _gl;$/;"	r
context	js/three.js	/^			context = value;$/;"	r
context	js/three.js	/^			var _gl = _renderer.context;$/;"	r
context	js/three.js	/^			var context = canvas.getContext( '2d' );$/;"	r
context	js/three.js	/^		this.context = AudioContext.getContext();$/;"	r
context	js/three.js	/^		this.context = listener.context;$/;"	r
context	js/three.js	/^		this.context = null;$/;"	r
context	js/three.js	/^		var gl = renderer.context;$/;"	r
context	js/three.js	/^	var context;$/;"	r
contextAttributes	js/three.js	/^			var contextAttributes = {$/;"	r
continue	js/three.js	/^							continue;$/;"	r
continue	js/three.js	/^						continue;$/;"	r
continue	js/three.js	/^					continue;$/;"	r
continued	js/three.js	/^	Object.assign( PropertyBinding.prototype, { \/\/ prototype, continued$/;"	r
contour	js/three.js	/^		var contour = vertices; \/\/ vertices has all points but contour has only points of circumference$/;"	r
contourMovements	js/three.js	/^		var contourMovements = [];$/;"	r
controlInterpolants	js/three.js	/^				controlInterpolants: {$/;"	r
controlInterpolants	js/three.min.js	/^get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=f.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);$/;"	r
convert	js/three.js	/^		function convert( p ) {$/;"	r
convertArray	js/three.js	/^		convertArray: function ( array, type, forceClone ) {$/;"	r
convertArray	js/three.min.js	/^this.width;a.object.height=this.height;return a}});var S={arraySlice:function(a,b,c){return S.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:"number"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-$/;"	r
convertGammaToLinear	js/three.js	/^		convertGammaToLinear: function () {$/;"	r
convertLinearToGamma	js/three.js	/^		convertLinearToGamma: function () {$/;"	r
convertLinearToGamma	js/three.min.js	/^this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)\/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k\/(e+f):$/;"	r
convertUint8ArrayToString	js/GLTFLoader.js	/^	function convertUint8ArrayToString( array ) {$/;"	r
coplanarPoint	js/three.js	/^		coplanarPoint: function ( optionalTarget ) {$/;"	r
copy	js/three.js	/^		copy: function ( box ) {$/;"	r
copy	js/three.js	/^		copy: function ( color ) {$/;"	r
copy	js/three.js	/^		copy: function ( euler ) {$/;"	r
copy	js/three.js	/^		copy: function ( frustum ) {$/;"	r
copy	js/three.js	/^		copy: function ( line ) {$/;"	r
copy	js/three.js	/^		copy: function ( m ) {$/;"	r
copy	js/three.js	/^		copy: function ( other ) {$/;"	r
copy	js/three.js	/^		copy: function ( plane ) {$/;"	r
copy	js/three.js	/^		copy: function ( quaternion ) {$/;"	r
copy	js/three.js	/^		copy: function ( ray ) {$/;"	r
copy	js/three.js	/^		copy: function ( source ) {$/;"	r
copy	js/three.js	/^		copy: function ( source, recursive ) {$/;"	r
copy	js/three.js	/^		copy: function ( sphere ) {$/;"	r
copy	js/three.js	/^		copy: function ( triangle ) {$/;"	r
copy	js/three.js	/^		copy: function ( v ) {$/;"	r
copy	js/three.js	/^	LineBasicMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	LineDashedMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshBasicMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshDepthMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshDistanceMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshLambertMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshNormalMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshPhongMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshPhysicalMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshStandardMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	MeshToonMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	PointsMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	ShaderMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.js	/^	SpriteMaterial.prototype.copy = function ( source ) {$/;"	r
copy	js/three.min.js	/^!0;mb.prototype.copy=function(a){La.prototype.copy.call(this,a);this.defines={PHYSICAL:""};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this};Ia.prototype=Object.create(Q.prototype);Ia.prototype.constructor=Ia;Ia.prototype.isMeshPhongMaterial=!0;Ia.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=$/;"	r
copy	js/three.min.js	/^"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});T.prototype=Object.create(Q.prototype);T.prototype.constructor=T;T.prototype.isLineBasicMaterial=!0;T.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;return this};$/;"	r
copy	js/three.min.js	/^a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});xd.prototype=Object.assign(Object.create(fa.prototype),{constructor:xd,isPointLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});yd.prototype=Object.assign(Object.create(rb.prototype),{constructor:yd});zd.prototype=Object.assign(Object.create(fa.prototype),$/;"	r
copy	js/three.min.js	/^a);this.gradientMap=a.gradientMap;return this};ob.prototype=Object.create(Q.prototype);ob.prototype.constructor=ob;ob.prototype.isMeshNormalMaterial=!0;ob.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;$/;"	r
copy	js/three.min.js	/^a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};nb.prototype=Object.create(Ia.prototype);nb.prototype.constructor=nb;nb.prototype.isMeshToonMaterial=!0;nb.prototype.copy=function(a){Ia.prototype.copy.call(this,$/;"	r
copy	js/three.min.js	/^a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};Wa.prototype=Object.create(Q.prototype);Wa.prototype.constructor=Wa;Wa.prototype.isMeshDistanceMaterial=!0;Wa.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.referencePosition.copy(a.referencePosition);this.nearDistance=a.nearDistance;this.farDistance=a.farDistance;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=$/;"	r
copy	js/three.min.js	/^a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};Aa.prototype=Object.create(Q.prototype);Aa.prototype.constructor=Aa;Aa.prototype.isShaderMaterial=!0;Aa.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;$/;"	r
copy	js/three.min.js	/^a[d].clone();this.clippingPlanes=b;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Va.prototype=Object.create(Q.prototype);Va.prototype.constructor=Va;Va.prototype.isMeshDepthMaterial=!0;Va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=$/;"	r
copy	js/three.min.js	/^cc.prototype=Object.create(Q.prototype);cc.prototype.constructor=cc;cc.prototype.isShadowMaterial=!0;dc.prototype=Object.create(Aa.prototype);dc.prototype.constructor=dc;dc.prototype.isRawShaderMaterial=!0;La.prototype=Object.create(Q.prototype);La.prototype.constructor=La;La.prototype.isMeshStandardMaterial=!0;La.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.defines={STANDARD:""};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=$/;"	r
copy	js/three.min.js	/^copy:function(a){O.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this}});Object.assign(Ze.prototype,{linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize()):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)\/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld)):$/;"	r
copy	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(R.clamp(a.y\/this.radius,-1,1)));return this}});Object.assign(cf.prototype,{set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
copy	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);this.theta=Math.atan2(a.x,a.z);this.y=a.y;return this}});ad.prototype=Object.create(w.prototype);ad.prototype.constructor=ad;ad.prototype.isImmediateRenderObject=!0;bd.prototype=Object.create(P.prototype);bd.prototype.constructor=bd;bd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){var d,e=["a","b","c"];this.object.updateMatrixWorld(!0);$/;"	r
copy	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return this},copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,$/;"	r
copy	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),multiply:function(a){return this.multiplyMatrices(this,$/;"	r
copy	js/three.min.js	/^density:this.density}};Lb.prototype.isFog=!0;Lb.prototype.clone=function(){return new Lb(this.color.getHex(),this.near,this.far)};Lb.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};od.prototype=Object.assign(Object.create(w.prototype),{constructor:od,copy:function(a,b){w.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=$/;"	r
copy	js/three.min.js	/^for(a=0;a<b;a++){var e=this.lensFlares[a];e.x=this.positionScreen.x+c*e.distance;e.y=this.positionScreen.y+d*e.distance;e.wantedRotation=e.x*Math.PI*.25;e.rotation+=.25*(e.wantedRotation-e.rotation)}}});Ya.prototype=Object.create(Q.prototype);Ya.prototype.constructor=Ya;Ya.prototype.isSpriteMaterial=!0;Ya.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this};Bc.prototype=Object.assign(Object.create(w.prototype),{constructor:Bc,$/;"	r
copy	js/three.min.js	/^isHemisphereLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});Object.assign(rb.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var a={};0!==this.bias&&(a.bias=this.bias);1!==this.radius&&(a.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)a.mapSize=this.mapSize.toArray();$/;"	r
copy	js/three.min.js	/^qb;qb.prototype.isLineDashedMaterial=!0;qb.prototype.copy=function(a){T.prototype.copy.call(this,a);this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};var tg=Object.freeze({ShadowMaterial:cc,SpriteMaterial:Ya,RawShaderMaterial:dc,ShaderMaterial:Aa,PointsMaterial:Ba,MeshPhysicalMaterial:mb,MeshStandardMaterial:La,MeshPhongMaterial:Ia,MeshToonMaterial:nb,MeshNormalMaterial:ob,MeshLambertMaterial:pb,MeshDepthMaterial:Va,MeshDistanceMaterial:Wa,MeshBasicMaterial:va,LineDashedMaterial:qb,$/;"	r
copy	js/three.min.js	/^this._w)},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!a||!a.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var c=a._x,d=a._y,e=a._z;a=a.order;var f=Math.cos,g=Math.sin,h=f(c\/2),k=f(d\/2),f=f(e\/2),c=g(c\/2),d=g(d\/2),e=g(e\/2);"XYZ"===a?(this._x=c*k*f+h*d*e,this._y=h*d*f-c*k*e,this._z=h*k*e+c*d*f,this._w=h*k*f-c*d*e):"YXZ"===a?(this._x=c*k*f+$/;"	r
copy	js/three.min.js	/^this.layers.mask=a.layers.mask;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(b=0;b<a.children.length;b++)this.add(a.children[b].clone());return this}});Ka.prototype=Object.assign(Object.create(w.prototype),{constructor:Ka,isCamera:!0,copy:function(a,b){w.prototype.copy.call(this,a,b);this.matrixWorldInverse.copy(a.matrixWorldInverse);$/;"	r
copy	js/three.min.js	/^this.material)).copy(this)}});P.prototype=Object.assign(Object.create(oa.prototype),{constructor:P,isLineSegments:!0});rd.prototype=Object.assign(Object.create(oa.prototype),{constructor:rd,isLineLoop:!0});Ba.prototype=Object.create(Q.prototype);Ba.prototype.constructor=Ba;Ba.prototype.isPointsMaterial=!0;Ba.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};Mb.prototype=Object.assign(Object.create(w.prototype),$/;"	r
copy	js/three.min.js	/^this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};pb.prototype=Object.create(Q.prototype);pb.prototype.constructor=pb;pb.prototype.isMeshLambertMaterial=!0;pb.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=$/;"	r
copy	js/three.min.js	/^zc;gb.prototype=Object.create(C.prototype);gb.prototype.constructor=gb;va.prototype=Object.create(Q.prototype);va.prototype.constructor=va;va.prototype.isMeshBasicMaterial=!0;va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=$/;"	r
copy	js/three.min.js	/^{clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}});var Of=0;Object.assign(L.prototype,ia.prototype,{isGeometry:!0,applyMatrix:function(a){for(var b=(new ta).getNormalMatrix(a),$/;"	r
copy	js/three.min.js	/^{constructor:ke,isInstancedBufferGeometry:!0,copy:function(a){C.prototype.copy.call(this,a);this.maxInstancedCount=a.maxInstancedCount;return this},clone:function(){return(new this.constructor).copy(this)}});Object.defineProperties(le.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(le.prototype,{isInterleavedBufferAttribute:!0,setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*$/;"	r
copy	js/three.min.js	/^{constructor:zd,isDirectionalLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});Ad.prototype=Object.assign(Object.create(fa.prototype),{constructor:Ad,isAmbientLight:!0});Bd.prototype=Object.assign(Object.create(fa.prototype),{constructor:Bd,isRectAreaLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.width=a.width;this.height=a.height;return this},toJSON:function(a){a=fa.prototype.toJSON.call(this,a);a.object.width=$/;"	r
copyArray	js/three.js	/^		copyArray: function ( array ) {$/;"	r
copyAt	js/three.js	/^		copyAt: function ( index1, attribute, index2 ) {$/;"	r
copyAt	js/three.min.js	/^a?a.length\/this.itemSize:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=$/;"	r
copyColorsArray	js/three.js	/^		copyColorsArray: function ( colors ) {$/;"	r
copyGammaToLinear	js/three.js	/^		copyGammaToLinear: function ( color, gammaFactor ) {$/;"	r
copyIndicesArray	js/three.js	/^		copyIndicesArray: function ( indices ) {$/;"	r
copyIndicesArray	js/three.min.js	/^0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new H);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new D);$/;"	r
copyLinearToGamma	js/three.js	/^		copyLinearToGamma: function ( color, gammaFactor ) {$/;"	r
copyPosition	js/three.js	/^		copyPosition: function ( m ) {$/;"	r
copySampleValue_	js/three.js	/^		copySampleValue_: function ( index ) {$/;"	r
copyVector2sArray	js/three.js	/^		copyVector2sArray: function ( vectors ) {$/;"	r
copyVector3sArray	js/three.js	/^		copyVector3sArray: function ( vectors ) {$/;"	r
copyVector3sArray	js/three.min.js	/^b[c++]=f.x;b[c++]=f.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new p);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z}return this},copyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new ba);b[c++]=f.x;b[c++]=f.y;b[c++]=f.z;$/;"	r
copyVector4sArray	js/three.js	/^		copyVector4sArray: function ( vectors ) {$/;"	r
correctSeam	js/three.js	/^		function correctSeam() {$/;"	r
correctUV	js/three.js	/^		function correctUV( uv, stride, vector, azimuth ) {$/;"	r
correctUVs	js/three.js	/^		function correctUVs() {$/;"	r
cos	js/three.js	/^					cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,$/;"	r
cos	js/three.js	/^				var cos = - Math.cos( v );$/;"	r
cos	js/three.js	/^			var cos = Math.cos( phi );$/;"	r
cos	js/three.js	/^			var cos = Math.cos( this.aRotation );$/;"	r
cos	js/three.js	/^			var cos = Math.cos;$/;"	r
cos	js/three.min.js	/^this._w)},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!a||!a.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var c=a._x,d=a._y,e=a._z;a=a.order;var f=Math.cos,g=Math.sin,h=f(c\/2),k=f(d\/2),f=f(e\/2),c=g(c\/2),d=g(d\/2),e=g(e\/2);"XYZ"===a?(this._x=c*k*f+h*d*e,this._y=h*d*f-c*k*e,this._z=h*k*e+c*d*f,this._w=h*k*f-c*d*e):"YXZ"===a?(this._x=c*k*f+$/;"	r
cosHalfTheta	js/three.js	/^				cosHalfTheta = - cosHalfTheta;$/;"	r
cosHalfTheta	js/three.js	/^			var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;$/;"	r
cosTheta	js/three.js	/^					var cosTheta = Math.cos( theta );$/;"	r
cosTheta	js/three.js	/^				var cosTheta = Math.cos( theta );$/;"	r
count	js/GLTFLoader.js	/^		\/\/ avoid having more than one THREE.Mesh with the same name, count$/;"	r
count	js/three.js	/^						count = 2 * nv;$/;"	r
count	js/three.js	/^						group.count = ( i * 3 ) - group.start;$/;"	r
count	js/three.js	/^						var count = group.count;$/;"	r
count	js/three.js	/^					count = group.count;$/;"	r
count	js/three.js	/^					groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];$/;"	r
count	js/three.js	/^					var count = group.count;$/;"	r
count	js/three.js	/^				count = position.data.count;$/;"	r
count	js/three.js	/^				count: count,$/;"	r
count	js/three.js	/^				dataCount = index.count;$/;"	r
count	js/three.js	/^				dataCount = position.count;$/;"	r
count	js/three.js	/^				group.count = ( i * 3 ) - group.start;$/;"	r
count	js/three.js	/^				updateRange.count = - 1; \/\/ reset range$/;"	r
count	js/three.js	/^				var count = 2 * nv; \/* error detection *\/$/;"	r
count	js/three.js	/^			else if ( mode === gl.POINTS ) infoRender.points += count;$/;"	r
count	js/three.js	/^			extension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );$/;"	r
count	js/three.js	/^			gl.drawElements( mode, count, type, start * bytesPerElement );$/;"	r
count	js/three.js	/^			infoRender.vertices += count;$/;"	r
count	js/three.js	/^			nNormals = objGeometry.attributes.normal.count;$/;"	r
count	js/three.js	/^			object.count = 0;$/;"	r
count	js/three.js	/^			this.count = array !== undefined ? array.length \/ this.itemSize : 0;$/;"	r
count	js/three.js	/^			this.count = array !== undefined ? array.length \/ this.stride : 0;$/;"	r
count	js/three.js	/^			this.count = source.count;$/;"	r
count	js/three.js	/^			this.drawRange.count = count;$/;"	r
count	js/three.js	/^			this.drawRange.count = source.drawRange.count;$/;"	r
count	js/three.js	/^		addDrawCall: function ( start, count, indexOffset ) {$/;"	r
count	js/three.js	/^		addGroup: function ( start, count, materialIndex ) {$/;"	r
count	js/three.js	/^		count: {$/;"	r
count	js/three.js	/^		this.count = array !== undefined ? array.length \/ itemSize : 0;$/;"	r
count	js/three.js	/^		this.count = array !== undefined ? array.length \/ stride : 0;$/;"	r
count	js/three.js	/^		this.drawRange = { start: 0, count: Infinity };$/;"	r
count	js/three.js	/^		this.updateRange = { offset: 0, count: - 1 };$/;"	r
count	js/three.min.js	/^Object.assign(jc.prototype,{isInterleavedBuffer:!0,setArray:function(a){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==a?a.length\/this.stride:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.count=a.count;this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+$/;"	r
count	js/three.min.js	/^new p;if(null!==a.index){k=a.attributes.position;q=a.index;var r=a.groups;0===r.length&&(r=[{start:0,count:q.count,materialIndex:0}]);a=0;for(e=r.length;a<e;++a)for(l=r[a],c=l.start,d=l.count,l=c,d=c+d;l<d;l+=3)for(c=0;3>c;c++)n=q.getX(l+c),u=q.getX(l+(c+1)%3),f[0]=Math.min(n,u),f[1]=Math.max(n,u),n=f[0]+","+f[1],void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]});for(n in g)l=g[n],h.fromBufferAttribute(k,l.index1),b.push(h.x,h.y,h.z),h.fromBufferAttribute(k,l.index2),b.push(h.x,h.y,h.z)}else for(k=a.attributes.position,$/;"	r
count	js/three.min.js	/^removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToBufferAttribute(b),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new ta).getNormalMatrix(a).applyToBufferAttribute(b),b.needsUpdate=!0);null!==$/;"	r
count	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
count	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
count	js/three.min.js	/^{};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Hb(a,b,c,d,e,f){L.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fb(a,b,c,d,e,f));this.mergeVertices()}function fb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,m,ya,ja,ma){var B=f\/ya,v=g\/ja,t=f\/2,x=g\/2,I=m\/2;g=ya+1;var A=ja+1,y=f=0,J,w,z=new p;for(w=0;w<A;w++){var D=w*v-x;for(J=0;J<g;J++)z[a]=$/;"	r
counter	js/three.js	/^				var counter = indepHoles.length * 2;$/;"	r
cpx	js/three.js	/^								cpx = outline[ i ++ ] * scale + offsetX;$/;"	r
cpx	js/three.js	/^					cpx = px - cx; cpy = py - cy;$/;"	r
cpx0	js/three.js	/^										CubicBezier( t, cpx0, cpx1, cpx2, cpx );$/;"	r
cpx0	js/three.js	/^										QuadraticBezier( t, cpx0, cpx1, cpx );$/;"	r
cpx0	js/three.js	/^									cpx0 = laste.x;$/;"	r
cpx1	js/three.js	/^								cpx1 = outline[ i ++ ] * scale + offsetX;$/;"	r
cpx2	js/three.js	/^								cpx2 = outline[ i ++ ] * scale + offsetX;$/;"	r
cpy	js/three.js	/^								cpy = outline[ i ++ ] * scale + offsetY;$/;"	r
cpy0	js/three.js	/^										CubicBezier( t, cpy0, cpy1, cpy2, cpy );$/;"	r
cpy0	js/three.js	/^										QuadraticBezier( t, cpy0, cpy1, cpy );$/;"	r
cpy0	js/three.js	/^									cpy0 = laste.y;$/;"	r
cpy1	js/three.js	/^								cpy1 = outline[ i ++ ] * scale + offsetY;$/;"	r
cpy1	js/three.js	/^								path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );$/;"	r
cpy1	js/three.js	/^								path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );$/;"	r
cpy2	js/three.js	/^								cpy2 = outline[ i ++ ] * scale + offsetY;$/;"	r
create	js/three.js	/^		create: function ( root, path, parsedPath ) {$/;"	r
create	js/three.js	/^	Curve.create = function ( construct, getPoint ) {$/;"	r
create	js/three.min.js	/^c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}});Object.assign(pa,{Composite:Ve,create:function(a,b,c){return a&&a.isAnimationObjectGroup?new pa.Composite(a,b,c):new pa(a,b,c)},sanitizeNodeName:function(a){return a.replace(\/\\s\/g,"_").replace(\/[^\\w-]\/g,"")},parseTrackName:function(){var a=new RegExp("^"+\/((?:[\\w-]+[\\\/:])*)\/.source+\/([\\w-\\.]+)?\/.source+\/(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?\/.source+\/\\.([\\w-]+)(?:\\[(.+)\\])?\/.source+$/;"	r
create	js/three.min.js	/^id.prototype=Object.create(Sa.prototype);id.prototype.constructor=id;id.prototype.isArcCurve=!0;ca.create=function(a,b){console.log("THREE.Curve.create() has been deprecated");a.prototype=Object.create(ca.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};Object.assign(hc.prototype,{createPointsGeometry:function(a){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getPoints(a);return this.createGeometry(a)},$/;"	r
createBuffer	js/three.js	/^		function createBuffer( attribute, bufferType ) {$/;"	r
createDefaultMaterial	js/GLTFLoader.js	/^	function createDefaultMaterial() {$/;"	r
createGeometry	js/three.js	/^		createGeometry: function ( points ) {$/;"	r
createInterpolant	js/three.js	/^			this.createInterpolant = factoryMethod;$/;"	r
createMaterial	js/GLTFLoader.js	/^			createMaterial: function ( params ) {$/;"	r
createMaterial	js/three.js	/^			return function createMaterial( m, texturePath, crossOrigin ) {$/;"	r
createMaterial	js/three.js	/^		createMaterial: ( function () {$/;"	r
createMultiMaterialObject	js/three.js	/^		createMultiMaterialObject: function ( geometry, materials ) {$/;"	r
createPath	js/three.js	/^			function createPath( c, scale, offsetX, offsetY ) {$/;"	r
createPaths	js/three.js	/^			function createPaths( text ) {$/;"	r
createPointsGeometry	js/three.js	/^		createPointsGeometry: function ( divisions ) {$/;"	r
createProgram	js/three.js	/^		function createProgram( shader ) {$/;"	r
createProgram	js/three.js	/^		function createProgram() {$/;"	r
createSpacedPointsGeometry	js/three.js	/^		createSpacedPointsGeometry: function ( divisions ) {$/;"	r
createSpacedPointsGeometry	js/three.min.js	/^createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getSpacedPoints(a);return this.createGeometry(a)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var b=new L,c=0,d=a.length;c<d;c++){var e=a[c];b.vertices.push(new p(e.x,e.y,e.z||0))}return b}});ef.prototype=$/;"	r
createTexture	js/three.js	/^		function createTexture( type, target, count ) {$/;"	r
cross	js/three.js	/^		cross: function ( v, w ) {$/;"	r
crossFadeFrom	js/three.js	/^		crossFadeFrom: function ( fadeOutAction, duration, warp ) {$/;"	r
crossFadeTo	js/three.js	/^		crossFadeTo: function ( fadeInAction, duration, warp ) {$/;"	r
crossFadeTo	js/three.min.js	/^this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,e=c\/d;a.warp(1,d\/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},$/;"	r
crossOrigin	js/GLTFLoader.js	/^				crossOrigin: this.crossOrigin,$/;"	r
crossOrigin	js/GLTFLoader.js	/^			this.crossOrigin = value;$/;"	r
crossOrigin	js/GLTFLoader.js	/^		crossOrigin: 'Anonymous',$/;"	r
crossOrigin	js/three.js	/^				if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;$/;"	r
crossOrigin	js/three.js	/^			this.crossOrigin = value;$/;"	r
crossOrigin	js/three.js	/^		crossOrigin: 'Anonymous',$/;"	r
crossOrigin	js/three.js	/^		crossOrigin: undefined,$/;"	r
crossVector	js/three.js	/^		crossVector: function ( vector ) {$/;"	r
crossVectors	js/three.js	/^		crossVectors: function ( a, b ) {$/;"	r
cs	js/three.js	/^			var cs = Math.cos( quOverP );$/;"	r
cu	js/three.js	/^			var cu = Math.cos( u );$/;"	r
cube	js/three.js	/^		cube: {$/;"	r
cube2DViewPorts	js/three.js	/^		var cube2DViewPorts = [$/;"	r
cubeDirections	js/three.js	/^		var cubeDirections = [$/;"	r
cubeImage	js/three.js	/^					var cubeImage = [];$/;"	r
cubeResolution	js/three.js	/^		this.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );$/;"	r
cubeUps	js/three.js	/^		var cubeUps = [$/;"	r
cube_frag	js/three.js	/^		cube_frag: cube_frag,$/;"	r
cube_frag	js/three.js	/^	var cube_frag = "uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n";$/;"	r
cube_frag	js/three.min.js	/^uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n",cube_frag:"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n",$/;"	r
cube_uv_reflection_fragment	js/three.js	/^		cube_uv_reflection_fragment: cube_uv_reflection_fragment,$/;"	r
cube_uv_reflection_fragment	js/three.js	/^	var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 \/ cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) \/ exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 \/ powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz \/ abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n";$/;"	r
cube_vert	js/three.js	/^		cube_vert: cube_vert,$/;"	r
cube_vert	js/three.js	/^	var cube_vert = "varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n";$/;"	r
cube_vert	js/three.min.js	/^cube_vert:"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n",depth_frag:"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n",$/;"	r
cullFace	js/three.js	/^				this.shadowMap.cullFace = value;$/;"	r
cullFace	js/three.js	/^			currentCullFace = cullFace;$/;"	r
cullFace	js/three.js	/^		cullFace: {$/;"	r
cullFace	js/three.min.js	/^this.shadowMap.cullFace=a}}});Object.defineProperties(Ie.prototype,{cullFace:{get:function(){return this.renderReverseSided?2:1},set:function(a){a=1!==a;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+a+".");this.renderReverseSided=a}}});Object.defineProperties(Db.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");$/;"	r
cumulativeWeight	js/three.js	/^				currentWeight = this.cumulativeWeight;$/;"	r
cumulativeWeight	js/three.js	/^				weight = this.cumulativeWeight,$/;"	r
cumulativeWeight	js/three.js	/^			this.cumulativeWeight = 0;$/;"	r
cumulativeWeight	js/three.js	/^			this.cumulativeWeight = currentWeight;$/;"	r
cumulativeWeight	js/three.js	/^		this.cumulativeWeight = 0;$/;"	r
cumulativeWeight	js/three.min.js	/^this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);break}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=$/;"	r
cumulativeWeight	js/three.min.js	/^void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)}function je(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case "quaternion":b=this._slerp;break;case "string":case "bool":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0}function Ve(a,b,c){c=c||pa.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,$/;"	r
currTime	js/three.js	/^				prevTime = currTime;$/;"	r
currTime	js/three.js	/^				var currTime = times[ i ];$/;"	r
current	js/three.js	/^				current = this.getPoint( p \/ divisions );$/;"	r
current	js/three.js	/^				last = current;$/;"	r
current	js/three.js	/^			var current, last = this.getPoint( 0 );$/;"	r
currentBlendDst	js/three.js	/^					currentBlendDst = blendDst;$/;"	r
currentBlendDst	js/three.js	/^				currentBlendDst = null;$/;"	r
currentBlendDst	js/three.js	/^		var currentBlendDst = null;$/;"	r
currentBlendDstAlpha	js/three.js	/^					currentBlendDstAlpha = blendDstAlpha;$/;"	r
currentBlendDstAlpha	js/three.js	/^				currentBlendDstAlpha = null;$/;"	r
currentBlendDstAlpha	js/three.js	/^		var currentBlendDstAlpha = null;$/;"	r
currentBlendEquation	js/three.js	/^					currentBlendEquation = blendEquation;$/;"	r
currentBlendEquation	js/three.js	/^				currentBlendEquation = null;$/;"	r
currentBlendEquation	js/three.js	/^		var currentBlendEquation = null;$/;"	r
currentBlendEquationAlpha	js/three.js	/^					currentBlendEquationAlpha = blendEquationAlpha;$/;"	r
currentBlendEquationAlpha	js/three.js	/^				currentBlendEquationAlpha = null;$/;"	r
currentBlendEquationAlpha	js/three.js	/^		var currentBlendEquationAlpha = null;$/;"	r
currentBlendSrc	js/three.js	/^					currentBlendSrc = blendSrc;$/;"	r
currentBlendSrc	js/three.js	/^				currentBlendSrc = null;$/;"	r
currentBlendSrc	js/three.js	/^		var currentBlendSrc = null;$/;"	r
currentBlendSrcAlpha	js/three.js	/^					currentBlendSrcAlpha = blendSrcAlpha;$/;"	r
currentBlendSrcAlpha	js/three.js	/^				currentBlendSrcAlpha = null;$/;"	r
currentBlendSrcAlpha	js/three.js	/^		var currentBlendSrcAlpha = null;$/;"	r
currentBlending	js/three.js	/^			currentBlending = blending;$/;"	r
currentBlending	js/three.js	/^			currentBlending = null;$/;"	r
currentBlending	js/three.js	/^		var currentBlending = null;$/;"	r
currentBoundTextures	js/three.js	/^			currentBoundTextures = {};$/;"	r
currentBoundTextures	js/three.js	/^		var currentBoundTextures = {};$/;"	r
currentColorClear	js/three.js	/^			var currentColorClear = new Vector4( 0, 0, 0, 0 );$/;"	r
currentColorMask	js/three.js	/^						currentColorMask = colorMask;$/;"	r
currentColorMask	js/three.js	/^					currentColorMask = null;$/;"	r
currentColorMask	js/three.js	/^			var currentColorMask = null;$/;"	r
currentCullFace	js/three.js	/^			currentCullFace = cullFace;$/;"	r
currentCullFace	js/three.js	/^			currentCullFace = null;$/;"	r
currentCullFace	js/three.js	/^		var currentCullFace = null;$/;"	r
currentDepthClear	js/three.js	/^						currentDepthClear = depth;$/;"	r
currentDepthClear	js/three.js	/^					currentDepthClear = null;$/;"	r
currentDepthClear	js/three.js	/^			var currentDepthClear = null;$/;"	r
currentDepthFunc	js/three.js	/^						currentDepthFunc = depthFunc;$/;"	r
currentDepthFunc	js/three.js	/^					currentDepthFunc = null;$/;"	r
currentDepthFunc	js/three.js	/^			var currentDepthFunc = null;$/;"	r
currentDepthMask	js/three.js	/^						currentDepthMask = depthMask;$/;"	r
currentDepthMask	js/three.js	/^					currentDepthMask = null;$/;"	r
currentDepthMask	js/three.js	/^			var currentDepthMask = null;$/;"	r
currentFlipSided	js/three.js	/^				currentFlipSided = flipSided;$/;"	r
currentFlipSided	js/three.js	/^			currentFlipSided = null;$/;"	r
currentFlipSided	js/three.js	/^		var currentFlipSided = null;$/;"	r
currentLineWidth	js/three.js	/^				currentLineWidth = width;$/;"	r
currentLineWidth	js/three.js	/^		var currentLineWidth = null;$/;"	r
currentPath	js/three.js	/^			this.currentPath = new Path();$/;"	r
currentPath	js/three.js	/^		this.currentPath = null;$/;"	r
currentPixelRatio	js/three.js	/^				currentPixelRatio = renderer.getPixelRatio();$/;"	r
currentPoint	js/three.js	/^		this.currentPoint = new Vector2();$/;"	r
currentPolygonOffsetFactor	js/three.js	/^					currentPolygonOffsetFactor = factor;$/;"	r
currentPolygonOffsetFactor	js/three.js	/^		var currentPolygonOffsetFactor = null;$/;"	r
currentPolygonOffsetUnits	js/three.js	/^					currentPolygonOffsetUnits = units;$/;"	r
currentPolygonOffsetUnits	js/three.js	/^		var currentPolygonOffsetUnits = null;$/;"	r
currentPremultipledAlpha	js/three.js	/^			currentPremultipledAlpha = premultipliedAlpha;$/;"	r
currentPremultipledAlpha	js/three.js	/^		var currentPremultipledAlpha = false;$/;"	r
currentProgram	js/three.js	/^				currentProgram = program;$/;"	r
currentProgram	js/three.js	/^			currentProgram = null;$/;"	r
currentProgram	js/three.js	/^		var currentProgram = null;$/;"	r
currentRenderList	js/three.js	/^			currentRenderList = renderLists.get( scene, camera );$/;"	r
currentRenderList	js/three.js	/^		var currentRenderList = null;$/;"	r
currentRenderTarget	js/three.js	/^			var currentRenderTarget = renderer.getRenderTarget();$/;"	r
currentScissor	js/three.js	/^		var currentScissor = new Vector4();$/;"	r
currentSize	js/three.js	/^				currentSize = renderer.getSize();$/;"	r
currentSize	js/three.js	/^		var currentSize, currentPixelRatio;$/;"	r
currentStencilClear	js/three.js	/^						currentStencilClear = stencil;$/;"	r
currentStencilClear	js/three.js	/^					currentStencilClear = null;$/;"	r
currentStencilClear	js/three.js	/^			var currentStencilClear = null;$/;"	r
currentStencilFail	js/three.js	/^						currentStencilFail = stencilFail;$/;"	r
currentStencilFail	js/three.js	/^					currentStencilFail = null;$/;"	r
currentStencilFail	js/three.js	/^			var currentStencilFail = null;$/;"	r
currentStencilFunc	js/three.js	/^						currentStencilFunc = stencilFunc;$/;"	r
currentStencilFunc	js/three.js	/^					currentStencilFunc = null;$/;"	r
currentStencilFunc	js/three.js	/^			var currentStencilFunc = null;$/;"	r
currentStencilFuncMask	js/three.js	/^						currentStencilFuncMask = stencilMask;$/;"	r
currentStencilFuncMask	js/three.js	/^					currentStencilFuncMask = null;$/;"	r
currentStencilFuncMask	js/three.js	/^			var currentStencilFuncMask = null;$/;"	r
currentStencilMask	js/three.js	/^						currentStencilMask = stencilMask;$/;"	r
currentStencilMask	js/three.js	/^					currentStencilMask = null;$/;"	r
currentStencilMask	js/three.js	/^			var currentStencilMask = null;$/;"	r
currentStencilRef	js/three.js	/^						currentStencilRef = stencilRef;$/;"	r
currentStencilRef	js/three.js	/^					currentStencilRef = null;$/;"	r
currentStencilRef	js/three.js	/^			var currentStencilRef = null;$/;"	r
currentStencilZFail	js/three.js	/^						currentStencilZFail = stencilZFail;$/;"	r
currentStencilZFail	js/three.js	/^					currentStencilZFail = null;$/;"	r
currentStencilZFail	js/three.js	/^			var currentStencilZFail = null;$/;"	r
currentStencilZPass	js/three.js	/^						currentStencilZPass = stencilZPass;$/;"	r
currentStencilZPass	js/three.js	/^					currentStencilZPass = null;$/;"	r
currentStencilZPass	js/three.js	/^			var currentStencilZPass = null;$/;"	r
currentTextureSlot	js/three.js	/^				currentTextureSlot = webglSlot;$/;"	r
currentTextureSlot	js/three.js	/^			currentTextureSlot = null;$/;"	r
currentTextureSlot	js/three.js	/^		var currentTextureSlot = null;$/;"	r
currentTime	js/three.js	/^			this.startTime = this.context.currentTime;$/;"	r
currentValue	js/three.js	/^				var currentValue = this[ key ];$/;"	r
currentViewport	js/three.js	/^		var currentViewport = new Vector4();$/;"	r
currentWeight	js/three.js	/^				currentWeight = this.cumulativeWeight;$/;"	r
currentWeight	js/three.js	/^				currentWeight = weight;$/;"	r
currentWeight	js/three.js	/^			this.cumulativeWeight = currentWeight;$/;"	r
curve	js/three.js	/^					var curve = this.curves[ i ];$/;"	r
curve	js/three.js	/^				var curve = curves[ i ];$/;"	r
curve	js/three.js	/^			var curve = new CubicBezierCurve($/;"	r
curve	js/three.js	/^			var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );$/;"	r
curve	js/three.js	/^			var curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );$/;"	r
curve	js/three.js	/^			var curve = new QuadraticBezierCurve($/;"	r
curve	js/three.js	/^			var curve = new SplineCurve( npts );$/;"	r
curveLengths	js/three.js	/^			var curveLengths = this.getCurveLengths();$/;"	r
curveSegments	js/three.js	/^			curveSegments = curveSegments.curveSegments;$/;"	r
curveSegments	js/three.js	/^			curveSegments: curveSegments$/;"	r
curveSegments	js/three.js	/^		curveSegments = curveSegments || 12;$/;"	r
curveSegments	js/three.js	/^		var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;$/;"	r
curveSegments	js/three.min.js	/^this.attributes.normal.array,e=new p,f=new p,g=new p,c=b*a.length*3,n=q=0;q<a.length;q++,n+=3)e.x=d[n+0],e.y=d[n+1],e.z=d[n+2],f.x=d[c+n+0],f.y=d[c+n+1],f.z=d[c+n+2],g.addVectors(e,f).normalize(),d[n+0]=d[c+n+0]=g.x,d[n+1]=d[c+n+1]=g.y,d[n+2]=d[c+n+2]=g.z}function Zb(a,b){L.call(this);this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new $b(a,$/;"	r
curveSegments	js/three.min.js	/^this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,k=0;if(!1===Array.isArray(a))c(a);else for(var l=0;l<a.length;l++)c(a[l]),this.addGroup(h,k,l),h+=k,k=0;this.setIndex(d);this.addAttribute("position",new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function ac(a,b){C.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:b};var c=[];b=Math.cos(R.DEG2RAD*(void 0!==b?b:1));var d=[0,0],e={},f=["a","b","c"];if(a.isBufferGeometry){var g=$/;"	r
curveType	js/three.js	/^		this.curveType = 'centripetal';$/;"	r
curves	js/three.js	/^					newShapes[ mainIdx ].s.curves = tmpPath.curves;$/;"	r
curves	js/three.js	/^					tmpShape.curves = tmpPath.curves;$/;"	r
curves	js/three.js	/^				tmpShape.curves = tmpPath.curves;$/;"	r
curves	js/three.js	/^			for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {$/;"	r
curves	js/three.js	/^		this.curves = [];$/;"	r
curves	js/three.min.js	/^this.v2=b}function hc(){ca.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}function Sa(a,b,c,d,e,f,g,h){ca.call(this);this.type="EllipseCurve";this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0}function wb(a){ca.call(this);this.type="SplineCurve";this.points=void 0===a?[]:a}function xb(a,b,c,d){ca.call(this);this.type="CubicBezierCurve";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function yb(a,b,c){ca.call(this);$/;"	r
customDefines	js/three.js	/^				customDefines$/;"	r
customDefines	js/three.js	/^				customDefines,$/;"	r
customDefines	js/three.js	/^		var customDefines = generateDefines( defines );$/;"	r
customDepthMaterial	js/three.js	/^			var customMaterial = object.customDepthMaterial;$/;"	r
customDistanceMaterial	js/three.js	/^				customMaterial = object.customDistanceMaterial;$/;"	r
customExtensions	js/three.js	/^				customExtensions,$/;"	r
customExtensions	js/three.js	/^		var customExtensions = generateExtensions( material.extensions, parameters, extensions );$/;"	r
customMaterial	js/three.js	/^				customMaterial = object.customDistanceMaterial;$/;"	r
customMaterial	js/three.js	/^				result = customMaterial;$/;"	r
customMaterial	js/three.js	/^			var customMaterial = object.customDepthMaterial;$/;"	r
customUpdateCallback	js/three.js	/^			this.customUpdateCallback = source.customUpdateCallback;$/;"	r
customUpdateCallback	js/three.js	/^		this.customUpdateCallback = undefined;$/;"	r
cutKey	js/three.js	/^							cutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;$/;"	r
cx	js/three.js	/^				cx = contour[ verts[ w ] ].x;$/;"	r
cx	js/three.js	/^				var cx = - tube * Math.cos( v );$/;"	r
cx	js/three.js	/^				var cx, cy, px, py;$/;"	r
cx	js/three.js	/^			var cx = ( this.right + this.left ) \/ 2;$/;"	r
cy	js/three.js	/^				cy = contour[ verts[ w ] ].y;$/;"	r
cy	js/three.js	/^				var cy = tube * Math.sin( v );$/;"	r
cy	js/three.js	/^			var cy = ( this.top + this.bottom ) \/ 2;$/;"	r
d	js/three.js	/^						d = layeroffset + j + slen2;$/;"	r
d	js/three.js	/^						var d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;$/;"	r
d	js/three.js	/^					var d = ( radialSegments + 1 ) * ( j - 1 ) + i;$/;"	r
d	js/three.js	/^					var d = indexArray[ y ][ x + 1 ];$/;"	r
d	js/three.js	/^					var d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;$/;"	r
d	js/three.js	/^				d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],$/;"	r
d	js/three.js	/^				te[ 8 ] = d;$/;"	r
d	js/three.js	/^				this.lineDistances[ i ] = d;$/;"	r
d	js/three.js	/^				var d = ( i + 1 ) * sliceCount + j;$/;"	r
d	js/three.js	/^				var d = ( ix + 1 ) + gridX1 * iy;$/;"	r
d	js/three.js	/^				var d = ( radialSegments + 1 ) * ( j - 1 ) + i;$/;"	r
d	js/three.js	/^				var d = ( tubularSegments + 1 ) * j + i;$/;"	r
d	js/three.js	/^				var d = base + 1;$/;"	r
d	js/three.js	/^				var d = grid[ iy + 1 ][ ix + 1 ];$/;"	r
d	js/three.js	/^				var d = segment + 1;$/;"	r
d	js/three.js	/^			this.lightDistance.scale.set( d, d, d );$/;"	r
d	js/three.js	/^			var d = - 2 * far * near \/ ( far - near );$/;"	r
d	js/three.js	/^			var d = 0;$/;"	r
d	js/three.js	/^			var d = t * this.getLength();$/;"	r
d	js/three.js	/^		var d = light.distance;$/;"	r
d	js/three.js	/^		var d = this.light.distance;$/;"	r
d	js/three.min.js	/^!a.frustumCulled||Td.intersectsObject(a)){c&&Jb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(md);var d=ta.update(a),e=a.material;if(Array.isArray(e))for(var f=d.groups,g=0,h=f.length;g<h;g++){var l=f[g],n=e[l.materialIndex];n&&n.visible&&D.push(a,d,n,Jb.z,l)}else e.visible&&D.push(a,d,e,Jb.z,null)}a=a.children;g=0;for(h=a.length;g<h;g++)k(a[g],b,c)}}function l(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,l=g.geometry,k=void 0===d?g.material:d,g=g.group;if(c.isArrayCamera){Z=$/;"	r
d	js/three.min.js	/^"$"),b=["material","materials","bones"];return function(c){var d=a.exec(c);if(!d)throw Error("PropertyBinding: Cannot parse trackName: "+c);var d={nodeName:d[2],objectName:d[3],objectIndex:d[4],propertyName:d[5],propertyIndex:d[6]},e=d.nodeName&&d.nodeName.lastIndexOf(".");if(void 0!==e&&-1!==e){var f=d.nodeName.substring(e+1);-1!==b.indexOf(f)&&(d.nodeName=d.nodeName.substring(0,e),d.objectName=f)}if(null===d.propertyName||0===d.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+$/;"	r
d	js/three.min.js	/^(a=a.data);return b[a.uuid]},remove:function(c){c.isInterleavedBufferAttribute&&(c=c.data);var d=b[c.uuid];d&&(a.deleteBuffer(d.buffer),delete b[c.uuid])},update:function(c,d){c.isInterleavedBufferAttribute&&(c=c.data);var e=b[c.uuid];if(void 0===e){var e=c.uuid,f=c.array,g=c.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW,h=a.createBuffer();a.bindBuffer(d,h);a.bufferData(d,f,g);c.onUploadCallback();d=a.FLOAT;f instanceof Float32Array?d=a.FLOAT:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):$/;"	r
d	js/three.min.js	/^(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c];b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),$/;"	r
d	js/three.min.js	/^(r=ra.CreateClipsFromMorphTargetSequences(c.morphTargets,10),d=d.concat(r));0<d.length&&(c.animations=d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};a=gc.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:a}}}()});Object.assign(Re.prototype,{load:function(a,b,c,d){""===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf("\/")+1));var e=this;(new Ja(e.manager)).load(a,function(c){var f=$/;"	r
d	js/three.min.js	/^--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new Xc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;$/;"	r
d	js/three.min.js	/^1);c=R.clamp(c,0,1);d=R.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1\/3),this.g=a(d,c,b),this.b=a(d,c,b-1\/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=\/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)\/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=\/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d))return this.r=Math.min(255,$/;"	r
d	js/three.min.js	/^1],c[d-2]).add(c[d-1]),c=Nd);if("centripetal"===this.curveType||"chordal"===this.curveType){var k="chordal"===this.curveType?.5:.25,d=Math.pow(f.distanceToSquared(g),k),e=Math.pow(g.distanceToSquared(h),k),k=Math.pow(h.distanceToSquared(c),k);1E-4>e&&(e=1);1E-4>d&&(d=e);1E-4>k&&(k=e);te.initNonuniformCatmullRom(f.x,g.x,h.x,c.x,d,e,k);ue.initNonuniformCatmullRom(f.y,g.y,h.y,c.y,d,e,k);ve.initNonuniformCatmullRom(f.z,g.z,h.z,c.z,d,e,k)}else"catmullrom"===this.curveType&&(d=void 0!==this.tension?this.tension:$/;"	r
d	js/three.min.js	/^5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Lc(a,b){L.call(this);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))\/2,d=1\/c;sa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,$/;"	r
d	js/three.min.js	/^C+r*L+p*d;b[3]=t*B+x*w+y*E+c*K;b[7]=t*I+x*z+y*H+c*N;b[11]=t*A+x*D+y*M+c*U;b[15]=t*J+x*C+y*L+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),determinant:function(){var a=$/;"	r
d	js/three.min.js	/^Math.cos(b);b=Math.sin(b);var d=1-c,e=a.x,f=a.y;a=a.z;var g=d*e,h=d*f;this.set(g*e+c,g*f-b*a,g*a+b*f,0,g*f+b*a,h*f+c,h*a-b*e,0,g*a-b*f,h*a+b*e,d*a*a+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeShear:function(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new p,b=new K;return function(c,$/;"	r
d	js/three.min.js	/^Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute("position",new z(b,3));b=new T({fog:!1});this.cone=new P(a,b);this.add(this.cone);this.update()}function df(a){var b=[];a&&a.isBone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,df(a.children[c]));return b}function lc(a){for(var b=df(a),c=new C,d=[],e=[],f=new H(0,0,1),g=new H(0,1,0),h=0;h<b.length;h++){var k=b[h];k.parent&&k.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.addAttribute("position",$/;"	r
d	js/three.min.js	/^Oc.prototype.constructor=Oc;Vb.prototype=Object.create(C.prototype);Vb.prototype.constructor=Vb;var Ha={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g;if(0<Ha.area(a))for(g=0;g<c;g++)e[g]=g;else for(g=0;g<c;g++)e[g]=c-1-g;var h=2*c;for(g=c-1;2<c;){if(0>=h--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}var k=$/;"	r
d	js/three.min.js	/^Ta;Ta.prototype.isCubeTexture=!0;Object.defineProperty(Ta.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});var Be=new da,Ce=new Ta,we=[],ye=[],Ae=new Float32Array(16),ze=new Float32Array(9);Ge.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var Od=\/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;cb.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};cb.prototype.setOptional=function(a,$/;"	r
d	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
d	js/three.min.js	/^_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=$/;"	r
d	js/three.min.js	/^a&&(a=!0);var b;var c=Array(this.vertices.length);var d=0;for(b=this.vertices.length;d<b;d++)c[d]=new p;if(a){var e=new p,f=new p;a=0;for(d=this.faces.length;a<d;a++){b=this.faces[a];var g=this.vertices[b.a];var h=this.vertices[b.b];var k=this.vertices[b.c];e.subVectors(k,h);f.subVectors(g,h);e.cross(f);c[b.a].add(e);c[b.b].add(e);c[b.c].add(e)}}else for(this.computeFaceNormals(),a=0,d=this.faces.length;a<d;a++)b=this.faces[a],c[b.a].add(b.normal),c[b.b].add(b.normal),c[b.c].add(b.normal);d=0;for(b=$/;"	r
d	js/three.min.js	/^a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements;b=this.elements;a=c[0];var e=c[3],f=c[6],g=c[1],h=c[4],k=c[7],l=c[2],q=c[5],c=c[8],n=d[0],m=d[3],r=d[6],p=d[1],t=d[4],x=d[7],y=d[2],B=d[5],d=d[8];b[0]=a*n+e*p+f*y;b[3]=a*m+e*t+f*B;b[6]=a*r+e*x+f*d;b[1]=g*n+h*p+k*y;b[4]=g*m+h*t+k*B;b[7]=g*r+h*x+k*d;b[2]=l*n+q*p+c*y;b[5]=l*m+q*t+c*B;b[8]=l*r+q*x+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;$/;"	r
d	js/three.min.js	/^a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this},addLevel:function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)},getObjectForDistance:function(a){for(var b=this.levels,c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object},raycast:function(){var a=new p;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=$/;"	r
d	js/three.min.js	/^a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,$/;"	r
d	js/three.min.js	/^a.ARRAY_BUFFER);c=c.morphAttributes;for(f in c)for(var d=c[f],e=0,g=d.length;e<g;e++)b.update(d[e],a.ARRAY_BUFFER)},getWireframeAttribute:function(c){var d=f[c.id];if(d)return d;d=[];var e=c.index;var g=c.attributes;if(null!==e){var q=e.array;for(var n=0,u=q.length;n<u;n+=3){var r=q[n+0];g=q[n+1];e=q[n+2];d.push(r,g,g,e,e,r)}}else for(q=g.position.array,n=0,u=q.length\/3-1;n<u;n+=3)r=n+0,g=n+1,e=n+2,d.push(r,g,g,e,e,r);d=new (65535<Qd(d)?eb:db)(d,1);b.update(d,a.ELEMENT_ARRAY_BUFFER);return f[c.id]=$/;"	r
d	js/three.min.js	/^a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA))}E=D=ga=z=w=ya=null}else{l=l||d;k=k||g;n=n||h;if(d!==ya||l!==ga)a.blendEquationSeparate(c.convert(d),c.convert(l)),ya=d,ga=l;if(g!==w||h!==z||k!==D||n!==E)a.blendFuncSeparate(c.convert(g),c.convert(h),c.convert(k),c.convert(n)),w=g,z=h,D=k,E=n}J=b;M=q}function h(b){C!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),C=b)}$/;"	r
d	js/three.min.js	/^a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.dithering=a.dithering;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.userData=JSON.parse(JSON.stringify(a.userData));this.clipShadows=a.clipShadows;this.clipIntersection=a.clipIntersection;a=a.clippingPlanes;var b=null;if(null!==a)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=$/;"	r
d	js/three.min.js	/^a[b],a.pop()}this.nCachedObjects_=e},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,k=this.nCachedObjects_,l=Array(h.length),d=e.length;c[a]=d;f.push(a);g.push(b);e.push(l);c=k;for(d=h.length;c!==d;++c)l[c]=new pa(h[c],a,b);return l},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=$/;"	r
d	js/three.min.js	/^a[b]},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=$/;"	r
d	js/three.min.js	/^b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new be,d=new ae,e=0,f=a.length;e<f;e++){var g=a[e];switch(g.type){case "PlaneGeometry":case "PlaneBufferGeometry":var h=new Ca[g.type](g.width,g.height,g.widthSegments,g.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":h=$/;"	r
d	js/three.min.js	/^b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};cb.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};cb.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};var sg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,$/;"	r
d	js/three.min.js	/^b.displacementMap?c=b.displacementMap:b.normalMap?c=b.normalMap:b.bumpMap?c=b.bumpMap:b.roughnessMap?c=b.roughnessMap:b.metalnessMap?c=b.metalnessMap:b.alphaMap?c=b.alphaMap:b.emissiveMap&&(c=b.emissiveMap);if(void 0!==c){c.isWebGLRenderTarget&&(c=c.texture);if(!0===c.matrixAutoUpdate){b=c.offset;var d=c.repeat,e=c.center;c.matrix.setUvTransform(b.x,b.y,d.x,d.y,c.rotation,e.x,e.y)}a.uvTransform.value.copy(c.matrix)}}function m(a,b){a.specular.value=b.specular;a.shininess.value=Math.max(b.shininess,$/;"	r
d	js/three.min.js	/^b.setIndex(new O(c,1)));var d=a.data.attributes;for(f in d){var e=d[f];c=new gf[e.type](e.array);b.addAttribute(f,new O(c,e.itemSize,e.normalized))}var f=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==f)for(c=0,d=f.length;c!==d;++c)e=f[c],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(f=new p,void 0!==a.center&&f.fromArray(a.center),b.boundingSphere=new Da(f,a.radius));return b}});var gf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==$/;"	r
d	js/three.min.js	/^b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new p;return function(b){var c=this.elements,d=b.elements,e=1\/a.setFromMatrixColumn(b,0).length(),f=1\/a.setFromMatrixColumn(b,1).length();b=1\/a.setFromMatrixColumn(b,2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");$/;"	r
d	js/three.min.js	/^b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,b){var c=b||this._root,d=c.uuid,c="string"===typeof a?ra.findByName(c,a):a;a=null!==c?c.uuid:a;var e=this._actionsByClip[a],f=null;if(void 0!==e){f=e.actionByRoot[d];if(void 0!==f)return f;f=e.knownActions[0];null===c&&(c=f._clip)}if(null===c)return null;b=new Xe(this,c,b);this._bindAction(b,f);this._addInactiveAction(b,a,d);return b},existingAction:function(a,b){var c=b||this._root;b=c.uuid;c="string"===typeof a?ra.findByName(c,$/;"	r
d	js/three.min.js	/^break;case 4:a.depthFunc(a.EQUAL);break;case 5:a.depthFunc(a.GEQUAL);break;case 6:a.depthFunc(a.GREATER);break;case 7:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);d=b}},setLocked:function(a){b=a},setClear:function(b){g!==b&&(a.clearDepth(b),g=b)},reset:function(){b=!1;g=d=c=null}}},r=new function(){var b=!1,c=null,d=null,g=null,h=null,l=null,k=null,n=null,q=null;return{setTest:function(b){b?e(a.STENCIL_TEST):f(a.STENCIL_TEST)},setMask:function(d){c===d||b||$/;"	r
d	js/three.min.js	/^c+" extension not supported.");return b[c]=d}}}function qg(){function a(){l.value!==d&&(l.value=d,l.needsUpdate=0<e);c.numPlanes=e;c.numIntersection=0}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=l.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;k.getNormalMatrix(b);if(null===g||g.length<e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,k),h.normal.toArray(g,d),g[d+3]=h.constant}l.value=g;l.needsUpdate=!0}c.numPlanes=f;return g}var c=this,d=null,$/;"	r
d	js/three.min.js	/^c.getNormalMatrix(this.object.matrixWorld);var f=this.object.matrixWorld,g=this.geometry.attributes.position;if((d=this.object.geometry)&&d.isGeometry)for(var h=d.vertices,k=d.faces,l=d=0,m=k.length;l<m;l++)for(var n=k[l],p=0,r=n.vertexNormals.length;p<r;p++){var v=n.vertexNormals[p];a.copy(h[n[e[p]]]).applyMatrix4(f);b.copy(v).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);g.setXYZ(d,a.x,a.y,a.z);d+=1;g.setXYZ(d,b.x,b.y,b.z);d+=1}else if(d&&d.isBufferGeometry)for(e=d.attributes.position,$/;"	r
d	js/three.min.js	/^c.normalize(),a.crossVectors(f,c));a.normalize();b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements;$/;"	r
d	js/three.min.js	/^c.update(l.geometry)),l.material.uniforms.tCube.value=d,b.push(l,l.geometry,l.material,0,null)):d&&d.isTexture&&(void 0===h&&(h=new Gb(-1,1,1,-1,0,1),k=new qa(new gb(2,2),new va({depthTest:!1,depthWrite:!1,fog:!1})),c.update(k.geometry)),k.material.map=d,a.renderBufferDirect(h,null,k.geometry,k.material,k,null))}}}function Rf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program&&b.program&&a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-$/;"	r
d	js/three.min.js	/^c;h.push(n)}a=0;for(r=q.length;a<r;a++)if(c=q[a],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a)},mergeMesh:function(a){a&&a.isMesh?(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a)},mergeVertices:function(){var a={},b=[],c=[],d=Math.pow(10,4),e;var f=0;for(e=this.vertices.length;f<$/;"	r
d	js/three.min.js	/^c||1}function Ze(a,b,c,d){this.ray=new hb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function $e(a,b){return a.distance-b.distance}function oe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)oe(a[d],b,c,!0)}}function af(a){this.autoStart=$/;"	r
d	js/three.min.js	/^d);e=Math.sqrt(e\/2)}else a=!1,d>Number.EPSILON?f>Number.EPSILON&&(a=!0):d<-Number.EPSILON?f<-Number.EPSILON&&(a=!0):Math.sign(e)===Math.sign(g)&&(a=!0),a?(f=-e,e=Math.sqrt(h)):(f=d,d=e,e=Math.sqrt(h\/2));return new D(f\/e,d\/e)}function e(a,b){for(G=a.length;0<=--G;){var c=G;var d=G-1;0>d&&(d=a.length-1);var e,f=w+2*x;for(e=0;e<f;e++){var g=Y*e,l=Y*(e+1),q=b+d+g,n=b+d+l,l=b+c+l;h(b+c+g);h(q);h(l);h(q);h(n);h(l);g=m.length\/3;g=E.generateSideWallUV(R,m,g-6,g-3,g-2,g-1);k(g[0]);k(g[1]);k(g[3]);k(g[1]);$/;"	r
d	js/three.min.js	/^d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Mc(a,b,c,d,e,f){L.call(this);this.type="TubeGeometry";this.parameters={path:a,$/;"	r
d	js/three.min.js	/^d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A;this.render=function(a,v,ja,ma){if(0!==a.length){v=new p;var J=ma.w\/ma.z,ya=.5*ma.z,Ua=.5*ma.w,M=16\/ma.w,na=new D(M*J,M),ka=new p(1,1,0),N=new D(1,1),U=new kd;U.min.set(ma.x,ma.y);U.max.set(ma.x+(ma.z-16),ma.y+(ma.w-16));if(void 0===B){var M=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),z=new Uint16Array([0,1,2,0,2,3]);t=b.createBuffer();x=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,t);b.bufferData(b.ARRAY_BUFFER,M,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,$/;"	r
d	js/three.min.js	/^d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.copy(this);c=1\/g;var f=1\/h,l=1\/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makePerspective:function(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");$/;"	r
d	js/three.min.js	/^d,e,a,f);a.onAfterRender(M,b,c,d,e,f)}function n(a,b,c){var d=Y.get(a);c=oa.getParameters(a,ua.state,z,b,Fa.numPlanes,Fa.numIntersection,c);var g=oa.getProgramCode(a,c),h=d.program,l=!0;if(void 0===h)a.addEventListener("dispose",e);else if(h.code!==g)f(a);else{if(void 0!==c.shaderID)return;l=!1}l&&(c.shaderID?(h=ib[c.shaderID],d.shader={name:a.type,uniforms:Ea.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}):d.shader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,$/;"	r
d	js/three.min.js	/^d=c.array;d[0]=a;d[1]=-b;d[2]=0;d[3]=a;d[4]=b;d[5]=0;d[6]=-a;d[7]=b;d[8]=0;d[9]=-a;d[10]=-b;d[11]=0;d[12]=a;d[13]=-b;d[14]=0;c.needsUpdate=!0;void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)};oc.prototype=Object.create(w.prototype);oc.prototype.constructor=oc;oc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};oc.prototype.update=function(){var a=new p,b=new H,c=new H;return function(){var d=$/;"	r
d	js/three.min.js	/^d=m.aspect*this.aspect;e=m.near;f=m.far;g=m.zoom;var n=m.projectionMatrix.clone();h=this.eyeSep\/2;var q=h*e\/b,p=e*Math.tan(R.DEG2RAD*c*.5)\/g;l.elements[12]=-h;k.elements[12]=h;var v=-p*d+q;var t=p*d+q;n.elements[0]=2*e\/(t-v);n.elements[8]=(t+v)\/(t-v);this.cameraL.projectionMatrix.copy(n);v=-p*d-q;t=p*d-q;n.elements[0]=2*e\/(t-v);n.elements[8]=(t+v)\/(t-v);this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(m.matrixWorld).multiply(l);this.cameraR.matrixWorld.copy(m.matrixWorld).multiply(k)}}()});$/;"	r
d	js/three.min.js	/^d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(xa.prototype,{beforeStart_:xa.prototype.copySampleValue_,afterEnd_:xa.prototype.copySampleValue_});Cd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Cd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=$/;"	r
d	js/three.min.js	/^disable:f,getCompressedTextureFormats:function(){if(null===I&&(I=[],b.get("WEBGL_compressed_texture_pvrtc")||b.get("WEBGL_compressed_texture_s3tc")||b.get("WEBGL_compressed_texture_etc1")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)I.push(c[d]);return I},useProgram:function(b){return A!==b?(a.useProgram(b),A=b,!0):!1},setBlending:g,setMaterial:function(b){2===b.side?f(a.CULL_FACE):e(a.CULL_FACE);h(1===b.side);!0===b.transparent?g(b.blending,b.blendEquation,b.blendSrc,$/;"	r
d	js/three.min.js	/^e,b,1)}else c.enabled&&a.setDrawingBufferSize(n.width,n.height,u)}var c=this,d=null,e=null;"undefined"!==typeof window&&"VRFrameData"in window&&(e=new window.VRFrameData);var f=new K,g=new K,h=new K,k=new Y;k.bounds=new ba(0,0,.5,1);k.layers.enable(1);var l=new Y;l.bounds=new ba(.5,0,.5,1);l.layers.enable(2);var q=new nd([k,l]);q.layers.enable(1);q.layers.enable(2);var n,u;"undefined"!==typeof window&&window.addEventListener("vrdisplaypresentchange",b,!1);this.standing=this.enabled=!1;this.getDevice=$/;"	r
d	js/three.min.js	/^e.applyMatrix4(a.matrixWorld),b.expandByPoint(e);else if(f.isBufferGeometry&&(f=f.attributes.position,void 0!==f))for(c=0,d=f.count;c<d;c++)e.fromBufferAttribute(f,c).applyMatrix4(a.matrixWorld),b.expandByPoint(e)}var b,c,d,e=new p;return function(c){b=this;c.updateMatrixWorld(!0);c.traverse(a);return this}}(),containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=$/;"	r
d	js/three.min.js	/^e;f++){var g=this.vertices[f];g=Math.round(g.x*d)+"_"+Math.round(g.y*d)+"_"+Math.round(g.z*d);void 0===a[g]?(a[g]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[g]]}a=[];f=0;for(e=this.faces.length;f<e;f++)for(d=this.faces[f],d.a=c[d.a],d.b=c[d.b],d.c=c[d.c],d=[d.a,d.b,d.c],g=0;3>g;g++)if(d[g]===d[(g+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(d=a[f],this.faces.splice(d,1),c=0,e=this.faceVertexUvs.length;c<e;c++)this.faceVertexUvs[c].splice(d,1);f=this.vertices.length-b.length;this.vertices=$/;"	r
d	js/three.min.js	/^else{var k=e.attributes.position;k.isInterleavedBufferAttribute?(g=k.data.count,h.drawArraysInstancedANGLE(d,0,g,e.maxInstancedCount)):h.drawArraysInstancedANGLE(d,f,g,e.maxInstancedCount);c.calls++;c.vertices+=g*e.maxInstancedCount;d===a.TRIANGLES?c.faces+=e.maxInstancedCount*g\/3:d===a.POINTS&&(c.points+=e.maxInstancedCount*g)}}}function Zf(a,b,c){function d(a){a=a.target;var g=e[a.id];null!==g.index&&b.remove(g.index);for(var k in g.attributes)b.remove(g.attributes[k]);a.removeEventListener("dispose",$/;"	r
d	js/three.min.js	/^g)},render:function(b,d,u,r){d=d.background;null===d?e(f,g):d&&d.isColor&&(e(d,1),r=!0);(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil);d&&d.isCubeTexture?(void 0===l&&(l=new qa(new fb(1,1,1),new Aa({uniforms:ib.cube.uniforms,vertexShader:ib.cube.vertexShader,fragmentShader:ib.cube.fragmentShader,side:1,depthTest:!0,depthWrite:!1,fog:!1})),l.geometry.removeAttribute("normal"),l.geometry.removeAttribute("uv"),l.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},$/;"	r
d	js/three.min.js	/^getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)},computeFrenetFrames:function(a,b){var c=new p,d=[],e=[],f=[],g=new p,h=new K,k;for(k=0;k<=a;k++){var l=k\/a;d[k]=this.getTangentAt(l);d[k].normalize()}e[0]=new p;f[0]=new p;k=Number.MAX_VALUE;l=Math.abs(d[0].x);var m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0));m<=k&&(k=m,c.set(0,1,0));n<=k&&c.set(0,0,1);g.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],g);f[0].crossVectors(d[0],e[0]);for(k=1;k<=a;k++)e[k]=$/;"	r
d	js/three.min.js	/^h=d.attributes.normal,p=d=0,r=e.count;p<r;p++)a.set(e.getX(p),e.getY(p),e.getZ(p)).applyMatrix4(f),b.set(h.getX(p),h.getY(p),h.getZ(p)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),g.setXYZ(d,a.x,a.y,a.z),d+=1,g.setXYZ(d,b.x,b.y,b.z),d+=1;g.needsUpdate=!0}}();kc.prototype=Object.create(w.prototype);kc.prototype.constructor=kc;kc.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};kc.prototype.update=function(){var a=new p,b=new p;return function(){this.light.updateMatrixWorld();$/;"	r
d	js/three.min.js	/^k*g.maxInstancedCount,d===a.TRIANGLES?c.faces+=g.maxInstancedCount*k\/3:d===a.POINTS&&(c.points+=g.maxInstancedCount*k))}}function Yf(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES?c.faces+=f\/3:d===a.POINTS&&(c.points+=f)};this.renderInstances=function(e,f,g){var h=b.get("ANGLE_instanced_arrays");if(null===h)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
d	js/three.min.js	/^l);b("u1","u2",q);b("u2","u3",q);b("u3","u1",q);b("c","t",n);b("p","c",u);b("cn1","cn2",u);b("cn3","cn4",u);b("cf1","cf2",u);b("cf3","cf4",u);d.addAttribute("position",new z(f,3));d.addAttribute("color",new z(g,3));P.call(this,d,e);this.camera=a;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=h;this.update()}function Ab(a,b){this.object=a;void 0===b&&(b=16776960);a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,$/;"	r
d	js/three.min.js	/^l=0,d=k.count\/3;l<d;l++)for(c=0;3>c;c++)g=3*l+c,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z),g=3*l+(c+1)%3,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z)}this.addAttribute("position",new z(b,3))}function Gc(a,b,c){L.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){C.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=$/;"	r
d	js/three.min.js	/^la;m.CubicBezierCurve3=qc;m.QuadraticBezierCurve3=rc;m.LineCurve3=Cb;m.ArcCurve=id;m.EllipseCurve=Sa;m.SplineCurve=wb;m.CubicBezierCurve=xb;m.QuadraticBezierCurve=yb;m.LineCurve=Ma;m.Shape=zb;m.Path=Zc;m.ShapePath=ce;m.Font=de;m.CurvePath=hc;m.Curve=ca;m.ShapeUtils=Ha;m.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new Ec,d=0,e=b.length;d<e;d++)c.add(new qa(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){a.applyMatrix((new K).getInverse(c.matrixWorld));$/;"	r
d	js/three.min.js	/^m[u+1]*h,n.z=m[u+2]*h,l.push(n);if(void 0!==g.morphColors&&0<g.morphColors.length)for(console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'),h=c.faces,g=g.morphColors[0].colors,d=0,r=h.length;d<r;d++)h[d].color.fromArray(g,3*d);g=a;d=[];r=[];void 0!==g.animation&&r.push(g.animation);void 0!==g.animations&&(g.animations.length?r=r.concat(g.animations):r.push(g.animations));for(g=0;g<r.length;g++)(h=ra.parseAnimation(r[g],c.bones))&&d.push(h);c.morphTargets&&$/;"	r
d	js/three.min.js	/^multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},premultiply:function(a){return this.multiplyQuaternions(a,this)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z;a=a._w;var f=b._x,g=b._y,h=b._z;b=b._w;this._x=c*b+a*f+d*h-e*g;this._y=d*b+a*g+e*f-c*h;this._z=e*b+a*h+c*g-d*f;this._w=a*b-c*f-d*g-e*h;this.onChangeCallback();$/;"	r
d	js/three.min.js	/^new p,b=new p;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1\/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+$/;"	r
d	js/three.min.js	/^new z(d,3));c.addAttribute("color",new z(e,3));d=new T({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});P.call(this,c,d);this.root=a;this.bones=b;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1}function mc(a,b,c){this.light=a;this.light.updateMatrixWorld();this.color=c;a=new kb(b,4,2);b=new va({wireframe:!0,fog:!1});qa.call(this,a,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function nc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=$/;"	r
d	js/three.min.js	/^null;try{f=JSON.parse(c)}catch(h){void 0!==d&&d(h);console.error("THREE:ObjectLoader: Can't parse "+a+".",h.message);return}c=f.metadata;void 0===c||void 0===c.type||"geometry"===c.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+a+". Use THREE.JSONLoader instead."):e.parse(f,b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==$/;"	r
d	js/three.min.js	/^return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c=1\/this.direction.x;var d=1\/this.direction.y;var e=1\/this.direction.z,f=this.origin;if(0<=c){var g=(a.min.x-f.x)*c;c*=a.max.x-f.x}else g=(a.max.x-f.x)*c,c*=a.min.x-f.x;if(0<=d){var h=(a.min.y-f.y)*d;d*=a.max.y-f.y}else h=(a.max.y-f.y)*d,d*=a.min.y-f.y;if(g>d||h>c)return null;if(h>g||g!==g)g=h;if(d<c||c!==c)c=d;0<=e?(h=(a.min.z-f.z)*e,a=(a.max.z-f.z)*e):(h=(a.max.z-f.z)*e,a=(a.min.z-f.z)*e);if(g>a||h>c)return null;$/;"	r
d	js/three.min.js	/^return c[a]}var c=this.textures,d=new tg[a.type];void 0!==a.uuid&&(d.uuid=a.uuid);void 0!==a.name&&(d.name=a.name);void 0!==a.color&&d.color.setHex(a.color);void 0!==a.roughness&&(d.roughness=a.roughness);void 0!==a.metalness&&(d.metalness=a.metalness);void 0!==a.emissive&&d.emissive.setHex(a.emissive);void 0!==a.specular&&d.specular.setHex(a.specular);void 0!==a.shininess&&(d.shininess=a.shininess);void 0!==a.clearCoat&&(d.clearCoat=a.clearCoat);void 0!==a.clearCoatRoughness&&(d.clearCoatRoughness=$/;"	r
d	js/three.min.js	/^return new Zd(a)};m.GeometryUtils={merge:function(a,b,c){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");if(b.isMesh){b.matrixAutoUpdate&&b.updateMatrix();var d=b.matrix;b=b.geometry}a.merge(b,d,c)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};m.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");$/;"	r
d	js/three.min.js	/^return this}b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:"removed"}),this.children.splice(b,1));return this},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new p;this.updateMatrixWorld(!0);$/;"	r
d	js/three.min.js	/^setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g);c.set(b,d,f,g);!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1;d=null;e.set(-1,0,0,0)}}},u=new function(){var b=!1,c=null,d=null,g=null;return{setTest:function(b){b?e(a.DEPTH_TEST):f(a.DEPTH_TEST)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case 0:a.depthFunc(a.NEVER);break;case 1:a.depthFunc(a.ALWAYS);break;case 2:a.depthFunc(a.LESS);break;case 3:a.depthFunc(a.LEQUAL);$/;"	r
d	js/three.min.js	/^t.addEventListener("webglcontextrestored",d,!1)}catch(rg){console.error("THREE.WebGLRenderer: "+rg)}var ha,X,aa,Y,S,pa,qa,ta,ua,oa,sa,ia,va,wa,xa,za,Aa,ra;b();var la=new og(M);this.vr=la;var Ca=new Ie(M,ta,X.maxTextureSize);this.shadowMap=Ca;this.getContext=function(){return F};this.getContextAttributes=function(){return F.getContextAttributes()};this.forceContextLoss=function(){var a=ha.get("WEBGL_lose_context");a&&a.loseContext()};this.forceContextRestore=function(){var a=ha.get("WEBGL_lose_context");$/;"	r
d	js/three.min.js	/^tb.prototype=ab;ab.constructor=tb;Object.assign(tb,{parse:function(a){if(void 0===a.type)throw Error("track type undefined, can not parse");var b=tb._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];S.flattenJSON(a.keys,c,d,"value");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:S.convertArray(a.times,Array),values:S.convertArray(a.values,$/;"	r
d	js/three.min.js	/^this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return(b||new p).copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)},intersectLine:function(){var a=new p;return function(b,c){c=c||new p;var d=b.delta(a),e=this.normal.dot(d);if(0===e){if(0===this.distanceToPoint(b.start))return c.copy(b.start)}else if(e=-(b.start.dot(this.normal)+this.constant)\/e,!(0>e||1<e))return c.copy(d).multiplyScalar(e).add(b.start)}}(),intersectsLine:function(a){var b=$/;"	r
d	js/three.min.js	/^this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements;a=d[0];var e=d[1],f=d[2],g=d[3],h=d[4],k=d[5],l=d[6],q=d[7],n=d[8],m=d[9],r=d[10],p=d[11],t=d[12],x=d[13],y=d[14],d=d[15],B=m*y*q-x*r*q+x*l*p-k*y*p-m*l*d+k*r*d,I=t*r*q-n*y*q-t*l*p+h*y*p+n*l*d-h*r*d,A=n*x*q-t*m*q+t*k*p-h*x*p-n*k*d+h*m*d,J=t*m*l-n*x*l-t*k*r+h*x*r+n*k*y-h*m*y,w=a*B+e*I+f*A+g*J;if(0===w){if(!0===b)throw Error("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");$/;"	r
d	js/three.min.js	/^this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,e=c\/d;a.warp(1,d\/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},$/;"	r
d	js/three.min.js	/^this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,k=0;if(!1===Array.isArray(a))c(a);else for(var l=0;l<a.length;l++)c(a[l]),this.addGroup(h,k,l),h+=k,k=0;this.setIndex(d);this.addAttribute("position",new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function ac(a,b){C.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:b};var c=[];b=Math.cos(R.DEG2RAD*(void 0!==b?b:1));var d=[0,0],e={},f=["a","b","c"];if(a.isBufferGeometry){var g=$/;"	r
d	js/three.min.js	/^this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(pa.prototype,{_getValue_unbound:pa.prototype.getValue,_setValue_unbound:pa.prototype.setValue});Object.assign(We.prototype,$/;"	r
d	js/three.min.js	/^this.width;a.object.height=this.height;return a}});var S={arraySlice:function(a,b,c){return S.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:"number"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-$/;"	r
d	js/three.min.js	/^this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},cross:function(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)},crossVectors:function(a,b){var c=a.x,d=a.y;a=a.z;var e=b.x,f=b.y;b=b.z;this.x=d*b-a*f;this.y=a*e-c*b;this.z=c*f-d*e;return this},projectOnVector:function(a){var b=$/;"	r
d	js/three.min.js	/^var c=this.light.distance?this.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}();lc.prototype=Object.create(P.prototype);lc.prototype.constructor=lc;lc.prototype.updateMatrixWorld=function(){var a=new p,b=new K,c=new K;return function(d){var e=$/;"	r
d	js/three.min.js	/^void 0===a||"string"===typeof a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};d.uuid=this.uuid;d.type=this.type;""!==this.name&&(d.name=this.name);this.color&&this.color.isColor&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);void 0!==this.metalness&&(d.metalness=this.metalness);this.emissive&&this.emissive.isColor&&(d.emissive=this.emissive.getHex());1!==this.emissiveIntensity&&(d.emissiveIntensity=this.emissiveIntensity);$/;"	r
d	js/three.min.js	/^we[e]=f);if(0!==b)for(d.toArray(f,0),d=1,e=0;d!==b;++d)e+=c,a[d].toArray(f,e);return f}function xe(a,b){var c=ye[b];void 0===c&&(c=new Int32Array(b),ye[b]=c);for(var d=0;d!==b;++d)c[d]=a.allocTextureUnit();return c}function lf(a,b){a.uniform1f(this.addr,b)}function mf(a,b){a.uniform1i(this.addr,b)}function nf(a,b){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,b.x,b.y)}function of(a,b){void 0!==b.x?a.uniform3f(this.addr,b.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,$/;"	r
d	js/three.min.js	/^{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings;a=a._interpolants;var g=c.uuid,h=this._bindingsByRootAndName,k=h[g];void 0===k&&(k={},h[g]=k);for(h=0;h!==e;++h){var l=d[h],m=l.name,n=k[m];if(void 0===n){n=f[h];if(void 0!==n){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,g,m));continue}n=new je(pa.create(c,m,b&&b._propertyBindings[h].binding.parsedPath),l.ValueTypeName,l.getValueSize());++n.referenceCount;this._addInactiveBinding(n,$/;"	r
d	js/three.min.js	/^{generateTopUV:function(a,b,c,d,e){a=b[3*d];d=b[3*d+1];var f=b[3*e];e=b[3*e+1];return[new D(b[3*c],b[3*c+1]),new D(a,d),new D(f,e)]},generateSideWallUV:function(a,b,c,d,e,f){a=b[3*c];var g=b[3*c+1];c=b[3*c+2];var h=b[3*d],k=b[3*d+1];d=b[3*d+2];var l=b[3*e],m=b[3*e+1];e=b[3*e+2];var n=b[3*f],p=b[3*f+1];b=b[3*f+2];return.01>Math.abs(g-k)?[new D(a,1-c),new D(h,1-d),new D(l,1-e),new D(n,1-b)]:[new D(g,1-c),new D(k,1-d),new D(m,1-e),new D(p,1-b)]}};Pc.prototype=Object.create(L.prototype);Pc.prototype.constructor=$/;"	r
d1	js/three.js	/^					var d1 = plane.distanceToPoint( p1 );$/;"	r
d2	js/three.js	/^					var d2 = plane.distanceToPoint( p2 );$/;"	r
d2	js/three.js	/^				var d2 = v1.dot( v1 ) - tca * tca;$/;"	r
d_x	js/three.js	/^			var d_x = vertices[ indexD * 3 ];$/;"	r
d_y	js/three.js	/^			var d_y = vertices[ indexD * 3 + 1 ];$/;"	r
d_z	js/three.js	/^			var d_z = vertices[ indexD * 3 + 2 ];$/;"	r
dashSize	js/three.js	/^					dashSize: { value: 1 },$/;"	r
dashSize	js/three.js	/^			if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;$/;"	r
dashSize	js/three.js	/^			if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;$/;"	r
dashSize	js/three.js	/^			uniforms.dashSize.value = material.dashSize;$/;"	r
dashSize	js/three.js	/^		this.dashSize = 3;$/;"	r
dashSize	js/three.js	/^		this.dashSize = source.dashSize;$/;"	r
dashed	js/three.js	/^		dashed: {$/;"	r
dashed	js/three.min.js	/^E.fog]),vertexShader:V.points_vert,fragmentShader:V.points_frag},dashed:{uniforms:Ea.merge([E.common,E.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:V.linedashed_vert,fragmentShader:V.linedashed_frag},depth:{uniforms:Ea.merge([E.common,E.displacementmap]),vertexShader:V.depth_vert,fragmentShader:V.depth_frag},normal:{uniforms:Ea.merge([E.common,E.bumpmap,E.normalmap,E.displacementmap,{opacity:{value:1}}]),vertexShader:V.normal_vert,fragmentShader:V.normal_frag},cube:{uniforms:{tCube:{value:null},$/;"	r
data	js/GLTFLoader.js	/^				content = data;$/;"	r
data	js/three.js	/^							response = data;$/;"	r
data	js/three.js	/^							var data = geometryAttribute.data;$/;"	r
data	js/three.js	/^					json = json.data;$/;"	r
data	js/three.js	/^					texture.image.data = texData.data;$/;"	r
data	js/three.js	/^					var data = cache[ key ];$/;"	r
data	js/three.js	/^					var data = json[ i ];$/;"	r
data	js/three.js	/^				data = window.decodeURIComponent( data );$/;"	r
data	js/three.js	/^				var data = dataUriRegexResult[ 3 ];$/;"	r
data	js/three.js	/^			data.data = { attributes: {} };$/;"	r
data	js/three.js	/^			data.data = {};$/;"	r
data	js/three.js	/^			if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;$/;"	r
data	js/three.js	/^			var data = Light.prototype.toJSON.call( this, meta );$/;"	r
data	js/three.js	/^			var data = Object3D.prototype.toJSON.call( this, meta );$/;"	r
data	js/three.js	/^			var data = buffers[ attribute.uuid ];$/;"	r
data	js/three.js	/^			var data = new Uint8Array( 4 ); \/\/ 4 is required to match default unpack alignment of 4.$/;"	r
data	js/three.js	/^			var data = this.data;$/;"	r
data	js/three.js	/^			var data = {$/;"	r
data	js/three.js	/^		this.data = data;$/;"	r
data	js/three.js	/^		this.data = interleavedBuffer;$/;"	r
data	js/three.js	/^		this.data = new Uint8Array( this.analyser.frequencyBinCount );$/;"	r
data	js/three.js	/^		var data = Material.prototype.toJSON.call( this, meta );$/;"	r
data	js/three.min.js	/^void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)}function je(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case "quaternion":b=this._slerp;break;case "string":case "bool":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0}function Ve(a,b,c){c=c||pa.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,$/;"	r
dataCount	js/three.js	/^				dataCount = index.count;$/;"	r
dataCount	js/three.js	/^				dataCount = position.count;$/;"	r
dataCount	js/three.js	/^			var dataCount = 0;$/;"	r
dataUriRegex	js/three.js	/^			var dataUriRegex = \/^data:(.*?)(;base64)?,(.*)$\/;$/;"	r
dataUriRegexResult	js/three.js	/^			var dataUriRegexResult = url.match( dataUriRegex );$/;"	r
dc	js/three.min.js	/^function dc(a){Aa.call(this,a);this.type="RawShaderMaterial"}function La(a){Q.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new H(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=$/;"	r
dd	js/three.min.js	/^0,l),h.push(n.r,n.g,n.b)}a=new C;a.addAttribute("position",new z(g,3));a.addAttribute("color",new z(h,3));g=new T({vertexColors:2});P.call(this,a,g)}function dd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?b=c.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,$/;"	r
dd	js/three.min.js	/^dd.prototype.constructor=dd;dd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var m=f[k],n=m.normal;a.copy(g[m.a]).add(g[m.b]).add(g[m.c]).divideScalar(3).applyMatrix4(d);b.copy(n).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);e.setXYZ(h,$/;"	r
deallocateMaterial	js/three.js	/^		function deallocateMaterial( material ) {$/;"	r
deallocateRenderTarget	js/three.js	/^		function deallocateRenderTarget( renderTarget ) {$/;"	r
deallocateTexture	js/three.js	/^		function deallocateTexture( texture ) {$/;"	r
decay	js/GLTFLoader.js	/^					lightNode.decay = light.quadraticAttenuation;$/;"	r
decay	js/three.js	/^							decay: 0,$/;"	r
decay	js/three.js	/^					uniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;$/;"	r
decay	js/three.js	/^				decay: {},$/;"	r
decay	js/three.js	/^			if ( this.decay !== undefined ) data.object.decay = this.decay;$/;"	r
decay	js/three.js	/^			this.decay = source.decay;$/;"	r
decay	js/three.js	/^		this.decay = ( decay !== undefined ) ? decay : 1;	\/\/ for physically correct lights, should be 2.$/;"	r
decompose	js/three.js	/^			return function decompose( position, quaternion, scale ) {$/;"	r
decompose	js/three.js	/^		decompose: function () {$/;"	r
deeppink	js/three.min.js	/^deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,$/;"	r
default	js/three.js	/^						default: \/\/ 'text' or other$/;"	r
default	js/three.js	/^					default: \/\/ ZeroCurvatureEnding$/;"	r
default	js/three.js	/^				default: throw new Error( 'index is out of range: ' + index );$/;"	r
default	js/three.min.js	/^default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},$/;"	r
defaultAttributeValues	js/three.js	/^			var materialDefaultAttributeValues = material.defaultAttributeValues;$/;"	r
defaultAttributeValues	js/three.js	/^		this.defaultAttributeValues = {$/;"	r
defaultAttributeValues	js/three.min.js	/^drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function hb(a,b){this.origin=void 0!==a?a:new p;this.direction=void 0!==b?b:new p}function Ib(a,b){this.start=void 0!==a?a:new p;this.end=void 0!==b?b:new p}function Pa(a,b,c){this.a=void 0!==a?a:new p;this.b=void 0!==$/;"	r
defaultnormal_vertex	js/three.js	/^		defaultnormal_vertex: defaultnormal_vertex,$/;"	r
defaultnormal_vertex	js/three.js	/^	var defaultnormal_vertex = "vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n";$/;"	r
deferring	js/three.js	/^	 * This class provides the interval seek in a Template Method, deferring$/;"	r
defines	js/GLTFLoader.js	/^					defines: params.defines,$/;"	r
defines	js/GLTFLoader.js	/^				params.defines = { 'STANDARD': '' };$/;"	r
defines	js/GLTFLoader.js	/^				var defines = material.defines;$/;"	r
defines	js/three.js	/^		this.defines = source.defines;$/;"	r
defines	js/three.js	/^		this.defines = { 'PHYSICAL': '' };$/;"	r
defines	js/three.js	/^		this.defines = { 'STANDARD': '' };$/;"	r
defines	js/three.js	/^		this.defines = { 'TOON': '' };$/;"	r
defines	js/three.js	/^		this.defines = {};$/;"	r
defines	js/three.js	/^		var defines = material.defines;$/;"	r
defines	js/three.min.js	/^!0;mb.prototype.copy=function(a){La.prototype.copy.call(this,a);this.defines={PHYSICAL:""};this.reflectivity=a.reflectivity;this.clearCoat=a.clearCoat;this.clearCoatRoughness=a.clearCoatRoughness;return this};Ia.prototype=Object.create(Q.prototype);Ia.prototype.constructor=Ia;Ia.prototype.isMeshPhongMaterial=!0;Ia.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=$/;"	r
defines	js/three.min.js	/^!1;this.setValues(a)}function Aa(a){Q.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}";this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,$/;"	r
defines	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function nb(a){Ia.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.gradientMap=null;this.setValues(a)}function ob(a){Q.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=$/;"	r
defines	js/three.min.js	/^0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function mb(a){La.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)}function Ia(a){Q.call(this);this.type="MeshPhongMaterial";$/;"	r
defines	js/three.min.js	/^cc.prototype=Object.create(Q.prototype);cc.prototype.constructor=cc;cc.prototype.isShadowMaterial=!0;dc.prototype=Object.create(Aa.prototype);dc.prototype.constructor=dc;dc.prototype.isRawShaderMaterial=!0;La.prototype=Object.create(Q.prototype);La.prototype.constructor=La;La.prototype.isMeshStandardMaterial=!0;La.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.defines={STANDARD:""};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=$/;"	r
defines	js/three.min.js	/^function dc(a){Aa.call(this,a);this.type="RawShaderMaterial"}function La(a){Q.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new H(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=$/;"	r
defs	js/GLTFLoader.js	/^		var defs = this.json[ type + 's' ] || [];$/;"	r
degToRad	js/three.js	/^		degToRad: function ( degrees ) {$/;"	r
delta	js/three.js	/^				var delta = max - min;$/;"	r
delta	js/three.js	/^			var delta = 0.0001;$/;"	r
delta	js/three.js	/^		delta: function ( optionalTarget ) {$/;"	r
deltaAngle	js/three.js	/^				deltaAngle = - twoPi;$/;"	r
deltaAngle	js/three.js	/^				deltaAngle = 0;$/;"	r
deltaAngle	js/three.js	/^				deltaAngle = deltaAngle - twoPi;$/;"	r
deltaAngle	js/three.js	/^				deltaAngle = twoPi;$/;"	r
deltaAngle	js/three.js	/^		var deltaAngle = this.aEndAngle - this.aStartAngle;$/;"	r
deltaLengthSq	js/three.js	/^			var deltaLengthSq = this.center.distanceToSquared( point );$/;"	r
deltaTime	js/three.js	/^				action._update( time, deltaTime, timeDirection, accuIndex );$/;"	r
deltaTime	js/three.js	/^				deltaTime = timeDirection * timeRunning;$/;"	r
deltaTime	js/three.js	/^				time = this.time += deltaTime,$/;"	r
deltaTime	js/three.js	/^		_update: function ( time, deltaTime, timeDirection, accuIndex ) {$/;"	r
denom	js/three.js	/^				var denom = ( dot00 * dot11 - dot01 * dot01 );$/;"	r
denominator	js/three.js	/^				var denominator = this.normal.dot( direction );$/;"	r
denominator	js/three.js	/^			var denominator = plane.normal.dot( this.direction );$/;"	r
density	js/three.js	/^				uniforms.fogDensity.value = fog.density;$/;"	r
density	js/three.js	/^			density: this.density$/;"	r
density	js/three.js	/^		this.density = ( density !== undefined ) ? density : 0.00025;$/;"	r
density	js/three.min.js	/^density:this.density}};Lb.prototype.isFog=!0;Lb.prototype.clone=function(){return new Lb(this.color.getHex(),this.near,this.far)};Lb.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};od.prototype=Object.assign(Object.create(w.prototype),{constructor:od,copy:function(a,b){w.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=$/;"	r
dependency	js/GLTFLoader.js	/^			dependency = this[ fnName ]( index );$/;"	r
dependency	js/GLTFLoader.js	/^			var dependency = dependencies[ i ];$/;"	r
dependency	js/GLTFLoader.js	/^		var dependency = this.cache.get( cacheKey );$/;"	r
depth	js/three.js	/^								data.depth,$/;"	r
depth	js/three.js	/^						currentDepthClear = depth;$/;"	r
depth	js/three.js	/^				depth: _depth,$/;"	r
depth	js/three.js	/^				depth: depthBuffer,$/;"	r
depth	js/three.js	/^				renderer.clear( color, depth, stencil );$/;"	r
depth	js/three.js	/^			depth: depth,$/;"	r
depth	js/three.js	/^			this.clear( color, depth, stencil );$/;"	r
depth	js/three.js	/^		buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); \/\/ px$/;"	r
depth	js/three.js	/^		depth = depth || 1;$/;"	r
depth	js/three.js	/^		depth: {$/;"	r
depth	js/three.js	/^		this.clear = function ( color, depth, stencil ) {$/;"	r
depth	js/three.min.js	/^U=null,K=null,L=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(\/^WebGL\\ ([0-9])\/.exec(a.getParameter(a.VERSION))[1]),Z=1<=parseFloat(m),R=null,O={},Q=new ba,G=new ba,W={};W[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);W[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);n.setClear(0,0,0,1);u.setClear(1);r.setClear(0);e(a.DEPTH_TEST);u.setFunc(3);h(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1);return{buffers:{color:n,depth:u,stencil:r},initAttributes:function(){for(var a=$/;"	r
depthBuffer	js/three.js	/^			this.depthBuffer = source.depthBuffer;$/;"	r
depthBuffer	js/three.js	/^		this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;$/;"	r
depthBuffer	js/three.js	/^		var depthBuffer = new DepthBuffer();$/;"	r
depthFar	js/three.js	/^			device.depthFar = camera.far;$/;"	r
depthFunc	js/three.js	/^						currentDepthFunc = depthFunc;$/;"	r
depthFunc	js/three.js	/^			data.depthFunc = this.depthFunc;$/;"	r
depthFunc	js/three.js	/^			this.depthFunc = source.depthFunc;$/;"	r
depthFunc	js/three.js	/^		this.depthFunc = LessEqualDepth;$/;"	r
depthFunc	js/three.min.js	/^(d.size=this.size);void 0!==this.sizeAttenuation&&(d.sizeAttenuation=this.sizeAttenuation);1!==this.blending&&(d.blending=this.blending);!0===this.flatShading&&(d.flatShading=this.flatShading);0!==this.side&&(d.side=this.side);0!==this.vertexColors&&(d.vertexColors=this.vertexColors);1>this.opacity&&(d.opacity=this.opacity);!0===this.transparent&&(d.transparent=this.transparent);d.depthFunc=this.depthFunc;d.depthTest=this.depthTest;d.depthWrite=this.depthWrite;0!==this.rotation&&(d.rotation=this.rotation);$/;"	r
depthFunc	js/three.min.js	/^null;this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.overdraw=0;this.visible=!0;this.userData={};this.needsUpdate=!0}function Va(a){Q.call(this);this.type="MeshDepthMaterial";this.depthPacking=3200;this.morphTargets=this.skinning=!1;this.displacementMap=$/;"	r
depthHalf	js/three.js	/^					vector[ w ] = depthHalf;$/;"	r
depthHalf	js/three.js	/^			var depthHalf = depth \/ 2;$/;"	r
depthMask	js/three.js	/^						currentDepthMask = depthMask;$/;"	r
depthMaterial	js/three.js	/^								var depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );$/;"	r
depthMaterial	js/three.js	/^						var depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );$/;"	r
depthMaterial	js/three.js	/^			_depthMaterials[ i ] = depthMaterial;$/;"	r
depthMaterial	js/three.js	/^			var depthMaterial = new MeshDepthMaterial( {$/;"	r
depthNear	js/three.js	/^			device.depthNear = camera.near;$/;"	r
depthPacking	js/three.js	/^				depthPacking: RGBADepthPacking,$/;"	r
depthPacking	js/three.js	/^		this.depthPacking = BasicDepthPacking;$/;"	r
depthPacking	js/three.js	/^		this.depthPacking = source.depthPacking;$/;"	r
depthSegments	js/three.js	/^								data.depthSegments$/;"	r
depthSegments	js/three.js	/^			depthSegments: depthSegments$/;"	r
depthSegments	js/three.js	/^		depthSegments = Math.floor( depthSegments ) || 1;$/;"	r
depthTest	js/GLTFLoader.js	/^			depthTest: true,$/;"	r
depthTest	js/three.js	/^							depthTest: true,$/;"	r
depthTest	js/three.js	/^			data.depthTest = this.depthTest;$/;"	r
depthTest	js/three.js	/^			if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;$/;"	r
depthTest	js/three.js	/^			this.depthTest = source.depthTest;$/;"	r
depthTest	js/three.js	/^		this.depthTest = true;$/;"	r
depthTest	js/three.js	/^		var material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );$/;"	r
depthTest	js/three.min.js	/^new z(d,3));c.addAttribute("color",new z(e,3));d=new T({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});P.call(this,c,d);this.root=a;this.bones=b;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1}function mc(a,b,c){this.light=a;this.light.updateMatrixWorld();this.color=c;a=new kb(b,4,2);b=new va({wireframe:!0,fog:!1});qa.call(this,a,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function nc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=$/;"	r
depthTexture	js/three.js	/^			this.depthTexture = source.depthTexture;$/;"	r
depthTexture	js/three.js	/^		this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;$/;"	r
depthWrite	js/three.js	/^							depthWrite: false,$/;"	r
depthWrite	js/three.js	/^						new MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )$/;"	r
depthWrite	js/three.js	/^			data.depthWrite = this.depthWrite;$/;"	r
depthWrite	js/three.js	/^			if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;$/;"	r
depthWrite	js/three.js	/^			this.depthWrite = source.depthWrite;$/;"	r
depthWrite	js/three.js	/^		this.depthWrite = true;$/;"	r
depthWrite	js/three.min.js	/^c.update(l.geometry)),l.material.uniforms.tCube.value=d,b.push(l,l.geometry,l.material,0,null)):d&&d.isTexture&&(void 0===h&&(h=new Gb(-1,1,1,-1,0,1),k=new qa(new gb(2,2),new va({depthTest:!1,depthWrite:!1,fog:!1})),c.update(k.geometry)),k.material.map=d,a.renderBufferDirect(h,null,k.geometry,k.material,k,null))}}}function Rf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program&&b.program&&a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-$/;"	r
depth_frag	js/three.js	/^		depth_frag: depth_frag,$/;"	r
depth_frag	js/three.js	/^	var depth_frag = "#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n";$/;"	r
depth_vert	js/three.js	/^		depth_vert: depth_vert,$/;"	r
depth_vert	js/three.js	/^	var depth_vert = "#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n";$/;"	r
depth_vert	js/three.min.js	/^depth_vert:"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n",$/;"	r
derivatives	js/GLTFLoader.js	/^				material.extensions.derivatives = true;$/;"	r
derivatives	js/three.js	/^				this.extensions.derivatives = value;$/;"	r
derivatives	js/three.js	/^			derivatives: false, \/\/ set to use derivatives$/;"	r
derivatives	js/three.js	/^		derivatives: {$/;"	r
derivatives	js/three.min.js	/^return!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Aa.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=a}}});Object.assign(Wd.prototype,$/;"	r
dest	js/three.js	/^					var dest = this.resolvedProperty;$/;"	r
destVertexNormal	js/three.js	/^						var destVertexNormal = {};$/;"	r
destroy	js/three.js	/^		this.destroy = function () {$/;"	r
destroy	js/three.min.js	/^g.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=g.getActiveAttrib(p,c).name;a[d]=g.getAttribLocation(p,d)}I=a}return I};this.destroy=function(){g.deleteProgram(p);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=ig++;this.code=c;this.usedTimes=1;$/;"	r
det	js/three.js	/^				det = n11 * t11 + n21 * t12 + n31 * t13;$/;"	r
det	js/three.js	/^				var det = Math.abs( 1 - a01 * a01 );$/;"	r
det	js/three.js	/^				var det = this.determinant();$/;"	r
det	js/three.js	/^			var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;$/;"	r
detInv	js/three.js	/^			var detInv = 1 \/ det;$/;"	r
detach	js/three.js	/^		detach: function ( child, parent, scene ) {$/;"	r
detach	js/three.min.js	/^la;m.CubicBezierCurve3=qc;m.QuadraticBezierCurve3=rc;m.LineCurve3=Cb;m.ArcCurve=id;m.EllipseCurve=Sa;m.SplineCurve=wb;m.CubicBezierCurve=xb;m.QuadraticBezierCurve=yb;m.LineCurve=Ma;m.Shape=zb;m.Path=Zc;m.ShapePath=ce;m.Font=de;m.CurvePath=hc;m.Curve=ca;m.ShapeUtils=Ha;m.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new Ec,d=0,e=b.length;d<e;d++)c.add(new qa(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){a.applyMatrix((new K).getInverse(c.matrixWorld));$/;"	r
detail	js/three.js	/^								data.detail$/;"	r
detail	js/three.js	/^			detail: detail$/;"	r
detail	js/three.js	/^		detail = detail || 0;$/;"	r
detail	js/three.min.js	/^5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Lc(a,b){L.call(this);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))\/2,d=1\/c;sa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,$/;"	r
detail	js/three.min.js	/^d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Mc(a,b,c,d,e,f){L.call(this);this.type="TubeGeometry";this.parameters={path:a,$/;"	r
detail	js/three.min.js	/^function jb(a,b){sa.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Kc(a,b){L.call(this);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Rb(a,b));this.mergeVertices()}function Rb(a,b){var c=(1+Math.sqrt(5))\/2;sa.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,$/;"	r
detail	js/three.min.js	/^this.normalizeNormals()}function Ic(a,b){L.call(this);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Qb(a,b));this.mergeVertices()}function Qb(a,b){sa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Jc(a,b){L.call(this);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new jb(a,b));this.mergeVertices()}$/;"	r
details	js/three.js	/^								data.details$/;"	r
determinant	js/three.js	/^		determinant: function () {$/;"	r
determinant	js/three.min.js	/^b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a&&a.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var c=a.elements;a=this.elements;var d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],k=c[5],l=c[6],q=c[7],c=c[8],n=c*h-k*q,m=k*l-c*g,r=q*g-h*l,p=d*n+e*m+f*r;if(0===p){if(!0===$/;"	r
device	js/three.js	/^			var device = vr.getDevice();$/;"	r
device	js/three.js	/^		var device = null;$/;"	r
df	js/three.min.js	/^Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute("position",new z(b,3));b=new T({fog:!1});this.cone=new P(a,b);this.add(this.cone);this.update()}function df(a){var b=[];a&&a.isBone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,df(a.children[c]));return b}function lc(a){for(var b=df(a),c=new C,d=[],e=[],f=new H(0,0,1),g=new H(0,1,0),h=0;h<b.length;h++){var k=b[h];k.parent&&k.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.addAttribute("position",$/;"	r
diagnostics	js/three.js	/^			this.diagnostics = {$/;"	r
diff	js/three.js	/^					var diff = curveLengths[ i ] - d;$/;"	r
diff	js/three.js	/^				diff = ( newTime - this.oldTime ) \/ 1000;$/;"	r
diff	js/three.js	/^				this.elapsedTime += diff;$/;"	r
diff	js/three.js	/^			var diff = 0;$/;"	r
diff	js/three.js	/^			var diff = new Vector3();$/;"	r
diff	js/three.js	/^			var diff = this.vertices.length - unique.length;$/;"	r
diffuse	js/three.js	/^			diffuse: { value: new Color( 0xeeeeee ) },$/;"	r
diffuseFactor	js/GLTFLoader.js	/^					var array = pbrSpecularGlossiness.diffuseFactor;$/;"	r
dir	js/three.js	/^					dir = ( cos >= 0 ? 1 : - 1 ),$/;"	r
direct	js/three.js	/^					direct = undefined;$/;"	r
direct	js/three.js	/^				geometry = direct;$/;"	r
direct	js/three.js	/^				var direct = geometry.__directGeometry;$/;"	r
direction	js/three.js	/^							direction: deltaTime > 0 ? 1 : - 1$/;"	r
direction	js/three.js	/^							direction: new Vector3(),$/;"	r
direction	js/three.js	/^						direction: deltaTime < 0 ? - 1 : 1$/;"	r
direction	js/three.js	/^				direction: {},$/;"	r
direction	js/three.js	/^				var direction = line.delta( v1 );$/;"	r
direction	js/three.js	/^		this.direction = ( direction !== undefined ) ? direction : new Vector3();$/;"	r
direction	js/three.js	/^	function Raycaster( origin, direction, near, far ) {$/;"	r
direction	js/three.min.js	/^-1===e&&(0<=a?(e=0,this._setEndings(!0,0===this.repetitions,d)):this._setEndings(0===this.repetitions,!0,d));if(b>=c||0>b){var f=Math.floor(b\/c),b=b-c*f,e=e+Math.abs(f),g=this.repetitions-e;0>g?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,b=0<a?c:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<a?1:-1})):(0===g?(a=0>a,this._setEndings(a,!a,d)):this._setEndings(!1,!1,d),this._loopCount=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:f}))}if(d&&1===(e&1))return this.time=$/;"	r
direction	js/three.min.js	/^b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(2200===d)a:{if(-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>a?-1:1})}else{d=2202===d;$/;"	r
directionDistance	js/three.js	/^				var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );$/;"	r
directionDistance	js/three.js	/^			var directionDistance = result.dot( this.direction );$/;"	r
direction_eq	js/three.js	/^							direction_eq = true;$/;"	r
direction_eq	js/three.js	/^						direction_eq = true;$/;"	r
direction_eq	js/three.js	/^				var direction_eq = false; \/\/ assumes: opposite$/;"	r
directional	js/three.js	/^				uniforms.directionalLights.value = lights.state.directional;$/;"	r
directional	js/three.js	/^			directional: [],$/;"	r
directionalLength	js/three.js	/^			state.directional.length = directionalLength;$/;"	r
directionalLength	js/three.js	/^			var directionalLength = 0;$/;"	r
directionalLight	script.js	/^var directionalLight = new THREE.DirectionalLight(0xffffff);$/;"	r
directionalLights	js/three.js	/^			directionalLights: { value: [], properties: {$/;"	r
directionalShadowMap	js/three.js	/^				uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;$/;"	r
directionalShadowMap	js/three.js	/^			directionalShadowMap: [],$/;"	r
directionalShadowMap	js/three.js	/^			directionalShadowMap: { value: [] },$/;"	r
directionalShadowMatrix	js/three.js	/^				uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;$/;"	r
directionalShadowMatrix	js/three.js	/^			directionalShadowMatrix: [],$/;"	r
directionalShadowMatrix	js/three.js	/^			directionalShadowMatrix: { value: [] },$/;"	r
directoryRe	js/three.js	/^			var directoryRe = \/((?:[\\w-]+[\\\/:])*)\/;$/;"	r
disable	js/three.js	/^							\/\/ faded out, disable$/;"	r
disable	js/three.js	/^			disable: disable,$/;"	r
disable	js/three.js	/^		disable: function ( channel ) {$/;"	r
disable	js/three.js	/^		function disable( id ) {$/;"	r
disable	js/three.min.js	/^disable:f,getCompressedTextureFormats:function(){if(null===I&&(I=[],b.get("WEBGL_compressed_texture_pvrtc")||b.get("WEBGL_compressed_texture_s3tc")||b.get("WEBGL_compressed_texture_etc1")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)I.push(c[d]);return I},useProgram:function(b){return A!==b?(a.useProgram(b),A=b,!0):!1},setBlending:g,setMaterial:function(b){2===b.side?f(a.CULL_FACE):e(a.CULL_FACE);h(1===b.side);!0===b.transparent?g(b.blending,b.blendEquation,b.blendSrc,$/;"	r
disableUnusedAttributes	js/three.js	/^			disableUnusedAttributes: disableUnusedAttributes,$/;"	r
disableUnusedAttributes	js/three.js	/^		function disableUnusedAttributes() {$/;"	r
disconnect	js/three.js	/^		disconnect: function () {$/;"	r
disconnect	js/three.min.js	/^return this},disconnect:function(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(a){a||(a=[]);!0===this.isPlaying?(this.disconnect(),this.filters=a,this.connect()):this.filters=a;return this},getFilter:function(){return this.getFilters()[0]},$/;"	r
dispatchEvent	js/three.js	/^		dispatchEvent: function ( event ) {$/;"	r
displacementBias	js/GLTFLoader.js	/^				material.displacementBias = 0;$/;"	r
displacementBias	js/GLTFLoader.js	/^				uniforms.displacementBias.value = material.displacementBias;$/;"	r
displacementBias	js/three.js	/^				data.displacementBias = this.displacementBias;$/;"	r
displacementBias	js/three.js	/^				uniforms.displacementBias.value = material.displacementBias;$/;"	r
displacementBias	js/three.js	/^			displacementBias: { value: 0 }$/;"	r
displacementBias	js/three.js	/^			if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;$/;"	r
displacementBias	js/three.js	/^		this.displacementBias = 0;$/;"	r
displacementBias	js/three.js	/^		this.displacementBias = source.displacementBias;$/;"	r
displacementMap	js/GLTFLoader.js	/^					uvScaleMap = material.displacementMap;$/;"	r
displacementMap	js/GLTFLoader.js	/^				material.displacementMap = null;$/;"	r
displacementMap	js/GLTFLoader.js	/^				uniforms.displacementMap.value = material.displacementMap;$/;"	r
displacementMap	js/three.js	/^				data.displacementMap = this.displacementMap.toJSON( meta ).uuid;$/;"	r
displacementMap	js/three.js	/^				displacementMap: !! material.displacementMap,$/;"	r
displacementMap	js/three.js	/^				uniforms.displacementMap.value = material.displacementMap;$/;"	r
displacementMap	js/three.js	/^				uvScaleMap = material.displacementMap;$/;"	r
displacementMap	js/three.js	/^			displacementMap: { value: null },$/;"	r
displacementMap	js/three.js	/^		this.displacementMap = null;$/;"	r
displacementMap	js/three.js	/^		this.displacementMap = source.displacementMap;$/;"	r
displacementMap	js/three.min.js	/^displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,gradientMap:!!b.gradientMap,combine:b.combine,vertexColors:b.vertexColors,fog:!!q,useFog:b.fog,fogExp:q&&q.isFogExp2,flatShading:b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:c.logarithmicDepthBuffer,skinning:b.skinning&&0<l,maxBones:l,useVertexTexture:c.floatVertexTextures,morphTargets:b.morphTargets,morphNormals:b.morphNormals,$/;"	r
displacementScale	js/GLTFLoader.js	/^				material.displacementScale = 1;$/;"	r
displacementScale	js/GLTFLoader.js	/^				uniforms.displacementScale.value = material.displacementScale;$/;"	r
displacementScale	js/three.js	/^				data.displacementScale = this.displacementScale;$/;"	r
displacementScale	js/three.js	/^				uniforms.displacementScale.value = material.displacementScale;$/;"	r
displacementScale	js/three.js	/^			displacementScale: { value: 1 },$/;"	r
displacementScale	js/three.js	/^			if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;$/;"	r
displacementScale	js/three.js	/^		this.displacementScale = 1;$/;"	r
displacementScale	js/three.js	/^		this.displacementScale = source.displacementScale;$/;"	r
displacementScale	js/three.min.js	/^a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;return this};Object.assign(Na.prototype,{isBox3:!0,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],q=a[h+1],n=a[h+2];l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromBufferAttribute:function(a){for(var b=$/;"	r
displacementScale	js/three.min.js	/^this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)}function Wa(a){Q.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new p;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.lights=this.fog=!1;this.setValues(a)}function Na(a,b){this.min=void 0!==$/;"	r
displacementScale	js/three.min.js	/^this.bumpMap.isTexture&&(d.bumpMap=this.bumpMap.toJSON(a).uuid,d.bumpScale=this.bumpScale);this.normalMap&&this.normalMap.isTexture&&(d.normalMap=this.normalMap.toJSON(a).uuid,d.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&(d.displacementMap=this.displacementMap.toJSON(a).uuid,d.displacementScale=this.displacementScale,d.displacementBias=this.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(d.roughnessMap=this.roughnessMap.toJSON(a).uuid);$/;"	r
displacementmap	js/three.js	/^				UniformsLib.displacementmap$/;"	r
displacementmap	js/three.js	/^				UniformsLib.displacementmap,$/;"	r
displacementmap	js/three.js	/^		displacementmap: {$/;"	r
displacementmap_pars_vertex	js/three.js	/^		displacementmap_pars_vertex: displacementmap_pars_vertex,$/;"	r
displacementmap_pars_vertex	js/three.js	/^	var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n";$/;"	r
displacementmap_pars_vertex	js/three.min.js	/^defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n",$/;"	r
displacementmap_vertex	js/three.js	/^		displacementmap_vertex: displacementmap_vertex,$/;"	r
displacementmap_vertex	js/three.js	/^	var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n";$/;"	r
dispose	js/three.js	/^			dispose: dispose$/;"	r
dispose	js/three.js	/^		dispose: function () {$/;"	r
dispose	js/three.js	/^		function dispose() {$/;"	r
dispose	js/three.js	/^		this.dispose = function () {$/;"	r
dispose	js/three.js	/^	DirectionalLightHelper.prototype.dispose = function () {$/;"	r
dispose	js/three.js	/^	HemisphereLightHelper.prototype.dispose = function () {$/;"	r
dispose	js/three.js	/^	PointLightHelper.prototype.dispose = function () {$/;"	r
dispose	js/three.js	/^	RectAreaLightHelper.prototype.dispose = function () {$/;"	r
dispose	js/three.js	/^	SpotLightHelper.prototype.dispose = function () {$/;"	r
dispose	js/three.min.js	/^a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Eb.prototype=Object.create(Db.prototype);Eb.prototype.constructor=Eb;Eb.prototype.isWebGLRenderTargetCube=!0;bb.prototype=Object.create(da.prototype);bb.prototype.constructor=bb;bb.prototype.isDataTexture=!0;Ta.prototype=Object.create(da.prototype);Ta.prototype.constructor=$/;"	r
dispose	js/three.min.js	/^a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.lineDistancesNeedUpdate=a.lineDistancesNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(O.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(O.prototype,{isBufferAttribute:!0,setArray:function(a){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==$/;"	r
dispose	js/three.min.js	/^a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0}}();pc.prototype=Object.create(w.prototype);pc.prototype.constructor=pc;pc.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};pc.prototype.update=function(){var a=new p,b=new p,c=new p;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,$/;"	r
dispose	js/three.min.js	/^a[d].clone();this.clippingPlanes=b;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Va.prototype=Object.create(Q.prototype);Va.prototype.constructor=Va;Va.prototype.isMeshDepthMaterial=!0;Va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.depthPacking=a.depthPacking;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=$/;"	r
dispose	js/three.min.js	/^c,d)};this.dispose=function(){t.removeEventListener("webglcontextlost",c,!1);t.removeEventListener("webglcontextrestored",d,!1);sa.dispose();la.dispose()};this.renderBufferImmediate=function(a,b,c){aa.initAttributes();var d=Y.get(a);a.hasPositions&&!d.position&&(d.position=F.createBuffer());a.hasNormals&&!d.normal&&(d.normal=F.createBuffer());a.hasUvs&&!d.uv&&(d.uv=F.createBuffer());a.hasColors&&!d.color&&(d.color=F.createBuffer());b=b.getAttributes();a.hasPositions&&(F.bindBuffer(F.ARRAY_BUFFER,$/;"	r
dispose	js/three.min.js	/^d=c.array;d[0]=a;d[1]=-b;d[2]=0;d[3]=a;d[4]=b;d[5]=0;d[6]=-a;d[7]=b;d[8]=0;d[9]=-a;d[10]=-b;d[11]=0;d[12]=a;d[13]=-b;d[14]=0;c.needsUpdate=!0;void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)};oc.prototype=Object.create(w.prototype);oc.prototype.constructor=oc;oc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};oc.prototype.update=function(){var a=new p,b=new H,c=new H;return function(){var d=$/;"	r
dispose	js/three.min.js	/^g[c],this.addGroup(d.start,d.count,d.materialIndex);g=a.boundingBox;null!==g&&(this.boundingBox=g.clone());g=a.boundingSphere;null!==g&&(this.boundingSphere=g.clone());this.drawRange.start=a.drawRange.start;this.drawRange.count=a.drawRange.count;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Hb.prototype=Object.create(L.prototype);Hb.prototype.constructor=Hb;fb.prototype=Object.create(C.prototype);fb.prototype.constructor=fb;zc.prototype=Object.create(L.prototype);zc.prototype.constructor=$/;"	r
dispose	js/three.min.js	/^h=d.attributes.normal,p=d=0,r=e.count;p<r;p++)a.set(e.getX(p),e.getY(p),e.getZ(p)).applyMatrix4(f),b.set(h.getX(p),h.getY(p),h.getZ(p)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),g.setXYZ(d,a.x,a.y,a.z),d+=1,g.setXYZ(d,b.x,b.y,b.z),d+=1;g.needsUpdate=!0}}();kc.prototype=Object.create(w.prototype);kc.prototype.constructor=kc;kc.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};kc.prototype.update=function(){var a=new p,b=new p;return function(){this.light.updateMatrixWorld();$/;"	r
dispose	js/three.min.js	/^mc;mc.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};mc.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};nc.prototype=Object.create(w.prototype);nc.prototype.constructor=nc;nc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};nc.prototype.update=function(){var a=.5*this.light.width,b=.5*this.light.height,c=this.line.geometry.attributes.position,$/;"	r
dispose	js/three.min.js	/^this.dispose=function(){window.removeEventListener("vrdisplaypresentchange",b)}}function pg(a){var b={};return{get:function(c){if(void 0!==b[c])return b[c];switch(c){case "WEBGL_depth_texture":var d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");$/;"	r
dispose	js/three.min.js	/^url:h}}c.image=d.uuid}b||(a.textures[this.uuid]=c);return c},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(300===this.mapping){a.applyMatrix3(this.matrix);if(0>a.x||1<a.x)switch(this.wrapS){case 1E3:a.x-=Math.floor(a.x);break;case 1001:a.x=0>a.x?0:1;break;case 1002:a.x=1===Math.abs(Math.floor(a.x)%2)?Math.ceil(a.x)-a.x:a.x-Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case 1E3:a.y-=Math.floor(a.y);break;case 1001:a.y=0>a.y?0:1;break;case 1002:a.y=1===Math.abs(Math.floor(a.y)%$/;"	r
distSq	js/three.js	/^							var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );$/;"	r
distSq	js/three.js	/^						var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );$/;"	r
distToPoint	js/three.js	/^			var distToPoint = plane.distanceToPoint( this.origin );$/;"	r
distance	js/GLTFLoader.js	/^					lightNode.distance = 1 \/ light.linearAttenuation;$/;"	r
distance	js/three.js	/^								distance: distance,$/;"	r
distance	js/three.js	/^							distance: 0,$/;"	r
distance	js/three.js	/^							distance: distance,$/;"	r
distance	js/three.js	/^							minDistance = distance;$/;"	r
distance	js/three.js	/^							var distance = raycaster.ray.origin.distanceTo( interRay );$/;"	r
distance	js/three.js	/^						var distance = projectedPoint.distanceToSquared( closestPoint );$/;"	r
distance	js/three.js	/^						var distance = raycaster.ray.origin.distanceTo( interRay );$/;"	r
distance	js/three.js	/^						var distance = raycaster.ray.origin.distanceTo( intersectPoint );$/;"	r
distance	js/three.js	/^					\/\/ uniforms.distance = distance;$/;"	r
distance	js/three.js	/^					distance: distance,$/;"	r
distance	js/three.js	/^					distance: level.distance$/;"	r
distance	js/three.js	/^					uniforms.distance = distance;$/;"	r
distance	js/three.js	/^					uniforms.distance = light.distance;$/;"	r
distance	js/three.js	/^					var distance = v1.distanceTo( v2 );$/;"	r
distance	js/three.js	/^				distance: distance, 	\/\/ distance (0-1) from light source (0=at light source)$/;"	r
distance	js/three.js	/^				distance: {},$/;"	r
distance	js/three.js	/^				targetArcLength = distance;$/;"	r
distance	js/three.js	/^				var distance = light.distance;$/;"	r
distance	js/three.js	/^				var distance = planes[ i ].distanceToPoint( center );$/;"	r
distance	js/three.js	/^				var distance = raycaster.ray.origin.distanceTo( intersectPoint );$/;"	r
distance	js/three.js	/^				var distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );$/;"	r
distance	js/three.js	/^				var distance = raycaster.ray.origin.distanceTo( matrixPosition );$/;"	r
distance	js/three.js	/^			distance = Math.abs( distance );$/;"	r
distance	js/three.js	/^			distance = Math.min( distance, Math.max( 0, distance ) );$/;"	r
distance	js/three.js	/^			if ( this.distance !== undefined ) data.object.distance = this.distance;$/;"	r
distance	js/three.js	/^			this.distance = source.distance;$/;"	r
distance	js/three.js	/^		distance: function () {$/;"	r
distance	js/three.js	/^		this.distance = ( distance !== undefined ) ? distance : 0;$/;"	r
distance	js/three.js	/^		var d = light.distance;$/;"	r
distance	js/three.js	/^		var d = this.light.distance;$/;"	r
distance	js/three.min.js	/^[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});Object.assign(Dc.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new K;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){var a,b;var c=0;for(b=this.bones.length;c<b;c++)(a=this.bones[c])&&a.matrixWorld.getInverse(this.boneInverses[c]);c=0;for(b=this.bones.length;c<$/;"	r
distance	js/three.min.js	/^a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});xd.prototype=Object.assign(Object.create(fa.prototype),{constructor:xd,isPointLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});yd.prototype=Object.assign(Object.create(rb.prototype),{constructor:yd});zd.prototype=Object.assign(Object.create(fa.prototype),$/;"	r
distance	js/three.min.js	/^a\/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new rb(new Y(90,1,.5,500))}function yd(){rb.call(this,new Gb(-5,5,5,-5,.5,500))}function zd(a,b){fa.call(this,a,b);this.type="DirectionalLight";this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;this.shadow=new yd}function Ad(a,b){fa.call(this,a,b);this.type="AmbientLight";this.castShadow=void 0}function Bd(a,b,c,d){fa.call(this,a,b);this.type="RectAreaLight";this.position.set(0,1,0);this.updateMatrix();$/;"	r
distanceGeometry	js/three.js	/^		var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );$/;"	r
distanceMaterial	js/three.js	/^			_distanceMaterials[ i ] = distanceMaterial;$/;"	r
distanceMaterial	js/three.js	/^			var distanceMaterial = new MeshDistanceMaterial( {$/;"	r
distanceMaterial	js/three.js	/^		var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );$/;"	r
distanceModel	js/three.js	/^			this.panner.distanceModel = value;$/;"	r
distanceRGBA	js/three.js	/^		distanceRGBA: {$/;"	r
distanceRGBA_frag	js/three.js	/^		distanceRGBA_frag: distanceRGBA_frag,$/;"	r
distanceRGBA_frag	js/three.js	/^	var distanceRGBA_frag = "#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) \/ ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n";$/;"	r
distanceRGBA_frag	js/three.min.js	/^distanceRGBA_frag:"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) \/ ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n",$/;"	r
distanceRGBA_vert	js/three.js	/^		distanceRGBA_vert: distanceRGBA_vert,$/;"	r
distanceRGBA_vert	js/three.js	/^	var distanceRGBA_vert = "#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n";$/;"	r
distanceRGBA_vert	js/three.min.js	/^distanceRGBA_vert:"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n",$/;"	r
distanceSq	js/three.js	/^		distanceSq: function () {$/;"	r
distanceSqToPoint	js/three.js	/^			return function distanceSqToPoint( point ) {$/;"	r
distanceSqToPoint	js/three.js	/^		distanceSqToPoint: function () {$/;"	r
distanceSqToSegment	js/three.js	/^			return function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {$/;"	r
distanceSqToSegment	js/three.js	/^		distanceSqToSegment: function () {$/;"	r
distanceTo	js/three.js	/^		distanceTo: function ( v ) {$/;"	r
distanceTo	js/three.min.js	/^a.dot(this)\/a.lengthSq();return this.copy(a).multiplyScalar(b)},projectOnPlane:function(){var a=new p;return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a=new p;return function(b){return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)\/Math.sqrt(this.lengthSq()*a.lengthSq());return Math.acos(R.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-$/;"	r
distanceToManhattan	js/three.js	/^		distanceToManhattan: function ( v ) {$/;"	r
distanceToManhattan	js/three.min.js	/^b,c)},distanceToManhattan:function(a){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(a)},lengthManhattan:function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(p.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},$/;"	r
distanceToPlane	js/three.js	/^		distanceToPlane: function ( plane ) {$/;"	r
distanceToPoint	js/three.js	/^			return function distanceToPoint( point ) {$/;"	r
distanceToPoint	js/three.js	/^		distanceToPoint: function ( point ) {$/;"	r
distanceToPoint	js/three.js	/^		distanceToPoint: function () {$/;"	r
distanceToPoint	js/three.min.js	/^b){b=b||new p;b.subVectors(a,this.origin);a=b.dot(this.direction);return 0>a?b.copy(this.origin):b.copy(this.direction).multiplyScalar(a).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new p;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var a=$/;"	r
distanceToPoint	js/three.min.js	/^b){return(b||new p).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new p;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new p;return function(b){b=b||new Da;this.getCenter(b.center);b.radius=.5*this.getSize(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=$/;"	r
distanceToRay	js/three.js	/^							distanceToRay: Math.sqrt( rayPointDistanceSq ),$/;"	r
distanceToSphere	js/three.js	/^		distanceToSphere: function ( sphere ) {$/;"	r
distanceToSphere	js/three.min.js	/^this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return(b||new p).copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)},intersectLine:function(){var a=new p;return function(b,c){c=c||new p;var d=b.delta(a),e=this.normal.dot(d);if(0===e){if(0===this.distanceToPoint(b.start))return c.copy(b.start)}else if(e=-(b.start.dot(this.normal)+this.constant)\/e,!(0>e||1<e))return c.copy(d).multiplyScalar(e).add(b.start)}}(),intersectsLine:function(a){var b=$/;"	r
distanceToSquared	js/three.js	/^		distanceToSquared: function ( v ) {$/;"	r
dithering	js/three.js	/^				dithering: material.dithering,$/;"	r
dithering	js/three.js	/^			if ( json.dithering !== undefined ) material.dithering = json.dithering;$/;"	r
dithering	js/three.js	/^			this.dithering = source.dithering;$/;"	r
dithering	js/three.js	/^		this.dithering = false;$/;"	r
dithering_fragment	js/three.js	/^		dithering_fragment: dithering_fragment,$/;"	r
dithering_fragment	js/three.js	/^	var dithering_fragment = "#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n";$/;"	r
dithering_pars_fragment	js/three.js	/^		dithering_pars_fragment: dithering_pars_fragment,$/;"	r
dithering_pars_fragment	js/three.js	/^	var dithering_pars_fragment = "#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 \/ 255.0, -0.25 \/ 255.0, 0.25 \/ 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n";$/;"	r
divide	js/three.js	/^		divide: function ( v ) {$/;"	r
divideScalar	js/three.js	/^		divideScalar: function ( scalar ) {$/;"	r
divideScalar	js/three.min.js	/^a.getInverse(b.projectionMatrix));return this.applyMatrix4(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x\/=a.x;this.y\/=a.y;this.z\/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=$/;"	r
divideScalar	js/three.min.js	/^e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x\/b,this.y=a.y\/b,this.z=a.z\/b);return this},setAxisAngleFromRotationMatrix:function(a){a=a.elements;var b=a[0];var c=a[4];var d=a[8],e=a[1],f=a[5],g=a[9];var h=a[2];var k=a[6];var l=a[10];if(.01>Math.abs(c-e)&&.01>Math.abs(d-h)&&.01>Math.abs(g-k)){if(.1>Math.abs(c+$/;"	r
divideScalar	js/three.min.js	/^return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x\/=a.x;this.y\/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},applyMatrix3:function(a){var b=this.x,c=this.y;a=a.elements;this.x=a[0]*b+a[3]*c+a[6];this.y=a[1]*b+a[4]*c+a[7];return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=$/;"	r
divisions	js/three.js	/^			divisions = divisions || 12;$/;"	r
divisions	js/three.js	/^		divisions = divisions || 10;$/;"	r
divisions	js/three.js	/^		divisions = divisions || 64;$/;"	r
divisions	js/three.js	/^	function GridHelper( size, divisions, color1, color2 ) {$/;"	r
domElement	js/three.js	/^		this.domElement = _canvas;$/;"	r
domElement	js/three.js	/^		this.domElement = document.createElementNS( 'http:\/\/www.w3.org\/1999\/xhtml', 'canvas' );$/;"	r
domElement	js/three.min.js	/^this.domElement=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};Object.defineProperty(m,"__esModule",{value:!0})});$/;"	r
dot	js/three.js	/^		dot: function ( v ) {$/;"	r
dot	js/three.min.js	/^-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1\/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},$/;"	r
dot	js/three.min.js	/^-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,b){this.x+=(a.x-$/;"	r
dot	js/three.min.js	/^dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,b){this.x+=$/;"	r
dot	js/three.min.js	/^this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+$/;"	r
dot00	js/three.js	/^				var dot00 = v0.dot( v0 );$/;"	r
dot01	js/three.js	/^				var dot01 = v0.dot( v1 );$/;"	r
dot02	js/three.js	/^				var dot02 = v0.dot( v2 );$/;"	r
dot11	js/three.js	/^				var dot11 = v1.dot( v1 );$/;"	r
dot12	js/three.js	/^				var dot12 = v1.dot( v2 );$/;"	r
dotNL	js/three.js	/^	var bsdfs = "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 \/ max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance \/ cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance \/ cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 \/ ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 \/ max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 \/ pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) \/ LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 \/ LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta \/ ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) \/ ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a \/ b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 \/ pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 \/ ( blinnExponent + 2.0 ) );\\n}\\n";$/;"	r
dotNL	js/three.min.js	/^aomap_pars_fragment:"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif",begin_vertex:"\\nvec3 transformed = vec3( position );\\n",beginnormal_vertex:"\\nvec3 objectNormal = vec3( normal );\\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 \/ max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance \/ cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance \/ cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 \/ ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 \/ max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 \/ pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) \/ LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 \/ LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta \/ ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) \/ ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a \/ b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 \/ pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 \/ ( blinnExponent + 2.0 ) );\\n}\\n",$/;"	r
doubleSided	js/three.min.js	/^alphaTest:b.alphaTest,doubleSided:2===b.side,flipSided:1===b.side,depthPacking:void 0!==b.depthPacking?b.depthPacking:!1}};this.getProgramCode=function(b,c){var d=[];c.shaderID?d.push(c.shaderID):(d.push(b.fragmentShader),d.push(b.vertexShader));if(void 0!==b.defines)for(var e in b.defines)d.push(e),d.push(b.defines[e]);for(e=0;e<g.length;e++)d.push(c[g[e]]);d.push(b.onBeforeCompile.toString());d.push(a.gammaOutput);return d.join()};this.acquireProgram=function(c,d,f,g){for(var h,l=0,k=e.length;l<$/;"	r
drawBuffers	js/three.js	/^			drawBuffers: false, \/\/ set to use draw buffers$/;"	r
drawBuffers	js/three.min.js	/^drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function hb(a,b){this.origin=void 0!==a?a:new p;this.direction=void 0!==b?b:new p}function Ib(a,b){this.start=void 0!==a?a:new p;this.end=void 0!==b?b:new p}function Pa(a,b,c){this.a=void 0!==a?a:new p;this.b=void 0!==$/;"	r
drawCount	js/three.js	/^			var drawCount = Math.max( 0, drawEnd - drawStart + 1 );$/;"	r
drawEnd	js/three.js	/^			var drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;$/;"	r
drawMode	js/GLTFLoader.js	/^							mesh.drawMode = THREE.TriangleFanDrawMode;$/;"	r
drawMode	js/GLTFLoader.js	/^							mesh.drawMode = THREE.TriangleStripDrawMode;$/;"	r
drawMode	js/three.js	/^			this.drawMode = source.drawMode;$/;"	r
drawMode	js/three.js	/^			this.drawMode = value;$/;"	r
drawMode	js/three.js	/^		this.drawMode = TrianglesDrawMode;$/;"	r
drawMode	js/three.min.js	/^b?b:new p;this.c=void 0!==c?c:new p}function qa(a,b){w.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new va({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Qf(a,b,c,d){function e(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d)}var f=new H(0),g=0,h,k,l;return{getClearColor:function(){return f},setClearColor:function(a,b){f.set(a);g=void 0!==b?b:1;e(f,g)},getClearAlpha:function(){return g},setClearAlpha:function(a){g=a;e(f,$/;"	r
drawMode	js/three.min.js	/^{constructor:qa,isMesh:!0,setDrawMode:function(a){this.drawMode=a},copy:function(a){w.prototype.copy.call(this,a);this.drawMode=a.drawMode;void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice());void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary));return this},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length){var c=a[b[0]];if(void 0!==$/;"	r
drawRange	js/three.js	/^		this.drawRange = { start: 0, count: Infinity };$/;"	r
drawRange	js/three.min.js	/^{};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Hb(a,b,c,d,e,f){L.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fb(a,b,c,d,e,f));this.mergeVertices()}function fb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,m,ya,ja,ma){var B=f\/ya,v=g\/ja,t=f\/2,x=g\/2,I=m\/2;g=ya+1;var A=ja+1,y=f=0,J,w,z=new p;for(w=0;w<A;w++){var D=w*v-x;for(J=0;J<g;J++)z[a]=$/;"	r
drawStart	js/three.js	/^					renderer.renderInstances( geometry, drawStart, drawCount );$/;"	r
drawStart	js/three.js	/^			var drawStart = Math.max( rangeStart, groupStart );$/;"	r
drawcalls	js/three.js	/^		drawcalls: {$/;"	r
dstArray	js/three.js	/^						dstArray = new Float32Array( flatSize );$/;"	r
dstArray	js/three.js	/^					dstArray = cache.clippingState || null;$/;"	r
dstArray	js/three.js	/^				cache.clippingState = dstArray;$/;"	r
dstArray	js/three.js	/^				dstArray = null;$/;"	r
dstArray	js/three.js	/^				dstArray = projectPlanes( planes, camera, lGlobal, fromCache );$/;"	r
dstArray	js/three.js	/^				dstArray = uniform.value;$/;"	r
dstArray	js/three.js	/^				uniform.value = dstArray; \/\/ ensure unique state$/;"	r
dstArray	js/three.js	/^				uniform.value = dstArray;$/;"	r
dstNormalsFace	js/three.js	/^					var dstNormalsFace = this.morphNormals[ i ].faceNormals;$/;"	r
dstNormalsVertex	js/three.js	/^					var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;$/;"	r
dstOffset	js/three.js	/^			Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );$/;"	r
dstOffset	js/three.js	/^			for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {$/;"	r
dstOffset	js/three.js	/^		_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {$/;"	r
dstOffset	js/three.js	/^		_select: function ( buffer, dstOffset, srcOffset, t, stride ) {$/;"	r
dstOffset	js/three.js	/^		_slerp: function ( buffer, dstOffset, srcOffset, t ) {$/;"	r
dstOffset	js/three.js	/^		slerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {$/;"	r
dstPlanes	js/three.js	/^				dstPlanes = new Array( n );$/;"	r
dstPlanes	js/three.js	/^				dstPlanes = null;$/;"	r
dstPlanes	js/three.js	/^			this.clippingPlanes = dstPlanes;$/;"	r
dstVertices	js/three.js	/^						var dstVertices = geometry.morphTargets[ i ].vertices;$/;"	r
dt0	js/three.js	/^			px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );$/;"	r
dt0	js/three.js	/^			py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );$/;"	r
dt0	js/three.js	/^			pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );$/;"	r
dt0	js/three.js	/^			var dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );$/;"	r
dt1	js/three.js	/^				t1 *= dt1;$/;"	r
dt1	js/three.js	/^				t2 *= dt1;$/;"	r
dt1	js/three.js	/^			if ( dt0 < 1e-4 ) dt0 = dt1;$/;"	r
dt1	js/three.js	/^			if ( dt2 < 1e-4 ) dt2 = dt1;$/;"	r
dt1	js/three.js	/^			var dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );$/;"	r
dt2	js/three.js	/^			var dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );$/;"	r
duration	js/three.js	/^						time = duration;$/;"	r
duration	js/three.js	/^					duration = morphTargetNames.length * ( fps || 1.0 );$/;"	r
duration	js/three.js	/^					fadeOutDuration = fadeOutAction._clip.duration,$/;"	r
duration	js/three.js	/^				duration = Math.max( duration, track.times[ track.times.length - 1 ] );$/;"	r
duration	js/three.js	/^				var fadeInDuration = this._clip.duration,$/;"	r
duration	js/three.js	/^			return fadeInAction.crossFadeFrom( this, duration, warp );$/;"	r
duration	js/three.js	/^			this.duration = duration;$/;"	r
duration	js/three.js	/^			var clip = new AnimationClip( clipName, duration, tracks );$/;"	r
duration	js/three.js	/^			var duration = animation.length || - 1;$/;"	r
duration	js/three.js	/^			var duration = this._clip.duration,$/;"	r
duration	js/three.js	/^			var tracks = this.tracks, duration = 0;$/;"	r
duration	js/three.js	/^		crossFadeFrom: function ( fadeOutAction, duration, warp ) {$/;"	r
duration	js/three.js	/^		crossFadeTo: function ( fadeInAction, duration, warp ) {$/;"	r
duration	js/three.js	/^		this.duration = ( duration !== undefined ) ? duration : - 1;$/;"	r
duration	js/three.js	/^	function AnimationClip( name, duration, tracks ) {$/;"	r
duration	js/three.min.js	/^1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}});Object.assign(Id.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},parse:function(a){function b(a){void 0===c[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a);$/;"	r
duration	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
duration	js/three.min.js	/^b=b*d;a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b},_updateTime:function(a){var b=this.time+a;if(0===a)return b;var c=this._clip.duration,d=this.loop,e=this._loopCount;if(2200===d)a:{if(-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1)),b>=c)b=c;else if(0>b)b=0;else break a;this.clampWhenFinished?this.paused=!0:this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:0>a?-1:1})}else{d=2202===d;$/;"	r
duration	js/three.min.js	/^this.fadeIn(b);if(c){c=this._clip.duration;var d=a._clip.duration,e=c\/d;a.warp(1,d\/c,b);this.warp(e,1,b)}return this},crossFadeTo:function(a,b,c){return a.crossFadeFrom(this,b,c)},stopFading:function(){var a=this._weightInterpolant;null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},$/;"	r
dx	js/three.js	/^			var dx = ( this.right - this.left ) \/ ( 2 * this.zoom );$/;"	r
dx	js/three.js	/^			var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;$/;"	r
dx	js/three.js	/^			var dx = this.x - v.x, dy = this.y - v.y;$/;"	r
dy	js/three.js	/^			var dy = ( this.top - this.bottom ) \/ ( 2 * this.zoom );$/;"	r
dynamic	js/three.js	/^			this.dynamic = source.dynamic;$/;"	r
dynamic	js/three.js	/^			this.dynamic = value;$/;"	r
dynamic	js/three.js	/^		dynamic: {$/;"	r
dynamic	js/three.js	/^		this.dynamic = false;$/;"	r
e	js/three.js	/^					e = edges[ key ];$/;"	r
e	js/three.js	/^				e = edges[ key ];$/;"	r
e	js/three.js	/^			for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {$/;"	r
e	js/three.js	/^			for ( var i = stride, e = stride + stride; i !== e; ++ i ) {$/;"	r
e	js/three.js	/^			var e = Math.cos( z ), f = Math.sin( z );$/;"	r
e	js/three.js	/^			var e = edges[ key ];$/;"	r
e	js/three.js	/^			var e = m.elements;$/;"	r
e	js/three.js	/^		var edge = [ 0, 0 ], edges = {}, e, edge1, edge2;$/;"	r
e	js/three.min.js	/^!1,Fb(b,this.size,16))}function Ef(a,b,c){var d=b.length,e=xe(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTexture2D(b[a]||Be,e[a])}function Ff(a,b,c){var d=b.length,e=xe(c,d);a.uniform1iv(this.addr,e);for(a=0;a!==d;++a)c.setTextureCube(b[a]||Ce,e[a])}function Gf(a){switch(a){case 5126:return wf;case 35664:return yf;case 35665:return zf;case 35666:return Af;case 35674:return Bf;case 35675:return Cf;case 35676:return Df;case 35678:return Ef;case 35680:return Ff;case 5124:case 35670:return xf;$/;"	r
e	js/three.min.js	/^!1;a=[];e=0;for(f=l.length;e<f;e++)h[e]=[];e=0;for(f=l.length;e<f;e++)for(g=m[e],t=0;t<g.length;t++){k=g[t];n=!0;for(v=0;v<l.length;v++)d(k.p,l[v].p)&&(e!==v&&a.push({froms:e,tos:v,hole:t}),n?(n=!1,h[v].push(k)):p=!0);n&&h[e].push(k)}0<a.length&&(p||(m=h))}p=0;for(e=l.length;p<e;p++)for(h=l[p].s,b.push(h),a=m[p],f=0,g=a.length;f<g;f++)h.holes.push(a[f].h);return b}});Object.assign(de.prototype,{isFont:!0,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split("");$/;"	r
e	js/three.min.js	/^"img");c.addEventListener("load",function(){jd.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);c.addEventListener("error",function(b){d&&d(b);e.manager.itemEnd(a);e.manager.itemError(a)},!1);"data:"!==a.substr(0,5)&&void 0!==this.crossOrigin&&(c.crossOrigin=this.crossOrigin);e.manager.itemStart(a);c.src=a;return c},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign($d.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){function e(c){g.load(a[c],$/;"	r
e	js/three.min.js	/^(h.minFilter=c(g.minFilter,jf));void 0!==g.magFilter&&(h.magFilter=c(g.magFilter,jf));void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);void 0!==g.flipY&&(h.flipY=g.flipY);d[g.uuid]=h}return d},parseObject:function(){var a=new K;return function(b,c,d){function e(a){void 0===c[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a);return c[a]}function f(a){if(void 0!==a){if(Array.isArray(a)){for(var b=[],c=0,e=a.length;c<e;c++){var f=a[c];void 0===d[f]&&console.warn("THREE.ObjectLoader: Undefined material",$/;"	r
e	js/three.min.js	/^(h.push(e),k.push(k[0]));f.push((new fc(".morphTargetInfluences["+b[g].name+"]",h,k)).scale(1\/c))}return new ra(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(a=0;a<c.length;a++)if(c[a].name===b)return c[a];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d,e={},f=\/^([\\w-]*?)([\\d]+)$\/,g=0,h=a.length;g<h;g++){var k=a[g],l=k.name.match(f);l&&1<l.length&&(d=l[1],(l=e[d])||(e[d]=l=[]),l.push(k))}a=[];for(d in e)a.push(ra.CreateFromMorphTargetSequence(d,$/;"	r
e	js/three.min.js	/^--this._nActiveBindings,e=b[d];a._cacheIndex=d;b[d]=a;e._cacheIndex=c;b[c]=e},_lendControlInterpolant:function(){var a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];void 0===c&&(c=new Xc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),c.__cacheIndex=b,a[b]=c);return c},_takeBackControlInterpolant:function(a){var b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d;b[d]=a;e.__cacheIndex=c;$/;"	r
e	js/three.min.js	/^-q),h),k=-d*d+e*(e+2*q)+n):e<=p?(d=0,e=Math.min(Math.max(-h,-q),h),k=e*(e+2*q)+n):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-q),h),k=-d*d+e*(e+2*q)+n)}else e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n;f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new p;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d;b=b.radius*b.radius;if(e>b)return null;$/;"	r
e	js/three.min.js	/^0,2*Math.PI);var e=[],f=[],g=[],h=1\/b,k=new p,l=new D,q;for(q=0;q<=b;q++){var n=c+q*h*d;var u=Math.sin(n),m=Math.cos(n);for(n=0;n<=a.length-1;n++)k.x=a[n].x*u,k.y=a[n].y,k.z=a[n].x*m,f.push(k.x,k.y,k.z),l.x=q\/b,l.y=n\/(a.length-1),g.push(l.x,l.y)}for(q=0;q<b;q++)for(n=0;n<a.length-1;n++)c=n+q*a.length,h=c+a.length,k=c+a.length+1,l=c+1,e.push(c,h,l),e.push(h,k,l);this.setIndex(e);this.addAttribute("position",new z(f,3));this.addAttribute("uv",new z(g,2));this.computeVertexNormals();if(d===2*Math.PI)for(d=$/;"	r
e	js/three.min.js	/^0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new H);b[c++]=f.r;b[c++]=f.g;b[c++]=f.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];b[c++]=f.a;b[c++]=f.b;b[c++]=f.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new D);$/;"	r
e	js/three.min.js	/^1),e=f-1),a=this.getValueSize(),this.times=S.arraySlice(c,e,f),this.values=S.arraySlice(this.values,e*a,f*a);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if("number"===typeof g&&isNaN(g)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",$/;"	r
e	js/three.min.js	/^[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var d=void 0===a||"string"===typeof a,e={};d&&(a={geometries:{},materials:{},textures:{},images:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var f={};f.uuid=this.uuid;f.type=this.type;""!==this.name&&(f.name=this.name);!0===this.castShadow&&(f.castShadow=!0);!0===this.receiveShadow&&(f.receiveShadow=!0);!1===this.visible&&(f.visible=!1);"{}"!==JSON.stringify(this.userData)&&(f.userData=this.userData);f.matrix=$/;"	r
e	js/three.min.js	/^a.ARRAY_BUFFER);c=c.morphAttributes;for(f in c)for(var d=c[f],e=0,g=d.length;e<g;e++)b.update(d[e],a.ARRAY_BUFFER)},getWireframeAttribute:function(c){var d=f[c.id];if(d)return d;d=[];var e=c.index;var g=c.attributes;if(null!==e){var q=e.array;for(var n=0,u=q.length;n<u;n+=3){var r=q[n+0];g=q[n+1];e=q[n+2];d.push(r,g,g,e,e,r)}}else for(q=g.position.array,n=0,u=q.length\/3-1;n<u;n+=3)r=n+0,g=n+1,e=n+2,d.push(r,g,g,e,e,r);d=new (65535<Qd(d)?eb:db)(d,1);b.update(d,a.ELEMENT_ARRAY_BUFFER);return f[c.id]=$/;"	r
e	js/three.min.js	/^a.DEPTH_ATTACHMENT,a.TEXTURE_2D,e,0);else if(1027===b.depthTexture.format)a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,e,0);else throw Error("Unknown depthTexture format");}else if(f)for(e.__webglDepthbuffer=[],f=0;6>f;f++)a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer[f]),e.__webglDepthbuffer[f]=a.createRenderbuffer(),p(e.__webglDepthbuffer[f],b);else a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),p(e.__webglDepthbuffer,$/;"	r
e	js/three.min.js	/^a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer);if(!b.depthTexture||!b.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(b.depthTexture).__webglTexture&&b.depthTexture.image.width===b.width&&b.depthTexture.image.height===b.height||(b.depthTexture.image.width=b.width,b.depthTexture.image.height=b.height,b.depthTexture.needsUpdate=!0);r(b.depthTexture,0);e=d.get(b.depthTexture).__webglTexture;if(1026===b.depthTexture.format)a.framebufferTexture2D(a.FRAMEBUFFER,$/;"	r
e	js/three.min.js	/^a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(b=0;b<d;b++)a.texImage2D(c+b,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,e);return f}function e(b){!0!==B[b]&&(a.enable(b),B[b]=!0)}function f(b){!1!==B[b]&&(a.disable(b),B[b]=!1)}function g(b,d,g,h,l,k,n,q){0!==b?e(a.BLEND):f(a.BLEND);if(5!==b){if(b!==J||q!==M)switch(b){case 2:q?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),$/;"	r
e	js/three.min.js	/^a;return this},setMimeType:function(a){this.mimeType=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});Object.assign(Qe.prototype,{load:function(a,b,c,d){function e(e){l.load(a[e],function(a){a=g._parser(a,!0);h[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};f+=1;6===f&&(1===a.mipmapCount&&(k.minFilter=1006),k.format=a.format,k.needsUpdate=!0,b&&b(k))},c,d)}var f,g=this,h=[],k=new Nb;k.image=h;var l=new Ja(this.manager);l.setPath(this.path);l.setResponseType("arraybuffer");$/;"	r
e	js/three.min.js	/^a[c]});return c},sortedArray:function(a,b,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==$/;"	r
e	js/three.min.js	/^b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new be,d=new ae,e=0,f=a.length;e<f;e++){var g=a[e];switch(g.type){case "PlaneGeometry":case "PlaneBufferGeometry":var h=new Ca[g.type](g.width,g.height,g.widthSegments,g.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":h=$/;"	r
e	js/three.min.js	/^b,c-b}return this.time=b},_setEndings:function(a,b,c){var d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(d.endingStart=a?this.zeroSlopeAtStart?2401:2400:2402,d.endingEnd=b?this.zeroSlopeAtEnd?2401:2400:2402)},_scheduleFading:function(a,b,c){var d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(this._weightInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;f[0]=b;d[1]=e+a;f[1]=c;return this}});Object.assign(Ye.prototype,ia.prototype,$/;"	r
e	js/three.min.js	/^b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length\/3-1)}var d=new C,e=new T({color:16777215,vertexColors:1}),f=[],g=[],h={},k=new H(16755200),l=new H(16711680),q=new H(43775),n=new H(16777215),u=new H(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",l);b("p","n2",l);b("p","n3",l);b("p","n4",$/;"	r
e	js/three.min.js	/^b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new p;return function(b){var c=this.elements,d=b.elements,e=1\/a.setFromMatrixColumn(b,0).length(),f=1\/a.setFromMatrixColumn(b,1).length();b=1\/a.setFromMatrixColumn(b,2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");$/;"	r
e	js/three.min.js	/^b=0;for(var e=a.length;b<e;b++){var f=a[b];if("MultiMaterial"===f.type){for(var g=[],h=0;h<f.materials.length;h++)g.push(d.parse(f.materials[h]));c[f.uuid]=g}else c[f.uuid]=d.parse(f)}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=ra.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemEnd(a);d.manager.itemError(a)})}var d=this,e={};if(void 0!==$/;"	r
e	js/three.min.js	/^b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=h;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=$/;"	r
e	js/three.min.js	/^console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,b){var c=[];oe(a,this,c,b);c.sort($e);return c},intersectObjects:function(a,b){var c=[];if(!1===Array.isArray(a))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),c;for(var d=0,e=a.length;d<e;d++)oe(a[d],this,c,b);c.sort($e);return c}});Object.assign(af.prototype,{start:function(){this.oldTime=this.startTime=("undefined"===typeof performance?Date:performance).now();this.elapsedTime=$/;"	r
e	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);this.theta=Math.atan2(a.x,a.z);this.y=a.y;return this}});ad.prototype=Object.create(w.prototype);ad.prototype.constructor=ad;ad.prototype.isImmediateRenderObject=!0;bd.prototype=Object.create(P.prototype);bd.prototype.constructor=bd;bd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){var d,e=["a","b","c"];this.object.updateMatrixWorld(!0);$/;"	r
e	js/three.min.js	/^d);e=Math.sqrt(e\/2)}else a=!1,d>Number.EPSILON?f>Number.EPSILON&&(a=!0):d<-Number.EPSILON?f<-Number.EPSILON&&(a=!0):Math.sign(e)===Math.sign(g)&&(a=!0),a?(f=-e,e=Math.sqrt(h)):(f=d,d=e,e=Math.sqrt(h\/2));return new D(f\/e,d\/e)}function e(a,b){for(G=a.length;0<=--G;){var c=G;var d=G-1;0>d&&(d=a.length-1);var e,f=w+2*x;for(e=0;e<f;e++){var g=Y*e,l=Y*(e+1),q=b+d+g,n=b+d+l,l=b+c+l;h(b+c+g);h(q);h(l);h(q);h(n);h(l);g=m.length\/3;g=E.generateSideWallUV(R,m,g-6,g-3,g-2,g-1);k(g[0]);k(g[1]);k(g[3]);k(g[1]);$/;"	r
e	js/three.min.js	/^d.__originalVertexNormals[e]=d.vertexNormals[e].clone()}var f=new L;f.faces=this.faces;e=0;for(a=this.morphTargets.length;e<a;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];d=this.morphNormals[e].faceNormals;var g=this.morphNormals[e].vertexNormals;c=0;for(b=this.faces.length;c<b;c++){var h=new p;var k={a:new p,b:new p,c:new p};d.push(h);g.push(k)}}g=this.morphNormals[e];f.vertices=this.morphTargets[e].vertices;f.computeFaceNormals();$/;"	r
e	js/three.min.js	/^d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=f+g,k,l,q=0,n=[],u=new p,m=new p,v=[],t=[],x=[],y=[];for(l=0;l<=c;l++){var B=[],I=l\/c;for(k=0;k<=b;k++){var A=k\/b;u.x=-a*Math.cos(d+A*e)*Math.sin(f+I*g);u.y=a*Math.cos(f+I*g);u.z=a*Math.sin(d+A*e)*Math.sin(f+I*g);t.push(u.x,u.y,u.z);m.set(u.x,u.y,u.z).normalize();x.push(m.x,m.y,m.z);y.push(A,1-I);B.push(q++)}n.push(B)}for(l=0;l<c;l++)for(k=0;k<b;k++)a=n[l][k+1],d=n[l][k],e=n[l+1][k],g=n[l+1][k+1],(0!==l||0<f)&&v.push(a,d,$/;"	r
e	js/three.min.js	/^e,b,1)}else c.enabled&&a.setDrawingBufferSize(n.width,n.height,u)}var c=this,d=null,e=null;"undefined"!==typeof window&&"VRFrameData"in window&&(e=new window.VRFrameData);var f=new K,g=new K,h=new K,k=new Y;k.bounds=new ba(0,0,.5,1);k.layers.enable(1);var l=new Y;l.bounds=new ba(.5,0,.5,1);l.layers.enable(2);var q=new nd([k,l]);q.layers.enable(1);q.layers.enable(2);var n,u;"undefined"!==typeof window&&window.addEventListener("vrdisplaypresentchange",b,!1);this.standing=this.enabled=!1;this.getDevice=$/;"	r
e	js/three.min.js	/^e,c=e.x):(b=e,q=e.x,l=c,c=c.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),c.y<e.y?(b=c,q=c.y,l=e,c=e.y):(b=e,q=e.y,l=c,c=c.y));return k<=q?a<q?[]:a===q?f?[]:[b]:a<=c?[b,h]:[b,l]:k>c?[]:k===c?f?[]:[g]:a<=c?[g,h]:[g,l]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}c(a);b.forEach(c);var g,h={},k=a.concat();var l=0;for(g=b.length;l<g;l++)Array.prototype.push.apply(k,$/;"	r
e	js/three.min.js	/^e.getMaxAnisotropy())),d.get(g).__currentAnisotropy=g.anisotropy)}function t(b,e,g,h){var l=f.convert(e.texture.format),k=f.convert(e.texture.type);c.texImage2D(h,0,l,e.width,e.height,0,l,k,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,0);a.bindFramebuffer(a.FRAMEBUFFER,null)}function p(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&&!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c.width,c.height),$/;"	r
e	js/three.min.js	/^e;f++){var g=this.vertices[f];g=Math.round(g.x*d)+"_"+Math.round(g.y*d)+"_"+Math.round(g.z*d);void 0===a[g]?(a[g]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[g]]}a=[];f=0;for(e=this.faces.length;f<e;f++)for(d=this.faces[f],d.a=c[d.a],d.b=c[d.b],d.c=c[d.c],d=[d.a,d.b,d.c],g=0;3>g;g++)if(d[g]===d[(g+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(d=a[f],this.faces.splice(d,1),c=0,e=this.faceVertexUvs.length;c<e;c++)this.faceVertexUvs[c].splice(d,1);f=this.vertices.length-b.length;this.vertices=$/;"	r
e	js/three.min.js	/^e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x\/b,this.y=a.y\/b,this.z=a.z\/b);return this},setAxisAngleFromRotationMatrix:function(a){a=a.elements;var b=a[0];var c=a[4];var d=a[8],e=a[1],f=a[5],g=a[9];var h=a[2];var k=a[6];var l=a[10];if(.01>Math.abs(c-e)&&.01>Math.abs(d-h)&&.01>Math.abs(g-k)){if(.1>Math.abs(c+$/;"	r
e	js/three.min.js	/^e=0,f=!1,g=!1,h=new za,k=new ta,l={value:null,needsUpdate:!1};this.uniform=l;this.numIntersection=this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,r,m,p){if(!f||null===c||0===c.length||g&&!k)g?b(null):a();else{k=g?0:e;var n=4*k,q=m.clippingState||null;l.value=q;q=b(c,r,n,p);for(c=0;c!==n;++c)q[c]=d[c];m.clippingState=q;this.numIntersection=$/;"	r
e	js/three.min.js	/^e=a.faces;f=0;for(b=e.length;f<b;f++)this.faces.push(e[f].clone());f=0;for(b=a.faceVertexUvs.length;f<b;f++){var g=a.faceVertexUvs[f];void 0===this.faceVertexUvs[f]&&(this.faceVertexUvs[f]=[]);e=0;for(c=g.length;e<c;e++){var h=g[e],k=[];var l=0;for(d=h.length;l<d;l++)k.push(h[l].clone());this.faceVertexUvs[f].push(k)}}l=a.morphTargets;f=0;for(b=l.length;f<b;f++){d={};d.name=l[f].name;if(void 0!==l[f].vertices)for(d.vertices=[],e=0,c=l[f].vertices.length;e<c;e++)d.vertices.push(l[f].vertices[e].clone());$/;"	r
e	js/three.min.js	/^e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length;if(0<h){var k=[];for(var l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var q=a.morphNormals,n=q.length;if(0<n){var m=[];for(l=0;l<n;l++)m[l]=[];this.morphTargets.normal=m}for(var r=a.skinIndices,p=a.skinWeights,t=r.length===c.length,x=p.length===c.length,l=0;l<b.length;l++){var y=b[l];this.vertices.push(c[y.a],c[y.b],c[y.c]);var B=y.vertexNormals;3===B.length?this.normals.push(B[0],B[1],B[2]):(B=y.normal,this.normals.push(B,$/;"	r
e	js/three.min.js	/^e=parseInt(c[2],10)\/100,f=parseInt(c[3],10)\/100;b(c[5]);return this.setHSL(d,e,f)}}}else if(c=\/^\\#([A-Fa-f0-9]+)$\/.exec(a)){c=c[1];d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)\/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)\/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)\/255,this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)\/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)\/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)\/255,this}a&&0<a.length&&(c=sg[a],void 0!==$/;"	r
e	js/three.min.js	/^e=this.v2;b.set(ub(a,c.x,d.x,e.x),ub(a,c.y,d.y,e.y));return b};var se=Object.assign(Object.create(hc.prototype),{fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},moveTo:function(a,b){this.currentPoint.set(a,b)},lineTo:function(a,b){var c=new Ma(this.currentPoint.clone(),new D(a,b));this.curves.push(c);this.currentPoint.set(a,b)},quadraticCurveTo:function(a,b,c,d){a=new yb(this.currentPoint.clone(),new D(a,b),new D(c,d));this.curves.push(a);$/;"	r
e	js/three.min.js	/^function e(c,g,h,k){var l;if(!1!==c.visible){if(c.layers.test(g.layers)&&(c.isMesh||c.isLine||c.isPoints)&&c.castShadow&&(!c.frustumCulled||f.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,c.matrixWorld);var n=b.update(c),u=c.material;if(Array.isArray(u))for(var r=n.groups,m=0,B=r.length;m<B;m++){var v=r[m];(l=u[v.materialIndex])&&l.visible&&(l=d(c,l,k,q,h.near,h.far),a.renderBufferDirect(h,null,n,l,c,v))}else u.visible&&(l=d(c,u,k,q,h.near,h.far),a.renderBufferDirect(h,$/;"	r
e	js/three.min.js	/^g),(l!==c-1||h<Math.PI)&&v.push(d,e,g);this.setIndex(v);this.addAttribute("position",new z(t,3));this.addAttribute("normal",new z(x,3));this.addAttribute("uv",new z(y,2))}function Rc(a,b,c,d,e,f){L.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new Xb(a,b,c,d,e,f));this.mergeVertices()}function Xb(a,b,c,d,e,f){C.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:a,$/;"	r
e	js/three.min.js	/^g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var q=[],n=[],m=[],r=e=0;e<f.length;e+=3,r+=2)c.vertices.push(new p(f[e],f[e+1],f[e+2])),void 0!==g&&q.push(new p(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new H(h[e],h[e+1],h[e+2])),void 0!==k&&n.push(new D(k[r],k[r+1])),void 0!==l&&m.push(new D(l[r],l[r+1]));var v=a.groups;if(0<v.length)for(e=0;e<v.length;e++)for(var f=$/;"	r
e	js/three.min.js	/^get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(a){a=a._cacheIndex;return null!==a&&a<this._nActiveActions},_addInactiveAction:function(a,b,c){var d=this._actions,e=this._actionsByClip,f=e[b];void 0===f?(f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f):(b=f.knownActions,a._byClipCacheIndex=b.length,b.push(a));a._cacheIndex=d.length;d.push(a);$/;"	r
e	js/three.min.js	/^get inUse(){return this.total-d.nCachedObjects_}},get bindingsPerObject(){return d._bindings.length}}}function Xe(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:2400,endingEnd:2400},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=$/;"	r
e	js/three.min.js	/^heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d){L.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new bc(a,b,c,d));this.mergeVertices()}function bc(a,b,c,d){C.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],k,l=new p,q=new D;f.push(0,$/;"	r
e	js/three.min.js	/^if(void 0!==l[f].normals)for(d.normals=[],e=0,c=l[f].normals.length;e<c;e++)d.normals.push(l[f].normals[e].clone());this.morphTargets.push(d)}l=a.morphNormals;f=0;for(b=l.length;f<b;f++){d={};if(void 0!==l[f].vertexNormals)for(d.vertexNormals=[],e=0,c=l[f].vertexNormals.length;e<c;e++)g=l[f].vertexNormals[e],h={},h.a=g.a.clone(),h.b=g.b.clone(),h.c=g.c.clone(),d.vertexNormals.push(h);if(void 0!==l[f].faceNormals)for(d.faceNormals=[],e=0,c=l[f].faceNormals.length;e<c;e++)d.faceNormals.push(l[f].faceNormals[e].clone());$/;"	r
e	js/three.min.js	/^n),r.fromBufferAttribute(l,q),v.fromBufferAttribute(l,u),c.uv=a(x,g,h,k,m,r,v)),c.face=new Oa(n,q,u,Pa.normal(g,h,k)),c.faceIndex=n;return c}var d=new K,e=new hb,f=new Da,g=new p,h=new p,k=new p,l=new p,q=new p,n=new p,m=new D,r=new D,v=new D,t=new p,x=new p,y=new p;return function(u,p){var t=this.geometry,y=this.material,B=this.matrixWorld;if(void 0!==y&&(null===t.boundingSphere&&t.computeBoundingSphere(),f.copy(t.boundingSphere),f.applyMatrix4(B),!1!==u.ray.intersectsSphere(f)&&(d.getInverse(B),$/;"	r
e	js/three.min.js	/^new Float32Array(2*a.uvs2.length),this.addAttribute("uv2",(new O(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<Qd(a.indices)?Uint32Array:Uint16Array)(3*a.indices.length),this.setIndex((new O(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new z(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new z(4*a.skinIndices.length,$/;"	r
e	js/three.min.js	/^new p,b=new p,c=new p;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),q=-c.dot(b),n=c.lengthSq(),m=Math.abs(1-k*k);if(0<m){d=k*q-l;e=k*l-q;var p=h*m;0<=d?e>=-p?e<=p?(h=1\/m,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*q)+n):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n):(e=-h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n):e<=-p?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,$/;"	r
e	js/three.min.js	/^new p;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}});Xa.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");$/;"	r
e	js/three.min.js	/^new za,b=[new Ib,new Ib,new Ib],c=new p,d=new p;return function(e,f){f=f||new p;var g=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))f.copy(c);else for(b[0].set(this.a,this.b),b[1].set(this.b,this.c),b[2].set(this.c,this.a),e=0;e<b.length;e++){b[e].closestPointToPoint(c,!0,d);var h=c.distanceToSquared(d);h<g&&(g=h,f.copy(d))}return f}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}});qa.prototype=Object.assign(Object.create(w.prototype),$/;"	r
e	js/three.min.js	/^return a.join("\/")+"\/"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a={NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},b=new H,c=new td,d=new Id;return function(e,f,g){function h(a,b,d,e,h){a=f+a;var l=gc.Handlers.get(a);null!==l?a=l.load(a):(c.setCrossOrigin(g),a=c.load(a));void 0!==b&&(a.repeat.fromArray(b),1!==b[0]&&(a.wrapS=1E3),1!==b[1]&&(a.wrapT=$/;"	r
e	js/three.min.js	/^return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a=new X;return function(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1\/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*$/;"	r
e	js/three.min.js	/^this.attributes.normal.array,e=new p,f=new p,g=new p,c=b*a.length*3,n=q=0;q<a.length;q++,n+=3)e.x=d[n+0],e.y=d[n+1],e.z=d[n+2],f.x=d[c+n+0],f.y=d[c+n+1],f.z=d[c+n+2],g.addVectors(e,f).normalize(),d[n+0]=d[c+n+0]=g.x,d[n+1]=d[c+n+1]=g.y,d[n+2]=d[c+n+2]=g.z}function Zb(a,b){L.call(this);this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new $b(a,$/;"	r
e	js/three.min.js	/^this.boundingBox&&(this.boundingBox=new Na);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Da);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a&&a.isGeometry){var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0],q=a.faceVertexUvs[0],n=this.colors,m=a.colors;void 0===c&&(c=0);void 0!==b&&(d=(new ta).getNormalMatrix(b));a=0;for(var r=g.length;a<$/;"	r
e	js/three.min.js	/^this.getParameters=function(b,e,g,q,n,u,r){var h=f[b.type];if(r.isSkinnedMesh){var l=r.skeleton.bones;if(c.floatVertexTextures)l=1024;else{var k=Math.min(Math.floor((c.maxVertexUniforms-20)\/4),l.length);k<l.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+l.length+" bones. This GPU supports "+k+"."),l=0):l=k}}else l=0;k=c.precision;null!==b.precision&&(k=c.getMaxPrecision(b.precision),k!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",k,"instead."));$/;"	r
e	js/three.min.js	/^this.view.height,e=e+this.view.offsetX\/c*f,c=e+this.view.width\/c*f,a=a-this.view.offsetY\/b*d,b=a-this.view.height\/b*d;this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});Object.assign(Oa.prototype,$/;"	r
e	js/three.min.js	/^transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},setUvTransform:function(a,b,c,d,e,f,g){var h=Math.cos(e);e=Math.sin(e);this.set(c*h,c*e,-c*(h*f+e*g)+f+a,-d*e,d*h,-d*(-e*f+h*g)+g+b,0,0,1)},scale:function(a,b){var c=this.elements;c[0]*=a;c[3]*=a;c[6]*=a;c[1]*=b;c[4]*=b;c[7]*=b;return this},rotate:function(a){var b=Math.cos(a);a=Math.sin(a);var c=this.elements,d=c[0],e=c[3],f=c[6],g=c[1],h=c[4],$/;"	r
e	js/three.min.js	/^var e=b\/d.resolution,f=(d.boundingBox.yMax-d.boundingBox.yMin+d.underlineThickness)*e,g=0,h=0;b=[];for(var k=0;k<a.length;k++){var l=a[k];if("\\n"===l)g=0,h-=f;else{var m;var n=e;var p=g,r=h;if(l=d.glyphs[l]||d.glyphs["?"]){var v=new ce,t=[];if(l.o)for(var x=l._cachedOutline||(l._cachedOutline=l.o.split(" ")),w=0,z=x.length;w<z;)switch(x[w++]){case "m":var C=x[w++]*n+p;var A=x[w++]*n+r;v.moveTo(C,A);break;case "l":C=x[w++]*n+p;A=x[w++]*n+r;v.lineTo(C,A);break;case "q":var D=x[w++]*n+p;var E=x[w++]*$/;"	r
e	js/three.min.js	/^var e=new td;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadTextureCube:function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var e=new $d;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};$/;"	r
ea	js/three.min.js	/^L.copy(K.binormals[W]).multiplyScalar(S.y),O.copy(H[W]).add(Q).add(L),f(O.x,O.y,O.z)):f(S.x,S.y,l\/w*W);for(ea=x-1;0<=ea;ea--){W=ea\/x;fa=v*Math.cos(W*Math.PI\/2);Z=t*Math.sin(W*Math.PI\/2);G=0;for(W=X.length;G<W;G++)S=c(X[G],B[G],Z),f(S.x,S.y,l+fa);N=0;for(M=P.length;N<M;N++)for(U=P[N],ba=A[N],G=0,W=U.length;G<W;G++)S=c(U[G],ba[G],Z),C?f(S.x,S.y+H[w-1].y,H[w-1].x+fa):f(S.x,S.y,l+fa)}(function(){var a=m.length\/3;if(y){var c=0*Y;for(G=0;G<ca;G++)T=V[G],g(T[2]+c,T[1]+c,T[0]+c);c=Y*(w+2*x);for(G=0;G<ca;G++)T=$/;"	r
eb	js/three.min.js	/^eb;z.prototype=Object.create(O.prototype);z.prototype.constructor=z;yc.prototype=Object.create(O.prototype);yc.prototype.constructor=yc;Object.assign(Je.prototype,{computeGroups:function(a){var b=[],c=void 0;a=a.faces;for(var d=0;d<a.length;d++){var e=a[d];if(e.materialIndex!==c){c=e.materialIndex;void 0!==f&&(f.count=3*d-f.start,b.push(f));var f={start:3*d,materialIndex:c}}}void 0!==f&&(f.count=3*d-f.start,b.push(f));this.groups=b},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,$/;"	r
ec	js/three.min.js	/^b.length)throw Error("no keyframes in track named "+a);this.name=a;this.times=S.convertArray(b,this.TimeBufferType);this.values=S.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()}function ec(a,b,c,d){sb.call(this,a,b,c,d)}function Ed(a,b,c,d){xa.call(this,a,b,c,d)}function Yc(a,b,c,d){sb.call(this,a,b,c,d)}function fc(a,b,c,d){sb.call(this,a,b,c,d)}function Fd(a,b,c,d){sb.call(this,a,b,c,d)}function Gd(a,b,c){sb.call(this,a,b,$/;"	r
ed	js/three.min.js	/^a);this.lightPlane.lookAt(c);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(c);this.targetLine.scale.z=c.length()}}();ed.prototype=Object.create(P.prototype);ed.prototype.constructor=ed;ed.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=b.getAttribute("position"),$/;"	r
edge	js/three.js	/^		var edge = [ 0, 0 ], edges = {}, e, edge1, edge2;$/;"	r
edge	js/three.js	/^		var edge = [ 0, 0 ], edges = {}, edge1, edge2;$/;"	r
edge1	js/three.js	/^							edge1 = indices.getX( i + j );$/;"	r
edge1	js/three.js	/^					edge1 = face[ keys[ j ] ];$/;"	r
edge1	js/three.js	/^				edge1 = face[ keys[ j ] ];$/;"	r
edge1	js/three.js	/^			var edge1 = new Vector3();$/;"	r
edge1	js/three.js	/^		var edge = [ 0, 0 ], edges = {}, edge1, edge2;$/;"	r
edge2	js/three.js	/^							edge2 = indices.getX( i + ( j + 1 ) % 3 );$/;"	r
edge2	js/three.js	/^					edge2 = face[ keys[ ( j + 1 ) % 3 ] ];$/;"	r
edge2	js/three.js	/^				edge2 = face[ keys[ ( j + 1 ) % 3 ] ];$/;"	r
edge2	js/three.js	/^			var edge2 = new Vector3();$/;"	r
edgeDx	js/three.js	/^					var edgeDx = edgeHighPt.x - edgeLowPt.x;$/;"	r
edgeDy	js/three.js	/^					var edgeDy = edgeHighPt.y - edgeLowPt.y;$/;"	r
edgeHighPt	js/three.js	/^							edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;$/;"	r
edgeHighPt	js/three.js	/^					var edgeHighPt = inPolygon[ q ];$/;"	r
edgeList	js/three.js	/^			var edgeList = [ new Line3(), new Line3(), new Line3() ];$/;"	r
edgeLowPt	js/three.js	/^							edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;$/;"	r
edgeLowPt	js/three.js	/^					var edgeLowPt = inPolygon[ p ];$/;"	r
edges	js/three.js	/^			\/\/ Compute the offset origin, edges, and normal.$/;"	r
edges	js/three.js	/^		var edge = [ 0, 0 ], edges = {}, e, edge1, edge2;$/;"	r
edges	js/three.js	/^		var edge = [ 0, 0 ], edges = {}, edge1, edge2;$/;"	r
ef	js/three.min.js	/^return new z(a,b)};m.Float64Attribute=function(a,b){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.");return new yc(a,b)};m.ClosedSplineCurve3=ef;m.SplineCurve3=ff;m.Spline=re;m.AxisHelper=function(a){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper.");return new hd(a)};m.BoundingBoxHelper=function(a,b){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.");return new Ab(a,b)};m.EdgesHelper=$/;"	r
elapsedTime	js/three.js	/^			this.elapsedTime = 0;$/;"	r
elapsedTime	js/three.js	/^		this.elapsedTime = 0;$/;"	r
elapsedTime	js/three.min.js	/^void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function bf(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this}function cf(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function ad(a){w.call(this);this.material=a;this.render=function(){}}function bd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?$/;"	r
elementBuffer	js/three.js	/^			elementBuffer = gl.createBuffer();$/;"	r
elementBytes	js/GLTFLoader.js	/^				var elementBytes = TypedArray.BYTES_PER_ELEMENT;$/;"	r
elements	js/three.js	/^				te = this.elements,$/;"	r
elements	js/three.js	/^				var te = this.elements;$/;"	r
elements	js/three.js	/^			var m = this.elements;$/;"	r
elements	js/three.js	/^			var me = matrix.elements,$/;"	r
elements	js/three.js	/^			var me = matrix.elements;$/;"	r
elements	js/three.js	/^			var te = this.elements, me = m.elements;$/;"	r
elements	js/three.js	/^			var te = this.elements,$/;"	r
elements	js/three.js	/^			var te = this.elements;$/;"	r
elements	js/three.js	/^		this.elements = [$/;"	r
elements	js/three.min.js	/^(n*k*g-h*m*g-n*e*q+a*m*q+h*e*p-a*k*p)*b;c[12]=J*b;c[13]=(n*x*f-t*m*f+t*e*r-a*x*r-n*e*y+a*m*y)*b;c[14]=(t*k*f-h*x*f-t*e*l+a*x*l+h*e*y-a*k*y)*b;c[15]=(h*m*f-n*k*f+n*e*l-a*m*l-h*e*r+a*k*r)*b;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],$/;"	r
elements	js/three.min.js	/^C+r*L+p*d;b[3]=t*B+x*w+y*E+c*K;b[7]=t*I+x*z+y*H+c*N;b[11]=t*A+x*D+y*M+c*U;b[15]=t*J+x*C+y*L+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),determinant:function(){var a=$/;"	r
elements	js/three.min.js	/^a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements;b=this.elements;a=c[0];var e=c[3],f=c[6],g=c[1],h=c[4],k=c[7],l=c[2],q=c[5],c=c[8],n=d[0],m=d[3],r=d[6],p=d[1],t=d[4],x=d[7],y=d[2],B=d[5],d=d[8];b[0]=a*n+e*p+f*y;b[3]=a*m+e*t+f*B;b[6]=a*r+e*x+f*d;b[1]=g*n+h*p+k*y;b[4]=g*m+h*t+k*B;b[7]=g*r+h*x+k*d;b[2]=l*n+q*p+c*y;b[5]=l*m+q*t+c*B;b[8]=l*r+q*x+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;$/;"	r
elements	js/three.min.js	/^b)throw Error("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");console.warn("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");return this.identity()}b=1\/p;a[0]=n*b;a[1]=(f*q-c*e)*b;a[2]=(k*e-f*h)*b;a[3]=m*b;a[4]=(c*d-f*l)*b;a[5]=(f*g-k*d)*b;a[6]=r*b;a[7]=(e*l-q*d)*b;a[8]=(h*d-e*g)*b;return this},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},$/;"	r
elements	js/three.min.js	/^b=this.elements;a=c[0];var e=c[4],f=c[8],g=c[12],h=c[1],k=c[5],l=c[9],q=c[13],n=c[2],m=c[6],r=c[10],p=c[14],t=c[3],x=c[7],y=c[11],c=c[15],B=d[0],I=d[4],A=d[8],J=d[12],w=d[1],z=d[5],D=d[9],C=d[13],E=d[2],H=d[6],M=d[10],L=d[14],K=d[3],N=d[7],U=d[11],d=d[15];b[0]=a*B+e*w+f*E+g*K;b[4]=a*I+e*z+f*H+g*N;b[8]=a*A+e*D+f*M+g*U;b[12]=a*J+e*C+f*L+g*d;b[1]=h*B+k*w+l*E+q*K;b[5]=h*I+k*z+l*H+q*N;b[9]=h*A+k*D+l*M+q*U;b[13]=h*J+k*C+l*L+q*d;b[2]=n*B+m*w+r*E+p*K;b[6]=n*I+m*z+r*H+p*N;b[10]=n*A+m*D+r*M+p*U;b[14]=n*J+m*$/;"	r
elements	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return this},copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,$/;"	r
elements	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),multiply:function(a){return this.multiplyMatrices(this,$/;"	r
elements	js/three.min.js	/^k=c[7];c[0]=b*d+a*g;c[3]=b*e+a*h;c[6]=b*f+a*k;c[1]=-a*d+b*g;c[4]=-a*e+b*h;c[7]=-a*f+b*k;return this},translate:function(a,b){var c=this.elements;c[0]+=a*c[2];c[3]+=a*c[5];c[6]+=a*c[8];c[1]+=b*c[2];c[4]+=b*c[5];c[7]+=b*c[8];return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;9>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;9>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=$/;"	r
elements	js/three.min.js	/^this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],q=a[6],n=a[10],m=a[14];return a[3]*(+e*h*q-d*k*q-e*g*n+c*k*n+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*n+e*f*n-d*f*m+d*k*l-e*h*l)+a[11]*(+b*k*q-b*g*m-e*f*q+c*f*m+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*q+b*g*n+d*f*q-c*f*n+c*h*l)},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},setPosition:function(a){var b=$/;"	r
elements	js/three.min.js	/^this.elements,c=a._x,d=a._y,e=a._z,f=a._w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,q=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(q+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new p,b=new p,c=new p;return function(d,e,f){var g=this.elements;c.subVectors(d,e);0===c.lengthSq()&&(c.z=1);c.normalize();a.crossVectors(f,c);0===a.lengthSq()&&(1===Math.abs(f.z)?c.x+=1E-4:c.z+=1E-4,$/;"	r
elements	js/three.min.js	/^this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}});var kf=0;da.DEFAULT_IMAGE=void 0;da.DEFAULT_MAPPING=300;Object.defineProperty(da.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(da.prototype,ia.prototype,{constructor:da,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=$/;"	r
elements	js/three.min.js	/^this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements;a=d[0];var e=d[1],f=d[2],g=d[3],h=d[4],k=d[5],l=d[6],q=d[7],n=d[8],m=d[9],r=d[10],p=d[11],t=d[12],x=d[13],y=d[14],d=d[15],B=m*y*q-x*r*q+x*l*p-k*y*p-m*l*d+k*r*d,I=t*r*q-n*y*q-t*l*p+h*y*p+n*l*d-h*r*d,A=n*x*q-t*m*q+t*k*p-h*x*p-n*k*d+h*m*d,J=t*m*l-n*x*l-t*k*r+h*x*r+n*k*y-h*m*y,w=a*B+e*I+f*A+g*J;if(0===w){if(!0===b)throw Error("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");$/;"	r
elements	js/three.min.js	/^transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},setUvTransform:function(a,b,c,d,e,f,g){var h=Math.cos(e);e=Math.sin(e);this.set(c*h,c*e,-c*(h*f+e*g)+f+a,-d*e,d*h,-d*(-e*f+h*g)+g+b,0,0,1)},scale:function(a,b){var c=this.elements;c[0]*=a;c[3]*=a;c[6]*=a;c[1]*=b;c[4]*=b;c[7]*=b;return this},rotate:function(a){var b=Math.cos(a);a=Math.sin(a);var c=this.elements,d=c[0],e=c[3],f=c[6],g=c[1],h=c[4],$/;"	r
elements	js/three.min.js	/^var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){var k=f*h;var l=f*e;var q=c*h;a=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=l+q*d;b[5]=k-a*d;b[9]=-c*g;b[2]=a-k*d;b[6]=q+l*d;b[10]=f*g}else"YXZ"===a.order?(k=g*h,l=g*e,q=d*h,a=d*e,b[0]=k+a*c,b[4]=q*c-l,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=l*c-q,b[6]=a+k*c,b[10]=f*g):"ZXY"===a.order?(k=g*h,l=g*e,q=d*h,a=d*e,b[0]=k-a*c,b[4]=-f*e,b[8]=q+l*c,b[1]=l+q*c,b[5]=f*h,b[9]=$/;"	r
elements	js/three.min.js	/^var g=this.elements;g[0]=2*e\/(b-a);g[4]=0;g[8]=(b+a)\/(b-a);g[12]=0;g[1]=0;g[5]=2*e\/(c-d);g[9]=(c+d)\/(c-d);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)\/(f-e);g[14]=-2*f*e\/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1\/(b-a),k=1\/(c-d),l=1\/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;$/;"	r
elementsNeedUpdate	js/three.js	/^					geometry.elementsNeedUpdate = false;$/;"	r
elementsNeedUpdate	js/three.js	/^			this.elementsNeedUpdate = source.elementsNeedUpdate;$/;"	r
elementsNeedUpdate	js/three.js	/^		this.elementsNeedUpdate = false;$/;"	r
ellipse	js/three.js	/^		ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {$/;"	r
emissive	js/GLTFLoader.js	/^					materialParams.emissive = new THREE.Color().fromArray( material.emissiveFactor );$/;"	r
emissive	js/GLTFLoader.js	/^				material.emissive = params.emissive;$/;"	r
emissive	js/GLTFLoader.js	/^				params.emissive = new THREE.Color( 0.0, 0.0, 0.0 );$/;"	r
emissive	js/GLTFLoader.js	/^			emissive: 0x000000,$/;"	r
emissive	js/three.js	/^							json.emissive = color.fromArray( value ).getHex();$/;"	r
emissive	js/three.js	/^					emissive: { value: new Color( 0x000000 ) }$/;"	r
emissive	js/three.js	/^					emissive: { value: new Color( 0x000000 ) },$/;"	r
emissive	js/three.js	/^		this.emissive = new Color( 0x000000 );$/;"	r
emissive	js/three.js	/^	var meshlambert_frag = "uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n";$/;"	r
emissive	js/three.js	/^	var meshphong_frag = "#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n";$/;"	r
emissive	js/three.js	/^	var meshphysical_frag = "#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n";$/;"	r
emissive	js/three.min.js	/^meshlambert_frag:"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n",$/;"	r
emissive	js/three.min.js	/^meshphong_frag:"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n",$/;"	r
emissive	js/three.min.js	/^meshphysical_frag:"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n",$/;"	r
emissiveIntensity	js/GLTFLoader.js	/^				material.emissiveIntensity = 1.0;$/;"	r
emissiveIntensity	js/three.js	/^			if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;$/;"	r
emissiveIntensity	js/three.js	/^			if ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;$/;"	r
emissiveIntensity	js/three.js	/^		this.emissiveIntensity = 1.0;$/;"	r
emissiveIntensity	js/three.js	/^		this.emissiveIntensity = source.emissiveIntensity;$/;"	r
emissiveMap	js/GLTFLoader.js	/^					uvScaleMap = material.emissiveMap;$/;"	r
emissiveMap	js/GLTFLoader.js	/^				material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;$/;"	r
emissiveMap	js/GLTFLoader.js	/^				uniforms.emissiveMap.value = material.emissiveMap;$/;"	r
emissiveMap	js/three.js	/^							json.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );$/;"	r
emissiveMap	js/three.js	/^				emissiveMap: !! material.emissiveMap,$/;"	r
emissiveMap	js/three.js	/^				uniforms.emissiveMap.value = material.emissiveMap;$/;"	r
emissiveMap	js/three.js	/^				uvScaleMap = material.emissiveMap;$/;"	r
emissiveMap	js/three.js	/^			emissiveMap: { value: null }$/;"	r
emissiveMap	js/three.js	/^		this.emissiveMap = null;$/;"	r
emissiveMap	js/three.js	/^		this.emissiveMap = source.emissiveMap;$/;"	r
emissiveMapEncoding	js/three.js	/^				emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),$/;"	r
emissivemap	js/three.js	/^				UniformsLib.emissivemap,$/;"	r
emissivemap	js/three.js	/^		emissivemap: {$/;"	r
emissivemap_fragment	js/three.js	/^		emissivemap_fragment: emissivemap_fragment,$/;"	r
emissivemap_fragment	js/three.js	/^	var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n";$/;"	r
emissivemap_pars_fragment	js/three.js	/^		emissivemap_pars_fragment: emissivemap_pars_fragment,$/;"	r
emissivemap_pars_fragment	js/three.js	/^	var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n";$/;"	r
emissivemap_pars_fragment	js/three.min.js	/^emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n",encodings_pars_fragment:"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 \/ gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb \/ exp2( fExp ), ( fExp + 128.0 ) \/ 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB \/ maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) \/ 255.0;\\n\\treturn vec4( value.rgb \/ ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange \/ 255.0 ) \/ value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange \/ maxRGB, 1.0 );\\n\\tD            = min( floor( D ) \/ 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 \/ maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy \/ Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))\/255.0)\/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) \/ 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y \/ value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n",$/;"	r
empty	js/three.js	/^		empty: function () {$/;"	r
empty	js/three.min.js	/^lc.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(kd.prototype,{center:function(a){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");return this.getCenter(a)},empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(a){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},$/;"	r
emptyCubeTexture	js/three.js	/^	var emptyCubeTexture = new CubeTexture();$/;"	r
emptyTexture	js/three.js	/^	var emptyTexture = new Texture();$/;"	r
emptyTextures	js/three.js	/^		var emptyTextures = {};$/;"	r
enable	js/three.js	/^			enable: enable,$/;"	r
enable	js/three.js	/^		enable: function ( channel ) {$/;"	r
enable	js/three.js	/^		function enable( id ) {$/;"	r
enableAttribute	js/three.js	/^			enableAttribute: enableAttribute,$/;"	r
enableAttribute	js/three.js	/^		function enableAttribute( attribute ) {$/;"	r
enableAttribute	js/three.min.js	/^0,b=t.length;a<b;a++)t[a]=0},enableAttribute:function(c){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);0!==y[c]&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,0),y[c]=0)},enableAttributeAndDivisor:function(c,d){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);y[c]!==d&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,d),y[c]=d)},disableUnusedAttributes:function(){for(var b=0,c=p.length;b!==c;++b)p[b]!==t[b]&&(a.disableVertexAttribArray(b),p[b]=0)},enable:e,$/;"	r
enableAttributeAndDivisor	js/three.js	/^			enableAttributeAndDivisor: enableAttributeAndDivisor,$/;"	r
enableAttributeAndDivisor	js/three.js	/^		function enableAttributeAndDivisor( attribute, meshPerAttribute ) {$/;"	r
enableAttributeAndDivisor	js/three.min.js	/^0,b=t.length;a<b;a++)t[a]=0},enableAttribute:function(c){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);0!==y[c]&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,0),y[c]=0)},enableAttributeAndDivisor:function(c,d){t[c]=1;0===p[c]&&(a.enableVertexAttribArray(c),p[c]=1);y[c]!==d&&(b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c,d),y[c]=d)},disableUnusedAttributes:function(){for(var b=0,c=p.length;b!==c;++b)p[b]!==t[b]&&(a.disableVertexAttribArray(b),p[b]=0)},enable:e,$/;"	r
enableLocalClipping	js/three.js	/^			localClippingEnabled = enableLocalClipping;$/;"	r
enableLocalClipping	js/three.js	/^		this.init = function ( planes, enableLocalClipping, camera ) {$/;"	r
enableScissorTest	js/three.js	/^		enableScissorTest: function ( boolean ) {$/;"	r
enableScissorTest	js/three.min.js	/^return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(a)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}});$/;"	r
enabled	js/three.js	/^							this.enabled = false;$/;"	r
enabled	js/three.js	/^					enabled: true,$/;"	r
enabled	js/three.js	/^				this.shadowMap.enabled = value;$/;"	r
enabled	js/three.js	/^				this.view.enabled = false;$/;"	r
enabled	js/three.js	/^			this.enabled = true;$/;"	r
enabled	js/three.js	/^			this.view.enabled = true;$/;"	r
enabled	js/three.js	/^		enabled: false,$/;"	r
enabled	js/three.js	/^		this.enabled = false;$/;"	r
enabled	js/three.js	/^		this.enabled = true;				\/\/ false -> zero effective weight$/;"	r
enabled	js/three.min.js	/^Object.defineProperties(Wd.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");$/;"	r
enabled	js/three.min.js	/^f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}});Object.assign(Xe.prototype,{play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},$/;"	r
enabled	js/three.min.js	/^skinning:B});u[c]=y}var A=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,c,d){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==b.length){var n=a.state;n.disable(a.context.BLEND);n.buffers.color.setClear(1,1,1,1);n.buffers.depth.setTest(!0);n.setScissorTest(!1);for(var u,r=0,B=b.length;r<B;r++){var v=b[r];u=v.shadow;var I=v&&v.isPointLight;if(void 0===u)console.warn("THREE.WebGLShadowMap:",$/;"	r
enabledAttributes	js/three.js	/^		var enabledAttributes = new Uint8Array( maxVertexAttributes );$/;"	r
encoding	js/three.js	/^				encoding = GammaEncoding;$/;"	r
encoding	js/three.js	/^				encoding = LinearEncoding;$/;"	r
encoding	js/three.js	/^				encoding = map.encoding;$/;"	r
encoding	js/three.js	/^				encoding = map.texture.encoding;$/;"	r
encoding	js/three.js	/^			this.encoding = source.encoding;$/;"	r
encoding	js/three.js	/^			var encoding;$/;"	r
encoding	js/three.js	/^		this.encoding = encoding !== undefined ? encoding : LinearEncoding;$/;"	r
encodings_fragment	js/three.js	/^		encodings_fragment: encodings_fragment,$/;"	r
encodings_fragment	js/three.js	/^	var encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n";$/;"	r
encodings_pars_fragment	js/three.js	/^		encodings_pars_fragment: encodings_pars_fragment,$/;"	r
encodings_pars_fragment	js/three.js	/^	var encodings_pars_fragment = "\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 \/ gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb \/ exp2( fExp ), ( fExp + 128.0 ) \/ 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB \/ maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) \/ 255.0;\\n\\treturn vec4( value.rgb \/ ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange \/ 255.0 ) \/ value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange \/ maxRGB, 1.0 );\\n\\tD            = min( floor( D ) \/ 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 \/ maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy \/ Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))\/255.0)\/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) \/ 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y \/ value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n";$/;"	r
end	js/three.js	/^			for ( var end = offset + stride; offset !== end; offset += 4 ) {$/;"	r
end	js/three.js	/^		this.end = ( end !== undefined ) ? end : new Vector3();$/;"	r
endPoint	js/three.js	/^			var endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );$/;"	r
endShadows	js/three.js	/^		this.endShadows = function () {$/;"	r
endSign	js/three.js	/^			var endSign = this.distanceToPoint( line.end );$/;"	r
endStartRatio	js/three.js	/^					endStartRatio = fadeInDuration \/ fadeOutDuration;$/;"	r
endTimeScale	js/three.js	/^		warp: function ( startTimeScale, endTimeScale, duration ) {$/;"	r
endingEnd	js/three.js	/^					settings.endingEnd 	 = WrapAroundEnding;$/;"	r
endingEnd	js/three.js	/^					settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;$/;"	r
endingEnd	js/three.js	/^				settings.endingEnd		= ZeroSlopeEnding;$/;"	r
endingEnd	js/three.js	/^			endingEnd: ZeroCurvatureEnding$/;"	r
endingEnd	js/three.min.js	/^d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(xa.prototype,{beforeStart_:xa.prototype.copySampleValue_,afterEnd_:xa.prototype.copySampleValue_});Cd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Cd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=$/;"	r
endingEnd	js/three.min.js	/^get inUse(){return this.total-d.nCachedObjects_}},get bindingsPerObject(){return d._bindings.length}}}function Xe(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:2400,endingEnd:2400},e=0;e!==b;++e){var f=a[e].createInterpolant(null);c[e]=f;f.settings=d}this._interpolantSettings=d;this._interpolants=c;this._propertyBindings=Array(b);this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null;this.loop=$/;"	r
endingStart	js/three.js	/^					settings.endingStart = WrapAroundEnding;$/;"	r
endingStart	js/three.js	/^					settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;$/;"	r
endingStart	js/three.js	/^				settings.endingStart 	= ZeroSlopeEnding;$/;"	r
endingStart	js/three.js	/^			endingStart: ZeroCurvatureEnding,$/;"	r
enumerable	js/three.js	/^				enumerable: true,$/;"	r
envMap	js/GLTFLoader.js	/^				material.envMap = params.envMap === undefined ? null : params.envMap;$/;"	r
envMap	js/GLTFLoader.js	/^				uniforms.envMap.value = material.envMap;$/;"	r
envMap	js/three.js	/^				\/\/uniforms.envMap.value = material.envMap; \/\/ part of uniforms common$/;"	r
envMap	js/three.js	/^				data.envMap = this.envMap.toJSON( meta ).uuid;$/;"	r
envMap	js/three.js	/^				envMap: !! material.envMap,$/;"	r
envMap	js/three.js	/^				uniforms.envMap.value = material.envMap;$/;"	r
envMap	js/three.js	/^			envMap: { value: null },$/;"	r
envMap	js/three.js	/^		this.envMap = null;$/;"	r
envMap	js/three.js	/^		this.envMap = source.envMap;$/;"	r
envMap	js/three.min.js	/^0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function mb(a){La.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)}function Ia(a){Q.call(this);this.type="MeshPhongMaterial";$/;"	r
envMapBlendingDefine	js/three.js	/^					envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';$/;"	r
envMapBlendingDefine	js/three.js	/^					envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';$/;"	r
envMapBlendingDefine	js/three.js	/^					envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';$/;"	r
envMapBlendingDefine	js/three.js	/^		var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';$/;"	r
envMapEncoding	js/three.js	/^				envMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),$/;"	r
envMapIntensity	js/GLTFLoader.js	/^				material.envMapIntensity = 1.0;$/;"	r
envMapIntensity	js/GLTFLoader.js	/^				uniforms.envMapIntensity.value = material.envMapIntensity;$/;"	r
envMapIntensity	js/three.js	/^					envMapIntensity: { value: 1 } \/\/ temporary$/;"	r
envMapIntensity	js/three.js	/^				uniforms.envMapIntensity.value = material.envMapIntensity;$/;"	r
envMapIntensity	js/three.js	/^		this.envMapIntensity = 1.0;$/;"	r
envMapIntensity	js/three.js	/^		this.envMapIntensity = source.envMapIntensity;$/;"	r
envMapIntensity	js/three.min.js	/^0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function mb(a){La.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)}function Ia(a){Q.call(this);this.type="MeshPhongMaterial";$/;"	r
envMapMode	js/three.js	/^				envMapMode: material.envMap && material.envMap.mapping,$/;"	r
envMapModeDefine	js/three.js	/^					envMapModeDefine = 'ENVMAP_MODE_REFRACTION';$/;"	r
envMapModeDefine	js/three.js	/^		var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';$/;"	r
envMapTypeDefine	js/three.js	/^					envMapTypeDefine = 'ENVMAP_TYPE_CUBE';$/;"	r
envMapTypeDefine	js/three.js	/^					envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';$/;"	r
envMapTypeDefine	js/three.js	/^					envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';$/;"	r
envMapTypeDefine	js/three.js	/^					envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';$/;"	r
envMapTypeDefine	js/three.js	/^		var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';$/;"	r
envmap	js/three.js	/^				UniformsLib.envmap,$/;"	r
envmap	js/three.js	/^		envmap: {$/;"	r
envmap_fragment	js/three.js	/^		envmap_fragment: envmap_fragment,$/;"	r
envmap_fragment	js/three.js	/^	var envmap_fragment = "#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n";$/;"	r
envmap_pars_fragment	js/three.js	/^		envmap_pars_fragment: envmap_pars_fragment,$/;"	r
envmap_pars_fragment	js/three.js	/^	var envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n";$/;"	r
envmap_pars_fragment	js/three.min.js	/^envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n",$/;"	r
envmap_pars_vertex	js/three.js	/^		envmap_pars_vertex: envmap_pars_vertex,$/;"	r
envmap_pars_vertex	js/three.js	/^	var envmap_pars_vertex = "#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n";$/;"	r
envmap_pars_vertex	js/three.min.js	/^envmap_pars_vertex:"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n",envmap_vertex:"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n",$/;"	r
envmap_vertex	js/three.js	/^		envmap_vertex: envmap_vertex,$/;"	r
envmap_vertex	js/three.js	/^	var envmap_vertex = "#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n";$/;"	r
epsilon	js/three.js	/^				epsilon = 0.01,		\/\/ margin to allow for rounding errors$/;"	r
epsilon2	js/three.js	/^				epsilon2 = 0.1,		\/\/ margin to distinguish between 0 and 180 degrees$/;"	r
equals	js/three.js	/^		equals: function ( box ) {$/;"	r
equals	js/three.js	/^		equals: function ( c ) {$/;"	r
equals	js/three.js	/^		equals: function ( euler ) {$/;"	r
equals	js/three.js	/^		equals: function ( line ) {$/;"	r
equals	js/three.js	/^		equals: function ( matrix ) {$/;"	r
equals	js/three.js	/^		equals: function ( plane ) {$/;"	r
equals	js/three.js	/^		equals: function ( quaternion ) {$/;"	r
equals	js/three.js	/^		equals: function ( ray ) {$/;"	r
equals	js/three.js	/^		equals: function ( sphere ) {$/;"	r
equals	js/three.js	/^		equals: function ( triangle ) {$/;"	r
equals	js/three.js	/^		equals: function ( v ) {$/;"	r
equals	js/three.min.js	/^new za,b=[new Ib,new Ib,new Ib],c=new p,d=new p;return function(e,f){f=f||new p;var g=Infinity;a.setFromCoplanarPoints(this.a,this.b,this.c);a.projectPoint(e,c);if(!0===this.containsPoint(c))f.copy(c);else for(b[0].set(this.a,this.b),b[1].set(this.b,this.c),b[2].set(this.c,this.a),e=0;e<b.length;e++){b[e].closestPointToPoint(c,!0,d);var h=c.distanceToSquared(d);h<g&&(g=h,f.copy(d))}return f}}(),equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}});qa.prototype=Object.assign(Object.create(w.prototype),$/;"	r
equals	js/three.min.js	/^this._w=f*g+this._w*b;this._x=c*g+this._x*b;this._y=d*g+this._y*b;this._z=e*g+this._z*b;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=$/;"	r
equirect	js/three.js	/^		equirect: {$/;"	r
equirect_frag	js/three.js	/^		equirect_frag: equirect_frag,$/;"	r
equirect_frag	js/three.js	/^	var equirect_frag = "uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n";$/;"	r
equirect_frag	js/three.min.js	/^equirect_frag:"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n",equirect_vert:"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n",$/;"	r
equirect_vert	js/three.js	/^		equirect_vert: equirect_vert,$/;"	r
equirect_vert	js/three.js	/^	var equirect_vert = "varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n";$/;"	r
euclideanModulo	js/three.js	/^		euclideanModulo: function ( n, m ) {$/;"	r
eulerOrder	js/three.js	/^		eulerOrder: {$/;"	r
evaluate	js/three.js	/^		evaluate: function ( t ) {$/;"	r
existingAction	js/three.js	/^		existingAction: function ( clip, optionalRoot ) {$/;"	r
expandByObject	js/three.js	/^			return function expandByObject( object ) {$/;"	r
expandByObject	js/three.js	/^		expandByObject: function () {$/;"	r
expandByPoint	js/three.js	/^		expandByPoint: function ( point ) {$/;"	r
expandByPoint	js/three.min.js	/^a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},expandByObject:function(){function a(a){var f=a.geometry;if(void 0!==f)if(f.isGeometry)for(f=f.vertices,c=0,d=f.length;c<d;c++)e.copy(f[c]),$/;"	r
expandByPoint	js/three.min.js	/^a||new D;return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=$/;"	r
expandByScalar	js/three.js	/^		expandByScalar: function ( scalar ) {$/;"	r
expandByVector	js/three.js	/^		expandByVector: function ( vector ) {$/;"	r
extDet	js/three.js	/^					extDet = segExtent * det;$/;"	r
extendParams	js/GLTFLoader.js	/^			extendParams: function ( params, material, parser ) {$/;"	r
extendParams	js/GLTFLoader.js	/^	GLTFMaterialsCommonExtension.prototype.extendParams = function ( materialParams, material, parser ) {$/;"	r
extension	js/GLTFLoader.js	/^		var extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS ] ) || {};$/;"	r
extension	js/three.js	/^						extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );$/;"	r
extension	js/three.js	/^						extension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );$/;"	r
extension	js/three.js	/^						extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );$/;"	r
extension	js/three.js	/^						extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );$/;"	r
extension	js/three.js	/^						extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );$/;"	r
extension	js/three.js	/^						extension = gl.getExtension( name );$/;"	r
extension	js/three.js	/^				extension = extensions.get( 'EXT_blend_minmax' );$/;"	r
extension	js/three.js	/^				extension = extensions.get( 'OES_texture_half_float' );$/;"	r
extension	js/three.js	/^				extension = extensions.get( 'WEBGL_compressed_texture_etc1' );$/;"	r
extension	js/three.js	/^				extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );$/;"	r
extension	js/three.js	/^				extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );$/;"	r
extension	js/three.js	/^				extension = extensions.get( 'WEBGL_depth_texture' );$/;"	r
extension	js/three.js	/^				extensions[ name ] = extension;$/;"	r
extension	js/three.js	/^				var extension = extensions.get( 'ANGLE_instanced_arrays' );$/;"	r
extension	js/three.js	/^				var extension;$/;"	r
extension	js/three.js	/^			extension = extensions.get( 'EXT_texture_filter_anisotropic' );$/;"	r
extension	js/three.js	/^			var extension = extensions.get( 'ANGLE_instanced_arrays' );$/;"	r
extension	js/three.js	/^			var extension = extensions.get( 'EXT_texture_filter_anisotropic' );$/;"	r
extension	js/three.js	/^			var extension = extensions.get( 'WEBGL_lose_context' );$/;"	r
extension	js/three.js	/^			var extension;$/;"	r
extensions	js/GLTFLoader.js	/^			var extensions = {};$/;"	r
extensions	js/GLTFLoader.js	/^			var parser = new GLTFParser( json, extensions, {$/;"	r
extensions	js/GLTFLoader.js	/^		this.extensions = extensions || {};$/;"	r
extensions	js/GLTFLoader.js	/^		var extensions = this.extensions;$/;"	r
extensions	js/GLTFLoader.js	/^	function GLTFParser( json, extensions, options ) {$/;"	r
extensions	js/three.js	/^				program = new WebGLProgram( renderer, extensions, code, material, shader, parameters );$/;"	r
extensions	js/three.js	/^			_this.extensions = extensions;$/;"	r
extensions	js/three.js	/^			bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );$/;"	r
extensions	js/three.js	/^			capabilities = new WebGLCapabilities( _gl, extensions, parameters );$/;"	r
extensions	js/three.js	/^			extensions = new WebGLExtensions( _gl );$/;"	r
extensions	js/three.js	/^			indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );$/;"	r
extensions	js/three.js	/^			programCache = new WebGLPrograms( _this, extensions, capabilities );$/;"	r
extensions	js/three.js	/^			state = new WebGLState( _gl, extensions, utils );$/;"	r
extensions	js/three.js	/^			textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );$/;"	r
extensions	js/three.js	/^		extensions = extensions || {};$/;"	r
extensions	js/three.js	/^		this.extensions = source.extensions;$/;"	r
extensions	js/three.js	/^		this.extensions = {$/;"	r
extensions	js/three.js	/^		var extensions = {};$/;"	r
extensions	js/three.js	/^		var extensions, capabilities, state;$/;"	r
extensions	js/three.js	/^	function WebGLBufferRenderer( gl, extensions, infoRender ) {$/;"	r
extensions	js/three.js	/^	function WebGLCapabilities( gl, extensions, parameters ) {$/;"	r
extensions	js/three.js	/^	function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {$/;"	r
extensions	js/three.js	/^	function WebGLProgram( renderer, extensions, code, material, shader, parameters ) {$/;"	r
extensions	js/three.js	/^	function WebGLPrograms( renderer, extensions, capabilities ) {$/;"	r
extensions	js/three.js	/^	function WebGLState( gl, extensions, utils ) {$/;"	r
extensions	js/three.js	/^	function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {$/;"	r
extractAllPoints	js/three.js	/^		extractAllPoints: function ( divisions ) {$/;"	r
extractAllPoints	js/three.min.js	/^extractAllPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},extractPoints:function(a){return this.extractAllPoints(a)}});Object.assign(ce.prototype,{moveTo:function(a,b){this.currentPath=new Zc;this.subPaths.push(this.currentPath);this.currentPath.moveTo(a,b)},lineTo:function(a,b){this.currentPath.lineTo(a,b)},quadraticCurveTo:function(a,b,c,d){this.currentPath.quadraticCurveTo(a,b,c,d)},bezierCurveTo:function(a,b,c,d,e,f){this.currentPath.bezierCurveTo(a,b,c,d,e,f)},$/;"	r
extractBasis	js/three.js	/^		extractBasis: function ( xAxis, yAxis, zAxis ) {$/;"	r
extractBasis	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return this},copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){a.setFromMatrixColumn(this,0);b.setFromMatrixColumn(this,1);c.setFromMatrixColumn(this,2);return this},makeBasis:function(a,b,c){this.set(a.x,$/;"	r
extractFromCache	js/three.js	/^			function extractFromCache( cache ) {$/;"	r
extractPoints	js/three.js	/^		extractPoints: function ( divisions ) {$/;"	r
extractPosition	js/three.js	/^		extractPosition: function ( m ) {$/;"	r
extractRotation	js/three.js	/^			return function extractRotation( m ) {$/;"	r
extractRotation	js/three.js	/^		extractRotation: function () {$/;"	r
extractRotation	js/three.min.js	/^b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new p;return function(b){var c=this.elements,d=b.elements,e=1\/a.setFromMatrixColumn(b,0).length(),f=1\/a.setFromMatrixColumn(b,1).length();b=1\/a.setFromMatrixColumn(b,2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");$/;"	r
extractUrlBase	js/three.js	/^		extractUrlBase: function ( url ) {$/;"	r
extras	js/GLTFLoader.js	/^						if ( primitive.extras ) mesh.userData = primitive.extras;$/;"	r
extras	js/GLTFLoader.js	/^					if ( nodeDef.extras ) node.userData = nodeDef.extras;$/;"	r
extras	js/GLTFLoader.js	/^				if ( material.extras ) _material.userData = material.extras;$/;"	r
extras	js/GLTFLoader.js	/^				if ( scene.extras ) _scene.userData = scene.extras;$/;"	r
extras	js/GLTFLoader.js	/^		if ( cameraDef.extras ) camera.userData = cameraDef.extras;$/;"	r
extrude	js/three.js	/^		extrude: function ( options ) {$/;"	r
extrudeByPath	js/three.js	/^			extrudeByPath = true;$/;"	r
extrudeByPath	js/three.js	/^		var extrudePts, extrudeByPath = false;$/;"	r
extrudePath	js/three.js	/^		var extrudePath = options.extrudePath;$/;"	r
extrudePts	js/three.js	/^			extrudePts = extrudePath.getSpacedPoints( steps );$/;"	r
extrudePts	js/three.js	/^		var extrudePts, extrudeByPath = false;$/;"	r
eyeLeft	js/three.js	/^			var eyeLeft = new Matrix4();$/;"	r
eyeParameters	js/three.js	/^				var eyeParameters = device.getEyeParameters( 'left' );$/;"	r
eyeRight	js/three.js	/^			var eyeRight = new Matrix4();$/;"	r
eyeSep	js/three.js	/^													far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;$/;"	r
eyeSep	js/three.js	/^					eyeRight.elements[ 12 ] = eyeSep;$/;"	r
eyeSep	js/three.js	/^					eyeSep = this.eyeSep \/ 2;$/;"	r
eyeSep	js/three.js	/^		this.eyeSep = 0.064;$/;"	r
eyeSepOnProjection	js/three.js	/^					var eyeSepOnProjection = eyeSep * near \/ focus;$/;"	r
f	js/three.js	/^							intersection.faceIndex = f;$/;"	r
f	js/three.js	/^					var f = 1 \/ Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );$/;"	r
f	js/three.js	/^					w0 *= f;$/;"	r
f	js/three.js	/^					x0 *= f;$/;"	r
f	js/three.js	/^					y0 *= f;$/;"	r
f	js/three.js	/^					z0 *= f;$/;"	r
f	js/three.js	/^				te[ 1 ] = f;$/;"	r
f	js/three.js	/^			var f, fl = this.lensFlares.length;$/;"	r
f	js/three.js	/^			var f, fl, face;$/;"	r
f	js/three.min.js	/^"gl.VALIDATE_STATUS",g.getProgramParameter(p,g.VALIDATE_STATUS),"gl.getProgramInfoLog",f,e,q);else if(""!==f)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f);else if(""===e||""===q)u=!1;u&&(this.diagnostics={runnable:n,material:d,programLog:f,vertexShader:{log:e,prefix:h},fragmentShader:{log:q,prefix:b}});g.deleteShader(k);g.deleteShader(l);var B;this.getUniforms=function(){void 0===B&&(B=new cb(g,p,a));return B};var I;this.getAttributes=function(){if(void 0===I){for(var a={},b=g.getProgramParameter(p,$/;"	r
f	js/three.min.js	/^(a=a.data);return b[a.uuid]},remove:function(c){c.isInterleavedBufferAttribute&&(c=c.data);var d=b[c.uuid];d&&(a.deleteBuffer(d.buffer),delete b[c.uuid])},update:function(c,d){c.isInterleavedBufferAttribute&&(c=c.data);var e=b[c.uuid];if(void 0===e){var e=c.uuid,f=c.array,g=c.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW,h=a.createBuffer();a.bindBuffer(d,h);a.bufferData(d,f,g);c.onUploadCallback();d=a.FLOAT;f instanceof Float32Array?d=a.FLOAT:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):$/;"	r
f	js/three.min.js	/^(e.geometries=d),0<g.length&&(e.materials=g),0<h.length&&(e.textures=h),0<k.length&&(e.images=k));e.object=f;return e},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;$/;"	r
f	js/three.min.js	/^.4;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=[],g=[],h=[],k=[],l=new p,q=new p,n=new p,u,m;for(u=0;u<=c;u++)for(m=0;m<=d;m++){var v=m\/d*e,t=u\/c*Math.PI*2;q.x=(a+b*Math.cos(t))*Math.cos(v);q.y=(a+b*Math.cos(t))*Math.sin(v);q.z=b*Math.sin(t);g.push(q.x,q.y,q.z);l.x=a*Math.cos(v);l.y=a*Math.sin(v);n.subVectors(q,l).normalize();h.push(n.x,n.y,n.z);k.push(m\/d);k.push(u\/c)}for(u=1;u<=c;u++)for(m=1;m<=d;m++)a=(d+1)*(u-1)+m-1,b=(d+1)*(u-1)+m,e=(d+1)*u+m,f.push((d+1)*u+m-1,a,e),f.push(a,b,$/;"	r
f	js/three.min.js	/^0),f;if(void 0!==$a[a])$a[a].push({onLoad:b,onProgress:c,onError:d});else{var g=a.match(\/^data:(.*?)(;base64)?,(.*)$\/);if(g){c=g[1];var h=!!g[2],g=g[3],g=window.decodeURIComponent(g);h&&(g=window.atob(g));try{var k=(this.responseType||"").toLowerCase();switch(k){case "arraybuffer":case "blob":for(var l=new Uint8Array(g.length),h=0;h<g.length;h++)l[h]=g.charCodeAt(h);var m="blob"===k?new Blob([l.buffer],{type:c}):l.buffer;break;case "document":m=(new DOMParser).parseFromString(g,c);break;case "json":m=$/;"	r
f	js/three.min.js	/^1),e=f-1),a=this.getValueSize(),this.times=S.arraySlice(c,e,f),this.values=S.arraySlice(this.values,e*a,f*a);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if("number"===typeof g&&isNaN(g)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",$/;"	r
f	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
f	js/three.min.js	/^a&&0<a.length){b=new Yd(b);var f=new Wc(b);f.setCrossOrigin(this.crossOrigin);b=0;for(var g=a.length;b<g;b++){var h=a[b],k=\/^(\\\/\\\/)|([a-z]+:(\\\/\\\/)?)\/i.test(h.url)?h.url:d.texturePath+h.url;e[h.uuid]=c(k)}}return e},parseTextures:function(a,b){function c(a,b){if("number"===typeof a)return a;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a);return b[a]}var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',$/;"	r
f	js/three.min.js	/^a.DEPTH_ATTACHMENT,a.TEXTURE_2D,e,0);else if(1027===b.depthTexture.format)a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,e,0);else throw Error("Unknown depthTexture format");}else if(f)for(e.__webglDepthbuffer=[],f=0;6>f;f++)a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer[f]),e.__webglDepthbuffer[f]=a.createRenderbuffer(),p(e.__webglDepthbuffer[f],b);else a.bindFramebuffer(a.FRAMEBUFFER,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),p(e.__webglDepthbuffer,$/;"	r
f	js/three.min.js	/^a.MEDIUM_FLOAT).precision?"mediump":"lowp"}var e,f=void 0!==c.precision?c.precision:"highp",g=d(f);g!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",g,"instead."),f=g);c=!0===c.logarithmicDepthBuffer;var g=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),h=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),k=a.getParameter(a.MAX_TEXTURE_SIZE),l=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),q=a.getParameter(a.MAX_VERTEX_ATTRIBS),n=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),u=a.getParameter(a.MAX_VARYING_VECTORS),$/;"	r
f	js/three.min.js	/^a.getCenter(d);for(var e=0,f=0,g=c.count;f<g;f++)b.x=c.getX(f),b.y=c.getY(f),b.z=c.getZ(f),e=Math.max(e,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(e);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;$/;"	r
f	js/three.min.js	/^a;return this}});Object.assign(Zd.prototype,{load:function(a,b,c,d){var e=this,f=new bb,g=new Ja(this.manager);g.setResponseType("arraybuffer");g.load(a,function(a){if(a=e._parser(a))void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:1001,f.wrapT=void 0!==a.wrapT?a.wrapT:1001,f.magFilter=void 0!==a.magFilter?a.magFilter:1006,f.minFilter=void 0!==a.minFilter?a.minFilter:1008,f.anisotropy=void 0!==a.anisotropy?$/;"	r
f	js/three.min.js	/^a[c]});return c},sortedArray:function(a,b,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==$/;"	r
f	js/three.min.js	/^b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length\/3-1)}var d=new C,e=new T({color:16777215,vertexColors:1}),f=[],g=[],h={},k=new H(16755200),l=new H(16711680),q=new H(43775),n=new H(16777215),u=new H(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",l);b("p","n2",l);b("p","n3",l);b("p","n4",$/;"	r
f	js/three.min.js	/^c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=l;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)};this.clear=function(a,b,c,d){for(var e=this.renderTarget,f=0;6>f;f++)e.activeCubeFace=f,a.setRenderTarget(e),a.clear(b,c,d);a.setRenderTarget(null)}}function fe(){w.call(this);this.type="AudioListener";this.context=ge.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);$/;"	r
f	js/three.min.js	/^c.faces.push(v);c.faces.push(w)}else{v=new Oa;v.a=h[r++];v.b=h[r++];v.c=h[r++];t&&(t=h[r++],v.materialIndex=t);t=c.faces.length;if(e)for(e=0;e<u;e++)for(z=d.uvs[e],c.faceVertexUvs[e][t]=[],f=0;3>f;f++)A=h[r++],C=z[2*A],A=z[2*A+1],C=new D(C,A),c.faceVertexUvs[e][t].push(C);x&&(x=3*h[r++],v.normal.set(l[x++],l[x++],l[x]));if(y)for(e=0;3>e;e++)x=3*h[r++],y=new p(l[x++],l[x++],l[x]),v.vertexNormals.push(y);n&&(n=h[r++],v.color.setHex(m[n]));if(k)for(e=0;3>e;e++)n=h[r++],v.vertexColors.push(new H(m[n]));$/;"	r
f	js/three.min.js	/^c.getNormalMatrix(this.object.matrixWorld);var f=this.object.matrixWorld,g=this.geometry.attributes.position;if((d=this.object.geometry)&&d.isGeometry)for(var h=d.vertices,k=d.faces,l=d=0,m=k.length;l<m;l++)for(var n=k[l],p=0,r=n.vertexNormals.length;p<r;p++){var v=n.vertexNormals[p];a.copy(h[n[e[p]]]).applyMatrix4(f);b.copy(v).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);g.setXYZ(d,a.x,a.y,a.z);d+=1;g.setXYZ(d,b.x,b.y,b.z);d+=1}else if(d&&d.isBufferGeometry)for(e=d.attributes.position,$/;"	r
f	js/three.min.js	/^c.needsUpdate=!0:void 0===e.numClippingPlanes||e.numClippingPlanes===Fa.numPlanes&&e.numIntersection===Fa.numIntersection||(c.needsUpdate=!0));c.needsUpdate&&(n(c,b,d),c.needsUpdate=!1);var f=!1,g=!1,h=!1,l=e.program,k=l.getUniforms(),q=e.shader.uniforms;aa.useProgram(l.program)&&(h=g=f=!0);c.id!==U&&(U=c.id,g=!0);if(f||a!==O){k.setValue(F,"projectionMatrix",a.projectionMatrix);X.logarithmicDepthBuffer&&k.setValue(F,"logDepthBufFC",2\/(Math.log(a.far+1)\/Math.LN2));O!==(Z||a)&&(O=Z||a,h=g=!0);if(c.isShaderMaterial||$/;"	r
f	js/three.min.js	/^c;h.push(n)}a=0;for(r=q.length;a<r;a++)if(c=q[a],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a)},mergeMesh:function(a){a&&a.isMesh?(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a)},mergeVertices:function(){var a={},b=[],c=[],d=Math.pow(10,4),e;var f=0;for(e=this.vertices.length;f<$/;"	r
f	js/three.min.js	/^c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a)},normalizeNormals:function(){var a=new p;return function(){for(var b=this.attributes.normal,c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.normalize(),b.setXYZ(c,a.x,a.y,a.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),$/;"	r
f	js/three.min.js	/^d);delete e[a.id];if(k=f[a.id])b.remove(k),delete f[a.id];if(k=f[g.id])b.remove(k),delete f[g.id];c.geometries--}var e={},f={};return{get:function(a,b){var f=e[b.id];if(f)return f;b.addEventListener("dispose",d);b.isBufferGeometry?f=b:b.isGeometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new C).setFromObject(a)),f=b._bufferGeometry);e[b.id]=f;c.geometries++;return f},update:function(c){var d=c.index,e=c.attributes;null!==d&&b.update(d,a.ELEMENT_ARRAY_BUFFER);for(var f in e)b.update(e[f],$/;"	r
f	js/three.min.js	/^d.position),F.bufferData(F.ARRAY_BUFFER,a.positionArray,F.DYNAMIC_DRAW),aa.enableAttribute(b.position),F.vertexAttribPointer(b.position,3,F.FLOAT,!1,0,0));if(a.hasNormals){F.bindBuffer(F.ARRAY_BUFFER,d.normal);if(!c.isMeshPhongMaterial&&!c.isMeshStandardMaterial&&!c.isMeshNormalMaterial&&!0===c.flatShading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])\/3,l=(g[e+1]+g[e+4]+g[e+7])\/3,k=(g[e+2]+g[e+5]+g[e+8])\/3;g[e+0]=h;g[e+1]=l;g[e+2]=k;g[e+3]=h;g[e+4]=l;g[e+5]=k;g[e+$/;"	r
f	js/three.min.js	/^e,c=e.x):(b=e,q=e.x,l=c,c=c.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),c.y<e.y?(b=c,q=c.y,l=e,c=e.y):(b=e,q=e.y,l=c,c=c.y));return k<=q?a<q?[]:a===q?f?[]:[b]:a<=c?[b,h]:[b,l]:k>c?[]:k===c?f?[]:[g]:a<=c?[g,h]:[g,l]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}c(a);b.forEach(c);var g,h={},k=a.concat();var l=0;for(g=b.length;l<g;l++)Array.prototype.push.apply(k,$/;"	r
f	js/three.min.js	/^e;f++){var g=this.vertices[f];g=Math.round(g.x*d)+"_"+Math.round(g.y*d)+"_"+Math.round(g.z*d);void 0===a[g]?(a[g]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[g]]}a=[];f=0;for(e=this.faces.length;f<e;f++)for(d=this.faces[f],d.a=c[d.a],d.b=c[d.b],d.c=c[d.c],d=[d.a,d.b,d.c],g=0;3>g;g++)if(d[g]===d[(g+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(d=a[f],this.faces.splice(d,1),c=0,e=this.faceVertexUvs.length;c<e;c++)this.faceVertexUvs[c].splice(d,1);f=this.vertices.length-b.length;this.vertices=$/;"	r
f	js/three.min.js	/^e=a.faces;f=0;for(b=e.length;f<b;f++)this.faces.push(e[f].clone());f=0;for(b=a.faceVertexUvs.length;f<b;f++){var g=a.faceVertexUvs[f];void 0===this.faceVertexUvs[f]&&(this.faceVertexUvs[f]=[]);e=0;for(c=g.length;e<c;e++){var h=g[e],k=[];var l=0;for(d=h.length;l<d;l++)k.push(h[l].clone());this.faceVertexUvs[f].push(k)}}l=a.morphTargets;f=0;for(b=l.length;f<b;f++){d={};d.name=l[f].name;if(void 0!==l[f].vertices)for(d.vertices=[],e=0,c=l[f].vertices.length;e<c;e++)d.vertices.push(l[f].vertices[e].clone());$/;"	r
f	js/three.min.js	/^eb;z.prototype=Object.create(O.prototype);z.prototype.constructor=z;yc.prototype=Object.create(O.prototype);yc.prototype.constructor=yc;Object.assign(Je.prototype,{computeGroups:function(a){var b=[],c=void 0;a=a.faces;for(var d=0;d<a.length;d++){var e=a[d];if(e.materialIndex!==c){c=e.materialIndex;void 0!==f&&(f.count=3*d-f.start,b.push(f));var f={start:3*d,materialIndex:c}}}void 0!==f&&(f.count=3*d-f.start,b.push(f));this.groups=b},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,$/;"	r
f	js/three.min.js	/^f)}else{do g=f[d],void 0!==g&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}}}};Object.assign(xa.prototype,{evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,$/;"	r
f	js/three.min.js	/^f,g);if(f===g&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)};this.resolveURL=function(a){return h?h(a):a};this.setURLModifier=function(a){h=a}}function Ja(a){this.manager=void 0!==a?a:wa}function Qe(a){this.manager=void 0!==a?a:wa;this._parser=null}function Zd(a){this.manager=void 0!==a?a:wa;this._parser=null}function Wc(a){this.manager=void 0!==a?a:wa}function $d(a){this.manager=void 0!==a?a:wa}function td(a){this.manager=void 0!==a?a:wa}function fa(a,$/;"	r
f	js/three.min.js	/^f,q);this.setIndex(g);this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(k,3));this.addAttribute("uv",new z(l,2))}function Sc(a,b,c,d){L.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new Yb(a,b,c,d));this.mergeVertices()}function Yb(a,b,c,d){C.call(this);this.type="LatheBufferGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=R.clamp(d,$/;"	r
f	js/three.min.js	/^f.length),f=R.ceilPowerOfTwo(f),f=Math.max(f,4),u=new Float32Array(f*f*4);u.set(a.boneMatrices);var v=new bb(u,f,f,1023,1015);a.boneMatrices=u;a.boneTexture=v;a.boneTextureSize=f}k.setValue(F,"boneTexture",a.boneTexture);k.setValue(F,"boneTextureSize",a.boneTextureSize)}else k.setOptional(F,a,"boneMatrices");g&&(k.setValue(F,"toneMappingExposure",M.toneMappingExposure),k.setValue(F,"toneMappingWhitePoint",M.toneMappingWhitePoint),c.lights&&(g=h,q.ambientLightColor.needsUpdate=g,q.directionalLights.needsUpdate=$/;"	r
f	js/three.min.js	/^f.morphTargets&&e.morphAttributes.position;f=f.morphNormals&&e.morphAttributes.normal;for(l=0;l<k;l++){var n=d[l];0!==n[1]&&(q&&e.removeAttribute("morphTarget"+l),f&&e.removeAttribute("morphNormal"+l))}for(l=0;l<k;l++)n=d[l],n[0]=l,n[1]=h[l];d.sort(Vf);for(l=0;8>l;l++){if(n=d[l])if(h=n[0],n=n[1]){q&&e.addAttribute("morphTarget"+l,q[h]);f&&e.addAttribute("morphNormal"+l,f[h]);c[l]=n;continue}c[l]=0}g.getUniforms().setValue(a,"morphTargetInfluences",c)}}}function Xf(a,b,c){var d,e,f;this.setMode=function(a){d=$/;"	r
f	js/three.min.js	/^for(var e=this._propertyBindings,f=0,g=b.length;f!==g;++f)b[f].evaluate(c),e[f].accumulate(d,a)}}else this._updateWeight(a)},_updateWeight:function(a){var b=0;if(this.enabled){var b=this.weight,c=this._weightInterpolant;if(null!==c){var d=c.evaluate(a)[0],b=b*d;a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b},_updateTimeScale:function(a){var b=0;if(!this.paused){var b=this.timeScale,c=this._timeScaleInterpolant;if(null!==c){var d=c.evaluate(a)[0],$/;"	r
f	js/three.min.js	/^function(b){var e=d.get(b),f=d.get(b.texture);b.addEventListener("dispose",u);f.__webglTexture=a.createTexture();g.textures++;var h=!0===b.isWebGLRenderTargetCube,n=k(b);if(h){e.__webglFramebuffer=[];for(var q=0;6>q;q++)e.__webglFramebuffer[q]=a.createFramebuffer()}else e.__webglFramebuffer=a.createFramebuffer();if(h){c.bindTexture(a.TEXTURE_CUBE_MAP,f.__webglTexture);m(a.TEXTURE_CUBE_MAP,b.texture,n);for(q=0;6>q;q++)t(e.__webglFramebuffer[q],b,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+q);$/;"	r
f	js/three.min.js	/^g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=Ha.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);b=[];if(1===f.length){var g=f[0];var h=new zb;h.curves=g.curves;b.push(h);return b}var k=!e(f[0].getPoints()),k=a?!k:k;h=[];var l=[],m=[],n=0;l[n]=void 0;m[n]=[];for(var p=0,r=f.length;p<r;p++){g=f[p];var v=g.getPoints();var t=e(v);(t=a?!t:t)?(!k&&l[n]&&n++,l[n]={s:new zb,p:v},l[n].s.curves=g.curves,k&&n++,m[n]=[]):m[n].push({h:g,p:v[0]})}if(!l[0])return c(f);if(1<l.length){p=$/;"	r
f	js/three.min.js	/^if(Array.isArray(a))for(var m=f=0,n=a.length;m<n;++m)e(m);else l.load(a,function(a){a=g._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length\/a.mipmapCount,d=0;d<c;d++){h[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)h[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),h[d].format=a.format,h[d].width=a.width,h[d].height=a.height}else k.image.width=a.width,k.image.height=a.height,k.mipmaps=a.mipmaps;1===a.mipmapCount&&(k.minFilter=1006);k.format=a.format;k.needsUpdate=!0;b&&b(k)},c,d);return k},setPath:function(a){this.path=$/;"	r
f	js/three.min.js	/^if(void 0!==this.image){var d=this.image;void 0===d.uuid&&(d.uuid=R.generateUUID());if(!b&&void 0===a.images[d.uuid]){var e=a.images,f=d.uuid,g=d.uuid;if(d instanceof HTMLCanvasElement)var h=d;else{h=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");h.width=d.width;h.height=d.height;var k=h.getContext("2d");d instanceof ImageData?k.putImageData(d,0,0):k.drawImage(d,0,0,d.width,d.height)}h=2048<h.width||2048<h.height?h.toDataURL("image\/jpeg",.6):h.toDataURL("image\/png");e[f]={uuid:g,$/;"	r
f	js/three.min.js	/^if(void 0===b.normal)this.addAttribute("normal",new O(new Float32Array(d.length),3));else for(var e=b.normal.array,f=0,g=e.length;f<g;f++)e[f]=0;var e=b.normal.array,h=new p,k=new p,l=new p,q=new p,n=new p;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var m=0,r=c.length;m<r;++m){f=c[m];g=f.start;var v=f.count;f=g;for(g+=v;f<g;f+=3){v=3*a[f+0];var t=3*a[f+1];var x=3*a[f+2];h.fromArray(d,v);k.fromArray(d,t);l.fromArray(d,x);q.subVectors(l,k);n.subVectors(h,k);q.cross(n);e[v]+=q.x;e[v+$/;"	r
f	js/three.min.js	/^interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)\/(d-b);for(c=a+g;a!==c;a+=4)X.slerpFlat(e,0,f,a-g,f,a,b);return e}});Yc.prototype=Object.assign(Object.create(ab),{constructor:Yc,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(a){return new Ed(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});fc.prototype=Object.assign(Object.create(ab),{constructor:fc,ValueTypeName:"number"});$/;"	r
f	js/three.min.js	/^k(g[2]);k(g[3])}}}function f(a,b,c){r.push(a);r.push(b);r.push(c)}function g(a,b,c){h(a);h(b);h(c);a=m.length\/3;a=E.generateTopUV(R,m,a-3,a-2,a-1);k(a[0]);k(a[1]);k(a[2])}function h(a){n.push(m.length\/3);m.push(r[3*a+0]);m.push(r[3*a+1]);m.push(r[3*a+2])}function k(a){u.push(a.x);u.push(a.y)}var l=b.arrays?b.arrays:this.getArrays(),m=l.position,n=l.index,u=l.uv,r=[],l=void 0!==b.amount?b.amount:100,v=void 0!==b.bevelThickness?b.bevelThickness:6,t=void 0!==b.bevelSize?b.bevelSize:v-2,x=void 0!==b.bevelSegments?$/;"	r
f	js/three.min.js	/^l(b.texture,n)&&a.generateMipmap(a.TEXTURE_CUBE_MAP);c.bindTexture(a.TEXTURE_CUBE_MAP,null)}else c.bindTexture(a.TEXTURE_2D,f.__webglTexture),m(a.TEXTURE_2D,b.texture,n),t(e.__webglFramebuffer,b,a.COLOR_ATTACHMENT0,a.TEXTURE_2D),l(b.texture,n)&&a.generateMipmap(a.TEXTURE_2D),c.bindTexture(a.TEXTURE_2D,null);if(b.depthBuffer){e=d.get(b);f=!0===b.isWebGLRenderTargetCube;if(b.depthTexture){if(f)throw Error("target.depthTexture not supported in Cube render targets");if(b&&b.isWebGLRenderTargetCube)throw Error("Depth Texture with cube render targets is not supported");$/;"	r
f	js/three.min.js	/^l.type&&delete l.emissive;"MeshPhongMaterial"!==l.type&&delete l.specular;1>l.opacity&&(l.transparent=!0);d.setTextures(k);return d.parse(l)}}()});Object.assign(be.prototype,{load:function(a,b,c,d){var e=this,f=this.texturePath&&"string"===typeof this.texturePath?this.texturePath:gc.prototype.extractUrlBase(a),g=new Ja(this.manager);g.setWithCredentials(this.withCredentials);g.load(a,function(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d&&(d=d.type,void 0!==d)){if("object"===d.toLowerCase()){console.error("THREE.JSONLoader: "+$/;"	r
f	js/three.min.js	/^q);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){return(new L).copy(this)},copy:function(a){var b,c,d;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var e=a.vertices;var f=0;for(b=e.length;f<b;f++)this.vertices.push(e[f].clone());e=a.colors;f=0;for(b=e.length;f<b;f++)this.colors.push(e[f].clone());$/;"	r
f	js/three.min.js	/^return c}});Object.assign(Te.prototype,{load:function(a,b,c,d){var e=this,f=new Ja(this.manager);f.setPath(this.path);f.load(a,function(a){try{var c=JSON.parse(a)}catch(k){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(a.substring(65,a.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new de(a)},setPath:function(a){this.path=a;return this}});var Md,ge={getContext:function(){void 0===Md&&(Md=new (window.AudioContext||$/;"	r
f	js/three.min.js	/^this,f,g);a=!1;break}if(null!==e&&e>g){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&S.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,f,d);a=!1;break}return a},optimize:function(){for(var a,b,c=this.times,d=this.values,e=this.getValueSize(),f=2302===this.getInterpolation(),g=1,h=c.length-1,k=1;k<h;++k){a=!1;var l=c[k];if(l!==c[k+1]&&(1!==k||$/;"	r
f	js/three.min.js	/^this.bones,f=this.geometry,g=f.getAttribute("position");c.getInverse(this.root.matrixWorld);for(var h=0,k=0;h<e.length;h++){var l=e[h];l.parent&&l.parent.isBone&&(b.multiplyMatrices(c,l.matrixWorld),a.setFromMatrixPosition(b),g.setXYZ(k,a.x,a.y,a.z),b.multiplyMatrices(c,l.parent.matrixWorld),a.setFromMatrixPosition(b),g.setXYZ(k+1,a.x,a.y,a.z),k+=2)}f.getAttribute("position").needsUpdate=!0;w.prototype.updateMatrixWorld.call(this,d)}}();mc.prototype=Object.create(qa.prototype);mc.prototype.constructor=$/;"	r
f	js/three.min.js	/^this.morphNormals.push(d)}e=a.skinWeights;f=0;for(b=e.length;f<b;f++)this.skinWeights.push(e[f].clone());e=a.skinIndices;f=0;for(b=e.length;f<b;f++)this.skinIndices.push(e[f].clone());e=a.lineDistances;f=0;for(b=e.length;f<b;f++)this.lineDistances.push(e[f]);f=a.boundingBox;null!==f&&(this.boundingBox=f.clone());f=a.boundingSphere;null!==f&&(this.boundingSphere=f.clone());this.elementsNeedUpdate=a.elementsNeedUpdate;this.verticesNeedUpdate=a.verticesNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.normalsNeedUpdate=$/;"	r
f	js/three.min.js	/^this.program=p;this.vertexShader=k;this.fragmentShader=l;return this}function jg(a,b,c){function d(a,b){if(a)a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),c=a.texture.encoding);else var c=3E3;3E3===c&&b&&(c=3007);return c}var e=[],f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",$/;"	r
f	js/three.min.js	/^this.status){console.warn("THREE.FileLoader: HTTP Status 0 received.");f=0;for(g=d.length;f<g;f++)if(h=d[f],h.onLoad)h.onLoad(c);e.manager.itemEnd(a)}else{f=0;for(g=d.length;f<g;f++)if(h=d[f],h.onError)h.onError(b);e.manager.itemEnd(a);e.manager.itemError(a)}},!1);n.addEventListener("progress",function(b){for(var c=$a[a],d=0,e=c.length;d<e;d++){var f=c[d];if(f.onProgress)f.onProgress(b)}},!1);n.addEventListener("error",function(b){for(var c=$a[a],d=0,f=c.length;d<f;d++){var g=c[d];if(g.onError)g.onError(b)}e.manager.itemEnd(a);$/;"	r
f	js/three.min.js	/^this.xRadius*Math.cos(c);var f=this.aY+this.yRadius*Math.sin(c);0!==this.aRotation&&(c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a-this.aX,f-=this.aY,a=e*c-f*d+this.aX,f=e*d+f*c+this.aY);return b.set(a,f)};wb.prototype=Object.create(ca.prototype);wb.prototype.constructor=wb;wb.prototype.isSplineCurve=!0;wb.prototype.getPoint=function(a,b){b=b||new D;var c=this.points,d=(c.length-1)*a;a=Math.floor(d);var d=d-a,e=c[0===a?a:a-1],f=c[a],g=c[a>c.length-2?c.length-1:a+1],c=c[a>c.length-3?c.length-$/;"	r
f	js/three.min.js	/^w}}else void 0!==a[p]&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){for(var a=this._objects,b=this.nCachedObjects_,c=this._indicesByUUID,d=this._bindings,e=d.length,f=0,g=arguments.length;f!==g;++f){var h=arguments[f],k=h.uuid,l=c[k];if(void 0!==l&&l>=b){var m=b++,n=a[m];c[n.uuid]=l;a[l]=n;c[k]=m;a[m]=h;h=0;for(k=e;h!==k;++h){var n=d[h],p=$/;"	r
f	js/three.min.js	/^x+","+g.length},state:b}}function bg(a,b){var c={};return{update:function(d){var e=b.frame,f=d.geometry,g=a.get(d,f);c[g.id]!==e&&(f.isGeometry&&g.updateFromObject(d),a.update(g),c[g.id]=e);return g},clear:function(){c={}}}}function cg(a){a=a.split("\\n");for(var b=0;b<a.length;b++)a[b]=b+1+": "+a[b];return a.join("\\n")}function Ke(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");$/;"	r
f	js/three.min.js	/^{constructor:Mb,isPoints:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<m){a=b.closestPointToPoint(a);a.applyMatrix4(k);var h=d.ray.origin.distanceTo(a);h<d.near||h>d.far||e.push({distance:h,distanceToRay:Math.sqrt(f),point:a.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);$/;"	r
f	js/three.min.js	/^{};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Hb(a,b,c,d,e,f){L.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fb(a,b,c,d,e,f));this.mergeVertices()}function fb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,m,ya,ja,ma){var B=f\/ya,v=g\/ja,t=f\/2,x=g\/2,I=m\/2;g=ya+1;var A=ja+1,y=f=0,J,w,z=new p;for(w=0;w<A;w++){var D=w*v-x;for(J=0;J<g;J++)z[a]=$/;"	r
f3	js/three.js	/^		function f3( a, b, c ) {$/;"	r
f4	js/three.js	/^		function f4( a, b, c, d ) {$/;"	r
fa	js/three.min.js	/^L.copy(K.binormals[W]).multiplyScalar(S.y),O.copy(H[W]).add(Q).add(L),f(O.x,O.y,O.z)):f(S.x,S.y,l\/w*W);for(ea=x-1;0<=ea;ea--){W=ea\/x;fa=v*Math.cos(W*Math.PI\/2);Z=t*Math.sin(W*Math.PI\/2);G=0;for(W=X.length;G<W;G++)S=c(X[G],B[G],Z),f(S.x,S.y,l+fa);N=0;for(M=P.length;N<M;N++)for(U=P[N],ba=A[N],G=0,W=U.length;G<W;G++)S=c(U[G],ba[G],Z),C?f(S.x,S.y+H[w-1].y,H[w-1].x+fa):f(S.x,S.y,l+fa)}(function(){var a=m.length\/3;if(y){var c=0*Y;for(G=0;G<ca;G++)T=V[G],g(T[2]+c,T[1]+c,T[0]+c);c=Y*(w+2*x);for(G=0;G<ca;G++)T=$/;"	r
face	js/three.js	/^								face: null,$/;"	r
face	js/three.js	/^							face: null,$/;"	r
face	js/three.js	/^							intersection.face = face;$/;"	r
face	js/three.js	/^						face = new Face3();$/;"	r
face	js/three.js	/^						var face = faces[ f ];$/;"	r
face	js/three.js	/^					face = faces[ i ];$/;"	r
face	js/three.js	/^					face = this.faces[ f ];$/;"	r
face	js/three.js	/^					face: null,$/;"	r
face	js/three.js	/^					intersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );$/;"	r
face	js/three.js	/^					var face = faces[ i ];$/;"	r
face	js/three.js	/^				face = this.faces[ f ];$/;"	r
face	js/three.js	/^				face = this.faces[ i ];$/;"	r
face	js/three.js	/^				face = triangles[ i ];$/;"	r
face	js/three.js	/^				var face = faces2[ i ], faceCopy, normal, color,$/;"	r
face	js/three.js	/^				var face = faces[ i ];$/;"	r
face	js/three.js	/^				var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );$/;"	r
face	js/three.js	/^				var face = this.faces[ f ];$/;"	r
face	js/three.js	/^				var face = this.faces[ i ];$/;"	r
face	js/three.js	/^			face, flen = faces.length;$/;"	r
face	js/three.js	/^			var face = faces[ i ];$/;"	r
faceA	js/three.js	/^						faceA = new Face3();$/;"	r
faceB	js/three.js	/^						faceB = new Face3();$/;"	r
faceCopy	js/three.js	/^				faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );$/;"	r
faceCopy	js/three.js	/^				var face = faces2[ i ], faceCopy, normal, color,$/;"	r
faceCount	js/three.js	/^					faceCount = 1;$/;"	r
faceCount	js/three.js	/^					faceCount = 6;$/;"	r
faceCount	js/three.js	/^			var faceCount;$/;"	r
faceIndex	js/three.js	/^								faceIndex: null,$/;"	r
faceIndex	js/three.js	/^								intersection.faceIndex = Math.floor( i \/ 3 ); \/\/ triangle number in indices buffer semantics$/;"	r
faceIndex	js/three.js	/^							faceIndex: null,$/;"	r
faceIndex	js/three.js	/^							intersection.faceIndex = f;$/;"	r
faceIndex	js/three.js	/^					intersection.faceIndex = a;$/;"	r
faceIndicesToRemove	js/three.js	/^			var faceIndicesToRemove = [];$/;"	r
faceMaterial	js/three.js	/^						intersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );$/;"	r
faceMaterial	js/three.js	/^						var faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;$/;"	r
faceNormal	js/three.js	/^						faceNormal = new Vector3();$/;"	r
faceNormal	js/three.js	/^					faceNormal = morphNormals.faceNormals[ f ];$/;"	r
faceNormal	js/three.js	/^					var faceNormal, vertexNormals;$/;"	r
faceNormal	js/three.js	/^				var faceNormal, vertexNormals;$/;"	r
faceNormals	js/three.js	/^					morphNormal.faceNormals = [];$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 0, 0 ); \/\/ isQuad$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 1, hasMaterial );$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 2, hasFaceUv );$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 3, hasFaceVertexUv );$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 4, hasFaceNormal );$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 5, hasFaceVertexNormal );$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 6, hasFaceColor );$/;"	r
faceType	js/three.js	/^				faceType = setBit( faceType, 7, hasFaceVertexColor );$/;"	r
faceType	js/three.js	/^				var faceType = 0;$/;"	r
faceVertexColors	js/three.js	/^					faceVertexColors = face.vertexColors;$/;"	r
faceVertexNormals	js/three.js	/^					faceVertexNormals = face.vertexNormals,$/;"	r
faceVertexUvs	js/three.js	/^					if ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;$/;"	r
faceVertexUvs	js/three.js	/^					var faceVertexUvs = geometry.faceVertexUvs[ 0 ];$/;"	r
faceVertexUvs	js/three.js	/^					var faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];$/;"	r
faceVertexUvs	js/three.js	/^				var faceVertexUvs = source.faceVertexUvs[ i ];$/;"	r
faceVertexUvs	js/three.js	/^			this.faceVertexUvs = [[]];$/;"	r
faceVertexUvs	js/three.js	/^			var faceVertexUvs = geometry.faceVertexUvs;$/;"	r
faceVertexUvs	js/three.js	/^		this.faceVertexUvs = [[]];$/;"	r
faces	js/three.js	/^						var faces = texDatas.mipmaps.length \/ texDatas.mipmapCount;$/;"	r
faces	js/three.js	/^					faces = json.faces,$/;"	r
faces	js/three.js	/^					var faces = geometry.faces;$/;"	r
faces	js/three.js	/^				faces1 = this.faces,$/;"	r
faces	js/three.js	/^				faces2 = geometry.faces,$/;"	r
faces	js/three.js	/^				faces: 0,$/;"	r
faces	js/three.js	/^				var faces = objGeometry.faces;$/;"	r
faces	js/three.js	/^			_infoRender.faces = 0;$/;"	r
faces	js/three.js	/^			data.data.faces = faces;$/;"	r
faces	js/three.js	/^			gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );$/;"	r
faces	js/three.js	/^			this.faces = [];$/;"	r
faces	js/three.js	/^			tmpGeo.faces = this.faces;$/;"	r
faces	js/three.js	/^			var faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );$/;"	r
faces	js/three.js	/^			var faces = [];$/;"	r
faces	js/three.js	/^			var faces = geometry.faces;$/;"	r
faces	js/three.js	/^			var faces = new Uint16Array( [$/;"	r
faces	js/three.js	/^			var faces = objGeometry.faces;$/;"	r
faces	js/three.js	/^			var faces = source.faces;$/;"	r
faces	js/three.js	/^			var faces = this.faces;$/;"	r
faces	js/three.js	/^		this.faces = [];$/;"	r
faces	js/three.js	/^		var faces = ShapeUtils.triangulateShape( vertices, holes );$/;"	r
faces	js/three.js	/^		var faces = geometry2.faces;$/;"	r
faces	js/three.min.js	/^d.__originalVertexNormals[e]=d.vertexNormals[e].clone()}var f=new L;f.faces=this.faces;e=0;for(a=this.morphTargets.length;e<a;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];d=this.morphNormals[e].faceNormals;var g=this.morphNormals[e].vertexNormals;c=0;for(b=this.faces.length;c<b;c++){var h=new p;var k={a:new p,b:new p,c:new p};d.push(h);g.push(k)}}g=this.morphNormals[e];f.vertices=this.morphTargets[e].vertices;f.computeFaceNormals();$/;"	r
faces	js/three.min.js	/^q);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){return(new L).copy(this)},copy:function(a){var b,c,d;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var e=a.vertices;var f=0;for(b=e.length;f<b;f++)this.vertices.push(e[f].clone());e=a.colors;f=0;for(b=e.length;f<b;f++)this.colors.push(e[f].clone());$/;"	r
faces1	js/three.js	/^				faces1 = this.faces,$/;"	r
faces2	js/three.js	/^				faces2 = geometry.faces,$/;"	r
factor	js/three.js	/^					currentPolygonOffsetFactor = factor;$/;"	r
factor	js/three.js	/^		function setPolygonOffset( polygonOffset, factor, units ) {$/;"	r
factorSeg1	js/three.js	/^					var factorSeg1 = perpSeg2 \/ limit;$/;"	r
factoryMethod	js/three.js	/^					factoryMethod = this.InterpolantFactoryMethodDiscrete;$/;"	r
factoryMethod	js/three.js	/^					factoryMethod = this.InterpolantFactoryMethodLinear;$/;"	r
factoryMethod	js/three.js	/^					factoryMethod = this.InterpolantFactoryMethodSmooth;$/;"	r
factoryMethod	js/three.js	/^			this.createInterpolant = factoryMethod;$/;"	r
factoryMethod	js/three.js	/^			var factoryMethod;$/;"	r
fadeIn	js/three.js	/^		fadeIn: function ( duration ) {$/;"	r
fadeInDuration	js/three.js	/^				var fadeInDuration = this._clip.duration,$/;"	r
fadeOut	js/three.js	/^		fadeOut: function ( duration ) {$/;"	r
fadeOutDuration	js/three.js	/^					fadeOutDuration = fadeOutAction._clip.duration,$/;"	r
failedCuts	js/three.js	/^					holeIdx, cutKey, failedCuts = [],$/;"	r
fallOffAngle	js/GLTFLoader.js	/^					lightNode.angle = light.fallOffAngle;$/;"	r
false	js/GLTFLoader.js	/^				materialParams.transparent = false;$/;"	r
false	js/GLTFLoader.js	/^			texture.flipY = false;$/;"	r
false	js/GLTFLoader.js	/^		var isObjectURL = false;$/;"	r
false	js/three.js	/^									hole_unassigned = false;$/;"	r
false	js/three.js	/^							levels[ i - 1 ].object.visible = false;$/;"	r
false	js/three.js	/^							this._setEndings( false, false, pingPong );$/;"	r
false	js/three.js	/^							this.enabled = false;$/;"	r
false	js/three.js	/^							valid = false;$/;"	r
false	js/three.js	/^						else this.enabled = false;$/;"	r
false	js/three.js	/^						levels[ i ].object.visible = false;$/;"	r
false	js/three.js	/^					else this.enabled = false;$/;"	r
false	js/three.js	/^					geometry.elementsNeedUpdate = false;$/;"	r
false	js/three.js	/^					locked = false;$/;"	r
false	js/three.js	/^					texture.generateMipmaps = false;$/;"	r
false	js/three.js	/^					valid = false;$/;"	r
false	js/three.js	/^				capabilities[ id ] = false;$/;"	r
false	js/three.js	/^				geometry.colorsNeedUpdate = false;$/;"	r
false	js/three.js	/^				geometry.groupsNeedUpdate = false;$/;"	r
false	js/three.js	/^				geometry.lineDistancesNeedUpdate = false;$/;"	r
false	js/three.js	/^				geometry.normalsNeedUpdate = false;$/;"	r
false	js/three.js	/^				geometry.uvsNeedUpdate = false;$/;"	r
false	js/three.js	/^				geometry.verticesNeedUpdate = false;$/;"	r
false	js/three.js	/^				gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );$/;"	r
false	js/three.js	/^				isLoading = false;$/;"	r
false	js/three.js	/^				material.needsUpdate = false;$/;"	r
false	js/three.js	/^				programChange = false;$/;"	r
false	js/three.js	/^				this.isPlaying = false;$/;"	r
false	js/three.js	/^				this.matrixWorldNeedsUpdate = false;$/;"	r
false	js/three.js	/^				this.view.enabled = false;$/;"	r
false	js/three.js	/^				valid = false;$/;"	r
false	js/three.js	/^				var ambiguous = false;$/;"	r
false	js/three.js	/^				var direction_eq = false; \/\/ assumes: opposite$/;"	r
false	js/three.js	/^				var hasFaceUv = false; \/\/ deprecated$/;"	r
false	js/three.js	/^				var inside = false;$/;"	r
false	js/three.js	/^				var keep = false;$/;"	r
false	js/three.js	/^				var restore = false;$/;"	r
false	js/three.js	/^				var useMorphing = false;$/;"	r
false	js/three.js	/^			_clippingEnabled = false,$/;"	r
false	js/three.js	/^			_isContextLost = false,$/;"	r
false	js/three.js	/^			_isContextLost = false;$/;"	r
false	js/three.js	/^			_localClippingEnabled = false,$/;"	r
false	js/three.js	/^			_scissorTest = false,$/;"	r
false	js/three.js	/^			bevelEnabled = false; \/\/ bevels not supported for path extrusion$/;"	r
false	js/three.js	/^			gl.uniformMatrix3fv( this.addr, false, mat3array );$/;"	r
false	js/three.js	/^			gl.uniformMatrix3fv( this.addr, false, v );$/;"	r
false	js/three.js	/^			gl.uniformMatrix4fv( this.addr, false, mat4array );$/;"	r
false	js/three.js	/^			gl.uniformMatrix4fv( this.addr, false, v );$/;"	r
false	js/three.js	/^			gl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );$/;"	r
false	js/three.js	/^			haveDiagnostics = false;$/;"	r
false	js/three.js	/^			if ( this.visible === false ) data.visible = false;$/;"	r
false	js/three.js	/^			if ( this.visible === false ) object.visible = false;$/;"	r
false	js/three.js	/^			localClippingEnabled = false,$/;"	r
false	js/three.js	/^			renderTarget.texture.generateMipmaps = false;$/;"	r
false	js/three.js	/^			renderingShadows = false,$/;"	r
false	js/three.js	/^			renderingShadows = false;$/;"	r
false	js/three.js	/^			runnable = false;$/;"	r
false	js/three.js	/^			scope.needsUpdate = false;$/;"	r
false	js/three.js	/^			this.autoStart = false;$/;"	r
false	js/three.js	/^			this.clear( false, false, true );$/;"	r
false	js/three.js	/^			this.clear( true, false, false );$/;"	r
false	js/three.js	/^			this.hasPlaybackControl = false;$/;"	r
false	js/three.js	/^			this.isPlaying = false;$/;"	r
false	js/three.js	/^			this.lightDistance.visible = false;$/;"	r
false	js/three.js	/^			this.needsUpdate = false;$/;"	r
false	js/three.js	/^			this.paused = false;$/;"	r
false	js/three.js	/^			this.running = false;$/;"	r
false	js/three.js	/^			var isCube = false;$/;"	r
false	js/three.js	/^			var locked = false;$/;"	r
false	js/three.js	/^			var refreshLights = false;$/;"	r
false	js/three.js	/^			var refreshMaterial = false;$/;"	r
false	js/three.js	/^			var refreshProgram = false;$/;"	r
false	js/three.js	/^			var updateBuffers = false;$/;"	r
false	js/three.js	/^			var warned = false;$/;"	r
false	js/three.js	/^		gl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );$/;"	r
false	js/three.js	/^		gl.uniformMatrix2fv( this.addr, false, v.elements || v );$/;"	r
false	js/three.js	/^		gl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );$/;"	r
false	js/three.js	/^		gl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );$/;"	r
false	js/three.js	/^		if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;$/;"	r
false	js/three.js	/^		this.autoClose = false; \/\/ Automatically closes the path$/;"	r
false	js/three.js	/^		this.autoplay = false;$/;"	r
false	js/three.js	/^		this.cameraL.matrixAutoUpdate = false;$/;"	r
false	js/three.js	/^		this.cameraR.matrixAutoUpdate = false;$/;"	r
false	js/three.js	/^		this.castShadow = false;$/;"	r
false	js/three.js	/^		this.clampWhenFinished 	= false;	\/\/ keep feeding the last frame?$/;"	r
false	js/three.js	/^		this.clipIntersection = false;$/;"	r
false	js/three.js	/^		this.clipShadows = false;$/;"	r
false	js/three.js	/^		this.clipping = false; \/\/ set to use user-defined clipping planes$/;"	r
false	js/three.js	/^		this.closed = false;$/;"	r
false	js/three.js	/^		this.colorsNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.cone.matrixAutoUpdate = false;$/;"	r
false	js/three.js	/^		this.dithering = false;$/;"	r
false	js/three.js	/^		this.dynamic = false;$/;"	r
false	js/three.js	/^		this.elementsNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.enabled = false;$/;"	r
false	js/three.js	/^		this.flatShading = false;$/;"	r
false	js/three.js	/^		this.flipY = false;$/;"	r
false	js/three.js	/^		this.fog = false; \/\/ set to use scene fog$/;"	r
false	js/three.js	/^		this.fog = false;$/;"	r
false	js/three.js	/^		this.gammaInput = false;$/;"	r
false	js/three.js	/^		this.gammaOutput = false;$/;"	r
false	js/three.js	/^		this.generateMipmaps	= false;$/;"	r
false	js/three.js	/^		this.generateMipmaps = false;$/;"	r
false	js/three.js	/^		this.groupsNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.isPlaying = false;$/;"	r
false	js/three.js	/^		this.lights = false; \/\/ set to use scene lights$/;"	r
false	js/three.js	/^		this.lights = false;$/;"	r
false	js/three.js	/^		this.line.matrixAutoUpdate = false;$/;"	r
false	js/three.js	/^		this.lineDistancesNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.localClippingEnabled = false;$/;"	r
false	js/three.js	/^		this.loop = false;$/;"	r
false	js/three.js	/^		this.matrixAutoUpdate = false;$/;"	r
false	js/three.js	/^		this.matrixWorldNeedsUpdate = false;$/;"	r
false	js/three.js	/^		this.morphNormals = false; \/\/ set to use morph normals$/;"	r
false	js/three.js	/^		this.morphNormals = false;$/;"	r
false	js/three.js	/^		this.morphTargets = false; \/\/ set to use morph targets$/;"	r
false	js/three.js	/^		this.morphTargets = false;$/;"	r
false	js/three.js	/^		this.needsUpdate = false;$/;"	r
false	js/three.js	/^		this.normalsNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.paused = false;				\/\/ true -> zero effective time scale$/;"	r
false	js/three.js	/^		this.physicallyCorrectLights = false;$/;"	r
false	js/three.js	/^		this.polygonOffset = false;$/;"	r
false	js/three.js	/^		this.premultipliedAlpha = false;$/;"	r
false	js/three.js	/^		this.premultiplyAlpha = false;$/;"	r
false	js/three.js	/^		this.receiveShadow = false;$/;"	r
false	js/three.js	/^		this.running = false;$/;"	r
false	js/three.js	/^		this.scissorTest = false;$/;"	r
false	js/three.js	/^		this.skinning = false; \/\/ set to use skinning attribute streams$/;"	r
false	js/three.js	/^		this.skinning = false;$/;"	r
false	js/three.js	/^		this.standing = false;$/;"	r
false	js/three.js	/^		this.transparent = false;$/;"	r
false	js/three.js	/^		this.uvsNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.verticesNeedUpdate = false;$/;"	r
false	js/three.js	/^		this.wireframe = false;$/;"	r
false	js/three.js	/^		this.withCredentials = false;$/;"	r
false	js/three.js	/^		var currentPremultipledAlpha = false;$/;"	r
false	js/three.js	/^		var isAnimating = false;$/;"	r
false	js/three.js	/^		var isLoading = false;$/;"	r
far	js/three.js	/^						uniforms.shadowCameraFar = shadow.camera.far;$/;"	r
far	js/three.js	/^					far = camera.far;$/;"	r
far	js/three.js	/^				camera.far = far;$/;"	r
far	js/three.js	/^				this.shadow.camera.far = value;$/;"	r
far	js/three.js	/^				uniforms.fogFar.value = fog.far;$/;"	r
far	js/three.js	/^			cameraL.far = camera.far;$/;"	r
far	js/three.js	/^			cameraR.far = camera.far;$/;"	r
far	js/three.js	/^			data.object.far = this.far;$/;"	r
far	js/three.js	/^			device.depthFar = camera.far;$/;"	r
far	js/three.js	/^			far: this.far$/;"	r
far	js/three.js	/^			this.far = source.far;$/;"	r
far	js/three.js	/^			var far = light.distance || camera.far;$/;"	r
far	js/three.js	/^		this.far = ( far !== undefined ) ? far : 1000;$/;"	r
far	js/three.js	/^		this.far = ( far !== undefined ) ? far : 2000;$/;"	r
far	js/three.js	/^		this.far = far !== undefined ? far : 2000;$/;"	r
far	js/three.js	/^		this.far = far || Infinity;$/;"	r
far	js/three.js	/^	function CubeCamera( near, far, cubeResolution ) {$/;"	r
far	js/three.min.js	/^this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});nd.prototype=Object.assign(Object.create(Y.prototype),{constructor:nd,isArrayCamera:!0});Kb.prototype.isFogExp2=!0;Kb.prototype.clone=function(){return new Kb(this.color.getHex(),this.density)};Kb.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),$/;"	r
far	script.js	/^var far     = 1000;             \/* far plane *\/$/;"	r
farDistance	js/three.js	/^					farDistance: { value: 1000 }$/;"	r
farDistance	js/three.js	/^				result.farDistance = shadowCameraFar;$/;"	r
farDistance	js/three.js	/^			uniforms.farDistance.value = material.farDistance;$/;"	r
farDistance	js/three.js	/^		this.farDistance = 1000;$/;"	r
farDistance	js/three.js	/^		this.farDistance = source.farDistance;$/;"	r
fd	js/three.min.js	/^7,7,4,0,4,1,5,2,6,3,7]);var c=new Float32Array(24),d=new C;d.setIndex(new O(a,1));d.addAttribute("position",new O(c,3));P.call(this,d,new T({color:b}));this.matrixAutoUpdate=!1;this.update()}function fd(a,b){this.type="Box3Helper";this.box=a;a=void 0!==b?b:16776960;b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var c=new C;c.setIndex(new O(b,1));c.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));P.call(this,c,new T({color:a}));this.geometry.computeBoundingSphere()}$/;"	r
fe	js/three.min.js	/^c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=l;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)};this.clear=function(a,b,c,d){for(var e=this.renderTarget,f=0;6>f;f++)e.activeCubeFace=f,a.setRenderTarget(e),a.clear(b,c,d);a.setRenderTarget(null)}}function fe(){w.call(this);this.type="AudioListener";this.context=ge.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);$/;"	r
fetchAttributeLocations	js/three.js	/^	function fetchAttributeLocations( gl, program ) {$/;"	r
fftSize	js/three.js	/^		this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;$/;"	r
fi	js/three.js	/^						fi = geometry.faces.length;$/;"	r
file	js/three.js	/^			this.files[ key ] = file;$/;"	r
fileLoader	js/GLTFLoader.js	/^		this.fileLoader = new THREE.FileLoader( this.options.manager );$/;"	r
fileLoader	js/GLTFLoader.js	/^		var loader = this.fileLoader;$/;"	r
files	js/three.js	/^			this.files = {};$/;"	r
files	js/three.js	/^		files: {},$/;"	r
files	js/three.min.js	/^LineBasicMaterial:T,Material:Q}),jd={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},wa=new Yd,$a={};Object.assign(Ja.prototype,{load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},$/;"	r
fillStyle	js/three.js	/^			context.fillStyle = 'white';$/;"	r
filmGauge	js/three.js	/^						if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;$/;"	r
filmGauge	js/three.js	/^			data.object.filmGauge = this.filmGauge;$/;"	r
filmGauge	js/three.js	/^			this.filmGauge = source.filmGauge;$/;"	r
filmGauge	js/three.js	/^		if ( filmGauge !== undefined ) this.filmGauge = filmGauge;$/;"	r
filmGauge	js/three.js	/^		this.filmGauge = 35;	\/\/ width of the film (default in millimeters)$/;"	r
filmOffset	js/three.js	/^						if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;$/;"	r
filmOffset	js/three.js	/^			data.object.filmOffset = this.filmOffset;$/;"	r
filmOffset	js/three.js	/^			this.filmOffset = source.filmOffset;$/;"	r
filmOffset	js/three.js	/^			var skew = this.filmOffset;$/;"	r
filmOffset	js/three.js	/^		this.filmOffset = 0;	\/\/ horizontal film offset (same unit as gauge)$/;"	r
filter	js/three.js	/^				this.filter = null;$/;"	r
filter	js/three.js	/^			this.filter = value;$/;"	r
filter	js/three.js	/^		this.filter = null;$/;"	r
filter	js/three.min.js	/^this.filter=null}function ic(a){w.call(this);this.type="Audio";this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=!1;this.offset=this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this.filters=[]}function he(a){ic.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function ie(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=$/;"	r
filter	js/three.min.js	/^this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(a){this.gain.gain.value=a},updateMatrixWorld:function(){var a=new p,b=new X,c=new p,d=new p;return function(e){w.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.positionX?(e.positionX.setValueAtTime(a.x,$/;"	r
filterEmptyLine	js/three.js	/^	function filterEmptyLine( string ) {$/;"	r
filterFallback	js/three.js	/^		function filterFallback( f ) {$/;"	r
filters	js/three.js	/^				this.filters = value;$/;"	r
filters	js/three.js	/^		this.filters = [];$/;"	r
filters	js/three.min.js	/^this.filter=null}function ic(a){w.call(this);this.type="Audio";this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=!1;this.offset=this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this.filters=[]}function he(a){ic.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function ie(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=$/;"	r
findByName	js/three.js	/^		findByName: function ( objectOrClipArray, name ) {$/;"	r
findByName	js/three.min.js	/^(h.push(e),k.push(k[0]));f.push((new fc(".morphTargetInfluences["+b[g].name+"]",h,k)).scale(1\/c))}return new ra(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(a=0;a<c.length;a++)if(c[a].name===b)return c[a];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d,e={},f=\/^([\\w-]*?)([\\d]+)$\/,g=0,h=a.length;g<h;g++){var k=a[g],l=k.name.match(f);l&&1<l.length&&(d=l[1],(l=e[d])||(e[d]=l=[]),l.push(k))}a=[];for(d in e)a.push(ra.CreateFromMorphTargetSequence(d,$/;"	r
findNode	js/three.js	/^		findNode: function ( root, nodeName ) {$/;"	r
findNode	js/three.min.js	/^c);return d}}(),findNode:function(a,b){if(!b||""===b||"root"===b||"."===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){var c=function(a){for(var c=0;c<a.bones.length;c++){var d=a.bones[c];if(d.name===b)return d}return null}(a.skeleton);if(c)return c}if(a.children){var d=function(a){for(var c=0;c<a.length;c++){var e=a[c];if(e.name===b||e.uuid===b||(e=d(e.children)))return e}return null};if(a=d(a.children))return a}return null}});Object.assign(pa.prototype,{_getValue_unavailable:function(){},$/;"	r
firstActive	js/three.js	/^							firstActive = bindingsForPath[ lastCachedIndex ],$/;"	r
firstActive	js/three.js	/^						bindingsForPath[ index ] = firstActive;$/;"	r
firstActiveIndex	js/three.js	/^						indicesByUUID[ lastObject.uuid ] = firstActiveIndex;$/;"	r
firstActiveIndex	js/three.js	/^						var firstActiveIndex = -- nCachedObjects,$/;"	r
firstActiveIndex	js/three.js	/^					indicesByUUID[ uuid ] = firstActiveIndex;$/;"	r
firstActiveIndex	js/three.js	/^					var firstActiveIndex = -- nCachedObjects,$/;"	r
firstActiveObject	js/three.js	/^						firstActiveObject = objects[ lastCachedIndex ];$/;"	r
firstActiveObject	js/three.js	/^					objects[ index ] = firstActiveObject;$/;"	r
firstElem	js/three.js	/^		var firstElem = array[ 0 ];$/;"	r
firstInactiveAction	js/three.js	/^				firstInactiveAction = actions[ lastActiveIndex ];$/;"	r
firstInactiveAction	js/three.js	/^			actions[ prevIndex ] = firstInactiveAction;$/;"	r
firstInactiveBinding	js/three.js	/^				firstInactiveBinding = bindings[ lastActiveIndex ];$/;"	r
firstInactiveBinding	js/three.js	/^			bindings[ prevIndex ] = firstInactiveBinding;$/;"	r
firstInactiveIndex	js/three.js	/^				firstInactiveIndex = -- this._nActiveActions,$/;"	r
firstInactiveIndex	js/three.js	/^				firstInactiveIndex = -- this._nActiveBindings,$/;"	r
firstInactiveIndex	js/three.js	/^				firstInactiveIndex = -- this._nActiveControlInterpolants,$/;"	r
firstInactiveIndex	js/three.js	/^			action._cacheIndex = firstInactiveIndex;$/;"	r
firstInactiveIndex	js/three.js	/^			binding._cacheIndex = firstInactiveIndex;$/;"	r
firstInactiveIndex	js/three.js	/^			interpolant.__cacheIndex = firstInactiveIndex;$/;"	r
firstPoint	js/three.js	/^				var firstPoint = curve.getPoint( 0 );$/;"	r
firstValidIndex	js/three.js	/^			var firstValidIndex = this._targetGroup.nCachedObjects_,$/;"	r
fl	js/three.js	/^					for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	js/three.js	/^					for ( var f = 0, fl = faces.length; f < fl; f ++ ) {$/;"	r
fl	js/three.js	/^				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	js/three.js	/^			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	js/three.js	/^			for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {$/;"	r
fl	js/three.js	/^			var f, fl = this.lensFlares.length;$/;"	r
flamingo_run1_003	js/three.js	/^			\/\/ such flamingo_flyA_003, flamingo_run1_003, crdeath0059$/;"	r
flare	js/three.js	/^				flare = this.lensFlares[ f ];$/;"	r
flare	js/three.js	/^				var flare = flares[ i ];$/;"	r
flare	js/three.js	/^			var flare;$/;"	r
flareRenderer	js/three.js	/^			flareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );$/;"	r
flareRenderer	js/three.js	/^		var flareRenderer, spriteRenderer;$/;"	r
flaresArray	js/three.js	/^		var flaresArray = [];$/;"	r
flatShading	js/GLTFLoader.js	/^							material.flatShading = true;$/;"	r
flatShading	js/three.js	/^					material.flatShading === true ) {$/;"	r
flatShading	js/three.js	/^					this.flatShading = ( newValue === FlatShading ) ? true : false;$/;"	r
flatShading	js/three.js	/^				flatShading: material.flatShading,$/;"	r
flatShading	js/three.js	/^				this.flatShading = ( value === FlatShading );$/;"	r
flatShading	js/three.js	/^			if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;$/;"	r
flatShading	js/three.js	/^			if ( this.flatShading === true ) data.flatShading = this.flatShading;$/;"	r
flatShading	js/three.js	/^			this.flatShading = source.flatShading;$/;"	r
flatShading	js/three.js	/^		this.flatShading = false;$/;"	r
flatShading	js/three.min.js	/^wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new H}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=1===a}}});Object.defineProperties(Ia.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");$/;"	r
flatSize	js/three.js	/^					var flatSize = dstOffset + nPlanes * 4,$/;"	r
flatten	js/three.js	/^	function flatten( array, nBlocks, blockSize ) {$/;"	r
flattenJSON	js/three.js	/^		flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {$/;"	r
flattenToArrayOffset	js/three.js	/^		flattenToArrayOffset: function ( array, offset ) {$/;"	r
flattenToArrayOffset	js/three.min.js	/^Object.assign(K.prototype,{extractPosition:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)},flattenToArrayOffset:function(a,b){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(a,b)},getPosition:function(){var a;return function(){void 0===a&&(a=new p);console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");$/;"	r
flen	js/three.js	/^			face, flen = faces.length;$/;"	r
flipEnvMap	js/three.js	/^			flipEnvMap: { value: - 1 },$/;"	r
flipSided	js/three.js	/^				currentFlipSided = flipSided;$/;"	r
flipY	js/GLTFLoader.js	/^			texture.flipY = false;$/;"	r
flipY	js/three.js	/^					if ( data.flipY !== undefined ) texture.flipY = data.flipY;$/;"	r
flipY	js/three.js	/^				flipY: this.flipY$/;"	r
flipY	js/three.js	/^			this.flipY = source.flipY;$/;"	r
flipY	js/three.js	/^		this.flipY = false;$/;"	r
flipY	js/three.js	/^		this.flipY = true;$/;"	r
floatFragmentTextures	js/three.js	/^			floatFragmentTextures: floatFragmentTextures,$/;"	r
floatFragmentTextures	js/three.js	/^		var floatFragmentTextures = !! extensions.get( 'OES_texture_float' );$/;"	r
floatVertexTextures	js/three.js	/^			floatVertexTextures: floatVertexTextures$/;"	r
floatVertexTextures	js/three.js	/^		var floatVertexTextures = vertexTextures && floatFragmentTextures;$/;"	r
floor	js/three.js	/^		floor: function () {$/;"	r
floorPowerOfTwo	js/three.js	/^		floorPowerOfTwo: function ( value ) {$/;"	r
fn	js/GLTFLoader.js	/^				_dependencies[ dependency ] = fn;$/;"	r
fn	js/GLTFLoader.js	/^				var fn = this[ fnName ]();$/;"	r
fnName	js/GLTFLoader.js	/^			var fnName = 'load' + dependency.charAt( 0 ).toUpperCase() + dependency.slice( 1 );$/;"	r
fnName	js/GLTFLoader.js	/^			var fnName = 'load' + type.charAt( 0 ).toUpperCase() + type.slice( 1 );$/;"	r
fns	js/GLTFLoader.js	/^		var fns = [];$/;"	r
focus	js/three.js	/^						if ( data.focus !== undefined ) object.focus = data.focus;$/;"	r
focus	js/three.js	/^					focus = camera.focus;$/;"	r
focus	js/three.js	/^			data.object.focus = this.focus;$/;"	r
focus	js/three.js	/^			this.focus = source.focus;$/;"	r
focus	js/three.js	/^		this.focus = 10;$/;"	r
fog	js/GLTFLoader.js	/^					fog: true,$/;"	r
fog	js/three.js	/^								object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );$/;"	r
fog	js/three.js	/^								object.fog = new FogExp2( data.fog.color, data.fog.density );$/;"	r
fog	js/three.js	/^							fog: false$/;"	r
fog	js/three.js	/^				UniformsLib.fog$/;"	r
fog	js/three.js	/^				UniformsLib.fog,$/;"	r
fog	js/three.js	/^				fog: !! fog,$/;"	r
fog	js/three.js	/^				initMaterial( material, fog, object );$/;"	r
fog	js/three.js	/^			if ( json.fog !== undefined ) material.fog = json.fog;$/;"	r
fog	js/three.js	/^			materialProperties.fog = fog;$/;"	r
fog	js/three.js	/^			this.fog = source.fog;$/;"	r
fog	js/three.js	/^			var fog = scene.fog;$/;"	r
fog	js/three.js	/^			var program = setProgram( camera, fog, material, object );$/;"	r
fog	js/three.js	/^		fog: {$/;"	r
fog	js/three.js	/^		function initMaterial( material, fog, object ) {$/;"	r
fog	js/three.js	/^		function setProgram( camera, fog, material, object ) {$/;"	r
fog	js/three.js	/^		this.fog = false; \/\/ set to use scene fog$/;"	r
fog	js/three.js	/^		this.fog = false;$/;"	r
fog	js/three.js	/^		this.fog = null;$/;"	r
fog	js/three.js	/^		this.fog = true;$/;"	r
fog	js/three.js	/^		this.material = new MeshBasicMaterial( { wireframe: true, fog: false } );$/;"	r
fog	js/three.js	/^		this.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {$/;"	r
fog	js/three.js	/^		var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );$/;"	r
fog	js/three.js	/^		var material = new MeshBasicMaterial( { wireframe: true, fog: false } );$/;"	r
fog	js/three.min.js	/^a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new T({fog:!1});b=new C;b.addAttribute("position",new O(new Float32Array(15),3));this.line=new oa(b,a);this.add(this.line);this.update()}function oc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;a=new jb(b);a.rotateY(.5*Math.PI);this.material=new va({wireframe:!0,fog:!1});void 0===this.color&&(this.material.vertexColors=2);b=a.getAttribute("position");b=new Float32Array(3*$/;"	r
fogColor	js/three.js	/^				'		gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',$/;"	r
fogColor	js/three.js	/^				fogColor: gl.getUniformLocation( program, 'fogColor' ),$/;"	r
fogColor	js/three.js	/^			fogColor: { value: new Color( 0xffffff ) }$/;"	r
fogDensity	js/three.js	/^				fogDensity: gl.getUniformLocation( program, 'fogDensity' ),$/;"	r
fogDensity	js/three.js	/^			fogDensity: { value: 0.00025 },$/;"	r
fogDepth	js/three.js	/^				fogDepth: gl.getUniformLocation( program, 'fogDepth' ),$/;"	r
fogExp	js/three.js	/^				fogExp: ( fog && fog.isFogExp2 ),$/;"	r
fogFar	js/three.js	/^				'			fogFactor = smoothstep( fogNear, fogFar, fogDepth );',$/;"	r
fogFar	js/three.js	/^				fogFar: gl.getUniformLocation( program, 'fogFar' ),$/;"	r
fogFar	js/three.js	/^			fogFar: { value: 2000 },$/;"	r
fogFar	js/three.js	/^	var fog_fragment = "#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n";$/;"	r
fogFar	js/three.min.js	/^b.shaderSource(w,["precision "+e.precision+" float;","#define SHADER_NAME SpriteMaterial\\nuniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvarying float fogDepth;\\nvoid main() {\\n\\tvec4 texture = texture2D( map, vUV );\\n\\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\n\\tif ( gl_FragColor.a < alphaTest ) discard;\\n\\tif ( fogType > 0 ) {\\n\\t\\tfloat fogFactor = 0.0;\\n\\t\\tif ( fogType == 1 ) {\\n\\t\\t\\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t\\t} else {\\n\\t\\t\\tconst float LOG2 = 1.442695;\\n\\t\\t\\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );\\n\\t\\t\\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n\\t\\t}\\n\\t\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n\\t}\\n}"].join("\\n"));$/;"	r
fogFar	js/three.min.js	/^fogFar:{value:2E3},fogColor:{value:new H(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},$/;"	r
fogFar	js/three.min.js	/^fog_vertex:"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif",fog_pars_vertex:"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n",fog_fragment:"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n",fog_pars_fragment:"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n",$/;"	r
fogNear	js/three.js	/^				fogNear: gl.getUniformLocation( program, 'fogNear' ),$/;"	r
fogNear	js/three.js	/^			fogNear: { value: 1 },$/;"	r
fogType	js/three.js	/^					fogType = sceneFogType;$/;"	r
fogType	js/three.js	/^					oldFogType = fogType;$/;"	r
fogType	js/three.js	/^				fogType: gl.getUniformLocation( program, 'fogType' ),$/;"	r
fogType	js/three.js	/^				var fogType = 0;$/;"	r
fog_fragment	js/three.js	/^		fog_fragment: fog_fragment,$/;"	r
fog_fragment	js/three.js	/^	var fog_fragment = "#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n";$/;"	r
fog_pars_fragment	js/three.js	/^		fog_pars_fragment: fog_pars_fragment,$/;"	r
fog_pars_fragment	js/three.js	/^	var fog_pars_fragment = "#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n";$/;"	r
fog_pars_vertex	js/three.js	/^		fog_pars_vertex: fog_pars_vertex,$/;"	r
fog_pars_vertex	js/three.js	/^	var fog_pars_vertex = "#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n";$/;"	r
fog_pars_vertex	js/three.min.js	/^fog_vertex:"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif",fog_pars_vertex:"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n",fog_fragment:"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n",fog_pars_fragment:"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n",$/;"	r
fog_vertex	js/three.js	/^		fog_vertex: fog_vertex,$/;"	r
fog_vertex	js/three.js	/^	var fog_vertex = "\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif";$/;"	r
font	js/three.js	/^				var font = scope.parse( json );$/;"	r
font	js/three.js	/^		var font = parameters.font;$/;"	r
force	js/three.js	/^				force = true;$/;"	r
forceClear	js/three.js	/^				forceClear = true;$/;"	r
forceContextLoss	js/three.js	/^		this.forceContextLoss = function () {$/;"	r
forceContextRestore	js/three.js	/^		this.forceContextRestore = function () {$/;"	r
format	js/GLTFLoader.js	/^			texture.format = textureDef.format !== undefined ? WEBGL_TEXTURE_FORMATS[ textureDef.format ] : THREE.RGBAFormat;$/;"	r
format	js/three.js	/^								images[ f ].format = texDatas.format;$/;"	r
format	js/three.js	/^						format: texDatas.format,$/;"	r
format	js/three.js	/^						texture.format = texDatas.format;$/;"	r
format	js/three.js	/^					texture.format = texData.format;$/;"	r
format	js/three.js	/^					texture.format = texDatas.format;$/;"	r
format	js/three.js	/^					var textureFormat = texture.format;$/;"	r
format	js/three.js	/^				texture.format = isJPEG ? RGBFormat : RGBAFormat;$/;"	r
format	js/three.js	/^				this.texture.format = value;$/;"	r
format	js/three.js	/^			this.format = source.format;$/;"	r
format	js/three.js	/^		format = format !== undefined ? format : DepthFormat;$/;"	r
format	js/three.js	/^		format: {$/;"	r
format	js/three.js	/^		this.format = format !== undefined ? format : RGBAFormat;$/;"	r
format	js/three.min.js	/^return this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},$/;"	r
formats	js/three.js	/^					var formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );$/;"	r
forward_scan	js/three.js	/^						forward_scan: if ( ! ( t < t1 ) ) {$/;"	r
fov	js/three.js	/^					fov = camera.fov;$/;"	r
fov	js/three.js	/^				camera.fov = fov;$/;"	r
fov	js/three.js	/^				this.shadow.camera.fov = value;$/;"	r
fov	js/three.js	/^			data.object.fov = this.fov;$/;"	r
fov	js/three.js	/^			this.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );$/;"	r
fov	js/three.js	/^			this.fov = source.fov;$/;"	r
fov	js/three.js	/^			var fov = _Math.RAD2DEG * 2 * light.angle;$/;"	r
fov	js/three.js	/^		this.fov = fov !== undefined ? fov : 50;$/;"	r
fov	js/three.js	/^		var fov = 90, aspect = 1;$/;"	r
fov	js/three.min.js	/^this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");$/;"	r
fov	js/three.min.js	/^this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()\/a;this.fov=2*R.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*R.DEG2RAD*this.fov);return.5*this.getFilmHeight()\/a},getEffectiveFOV:function(){return 2*R.RAD2DEG*Math.atan(Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,$/;"	r
fps	js/three.js	/^				clips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );$/;"	r
fps	js/three.js	/^			var fps = animation.fps || 30;$/;"	r
fps	js/three.js	/^		CreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {$/;"	r
fragDepth	js/three.js	/^			fragDepth: false, \/\/ set to use fragment depth values$/;"	r
fragDepth	js/three.min.js	/^!1;this.setValues(a)}function Aa(a){Q.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}";this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,$/;"	r
fragmentGlsl	js/three.js	/^		var fragmentGlsl = prefixFragment + fragmentShader;$/;"	r
fragmentLog	js/three.js	/^		var fragmentLog = gl.getShaderInfoLog( glFragmentShader );$/;"	r
fragmentShader	js/GLTFLoader.js	/^					fragmentShader: params.fragmentShader,$/;"	r
fragmentShader	js/GLTFLoader.js	/^				params.fragmentShader = fragmentShader;$/;"	r
fragmentShader	js/GLTFLoader.js	/^				var fragmentShader = shader.fragmentShader$/;"	r
fragmentShader	js/three.js	/^							fragmentShader: ShaderLib.cube.fragmentShader,$/;"	r
fragmentShader	js/three.js	/^						fragmentShader: material.fragmentShader$/;"	r
fragmentShader	js/three.js	/^						fragmentShader: shader.fragmentShader$/;"	r
fragmentShader	js/three.js	/^				fragmentShader: [$/;"	r
fragmentShader	js/three.js	/^				fragmentShader: {$/;"	r
fragmentShader	js/three.js	/^			fragmentShader = unrollLoops( fragmentShader );$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.cube_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.depth_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.distanceRGBA_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.equirect_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.linedashed_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.meshbasic_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.meshlambert_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.meshphong_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.meshphysical_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.normal_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.points_frag$/;"	r
fragmentShader	js/three.js	/^			fragmentShader: ShaderChunk.shadow_frag$/;"	r
fragmentShader	js/three.js	/^			if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;$/;"	r
fragmentShader	js/three.js	/^			var fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );$/;"	r
fragmentShader	js/three.js	/^		data.fragmentShader = this.fragmentShader;$/;"	r
fragmentShader	js/three.js	/^		fragmentShader = parseIncludes( fragmentShader );$/;"	r
fragmentShader	js/three.js	/^		fragmentShader = replaceLightNums( fragmentShader, parameters );$/;"	r
fragmentShader	js/three.js	/^		fragmentShader: ShaderChunk.meshphysical_frag$/;"	r
fragmentShader	js/three.js	/^		this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';$/;"	r
fragmentShader	js/three.js	/^		this.fragmentShader = glFragmentShader;$/;"	r
fragmentShader	js/three.js	/^		this.fragmentShader = source.fragmentShader;$/;"	r
fragmentShader	js/three.js	/^		var fragmentShader = shader.fragmentShader;$/;"	r
fragmentShader	js/three.min.js	/^fragmentShader:"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\n\\tif ( renderType == 0 ) {\\n\\t\\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n\\t} else if ( renderType == 1 ) {\\n\\t\\tgl_FragColor = texture2D( map, vUV );\\n\\t} else {\\n\\t\\tvec4 texture = texture2D( map, vUV );\\n\\t\\ttexture.a *= opacity * vVisibility;\\n\\t\\tgl_FragColor = texture;\\n\\t\\tgl_FragColor.rgb *= color;\\n\\t}\\n}"},z=b.createProgram(),$/;"	r
fragmentShader	js/three.min.js	/^fragmentShader:V.shadow_frag}};ib.physical={uniforms:Ea.merge([ib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:V.meshphysical_vert,fragmentShader:V.meshphysical_frag};Object.assign(kd.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new D;return function(b,c){c=a.copy(c).multiplyScalar(.5);$/;"	r
fragmentShader	js/three.min.js	/^fragmentShader:a.fragmentShader},a.onBeforeCompile(d.shader),h=oa.acquireProgram(a,d.shader,c,g),d.program=h,a.program=h);c=h.getAttributes();if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<M.maxMorphTargets;g++)0<=c["morphTarget"+g]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(g=a.numSupportedMorphNormals=0;g<M.maxMorphNormals;g++)0<=c["morphNormal"+g]&&a.numSupportedMorphNormals++;c=d.shader.uniforms;if(!a.isShaderMaterial&&!a.isRawShaderMaterial||!0===a.clipping)d.numClippingPlanes=$/;"	r
frame	js/three.js	/^				frame: 0,$/;"	r
frame	js/three.js	/^				updateList[ buffergeometry.id ] = frame;$/;"	r
frame	js/three.js	/^			var frame = infoRender.frame;$/;"	r
frameData	js/three.js	/^			frameData = new window.VRFrameData();$/;"	r
frameData	js/three.js	/^		var frameData = null;$/;"	r
frameTime	js/three.js	/^				frameTime = 1.0 \/ ( json.fps || 1.0 );$/;"	r
framebuffer	js/three.js	/^					framebuffer = __webglFramebuffer;$/;"	r
framebuffer	js/three.js	/^					framebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];$/;"	r
framebuffer	js/three.js	/^				_currentFramebuffer = framebuffer;$/;"	r
framebuffer	js/three.js	/^			var framebuffer = null;$/;"	r
framebuffer	js/three.js	/^			var framebuffer = properties.get( renderTarget ).__webglFramebuffer;$/;"	r
frames	js/three.js	/^		var frames = path.computeFrenetFrames( tubularSegments, closed );$/;"	r
from	js/three.js	/^				from = 0,$/;"	r
from	js/three.js	/^				if ( from >= to ) to = Math.max( to, 1 ), from = to - 1;$/;"	r
from	js/three.js	/^				this.times = AnimationUtils.arraySlice( times, from, to );$/;"	r
from	js/three.js	/^		arraySlice: function ( array, from, to ) {$/;"	r
from2other	js/three.js	/^					\/\/ console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );$/;"	r
from2other	js/three.js	/^					\/\/ console.log( "from2to: 180 deg., from2other: " + from2otherAngle  );$/;"	r
from2otherAngle	js/three.js	/^				var from2otherAngle	= legFromPtX * otherPtY - legFromPtY * otherPtX;$/;"	r
from2toAngle	js/three.js	/^				var from2toAngle	= legFromPtX * legToPtY - legFromPtY * legToPtX;$/;"	r
fromArray	js/three.js	/^		fromArray: function ( array ) {$/;"	r
fromArray	js/three.js	/^		fromArray: function ( array, offset ) {$/;"	r
fromArray	js/three.min.js	/^a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;16>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a}});Object.assign(X,{slerp:function(a,b,c,d){return c.copy(a).slerp(b,$/;"	r
fromArray	js/three.min.js	/^this._w=f*g+this._w*b;this._x=c*g+this._x*b;this._y=d*g+this._y*b;this._z=e*g+this._z*b;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=$/;"	r
fromAttribute	js/three.js	/^		fromAttribute: function ( attribute, index, offset ) {$/;"	r
fromBufferAttribute	js/three.js	/^		fromBufferAttribute: function ( attribute, index, offset ) {$/;"	r
fromBufferAttribute	js/three.min.js	/^[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);return this}});Object.assign(ta.prototype,{isMatrix3:!0,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[1]=d;l[2]=g;l[3]=b;l[4]=e;l[5]=h;l[6]=c;l[7]=f;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},$/;"	r
fromBufferGeometry	js/three.js	/^		fromBufferGeometry: function ( geometry ) {$/;"	r
fromBufferGeometry	js/three.min.js	/^a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[q[a].clone(),q[b].clone(),q[d].clone()]:[],u=void 0!==h?[c.colors[a].clone(),c.colors[b].clone(),c.colors[d].clone()]:[];e=new Oa(a,b,d,f,u,e);c.faces.push(e);void 0!==k&&c.faceVertexUvs[0].push([n[a].clone(),n[b].clone(),n[d].clone()]);void 0!==l&&c.faceVertexUvs[1].push([m[a].clone(),m[b].clone(),m[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,$/;"	r
fromDirectGeometry	js/three.js	/^		fromDirectGeometry: function ( geometry ) {$/;"	r
fromGeometry	js/three.js	/^		fromGeometry: function ( geometry ) {$/;"	r
fromGeometry	js/three.min.js	/^!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=b.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new Je).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=$/;"	r
fromGeometry	js/three.min.js	/^eb;z.prototype=Object.create(O.prototype);z.prototype.constructor=z;yc.prototype=Object.create(O.prototype);yc.prototype.constructor=yc;Object.assign(Je.prototype,{computeGroups:function(a){var b=[],c=void 0;a=a.faces;for(var d=0;d<a.length;d++){var e=a[d];if(e.materialIndex!==c){c=e.materialIndex;void 0!==f&&(f.count=3*d-f.start,b.push(f));var f={start:3*d,materialIndex:c}}}void 0!==f&&(f.count=3*d-f.start,b.push(f));this.groups=b},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,$/;"	r
fromPoints	js/three.js	/^		fromPoints: function ( vectors ) {$/;"	r
frustumCulled	js/three.js	/^			this.frustumCulled = source.frustumCulled;$/;"	r
frustumCulled	js/three.js	/^		this.frustumCulled = true;$/;"	r
fullHeight	js/three.js	/^					fullHeight = view.fullHeight;$/;"	r
fullHeight	js/three.js	/^					fullHeight: 1,$/;"	r
fullHeight	js/three.js	/^			this.view.fullHeight = fullHeight;$/;"	r
fullHeight	js/three.js	/^		 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );$/;"	r
fullHeight	js/three.js	/^		 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );$/;"	r
fullHeight	js/three.js	/^		 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );$/;"	r
fullHeight	js/three.js	/^		 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );$/;"	r
fullHeight	js/three.js	/^		 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );$/;"	r
fullHeight	js/three.js	/^		 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );$/;"	r
fullHeight	js/three.js	/^		setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {$/;"	r
fullPath	js/three.js	/^					var fullPath = texturePath + path;$/;"	r
fullWidth	js/three.js	/^					fullWidth: 1,$/;"	r
fullWidth	js/three.js	/^				var fullWidth = view.fullWidth,$/;"	r
fullWidth	js/three.js	/^			this.view.fullWidth = fullWidth;$/;"	r
fullWidth	js/three.min.js	/^1)},getFilmHeight:function(){return this.filmGauge\/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a\/b;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},$/;"	r
fullWidth	js/three.min.js	/^a,b);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},$/;"	r
func	js/three.js	/^			func: func,$/;"	r
fvA	js/three.js	/^								intersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );$/;"	r
fvA	js/three.js	/^							fvA = vA;$/;"	r
fvA	js/three.js	/^						fvA = vertices[ face.a ];$/;"	r
fvA	js/three.js	/^					var fvA, fvB, fvC;$/;"	r
fvB	js/three.js	/^							fvB = vB;$/;"	r
fvB	js/three.js	/^						fvB = vertices[ face.b ];$/;"	r
fvC	js/three.js	/^							fvC = vC;$/;"	r
fvC	js/three.js	/^						fvC = vertices[ face.c ];$/;"	r
g	js/three.js	/^							this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) \/ 100;$/;"	r
g	js/three.js	/^							this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) \/ 255;$/;"	r
g	js/three.js	/^						gl.clearColor( r, g, b, a );$/;"	r
g	js/three.js	/^					color.set( r, g, b, a );$/;"	r
g	js/three.js	/^					this.g = hue2rgb( q, p, h );$/;"	r
g	js/three.js	/^					this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) \/ 255;$/;"	r
g	js/three.js	/^					this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) \/ 255;$/;"	r
g	js/three.js	/^				array[ offset ++ ] = color.g;$/;"	r
g	js/three.js	/^				g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];$/;"	r
g	js/three.js	/^				setClear: function ( r, g, b, a, premultipliedAlpha ) {$/;"	r
g	js/three.js	/^			array[ offset + 1 ] = this.g;$/;"	r
g	js/three.js	/^			state.ambient[ 1 ] = g;$/;"	r
g	js/three.js	/^			this.g *= color.g;$/;"	r
g	js/three.js	/^			this.g += color.g;$/;"	r
g	js/three.js	/^			this.g = ( hex >> 8 & 255 ) \/ 255;$/;"	r
g	js/three.js	/^			this.g = Math.max( 0, this.g - color.g );$/;"	r
g	js/three.js	/^			this.g = Math.pow( color.g, gammaFactor );$/;"	r
g	js/three.js	/^			this.g = Math.pow( color.g, safeInverse );$/;"	r
g	js/three.js	/^			this.g = Math.sqrt( this.g );$/;"	r
g	js/three.js	/^			this.g = array[ offset + 1 ];$/;"	r
g	js/three.js	/^			this.g = color.g;$/;"	r
g	js/three.js	/^			this.g = color1.g + color2.g;$/;"	r
g	js/three.js	/^			this.g = g * g;$/;"	r
g	js/three.js	/^			this.g = g;$/;"	r
g	js/three.js	/^			this.g = scalar;$/;"	r
g	js/three.js	/^			var max = Math.max( r, g, b );$/;"	r
g	js/three.js	/^			var min = Math.min( r, g, b );$/;"	r
g	js/three.js	/^		return this.setRGB( r, g, b );$/;"	r
g	js/three.js	/^		setRGB: function ( r, g, b ) {$/;"	r
g	js/three.js	/^	function Color( r, g, b ) {$/;"	r
g	js/three.min.js	/^!1;break a}}}y=!0}}if(y){d.push([a[e[k]],a[e[g]],a[e[l]]]);f.push([e[k],e[g],e[l]]);k=g;for(l=g+1;l<c;k++,l++)e[k]=e[l];c--;h=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a){var b=a.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function d(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-c.x,l=e.y-c.y,m=a.x-c.x,n=a.y-c.y,q=h*k-g*l,p=h*m-g*n;if(Math.abs(q)>Number.EPSILON){if(0<$/;"	r
g	js/three.min.js	/^!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var q=[],n=[],u=[],m=[],v=0,t=[],x=c\/2,y=0;(function(){var f,k,r=new p,J=new p,w=0,z=(b-a)\/c;for(k=0;k<=e;k++){var D=[],C=k\/e,E=C*(b-a)+a;for(f=0;f<=d;f++){var H=f\/d,M=H*h+g,L=Math.sin(M),M=Math.cos(M);J.x=E*L;J.y=-C*c+x;J.z=E*M;n.push(J.x,J.y,J.z);r.set(L,z,M).normalize();u.push(r.x,r.y,r.z);m.push(H,1-C);D.push(v++)}t.push(D)}for(f=0;f<d;f++)for(k=0;k<e;k++)r=t[k+1][f],J=t[k+1][f+1],z=t[k][f+1],q.push(t[k][f],r,z),q.push(r,J,z),w+=6;l.addGroup(y,w,0);$/;"	r
g	js/three.min.js	/^!a.frustumCulled||Td.intersectsObject(a)){c&&Jb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(md);var d=ta.update(a),e=a.material;if(Array.isArray(e))for(var f=d.groups,g=0,h=f.length;g<h;g++){var l=f[g],n=e[l.materialIndex];n&&n.visible&&D.push(a,d,n,Jb.z,l)}else e.visible&&D.push(a,d,e,Jb.z,null)}a=a.children;g=0;for(h=a.length;g<h;g++)k(a[g],b,c)}}function l(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,l=g.geometry,k=void 0===d?g.material:d,g=g.group;if(c.isArrayCamera){Z=$/;"	r
g	js/three.min.js	/^(h.push(e),k.push(k[0]));f.push((new fc(".morphTargetInfluences["+b[g].name+"]",h,k)).scale(1\/c))}return new ra(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(a=0;a<c.length;a++)if(c[a].name===b)return c[a];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d,e={},f=\/^([\\w-]*?)([\\d]+)$\/,g=0,h=a.length;g<h;g++){var k=a[g],l=k.name.match(f);l&&1<l.length&&(d=l[1],(l=e[d])||(e[d]=l=[]),l.push(k))}a=[];for(d in e)a.push(ra.CreateFromMorphTargetSequence(d,$/;"	r
g	js/three.min.js	/^0,l),h.push(n.r,n.g,n.b)}a=new C;a.addAttribute("position",new z(g,3));a.addAttribute("color",new z(h,3));g=new T({vertexColors:2});P.call(this,a,g)}function dd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?b=c.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,$/;"	r
g	js/three.min.js	/^0;d!==e;++d)a[b+d]=a[c+d]},_slerp:function(a,b,c,d){X.slerpFlat(a,b,a,b,a,c,d)},_lerp:function(a,b,c,d,e){for(var f=1-d,g=0;g!==e;++g){var h=b+g;a[h]=a[h]*f+a[c+g]*d}}});Object.assign(Ve.prototype,{getValue:function(a,b){this.bind();var c=this._bindings[this._targetGroup.nCachedObjects_];void 0!==c&&c.getValue(a,b)},setValue:function(a,b){for(var c=this._bindings,d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,$/;"	r
g	js/three.min.js	/^1]+=q.y;e[v+2]+=q.z;e[t]+=q.x;e[t+1]+=q.y;e[t+2]+=q.z;e[x]+=q.x;e[x+1]+=q.y;e[x+2]+=q.z}}}else for(f=0,g=d.length;f<g;f+=9)h.fromArray(d,f),k.fromArray(d,f+3),l.fromArray(d,f+6),q.subVectors(l,k),n.subVectors(h,k),q.cross(n),e[f]=q.x,e[f+1]=q.y,e[f+2]=q.z,e[f+3]=q.x,e[f+4]=q.y,e[f+5]=q.z,e[f+6]=q.x,e[f+7]=q.y,e[f+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(a&&a.isBufferGeometry){void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=$/;"	r
g	js/three.min.js	/^C=g;E=h;U=k}if(w=b(this,w,u,e,C,E,U,x))I&&I[H]&&(K=I[H],m.copy(K[0]),r.copy(K[1]),v.copy(K[2]),w.uv=a(x,C,E,U,m,r,v)),w.face=N,w.faceIndex=H,p.push(w)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});var ig=0;Y.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Y,isPerspectiveCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,a,b);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;$/;"	r
g	js/three.min.js	/^MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},g="precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering".split(" ");$/;"	r
g	js/three.min.js	/^P.call(this,b,c)}function Kd(a,b,c,d,e,f){a=a||10;b=b||16;c=c||8;d=d||64;e=new H(void 0!==e?e:4473924);f=new H(void 0!==f?f:8947848);var g=[],h=[],k;for(k=0;k<=b;k++){var l=k\/b*2*Math.PI;var q=Math.sin(l)*a;l=Math.cos(l)*a;g.push(0,0,0);g.push(q,0,l);var n=k&1?e:f;h.push(n.r,n.g,n.b);h.push(n.r,n.g,n.b)}for(k=0;k<=c;k++){n=k&1?e:f;var u=a-a\/c*k;for(b=0;b<d;b++)l=b\/d*2*Math.PI,q=Math.sin(l)*u,l=Math.cos(l)*u,g.push(q,0,l),h.push(n.r,n.g,n.b),l=(b+1)\/d*2*Math.PI,q=Math.sin(l)*u,l=Math.cos(l)*u,g.push(q,$/;"	r
g	js/three.min.js	/^a),g=0;g<f.length;g++){var h=f[g];c&&c.equals(h)||(b.push(h),c=h)}this.autoClose&&1<b.length&&!b[b.length-1].equals(b[0])&&b.push(b[0]);return b}});Sa.prototype=Object.create(ca.prototype);Sa.prototype.constructor=Sa;Sa.prototype.isEllipseCurve=!0;Sa.prototype.getPoint=function(a,b){b=b||new D;for(var c=2*Math.PI,d=this.aEndAngle-this.aStartAngle,e=Math.abs(d)<Number.EPSILON;0>d;)d+=c;for(;d>c;)d-=c;d<Number.EPSILON&&(d=e?0:c);!0!==this.aClockwise||e||(d=d===c?-c:d-c);c=this.aStartAngle+a*d;a=this.aX+$/;"	r
g	js/three.min.js	/^a.isColor?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a;return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)\/255;this.g=(a>>8&255)\/255;this.b=(a&255)\/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&--d;return d<1\/6?a+6*(c-a)*d:.5>d?c:d<2\/3?a+6*(c-a)*(2\/3-d):a}return function(b,c,d){b=R.euclideanModulo(b,$/;"	r
g	js/three.min.js	/^a;g=2*b-c;break;case 2402:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a;h=2*c-b;break;case 2402:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a\/(b-g);this._weightNext=a\/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,k=this._offsetPrev,l=this._offsetNext,m=this._weightPrev,n=this._weightNext,$/;"	r
g	js/three.min.js	/^a;this.g+=a;this.b+=a;return this},sub:function(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=$/;"	r
g	js/three.min.js	/^a=void 0);this.manager=void 0!==a?a:wa;this.withCredentials=!1}function Re(a){this.manager=void 0!==a?a:wa;this.texturePath=""}function Se(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);var f=a*a;return(2*c-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function ub(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}function vb(a,b,c,d,e){var f=1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}function ca(){this.type="Curve";this.arcLengthDivisions=200}function Ma(a,b){ca.call(this);this.type="LineCurve";this.v1=a;$/;"	r
g	js/three.min.js	/^b;c++)if(a=this.bones[c])a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new K,b=new K;return function(){for(var c=this.bones,d=this.boneInverses,e=this.boneMatrices,f=this.boneTexture,g=0,h=c.length;g<h;g++)a.multiplyMatrices(c[g]?c[g].matrixWorld:b,d[g]),a.toArray(e,16*g);void 0!==f&&(f.needsUpdate=!0)}}(),clone:function(){return new Dc(this.bones,$/;"	r
g	js/three.min.js	/^c+" extension not supported.");return b[c]=d}}}function qg(){function a(){l.value!==d&&(l.value=d,l.needsUpdate=0<e);c.numPlanes=e;c.numIntersection=0}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=l.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;k.getNormalMatrix(b);if(null===g||g.length<e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,k),h.normal.toArray(g,d),g[d+3]=h.constant}l.value=g;l.needsUpdate=!0}c.numPlanes=f;return g}var c=this,d=null,$/;"	r
g	js/three.min.js	/^c.isLineBasicMaterial?(q.diffuse.value=c.color,q.opacity.value=c.opacity,c.isLineDashedMaterial&&(q.dashSize.value=c.dashSize,q.totalSize.value=c.dashSize+c.gapSize,q.scale.value=c.scale)):c.isPointsMaterial?(q.diffuse.value=c.color,q.opacity.value=c.opacity,q.size.value=c.size*P,q.scale.value=.5*ea,q.map.value=c.map,null!==c.map&&(!0===c.map.matrixAutoUpdate&&(b=c.map.offset,g=c.map.repeat,h=c.map.center,c.map.matrix.setUvTransform(b.x,b.y,g.x,g.y,c.map.rotation,h.x,h.y)),q.uvTransform.value.copy(c.map.matrix))):$/;"	r
g	js/three.min.js	/^c.skinIndices.length!==c.vertices.length)&&console.warn("When skinning, number of vertices ("+c.vertices.length+"), skinIndices ("+c.skinIndices.length+"), and skinWeights ("+c.skinWeights.length+") should match.");g=a;h=g.scale;if(void 0!==g.morphTargets)for(d=0,r=g.morphTargets.length;d<r;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=g.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,m=g.morphTargets[d].vertices,u=0,k=m.length;u<k;u+=3)n=new p,n.x=m[u]*h,n.y=$/;"	r
g	js/three.min.js	/^c?this.setHex(c):console.warn("THREE.Color: Unknown color "+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);b=0<b?1\/b:1;this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},convertGammaToLinear:function(){var a=$/;"	r
g	js/three.min.js	/^d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.copy(this);c=1\/g;var f=1\/h,l=1\/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makePerspective:function(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");$/;"	r
g	js/three.min.js	/^e;f++){var g=this.vertices[f];g=Math.round(g.x*d)+"_"+Math.round(g.y*d)+"_"+Math.round(g.z*d);void 0===a[g]?(a[g]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[g]]}a=[];f=0;for(e=this.faces.length;f<e;f++)for(d=this.faces[f],d.a=c[d.a],d.b=c[d.b],d.c=c[d.c],d=[d.a,d.b,d.c],g=0;3>g;g++)if(d[g]===d[(g+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(d=a[f],this.faces.splice(d,1),c=0,e=this.faceVertexUvs.length;c<e;c++)this.faceVertexUvs[c].splice(d,1);f=this.vertices.length-b.length;this.vertices=$/;"	r
g	js/three.min.js	/^e[d],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];S.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var m=0;m<k[l].morphTargets.length;m++)f[k[l].morphTargets[m]]=$/;"	r
g	js/three.min.js	/^function e(c,g,h,k){var l;if(!1!==c.visible){if(c.layers.test(g.layers)&&(c.isMesh||c.isLine||c.isPoints)&&c.castShadow&&(!c.frustumCulled||f.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,c.matrixWorld);var n=b.update(c),u=c.material;if(Array.isArray(u))for(var r=n.groups,m=0,B=r.length;m<B;m++){var v=r[m];(l=u[v.materialIndex])&&l.visible&&(l=d(c,l,k,q,h.near,h.far),a.renderBufferDirect(h,null,n,l,c,v))}else u.visible&&(l=d(c,u,k,q,h.near,h.far),a.renderBufferDirect(h,$/;"	r
g	js/three.min.js	/^g,h){for(var k,l=0,q=0,n=0,u=0,r=0,m=0,t=0,x=0,p=h.matrixWorldInverse,B=0,I=f.length;B<I;B++){var A=f[B];k=A.color;var J=A.intensity,ya=A.distance,ja=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)l+=k.r*J,q+=k.g*J,n+=k.b*J;else if(A.isDirectionalLight){h=a.get(A);h.color.copy(A.color).multiplyScalar(A.intensity);h.direction.setFromMatrixPosition(A.matrixWorld);c.setFromMatrixPosition(A.target.matrixWorld);h.direction.sub(c);h.direction.transformDirection(p);if(h.shadow=A.castShadow)k=$/;"	r
g	js/three.min.js	/^g,h){this.absellipse(a+this.currentPoint.x,b+this.currentPoint.y,c,d,e,f,g,h)},absellipse:function(a,b,c,d,e,f,g,h){a=new Sa(a,b,c,d,e,f,g,h);0<this.curves.length&&(b=a.getPoint(0),b.equals(this.currentPoint)||this.lineTo(b.x,b.y));this.curves.push(a);a=a.getPoint(1);this.currentPoint.copy(a)}});Zc.prototype=se;se.constructor=Zc;zb.prototype=Object.assign(Object.create(se),{constructor:zb,getPointsHoles:function(a){for(var b=[],c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},$/;"	r
g	js/three.min.js	/^g,m)}f[h]=n;a[h].resultBuffer=n.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){var b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]);this._addInactiveAction(a,c,b)}b=a._propertyBindings;c=0;for(d=b.length;c!==d;++c){var e=b[c];0===e.useCount++&&(this._lendBinding(e),e.saveOriginalState())}this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){for(var b=a._propertyBindings,$/;"	r
g	js/three.min.js	/^g,q.pointLights.needsUpdate=g,q.spotLights.needsUpdate=g,q.rectAreaLights.needsUpdate=g,q.hemisphereLights.needsUpdate=g),b&&c.fog&&(q.fogColor.value=b.color,b.isFog?(q.fogNear.value=b.near,q.fogFar.value=b.far):b.isFogExp2&&(q.fogDensity.value=b.density)),c.isMeshBasicMaterial?r(q,c):c.isMeshLambertMaterial?(r(q,c),c.emissiveMap&&(q.emissiveMap.value=c.emissiveMap)):c.isMeshPhongMaterial?(r(q,c),c.isMeshToonMaterial?(m(q,c),c.gradientMap&&(q.gradientMap.value=c.gradientMap)):m(q,c)):c.isMeshStandardMaterial?$/;"	r
g	js/three.min.js	/^g;c<=k&&(k=0);g=k+1;c<=g&&(g=0);var l=g+1;c<=l&&(l=0);a:{var m;var n=a[e[k]].x;var p=a[e[k]].y;var r=a[e[g]].x;var v=a[e[g]].y;var t=a[e[l]].x;var x=a[e[l]].y;if(0>=(r-n)*(x-p)-(v-p)*(t-n))var y=!1;else{var B=t-r;var w=x-v;var A=n-t;var z=p-x;var D=r-n;y=v-p;for(m=0;m<c;m++){var C=a[e[m]].x;var E=a[e[m]].y;if(!(C===n&&E===p||C===r&&E===v||C===t&&E===x)){var H=C-n;var K=E-p;var L=C-r;var M=E-v;C-=t;E-=x;M=B*M-w*L;K=D*K-y*H;C=A*E-z*C;if(M>=-Number.EPSILON&&C>=-Number.EPSILON&&K>=-Number.EPSILON){y=$/;"	r
g	js/three.min.js	/^g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e\/f,k)}}(),applyMatrix4:function(a){this.origin.applyMatrix4(a);this.direction.transformDirection(a);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}});Object.assign(Ib.prototype,{set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);$/;"	r
g	js/three.min.js	/^g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var q=[],n=[],m=[],r=e=0;e<f.length;e+=3,r+=2)c.vertices.push(new p(f[e],f[e+1],f[e+2])),void 0!==g&&q.push(new p(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new H(h[e],h[e+1],h[e+2])),void 0!==k&&n.push(new D(k[r],k[r+1])),void 0!==l&&m.push(new D(l[r],l[r+1]));var v=a.groups;if(0<v.length)for(e=0;e<v.length;e++)for(var f=$/;"	r
g	js/three.min.js	/^g[c],this.addGroup(d.start,d.count,d.materialIndex);g=a.boundingBox;null!==g&&(this.boundingBox=g.clone());g=a.boundingSphere;null!==g&&(this.boundingSphere=g.clone());this.drawRange.start=a.drawRange.start;this.drawRange.count=a.drawRange.count;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Hb.prototype=Object.create(L.prototype);Hb.prototype.constructor=Hb;fb.prototype=Object.create(C.prototype);fb.prototype.constructor=fb;zc.prototype=Object.create(L.prototype);zc.prototype.constructor=$/;"	r
g	js/three.min.js	/^h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){C.call(this);this.type="WireframeGeometry";var b=[],c,d,e,f=[0,0],g={},h=["a","b","c"];if(a&&a.isGeometry){var k=a.faces;var l=0;for(d=k.length;l<d;l++){var q=k[l];for(c=0;3>c;c++){var n=q[h[c]];var u=q[h[(c+1)%3]];f[0]=Math.min(n,u);f[1]=Math.max(n,u);n=f[0]+","+f[1];void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]})}}for(n in g)l=g[n],h=a.vertices[l.index1],b.push(h.x,h.y,h.z),h=a.vertices[l.index2],b.push(h.x,h.y,h.z)}else if(a&&a.isBufferGeometry){var h=$/;"	r
g	js/three.min.js	/^if(null!==m)for(var v=m.array,g=0,t=v.length-1;g<t;g+=n)m=v[g+1],k.fromArray(r,3*v[g]),l.fromArray(r,3*m),m=b.distanceSqToSegment(k,l,q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}));else for(g=0,t=r.length\/3-1;g<t;g+=n)k.fromArray(r,3*g),l.fromArray(r,3*g+3),m=b.distanceSqToSegment(k,l,q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),$/;"	r
g	js/three.min.js	/^k\/(2-e-f);switch(e){case b:g=(c-d)\/k+(c<d?6:0);break;case c:g=(d-b)\/k+2;break;case d:g=(b-c)\/k+4}g\/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=$/;"	r
g	js/three.min.js	/^m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g.isGeometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=n)m=b.distanceSqToSegment(k[g],k[g+1],q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,$/;"	r
g	js/three.min.js	/^n),r.fromBufferAttribute(l,q),v.fromBufferAttribute(l,u),c.uv=a(x,g,h,k,m,r,v)),c.face=new Oa(n,q,u,Pa.normal(g,h,k)),c.faceIndex=n;return c}var d=new K,e=new hb,f=new Da,g=new p,h=new p,k=new p,l=new p,q=new p,n=new p,m=new D,r=new D,v=new D,t=new p,x=new p,y=new p;return function(u,p){var t=this.geometry,y=this.material,B=this.matrixWorld;if(void 0!==y&&(null===t.boundingSphere&&t.computeBoundingSphere(),f.copy(t.boundingSphere),f.applyMatrix4(B),!1!==u.ray.intersectsSphere(f)&&(d.getInverse(B),$/;"	r
g	js/three.min.js	/^outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||.5;b=b||1;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=[],h=[],k=[],l=[],q=a,n=(b-a)\/d,u=new p,m=new D,v,t;for(v=0;v<=d;v++){for(t=0;t<=c;t++)a=e+t\/c*f,u.x=q*Math.cos(a),u.y=q*Math.sin(a),h.push(u.x,u.y,u.z),k.push(0,0,1),m.x=(u.x\/b+1)\/2,m.y=(u.y\/b+1)\/2,l.push(m.x,m.y);q+=n}for(v=0;v<d;v++)for(b=v*(c+1),t=0;t<c;t++)a=t+b,e=a+c+1,f=a+c+2,q=a+1,g.push(a,e,q),g.push(e,$/;"	r
g	js/three.min.js	/^this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var e=d.geometry.getAttribute("color");b.copy(this.light.color);c.copy(this.light.groundColor);for(var f=0,g=e.count;f<g;f++){var h=f<g\/2?b:c;e.setXYZ(f,h.r,h.g,h.b)}e.needsUpdate=!0}d.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate())}}();cd.prototype=Object.create(P.prototype);cd.prototype.constructor=cd;Kd.prototype=Object.create(P.prototype);Kd.prototype.constructor=Kd;dd.prototype=Object.create(P.prototype);$/;"	r
g	js/three.min.js	/^this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)\/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k\/(e+f):$/;"	r
g	js/three.min.js	/^var e=b\/d.resolution,f=(d.boundingBox.yMax-d.boundingBox.yMin+d.underlineThickness)*e,g=0,h=0;b=[];for(var k=0;k<a.length;k++){var l=a[k];if("\\n"===l)g=0,h-=f;else{var m;var n=e;var p=g,r=h;if(l=d.glyphs[l]||d.glyphs["?"]){var v=new ce,t=[];if(l.o)for(var x=l._cachedOutline||(l._cachedOutline=l.o.split(" ")),w=0,z=x.length;w<z;)switch(x[w++]){case "m":var C=x[w++]*n+p;var A=x[w++]*n+r;v.moveTo(C,A);break;case "l":C=x[w++]*n+p;A=x[w++]*n+r;v.lineTo(C,A);break;case "q":var D=x[w++]*n+p;var E=x[w++]*$/;"	r
g	js/three.min.js	/^var g=this.elements;g[0]=2*e\/(b-a);g[4]=0;g[8]=(b+a)\/(b-a);g[12]=0;g[1]=0;g[5]=2*e\/(c-d);g[9]=(c+d)\/(c-d);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)\/(f-e);g[14]=-2*f*e\/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1\/(b-a),k=1\/(c-d),l=1\/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;$/;"	r
ga	js/three.min.js	/^b.compileShader(na);b.compileShader(w);b.attachShader(N,na);b.attachShader(N,w);b.linkProgram(N);ga=N;A=b.getAttribLocation(ga,"position");J=b.getAttribLocation(ga,"uv");f=b.getUniformLocation(ga,"uvOffset");g=b.getUniformLocation(ga,"uvScale");h=b.getUniformLocation(ga,"rotation");k=b.getUniformLocation(ga,"scale");l=b.getUniformLocation(ga,"color");q=b.getUniformLocation(ga,"map");n=b.getUniformLocation(ga,"opacity");u=b.getUniformLocation(ga,"modelViewMatrix");r=b.getUniformLocation(ga,"projectionMatrix");$/;"	r
gain	js/three.js	/^		this.gain = this.context.createGain();$/;"	r
gammaFactor	js/three.js	/^		this.gammaFactor = 2.0;	\/\/ for backwards compatibility$/;"	r
gammaFactor	js/three.min.js	/^!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var M=this,H=!1,ka=null,N=null,U=-1,L="",O=null,Z=null,Q=new ba,V=new ba,T=null,G=0,W=t.width,ea=t.height,P=1,ca=new ba(0,0,W,ea),da=new ba(0,0,W,ea),Oe=!1,Td=new ld,Fa=new qg,fa=!1,Ud=!1,md=new K,Jb=new p,Vd={geometries:0,textures:0},Qa={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:Qa,$/;"	r
gammaFactorDefine	js/three.js	/^		var gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;$/;"	r
gammaInput	js/three.js	/^		this.gammaInput = false;$/;"	r
gammaOutput	js/three.js	/^		this.gammaOutput = false;$/;"	r
gapSize	js/three.js	/^			if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;$/;"	r
gapSize	js/three.js	/^			if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;$/;"	r
gapSize	js/three.js	/^		this.gapSize = 1;$/;"	r
gapSize	js/three.js	/^		this.gapSize = source.gapSize;$/;"	r
gb	js/three.min.js	/^b,c,d));this.mergeVertices()}function gb(a,b,c,d){C.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a\/2,f=b\/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a\/c,l=b\/d,q=[],n=[],u=[],r=[];for(a=0;a<h;a++){var m=a*l-f;for(b=0;b<g;b++)n.push(b*k-e,-m,0),u.push(0,0,1),r.push(b\/c),r.push(1-a\/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,q.push(b+g*a,e,h),q.push(e,f,h);this.setIndex(q);this.addAttribute("position",$/;"	r
gbone	js/three.js	/^					gbone = this.geometry.bones[ i ];$/;"	r
gd	js/three.min.js	/^a))};gd.prototype=Object.create(oa.prototype);gd.prototype.constructor=gd;gd.prototype.updateMatrixWorld=function(a){var b=-this.plane.constant;1E-8>Math.abs(b)&&(b=1E-8);this.scale.set(.5*this.size,.5*this.size,b);this.lookAt(this.plane.normal);w.prototype.updateMatrixWorld.call(this,a)};var Ld,pe;Bb.prototype=Object.create(w.prototype);Bb.prototype.constructor=Bb;Bb.prototype.setDirection=function(){var a=new p,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,$/;"	r
gd	js/three.min.js	/^function gd(a,b,c){this.type="PlaneHelper";this.plane=a;this.size=void 0===b?1:b;a=void 0!==c?c:16776960;b=new C;b.addAttribute("position",new z([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));b.computeBoundingSphere();oa.call(this,b,new T({color:a}));b=new C;b.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3));b.computeBoundingSphere();this.add(new qa(b,new va({color:a,opacity:.2,transparent:!0,depthWrite:!1})))}function Bb(a,b,c,d,e,f){w.call(this);$/;"	r
ge	js/three.min.js	/^return c}});Object.assign(Te.prototype,{load:function(a,b,c,d){var e=this,f=new Ja(this.manager);f.setPath(this.path);f.load(a,function(a){try{var c=JSON.parse(a)}catch(k){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(a.substring(65,a.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new de(a)},setPath:function(a){this.path=a;return this}});var Md,ge={getContext:function(){void 0===Md&&(Md=new (window.AudioContext||$/;"	r
generateBufferData	js/three.js	/^		function generateBufferData() {$/;"	r
generateCap	js/three.js	/^		function generateCap( top ) {$/;"	r
generateDefines	js/three.js	/^	function generateDefines( defines ) {$/;"	r
generateExtensions	js/three.js	/^	function generateExtensions( extensions, parameters, rendererExtensions ) {$/;"	r
generateIndices	js/three.js	/^		function generateIndices() {$/;"	r
generateMipmaps	js/three.js	/^					texture.generateMipmaps = false;$/;"	r
generateMipmaps	js/three.js	/^				this.texture.generateMipmaps = value;$/;"	r
generateMipmaps	js/three.js	/^			renderTarget.texture.generateMipmaps = false;$/;"	r
generateMipmaps	js/three.js	/^			renderTarget.texture.generateMipmaps = generateMipmaps;$/;"	r
generateMipmaps	js/three.js	/^			this.generateMipmaps = source.generateMipmaps;$/;"	r
generateMipmaps	js/three.js	/^			var generateMipmaps = renderTarget.texture.generateMipmaps;$/;"	r
generateMipmaps	js/three.js	/^		generateMipmaps: {$/;"	r
generateMipmaps	js/three.js	/^		this.generateMipmaps	= false;$/;"	r
generateMipmaps	js/three.js	/^		this.generateMipmaps = false;$/;"	r
generateMipmaps	js/three.js	/^		this.generateMipmaps = true;$/;"	r
generateMipmaps	js/three.min.js	/^c.activeCubeFace=2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.texture.generateMipmaps=l;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)};this.clear=function(a,b,c,d){for(var e=this.renderTarget,f=0;6>f;f++)e.activeCubeFace=f,a.setRenderTarget(e),a.clear(b,c,d);a.setRenderTarget(null)}}function fe(){w.call(this);this.type="AudioListener";this.context=ge.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);$/;"	r
generateMipmaps	js/three.min.js	/^h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){C.call(this);this.type="WireframeGeometry";var b=[],c,d,e,f=[0,0],g={},h=["a","b","c"];if(a&&a.isGeometry){var k=a.faces;var l=0;for(d=k.length;l<d;l++){var q=k[l];for(c=0;3>c;c++){var n=q[h[c]];var u=q[h[(c+1)%3]];f[0]=Math.min(n,u);f[1]=Math.max(n,u);n=f[0]+","+f[1];void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]})}}for(n in g)l=g[n],h=a.vertices[l.index1],b.push(h.x,h.y,h.z),h=a.vertices[l.index2],b.push(h.x,h.y,h.z)}else if(a&&a.isBufferGeometry){var h=$/;"	r
generateMipmaps	js/three.min.js	/^set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a}}});ic.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var b=this;(new ee).load(a,function(a){b.setBuffer(a)});return this};ie.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};$c.prototype.updateCubeMap=function(a,$/;"	r
generateSegment	js/three.js	/^		function generateSegment( i ) {$/;"	r
generateShapes	js/three.js	/^		generateShapes: function ( text, size, divisions ) {$/;"	r
generateShapes	js/three.min.js	/^!1;a=[];e=0;for(f=l.length;e<f;e++)h[e]=[];e=0;for(f=l.length;e<f;e++)for(g=m[e],t=0;t<g.length;t++){k=g[t];n=!0;for(v=0;v<l.length;v++)d(k.p,l[v].p)&&(e!==v&&a.push({froms:e,tos:v,hole:t}),n?(n=!1,h[v].push(k)):p=!0);n&&h[e].push(k)}0<a.length&&(p||(m=h))}p=0;for(e=l.length;p<e;p++)for(h=l[p].s,b.push(h),a=m[p],f=0,g=a.length;f<g;f++)h.holes.push(a[f].h);return b}});Object.assign(de.prototype,{isFont:!0,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split("");$/;"	r
generateSideWallUV	js/three.js	/^		generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {$/;"	r
generateSideWallUV	js/three.min.js	/^{generateTopUV:function(a,b,c,d,e){a=b[3*d];d=b[3*d+1];var f=b[3*e];e=b[3*e+1];return[new D(b[3*c],b[3*c+1]),new D(a,d),new D(f,e)]},generateSideWallUV:function(a,b,c,d,e,f){a=b[3*c];var g=b[3*c+1];c=b[3*c+2];var h=b[3*d],k=b[3*d+1];d=b[3*d+2];var l=b[3*e],m=b[3*e+1];e=b[3*e+2];var n=b[3*f],p=b[3*f+1];b=b[3*f+2];return.01>Math.abs(g-k)?[new D(a,1-c),new D(h,1-d),new D(l,1-e),new D(n,1-b)]:[new D(g,1-c),new D(k,1-d),new D(m,1-e),new D(p,1-b)]}};Pc.prototype=Object.create(L.prototype);Pc.prototype.constructor=$/;"	r
generateTopUV	js/three.js	/^		generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {$/;"	r
generateTorso	js/three.js	/^		function generateTorso() {$/;"	r
generateUUID	js/three.js	/^			return function generateUUID() {$/;"	r
generateUUID	js/three.js	/^		generateUUID: function () {$/;"	r
generateUVs	js/three.js	/^		function generateUVs() {$/;"	r
generator	js/three.js	/^					generator: 'BufferGeometry.toJSON'$/;"	r
generator	js/three.js	/^					generator: 'Geometry.toJSON'$/;"	r
generator	js/three.js	/^					generator: 'Material.toJSON'$/;"	r
generator	js/three.js	/^					generator: 'Object3D.toJSON'$/;"	r
generator	js/three.js	/^					generator: 'Texture.toJSON'$/;"	r
geometries	js/three.js	/^						object.add( this.parseObject( children[ i ], geometries, materials ) );$/;"	r
geometries	js/three.js	/^					geometries: {},$/;"	r
geometries	js/three.js	/^				geometries: 0,$/;"	r
geometries	js/three.js	/^				if ( geometries.length > 0 ) output.geometries = geometries;$/;"	r
geometries	js/three.js	/^				var geometries = extractFromCache( meta.geometries );$/;"	r
geometries	js/three.js	/^			geometries = new WebGLGeometries( _gl, attributes, _infoMemory );$/;"	r
geometries	js/three.js	/^			return function parseObject( data, geometries, materials ) {$/;"	r
geometries	js/three.js	/^			var geometries = this.parseGeometries( json.geometries );$/;"	r
geometries	js/three.js	/^			var geometries = {};$/;"	r
geometries	js/three.js	/^			var object = this.parseObject( json.object, geometries, materials );$/;"	r
geometries	js/three.js	/^		var geometries = {};$/;"	r
geometry	js/GLTFLoader.js	/^							var geometry = mesh.geometry;$/;"	r
geometry	js/GLTFLoader.js	/^						var geometry = geometries[ i ];$/;"	r
geometry	js/GLTFLoader.js	/^				var geometry = new THREE.BufferGeometry();$/;"	r
geometry	js/GLTFLoader.js	/^		var geometry = mesh.geometry;$/;"	r
geometry	js/three.js	/^									currentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );$/;"	r
geometry	js/three.js	/^							currentRenderList.push( object, geometry, material, _vector3.z, null );$/;"	r
geometry	js/three.js	/^							geometry = bufferGeometryLoader.parse( data );$/;"	r
geometry	js/three.js	/^							geometry = geometryLoader.parse( data, this.texturePath ).geometry;$/;"	r
geometry	js/three.js	/^							geometry = new Geometries[ data.type ]($/;"	r
geometry	js/three.js	/^						var geometry = getGeometry( data.geometry );$/;"	r
geometry	js/three.js	/^						var geometry = objects.update( object );$/;"	r
geometry	js/three.js	/^					geometries[ data.uuid ] = geometry;$/;"	r
geometry	js/three.js	/^					geometry: geometry,$/;"	r
geometry	js/three.js	/^					var geometry = _objects.update( object );$/;"	r
geometry	js/three.js	/^					var geometry;$/;"	r
geometry	js/three.js	/^				_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );$/;"	r
geometry	js/three.js	/^				buffergeometry = geometry;$/;"	r
geometry	js/three.js	/^				geometry = direct;$/;"	r
geometry	js/three.js	/^				geometry2 = geometry2.geometry;$/;"	r
geometry	js/three.js	/^				morphtargets.update( object, geometry, material, program );$/;"	r
geometry	js/three.js	/^				object.geometry = serialize( meta.geometries, this.geometry );$/;"	r
geometry	js/three.js	/^				renderItem.geometry = geometry;$/;"	r
geometry	js/three.js	/^				var geometry = new Geometry();$/;"	r
geometry	js/three.js	/^				var geometry = node.geometry;$/;"	r
geometry	js/three.js	/^				var geometry = object.geometry;$/;"	r
geometry	js/three.js	/^				var geometry = renderItem.geometry;$/;"	r
geometry	js/three.js	/^				var geometry = this.geometry;$/;"	r
geometry	js/three.js	/^			 var geometry = Object.create( this.constructor.prototype );$/;"	r
geometry	js/three.js	/^			geometry = this.geometry;$/;"	r
geometry	js/three.js	/^			var geometry = event.target;$/;"	r
geometry	js/three.js	/^			var geometry = new BufferGeometry();$/;"	r
geometry	js/three.js	/^			var geometry = new Geometry();$/;"	r
geometry	js/three.js	/^			var geometry = object.geometry;$/;"	r
geometry	js/three.js	/^			var geometry = this.geometry;$/;"	r
geometry	js/three.js	/^			var objGeometry = this.object.geometry;$/;"	r
geometry	js/three.js	/^		Line.call( this, geometry, material );$/;"	r
geometry	js/three.js	/^		Line.call( this, geometry, new LineBasicMaterial( { color: color } ) );$/;"	r
geometry	js/three.js	/^		LineSegments.call( this, geometry, material );$/;"	r
geometry	js/three.js	/^		LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );$/;"	r
geometry	js/three.js	/^		LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );$/;"	r
geometry	js/three.js	/^		Mesh.call( this, geometry, material );$/;"	r
geometry	js/three.js	/^		function push( object, geometry, material, z, group ) {$/;"	r
geometry	js/three.js	/^		function update( object, geometry, material, program ) {$/;"	r
geometry	js/three.js	/^		geometry = new BufferGeometry();$/;"	r
geometry	js/three.js	/^		this.geometry = geometry !== undefined ? geometry : new BufferGeometry();$/;"	r
geometry	js/three.js	/^		var geometry = new BufferGeometry();$/;"	r
geometry	js/three.js	/^		var geometry = new OctahedronBufferGeometry( size );$/;"	r
geometry	js/three.js	/^		var geometry = new SphereBufferGeometry( sphereSize, 4, 2 );$/;"	r
geometry	js/three.js	/^		var geometry, pointMap;$/;"	r
geometry	js/three.js	/^		var objGeometry = this.object.geometry;$/;"	r
geometry	js/three.min.js	/^oa.prototype=Object.assign(Object.create(w.prototype),{constructor:oa,isLine:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new p,l=new p,h=new p,q=new p,n=this&&this.isLineSegments?2:1;if(g.isBufferGeometry){var m=g.index;var r=g.attributes.position.array;$/;"	r
geometry	js/three.min.js	/^{constructor:qa,isMesh:!0,setDrawMode:function(a){this.drawMode=a},copy:function(a){w.prototype.copy.call(this,a);this.drawMode=a.drawMode;void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice());void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary));return this},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length){var c=a[b[0]];if(void 0!==$/;"	r
geometry2	js/three.js	/^				geometry2 = geometry2.geometry;$/;"	r
geometry2	js/three.js	/^			geometry2 = geometry.clone();$/;"	r
geometry2	js/three.js	/^			geometry2 = new Geometry();$/;"	r
geometry2	js/three.js	/^			var geometry2 = new BufferGeometry();$/;"	r
geometry2	js/three.js	/^		merge: function ( geometry1, geometry2, materialIndexOffset ) {$/;"	r
geometry2	js/three.js	/^		var geometry2 = new BufferGeometry();$/;"	r
geometry2	js/three.js	/^		var geometry2;$/;"	r
geometryAttribute	js/three.js	/^					var geometryAttribute = geometryAttributes[ name ];$/;"	r
geometryAttributes	js/three.js	/^			var geometryAttributes = geometry.attributes;$/;"	r
geometryId	js/three.js	/^	var geometryId = 0; \/\/ Geometry uses even numbers as Id$/;"	r
geometryIndex	js/three.js	/^			var geometryIndex = geometry.index;$/;"	r
geometryLoader	js/three.js	/^				var geometryLoader = new JSONLoader();$/;"	r
geometryProgram	js/three.js	/^				_currentGeometryProgram = geometryProgram;$/;"	r
geometryProgram	js/three.js	/^			var geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );$/;"	r
get	js/GLTFLoader.js	/^			get: function ( key ) {$/;"	r
get	js/three.js	/^				get: function () {$/;"	r
get	js/three.js	/^			get: function ( light ) {$/;"	r
get	js/three.js	/^			get: function ( name ) {$/;"	r
get	js/three.js	/^			get: function () {$/;"	r
get	js/three.js	/^			get: get,$/;"	r
get	js/three.js	/^		function get( attribute ) {$/;"	r
get	js/three.js	/^		function get( object ) {$/;"	r
get	js/three.js	/^		function get( object, geometry ) {$/;"	r
get	js/three.js	/^		function get( scene, camera ) {$/;"	r
get	js/three.js	/^		get: function ( file ) {$/;"	r
get	js/three.js	/^		get: function ( key ) {$/;"	r
get	js/three.js	/^		get: function () {$/;"	r
getArrays	js/three.js	/^	ExtrudeBufferGeometry.prototype.getArrays = function () {$/;"	r
getArrays	js/three.min.js	/^Object.create(C.prototype);Ga.prototype.constructor=Ga;Ga.prototype.getArrays=function(){var a=this.getAttribute("position"),a=a?Array.prototype.slice.call(a.array):[],b=this.getAttribute("uv"),b=b?Array.prototype.slice.call(b.array):[],c=this.index,c=c?Array.prototype.slice.call(c.array):[];return{position:a,uv:b,index:c}};Ga.prototype.addShapeList=function(a,b){var c=a.length;b.arrays=this.getArrays();for(var d=0;d<c;d++)this.addShape(a[d],b);this.setIndex(b.arrays.index);this.addAttribute("position",$/;"	r
getAttribute	js/three.js	/^		getAttribute: function ( name ) {$/;"	r
getAttributes	js/three.js	/^		this.getAttributes = function () {$/;"	r
getAverageFrequency	js/three.js	/^		getAverageFrequency: function () {$/;"	r
getAverageFrequency	js/three.min.js	/^a.y,a.z)}}()});Object.assign(ie.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){for(var a=0,b=this.getFrequencyData(),c=0;c<b.length;c++)a+=b[c];return a\/b.length}});Object.assign(je.prototype,{accumulate:function(a,b){var c=this.buffer,d=this.valueSize;a=a*d+d;var e=this.cumulativeWeight;if(0===e){for(e=0;e!==d;++e)c[a+e]=c[e];e=b}else e+=b,this._mixBufferRegion(c,a,0,b\/e,d);this.cumulativeWeight=e},apply:function(a){var b=$/;"	r
getBevelVec	js/three.js	/^		function getBevelVec( inPt, inPrev, inNext ) {$/;"	r
getBoneList	js/three.js	/^	function getBoneList( object ) {$/;"	r
getBoundingBox	js/three.js	/^		getBoundingBox: function ( optionalTarget ) {$/;"	r
getBoundingSphere	js/three.js	/^			return function getBoundingSphere( optionalTarget ) {$/;"	r
getBoundingSphere	js/three.js	/^		getBoundingSphere: function () {$/;"	r
getCamera	js/three.js	/^		this.getCamera = function ( camera ) {$/;"	r
getCenter	js/three.js	/^		getCenter: function ( optionalTarget ) {$/;"	r
getCenter	js/three.min.js	/^this.end.copy(a.end);return this},getCenter:function(a){return(a||new p).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new p).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){b=b||new p;return this.delta(b).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new p,b=new p;return function(c,d){a.subVectors(c,$/;"	r
getChildByName	js/three.js	/^		getChildByName: function ( name ) {$/;"	r
getClearAlpha	js/three.js	/^			getClearAlpha: function () {$/;"	r
getClearAlpha	js/three.js	/^		this.getClearAlpha = function () {$/;"	r
getClearAlpha	js/three.min.js	/^this.getClearAlpha=function(){return ia.getClearAlpha()};this.setClearAlpha=function(){ia.setClearAlpha.apply(ia,arguments)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=F.COLOR_BUFFER_BIT;if(void 0===b||b)d|=F.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=F.STENCIL_BUFFER_BIT;F.clear(d)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,$/;"	r
getClearColor	js/three.js	/^			getClearColor: function () {$/;"	r
getClearColor	js/three.js	/^		this.getClearColor = function () {$/;"	r
getClip	js/three.js	/^		getClip: function () {$/;"	r
getColorIndex	js/three.js	/^			function getColorIndex( color ) {$/;"	r
getColumnFromMatrix	js/three.js	/^		getColumnFromMatrix: function ( index, matrix ) {$/;"	r
getComponent	js/three.js	/^		getComponent: function ( index ) {$/;"	r
getComponent	js/three.min.js	/^case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),$/;"	r
getComponent	js/three.min.js	/^default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},$/;"	r
getCompressedTextureFormats	js/three.js	/^			getCompressedTextureFormats: getCompressedTextureFormats,$/;"	r
getCompressedTextureFormats	js/three.js	/^		function getCompressedTextureFormats() {$/;"	r
getCompressedTextureFormats	js/three.min.js	/^disable:f,getCompressedTextureFormats:function(){if(null===I&&(I=[],b.get("WEBGL_compressed_texture_pvrtc")||b.get("WEBGL_compressed_texture_s3tc")||b.get("WEBGL_compressed_texture_etc1")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)I.push(c[d]);return I},useProgram:function(b){return A!==b?(a.useProgram(b),A=b,!0):!1},setBlending:g,setMaterial:function(b){2===b.side?f(a.CULL_FACE):e(a.CULL_FACE);h(1===b.side);!0===b.transparent?g(b.blending,b.blendEquation,b.blendSrc,$/;"	r
getContext	js/three.js	/^		getContext: function () {$/;"	r
getContext	js/three.js	/^		this.getContext = function () {$/;"	r
getContext	js/three.min.js	/^t.addEventListener("webglcontextrestored",d,!1)}catch(rg){console.error("THREE.WebGLRenderer: "+rg)}var ha,X,aa,Y,S,pa,qa,ta,ua,oa,sa,ia,va,wa,xa,za,Aa,ra;b();var la=new og(M);this.vr=la;var Ca=new Ie(M,ta,X.maxTextureSize);this.shadowMap=Ca;this.getContext=function(){return F};this.getContextAttributes=function(){return F.getContextAttributes()};this.forceContextLoss=function(){var a=ha.get("WEBGL_lose_context");a&&a.loseContext()};this.forceContextRestore=function(){var a=ha.get("WEBGL_lose_context");$/;"	r
getContextAttributes	js/three.js	/^		this.getContextAttributes = function () {$/;"	r
getControlPointsArray	js/three.js	/^		getControlPointsArray: function ( \/* optionalTarget *\/ ) {$/;"	r
getControlPointsArray	js/three.min.js	/^Object.create(la.prototype);ff.prototype=Object.create(la.prototype);re.prototype=Object.create(la.prototype);Object.assign(re.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});cd.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};$/;"	r
getCurrentRenderTarget	js/three.js	/^		getCurrentRenderTarget: function () {$/;"	r
getCurveLengths	js/three.js	/^		getCurveLengths: function () {$/;"	r
getCurveLengths	js/three.min.js	/^b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new Ma(b,a))},getPoint:function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],c=a.getLength(),a.getPointAt(0===c?0:1-b\/c);a++}return null},getLength:function(){var a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&$/;"	r
getData	js/three.js	/^	AudioAnalyser.prototype.getData = function () {$/;"	r
getDataURL	js/three.js	/^			function getDataURL( image ) {$/;"	r
getDelta	js/three.js	/^		getDelta: function () {$/;"	r
getDependencies	js/GLTFLoader.js	/^	GLTFParser.prototype.getDependencies = function ( type ) {$/;"	r
getDependency	js/GLTFLoader.js	/^	GLTFParser.prototype.getDependency = function ( type, index ) {$/;"	r
getDepthMaterial	js/three.js	/^		function getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {$/;"	r
getDevice	js/three.js	/^		this.getDevice = function () {$/;"	r
getDistanceModel	js/three.js	/^		getDistanceModel: function () {$/;"	r
getDrawingBufferSize	js/three.js	/^		this.getDrawingBufferSize = function () {$/;"	r
getEffectiveFOV	js/three.js	/^		getEffectiveFOV: function () {$/;"	r
getEffectiveFOV	js/three.min.js	/^this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()\/a;this.fov=2*R.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*R.DEG2RAD*this.fov);return.5*this.getFilmHeight()\/a},getEffectiveFOV:function(){return 2*R.RAD2DEG*Math.atan(Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,$/;"	r
getEffectiveTimeScale	js/three.js	/^		getEffectiveTimeScale: function () {$/;"	r
getEffectiveWeight	js/three.js	/^		getEffectiveWeight: function () {$/;"	r
getElapsedTime	js/three.js	/^		getElapsedTime: function () {$/;"	r
getEncodingComponents	js/three.js	/^	function getEncodingComponents( encoding ) {$/;"	r
getFilmHeight	js/three.js	/^		getFilmHeight: function () {$/;"	r
getFilmHeight	js/three.min.js	/^1)},getFilmHeight:function(){return this.filmGauge\/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a\/b;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},$/;"	r
getFilmWidth	js/three.js	/^		getFilmWidth: function () {$/;"	r
getFilter	js/three.js	/^		getFilter: function () {$/;"	r
getFilters	js/three.js	/^		getFilters: function () {$/;"	r
getFocalLength	js/three.js	/^		getFocalLength: function () {$/;"	r
getFrequencyData	js/three.js	/^		getFrequencyData: function () {$/;"	r
getGeometry	js/three.js	/^				function getGeometry( name ) {$/;"	r
getHSL	js/three.js	/^		getHSL: function ( optionalTarget ) {$/;"	r
getHex	js/three.js	/^		getHex: function () {$/;"	r
getHex	js/three.min.js	/^this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)\/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k\/(e+f):$/;"	r
getHexString	js/three.js	/^		getHexString: function () {$/;"	r
getIndex	js/three.js	/^		getIndex: function () {$/;"	r
getIndex	js/three.min.js	/^I[y.b],I[y.c])}for(B=0;B<n;B++)I=q[B].vertexNormals[l],m[B].push(I.a,I.b,I.c);t&&this.skinIndices.push(r[y.a],r[y.b],r[y.c]);x&&this.skinWeights.push(p[y.a],p[y.b],p[y.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this}});var Pf=1;Object.assign(C.prototype,ia.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},$/;"	r
getInput	js/three.js	/^		getInput: function () {$/;"	r
getInput	js/three.min.js	/^$c.prototype=Object.create(w.prototype);$c.prototype.constructor=$c;fe.prototype=Object.assign(Object.create(w.prototype),{constructor:fe,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):$/;"	r
getInterpolation	js/three.js	/^		getInterpolation: function () {$/;"	r
getInterpolation	js/three.min.js	/^this.InterpolantFactoryMethodDiscrete;break;case 2301:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){b="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(b);console.warn("THREE.KeyframeTrackPrototype:",b)}else this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;$/;"	r
getInverse	js/three.js	/^		getInverse: function ( m, throwOnDegenerate ) {$/;"	r
getInverse	js/three.js	/^		getInverse: function ( matrix, throwOnDegenerate ) {$/;"	r
getInverse	js/three.min.js	/^b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,b){a&&a.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var c=a.elements;a=this.elements;var d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],k=c[5],l=c[6],q=c[7],c=c[8],n=c*h-k*q,m=k*l-c*g,r=q*g-h*l,p=d*n+e*m+f*r;if(0===p){if(!0===$/;"	r
getInverse	js/three.min.js	/^this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements;a=d[0];var e=d[1],f=d[2],g=d[3],h=d[4],k=d[5],l=d[6],q=d[7],n=d[8],m=d[9],r=d[10],p=d[11],t=d[12],x=d[13],y=d[14],d=d[15],B=m*y*q-x*r*q+x*l*p-k*y*p-m*l*d+k*r*d,I=t*r*q-n*y*q-t*l*p+h*y*p+n*l*d-h*r*d,A=n*x*q-t*m*q+t*k*p-h*x*p-n*k*d+h*m*d,J=t*m*l-n*x*l-t*k*r+h*x*r+n*k*y-h*m*y,w=a*B+e*I+f*A+g*J;if(0===w){if(!0===b)throw Error("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");$/;"	r
getKeyframeOrder	js/three.js	/^		getKeyframeOrder: function ( times ) {$/;"	r
getLength	js/three.js	/^		getLength: function () {$/;"	r
getLengths	js/three.js	/^		getLengths: function ( divisions ) {$/;"	r
getLoop	js/three.js	/^		getLoop: function () {$/;"	r
getMasterVolume	js/three.js	/^		getMasterVolume: function () {$/;"	r
getMasterVolume	js/three.min.js	/^this.gain.disconnect(this.context.destination);this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(a){this.gain.gain.value=a},updateMatrixWorld:function(){var a=new p,b=new X,c=new p,d=new p;return function(e){w.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.positionX?(e.positionX.setValueAtTime(a.x,$/;"	r
getMaterial	js/three.js	/^				function getMaterial( name ) {$/;"	r
getMaterialType	js/GLTFLoader.js	/^			getMaterialType: function () {$/;"	r
getMaterialType	js/GLTFLoader.js	/^	GLTFMaterialsCommonExtension.prototype.getMaterialType = function ( material ) {$/;"	r
getMaxAnisotropy	js/three.js	/^			getMaxAnisotropy: getMaxAnisotropy,$/;"	r
getMaxAnisotropy	js/three.js	/^		function getMaxAnisotropy() {$/;"	r
getMaxAnisotropy	js/three.js	/^		getMaxAnisotropy: function () {$/;"	r
getMaxAnisotropy	js/three.min.js	/^{getCurrentRenderTarget:function(){console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().");return this.getRenderTarget()},getMaxAnisotropy:function(){console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().");return this.capabilities.getMaxAnisotropy()},getPrecision:function(){console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.");return this.capabilities.precision},resetGLState:function(){console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset().");$/;"	r
getMaxDistance	js/three.js	/^		getMaxDistance: function () {$/;"	r
getMaxPrecision	js/three.js	/^			getMaxPrecision: getMaxPrecision,$/;"	r
getMaxPrecision	js/three.js	/^		function getMaxPrecision( precision ) {$/;"	r
getMaxPrecision	js/three.min.js	/^r=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),m=0<h,t=!!b.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==e)return e;var c=b.get("EXT_texture_filter_anisotropic");return e=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:d,precision:f,logarithmicDepthBuffer:c,maxTextures:g,maxVertexTextures:h,maxTextureSize:k,maxCubemapSize:l,maxAttributes:q,maxVertexUniforms:n,maxVaryings:u,maxFragmentUniforms:r,vertexTextures:m,floatFragmentTextures:t,floatVertexTextures:m&&$/;"	r
getMaxScaleOnAxis	js/three.js	/^		getMaxScaleOnAxis: function () {$/;"	r
getMixer	js/three.js	/^		getMixer: function () {$/;"	r
getMixer	js/three.min.js	/^this._timeScaleInterpolant;null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a));return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(a,b,c,d){if(this.enabled){var e=this._startTime;if(null!==e){b=(a-e)*c;if(0>b||0===c)return;this._startTime=null;b*=c}b*=this._updateTimeScale(a);c=this._updateTime(b);a=this._updateWeight(a);if(0<a){b=this._interpolants;$/;"	r
getNormalIndex	js/three.js	/^			function getNormalIndex( normal ) {$/;"	r
getNormalMatrix	js/three.js	/^		getNormalMatrix: function ( matrix4 ) {$/;"	r
getNormalMatrix	js/three.min.js	/^b)throw Error("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");console.warn("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");return this.identity()}b=1\/p;a[0]=n*b;a[1]=(f*q-c*e)*b;a[2]=(k*e-f*h)*b;a[3]=m*b;a[4]=(c*d-f*l)*b;a[5]=(f*g-k*d)*b;a[6]=r*b;a[7]=(e*l-q*d)*b;a[8]=(h*d-e*g)*b;return this},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},$/;"	r
getObjectById	js/three.js	/^		getObjectById: function ( id ) {$/;"	r
getObjectById	js/three.min.js	/^return this}b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:"removed"}),this.children.splice(b,1));return this},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new p;this.updateMatrixWorld(!0);$/;"	r
getObjectByName	js/three.js	/^		getObjectByName: function ( name ) {$/;"	r
getObjectByProperty	js/three.js	/^		getObjectByProperty: function ( name, value ) {$/;"	r
getObjectForDistance	js/three.js	/^		getObjectForDistance: function ( distance ) {$/;"	r
getOutput	js/three.js	/^		getOutput: function () {$/;"	r
getOutput	js/three.min.js	/^d.y,d.z,f.x,f.y,f.z))}}()});ic.prototype=Object.assign(Object.create(w.prototype),{constructor:ic,getOutput:function(){return this.gain},setNodeSource:function(a){this.hasPlaybackControl=!1;this.sourceType="audioNode";this.source=a;this.connect();return this},setBuffer:function(a){this.buffer=a;this.sourceType="buffer";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");$/;"	r
getParameter	js/three.js	/^		getParameter: function ( point, optionalTarget ) {$/;"	r
getParameter	js/three.min.js	/^this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z},getParameter:function(a,b){return(b||new p).set((a.x-this.min.x)\/(this.max.x-this.min.x),(a.y-this.min.y)\/(this.max.y-this.min.y),(a.z-this.min.z)\/(this.max.z-this.min.z))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},intersectsSphere:function(){var a=new p;return function(b){this.clampPoint(b.center,$/;"	r
getParameter	js/three.min.js	/^this.max.y},getParameter:function(a,b){return(b||new D).set((a.x-this.min.x)\/(this.max.x-this.min.x),(a.y-this.min.y)\/(this.max.y-this.min.y))},intersectsBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new D).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new D;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);$/;"	r
getParameters	js/three.js	/^		this.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {$/;"	r
getParameters	js/three.min.js	/^this.getParameters=function(b,e,g,q,n,u,r){var h=f[b.type];if(r.isSkinnedMesh){var l=r.skeleton.bones;if(c.floatVertexTextures)l=1024;else{var k=Math.min(Math.floor((c.maxVertexUniforms-20)\/4),l.length);k<l.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+l.length+" bones. This GPU supports "+k+"."),l=0):l=k}}else l=0;k=c.precision;null!==b.precision&&(k=c.getMaxPrecision(b.precision),k!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",k,"instead."));$/;"	r
getPixelRatio	js/three.js	/^		this.getPixelRatio = function () {$/;"	r
getPixelRatio	js/three.min.js	/^a&&a.restoreContext()};this.getPixelRatio=function(){return P};this.setPixelRatio=function(a){void 0!==a&&(P=a,this.setSize(W,ea,!1))};this.getSize=function(){return{width:W,height:ea}};this.setSize=function(a,b,c){var d=la.getDevice();d&&d.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(W=a,ea=b,t.width=a*P,t.height=b*P,!1!==c&&(t.style.width=a+"px",t.style.height=b+"px"),this.setViewport(0,0,a,b))};this.getDrawingBufferSize=function(){return{width:W*$/;"	r
getPlaybackRate	js/three.js	/^		getPlaybackRate: function () {$/;"	r
getPoint	js/three.js	/^		construct.prototype.getPoint = getPoint;$/;"	r
getPoint	js/three.js	/^		getPoint: function ( \/* t, optionalTarget *\/ ) {$/;"	r
getPoint	js/three.js	/^		getPoint: function ( t ) {$/;"	r
getPoint	js/three.js	/^	CatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	CubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	CubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	EllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	LineCurve.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	LineCurve3.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	QuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	QuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.js	/^	SplineCurve.prototype.getPoint = function ( t, optionalTarget ) {$/;"	r
getPoint	js/three.min.js	/^.5,te.initCatmullRom(f.x,g.x,h.x,c.x,d),ue.initCatmullRom(f.y,g.y,h.y,c.y,d),ve.initCatmullRom(f.z,g.z,h.z,c.z,d));b.set(te.calc(a),ue.calc(a),ve.calc(a));return b};qc.prototype=Object.create(ca.prototype);qc.prototype.constructor=qc;qc.prototype.isCubicBezierCurve3=!0;qc.prototype.getPoint=function(a,b){b=b||new p;var c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(vb(a,c.x,d.x,e.x,f.x),vb(a,c.y,d.y,e.y,f.y),vb(a,c.z,d.z,e.z,f.z));return b};rc.prototype=Object.create(ca.prototype);rc.prototype.constructor=$/;"	r
getPoint	js/three.min.js	/^1:a+2];b.set(Se(d,e.x,f.x,g.x,c.x),Se(d,e.y,f.y,g.y,c.y));return b};xb.prototype=Object.create(ca.prototype);xb.prototype.constructor=xb;xb.prototype.isCubicBezierCurve=!0;xb.prototype.getPoint=function(a,b){b=b||new D;var c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(vb(a,c.x,d.x,e.x,f.x),vb(a,c.y,d.y,e.y,f.y));return b};yb.prototype=Object.create(ca.prototype);yb.prototype.constructor=yb;yb.prototype.isQuadraticBezierCurve=!0;yb.prototype.getPoint=function(a,b){b=b||new D;var c=this.v0,d=this.v1,$/;"	r
getPoint	js/three.min.js	/^Ma.prototype.constructor=Ma;Ma.prototype.isLineCurve=!0;Ma.prototype.getPoint=function(a,b){b=b||new D;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Ma.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};Ma.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};hc.prototype=Object.assign(Object.create(ca.prototype),{constructor:hc,add:function(a){this.curves.push(a)},closePath:function(){var a=this.curves[0].getPoint(0),$/;"	r
getPoint	js/three.min.js	/^a),g=0;g<f.length;g++){var h=f[g];c&&c.equals(h)||(b.push(h),c=h)}this.autoClose&&1<b.length&&!b[b.length-1].equals(b[0])&&b.push(b[0]);return b}});Sa.prototype=Object.create(ca.prototype);Sa.prototype.constructor=Sa;Sa.prototype.isEllipseCurve=!0;Sa.prototype.getPoint=function(a,b){b=b||new D;for(var c=2*Math.PI,d=this.aEndAngle-this.aStartAngle,e=Math.abs(d)<Number.EPSILON;0>d;)d+=c;for(;d>c;)d-=c;d<Number.EPSILON&&(d=e?0:c);!0!==this.aClockwise||e||(d=d===c?-c:d-c);c=this.aStartAngle+a*d;a=this.aX+$/;"	r
getPoint	js/three.min.js	/^b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new Ma(b,a))},getPoint:function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],c=a.getLength(),a.getPointAt(0===c?0:1-b\/c);a++}return null},getLength:function(){var a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&$/;"	r
getPoint	js/three.min.js	/^rc;rc.prototype.isQuadraticBezierCurve3=!0;rc.prototype.getPoint=function(a,b){b=b||new p;var c=this.v0,d=this.v1,e=this.v2;b.set(ub(a,c.x,d.x,e.x),ub(a,c.y,d.y,e.y),ub(a,c.z,d.z,e.z));return b};Cb.prototype=Object.create(ca.prototype);Cb.prototype.constructor=Cb;Cb.prototype.isLineCurve3=!0;Cb.prototype.getPoint=function(a,b){b=b||new p;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Cb.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};$/;"	r
getPoint	js/three.min.js	/^te=new qe,ue=new qe,ve=new qe;la.prototype=Object.create(ca.prototype);la.prototype.constructor=la;la.prototype.isCatmullRomCurve3=!0;la.prototype.getPoint=function(a,b){b=b||new p;var c=this.points,d=c.length;a*=d-(this.closed?0:1);var e=Math.floor(a);a-=e;this.closed?e+=0<e?0:(Math.floor(Math.abs(e)\/c.length)+1)*c.length:0===a&&e===d-1&&(e=d-2,a=1);if(this.closed||0<e)var f=c[(e-1)%d];else Nd.subVectors(c[0],c[1]).add(c[0]),f=Nd;var g=c[e%d];var h=c[(e+1)%d];this.closed||e+2<d?c=c[(e+2)%d]:(Nd.subVectors(c[d-$/;"	r
getPoint	js/three.min.js	/^this.xRadius*Math.cos(c);var f=this.aY+this.yRadius*Math.sin(c);0!==this.aRotation&&(c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a-this.aX,f-=this.aY,a=e*c-f*d+this.aX,f=e*d+f*c+this.aY);return b.set(a,f)};wb.prototype=Object.create(ca.prototype);wb.prototype.constructor=wb;wb.prototype.isSplineCurve=!0;wb.prototype.getPoint=function(a,b){b=b||new D;var c=this.points,d=(c.length-1)*a;a=Math.floor(d);var d=d-a,e=c[0===a?a:a-1],f=c[a],g=c[a>c.length-2?c.length-1:a+1],c=c[a>c.length-3?c.length-$/;"	r
getPointAt	js/three.js	/^		getPointAt: function ( u, optionalTarget ) {$/;"	r
getPointAt	js/three.js	/^	LineCurve.prototype.getPointAt = function ( u, optionalTarget ) {$/;"	r
getPointAt	js/three.js	/^	LineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {$/;"	r
getPointAt	js/three.min.js	/^CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},hf={RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},jf={NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008};Object.assign(ca.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(a,b){a=this.getUtoTmapping(a);return this.getPoint(a,b)},getPoints:function(a){void 0===$/;"	r
getPoints	js/three.js	/^		getPoints: function ( divisions ) {$/;"	r
getPointsHoles	js/three.js	/^		getPointsHoles: function ( divisions ) {$/;"	r
getPosition	js/three.js	/^			return function getPosition() {$/;"	r
getPosition	js/three.js	/^		getPosition: function () {$/;"	r
getPositionFromMatrix	js/three.js	/^		getPositionFromMatrix: function ( m ) {$/;"	r
getPrecision	js/three.js	/^		getPrecision: function () {$/;"	r
getProgramCode	js/three.js	/^		this.getProgramCode = function ( material, parameters ) {$/;"	r
getProgramCode	js/three.min.js	/^alphaTest:b.alphaTest,doubleSided:2===b.side,flipSided:1===b.side,depthPacking:void 0!==b.depthPacking?b.depthPacking:!1}};this.getProgramCode=function(b,c){var d=[];c.shaderID?d.push(c.shaderID):(d.push(b.fragmentShader),d.push(b.vertexShader));if(void 0!==b.defines)for(var e in b.defines)d.push(e),d.push(b.defines[e]);for(e=0;e<g.length;e++)d.push(c[g[e]]);d.push(b.onBeforeCompile.toString());d.push(a.gammaOutput);return d.join()};this.acquireProgram=function(c,d,f,g){for(var h,l=0,k=e.length;l<$/;"	r
getPureArraySetter	js/three.js	/^	function getPureArraySetter( type ) {$/;"	r
getRefDistance	js/three.js	/^		getRefDistance: function () {$/;"	r
getRenderTarget	js/three.js	/^		this.getRenderTarget = function () {$/;"	r
getRenderTarget	js/three.min.js	/^!1;return function(b,c){b&&b.isWebGLRenderTargetCube&&(a||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),a=!0),b=b.texture);b&&b.isCubeTexture||Array.isArray(b.image)&&6===b.image.length?S.setTextureCube(b,c):S.setTextureCubeDynamic(b,c)}}();this.getRenderTarget=function(){return ka};this.setRenderTarget=function(a){(ka=a)&&void 0===Y.get(a).__webglFramebuffer&&S.setupRenderTarget(a);var b=null,c=!1;a?(b=Y.get(a).__webglFramebuffer,$/;"	r
getRolloffFactor	js/three.js	/^		getRolloffFactor: function () {$/;"	r
getRolloffFactor	js/three.min.js	/^a},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(a){this.panner.rolloffFactor=a},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(a){this.panner.distanceModel=a},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(a){this.panner.maxDistance=a},updateMatrixWorld:function(){var a=new p;return function(b){w.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,$/;"	r
getRoot	js/three.js	/^		getRoot: function () {$/;"	r
getRoot	js/three.min.js	/^b=this._nActiveBindings;for(g=0;g!==b;++g)a[g].apply(f);return this},getRoot:function(){return this._root},uncacheClip:function(a){var b=this._actions;a=a.uuid;var c=this._actionsByClip,d=c[a];if(void 0!==d){for(var d=d.knownActions,e=0,f=d.length;e!==f;++e){var g=d[e];this._deactivateAction(g);var h=g._cacheIndex,k=b[b.length-1];g._cacheIndex=null;g._byClipCacheIndex=null;k._cacheIndex=h;b[h]=k;b.pop();this._removeInactiveBindingsForAction(g)}delete c[a]}},uncacheRoot:function(a){a=a.uuid;var b=$/;"	r
getScaleFromMatrix	js/three.js	/^		getScaleFromMatrix: function ( m ) {$/;"	r
getSettings_	js/three.js	/^		getSettings_: function () {$/;"	r
getSettings_	js/three.min.js	/^a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,$/;"	r
getShaderPrecisionFormat	js/three.js	/^				_gl.getShaderPrecisionFormat = function () {$/;"	r
getSingularSetter	js/three.js	/^	function getSingularSetter( type ) {$/;"	r
getSize	js/three.js	/^		getSize: function ( optionalTarget ) {$/;"	r
getSize	js/three.js	/^		this.getSize = function () {$/;"	r
getSize	js/three.min.js	/^a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},expandByObject:function(){function a(a){var f=a.geometry;if(void 0!==f)if(f.isGeometry)for(f=f.vertices,c=0,d=f.length;c<d;c++)e.copy(f[c]),$/;"	r
getSpacedPoints	js/three.js	/^		getSpacedPoints: function ( divisions ) {$/;"	r
getSpacedPoints	js/three.min.js	/^a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));return b},getSpacedPoints:function(a){void 0===a&&(a=5);for(var b=[],c=0;c<=a;c++)b.push(this.getPointAt(c\/a));return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(a){void 0===a&&(a=this.arcLengthDivisions);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c=this.getPoint(0),d,e=0;b.push(0);for(d=1;d<=a;d++){var f=$/;"	r
getSpacedPoints	js/three.min.js	/^this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},getSpacedPoints:function(a){void 0===a&&(a=40);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=[],c,d=0,e=this.curves;d<e.length;d++)for(var f=e[d],f=f.getPoints(f&&f.isEllipseCurve?2*a:f&&f.isLineCurve?1:f&&f.isSplineCurve?a*f.points.length:$/;"	r
getStandingMatrix	js/three.js	/^		this.getStandingMatrix = function () {$/;"	r
getStandingMatrix	js/three.min.js	/^l.matrixWorld.getInverse(l.matrixWorldInverse);k.projectionMatrix.fromArray(e.leftProjectionMatrix);l.projectionMatrix.fromArray(e.rightProjectionMatrix);q.projectionMatrix.copy(k.projectionMatrix);a=d.getLayers();a.length&&(a=a[0],null!==a.leftBounds&&4===a.leftBounds.length&&k.bounds.fromArray(a.leftBounds),null!==a.rightBounds&&4===a.rightBounds.length&&l.bounds.fromArray(a.rightBounds));return q};this.getStandingMatrix=function(){return g};this.submitFrame=function(){d&&d.isPresenting&&d.submitFrame()};$/;"	r
getStyle	js/three.js	/^		getStyle: function () {$/;"	r
getStyle	js/three.min.js	/^k\/(2-e-f);switch(e){case b:g=(c-d)\/k+(c<d?6:0);break;case c:g=(d-b)\/k+2;break;case d:g=(b-c)\/k+4}g\/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=$/;"	r
getTangent	js/three.js	/^		getTangent: function ( t ) {$/;"	r
getTangent	js/three.js	/^	LineCurve.prototype.getTangent = function ( \/* t *\/ ) {$/;"	r
getTangentAt	js/three.js	/^		getTangentAt: function ( u ) {$/;"	r
getTangentAt	js/three.min.js	/^getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)},computeFrenetFrames:function(a,b){var c=new p,d=[],e=[],f=[],g=new p,h=new K,k;for(k=0;k<=a;k++){var l=k\/a;d[k]=this.getTangentAt(l);d[k].normalize()}e[0]=new p;f[0]=new p;k=Number.MAX_VALUE;l=Math.abs(d[0].x);var m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0));m<=k&&(k=m,c.set(0,1,0));n<=k&&c.set(0,0,1);g.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],g);f[0].crossVectors(d[0],e[0]);for(k=1;k<=a;k++)e[k]=$/;"	r
getTargetPixelRatio	js/three.js	/^		function getTargetPixelRatio() {$/;"	r
getTexelDecodingFunction	js/three.js	/^	function getTexelDecodingFunction( functionName, encoding ) {$/;"	r
getTexelEncodingFunction	js/three.js	/^	function getTexelEncodingFunction( functionName, encoding ) {$/;"	r
getTexture	js/three.js	/^			function getTexture( name ) {$/;"	r
getTextureEncodingFromMap	js/three.js	/^		function getTextureEncodingFromMap( map, gammaOverrideLinear ) {$/;"	r
getToneMappingFunction	js/three.js	/^	function getToneMappingFunction( functionName, toneMapping ) {$/;"	r
getUniforms	js/three.js	/^		this.getUniforms = function () {$/;"	r
getUniforms	js/three.min.js	/^"gl.VALIDATE_STATUS",g.getProgramParameter(p,g.VALIDATE_STATUS),"gl.getProgramInfoLog",f,e,q);else if(""!==f)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f);else if(""===e||""===q)u=!1;u&&(this.diagnostics={runnable:n,material:d,programLog:f,vertexShader:{log:e,prefix:h},fragmentShader:{log:q,prefix:b}});g.deleteShader(k);g.deleteShader(l);var B;this.getUniforms=function(){void 0===B&&(B=new cb(g,p,a));return B};var I;this.getAttributes=function(){if(void 0===I){for(var a={},b=g.getProgramParameter(p,$/;"	r
getUtoTmapping	js/three.js	/^		getUtoTmapping: function ( u, distance ) {$/;"	r
getUtoTmapping	js/three.min.js	/^this.getPoint(d\/a);e+=f.distanceTo(c);b.push(e);c=f}return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=c.length;b=b?b:a*c[d-1];for(var e=0,f=d-1,g;e<=f;)if(a=Math.floor(e+(f-e)\/2),g=c[a]-b,0>g)e=a+1;else if(0<g)f=a-1;else{f=a;break}a=f;if(c[a]===b)return a\/(d-1);e=c[a];return(a+(b-e)\/(c[a+1]-e))\/(d-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},$/;"	r
getUvIndex	js/three.js	/^			function getUvIndex( uv ) {$/;"	r
getValue	js/three.js	/^			this.getValue = this.GetterByBindingType[ bindingType ];$/;"	r
getValue	js/three.js	/^			this.getValue = this._getValue_unavailable;$/;"	r
getValue	js/three.js	/^			this.getValue = this._getValue_unbound;$/;"	r
getValue	js/three.js	/^		getValue: function ( array, offset ) {$/;"	r
getValue	js/three.js	/^		getValue: function getValue_unbound( targetArray, offset ) {$/;"	r
getValue	js/three.min.js	/^getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=pa.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case "materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",$/;"	r
getValueSize	js/three.js	/^		getValueSize: function () {$/;"	r
getValueSize	js/three.min.js	/^case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length\/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},scale:function(a){if(1!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,$/;"	r
getValue_array	js/three.js	/^			function getValue_array( buffer, offset ) {$/;"	r
getValue_arrayElement	js/three.js	/^			function getValue_arrayElement( buffer, offset ) {$/;"	r
getValue_direct	js/three.js	/^			function getValue_direct( buffer, offset ) {$/;"	r
getValue_toArray	js/three.js	/^			function getValue_toArray( buffer, offset ) {$/;"	r
getValue_unbound	js/three.js	/^		getValue: function getValue_unbound( targetArray, offset ) {$/;"	r
getValue_unbound	js/three.js	/^		setValue: function getValue_unbound( sourceArray, offset ) {$/;"	r
getVertexByIndex	js/three.js	/^		function getVertexByIndex( index, vertex ) {$/;"	r
getVolume	js/three.js	/^		getVolume: function () {$/;"	r
getVolume	js/three.min.js	/^!1):this.loop},setLoop:function(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(a){this.gain.gain.value=a;return this}});he.prototype=Object.assign(Object.create(ic.prototype),{constructor:he,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=$/;"	r
getW	js/three.js	/^		getW: function ( index ) {$/;"	r
getWireframeAttribute	js/three.js	/^			getWireframeAttribute: getWireframeAttribute$/;"	r
getWireframeAttribute	js/three.js	/^		function getWireframeAttribute( geometry ) {$/;"	r
getWireframeAttribute	js/three.min.js	/^a.ARRAY_BUFFER);c=c.morphAttributes;for(f in c)for(var d=c[f],e=0,g=d.length;e<g;e++)b.update(d[e],a.ARRAY_BUFFER)},getWireframeAttribute:function(c){var d=f[c.id];if(d)return d;d=[];var e=c.index;var g=c.attributes;if(null!==e){var q=e.array;for(var n=0,u=q.length;n<u;n+=3){var r=q[n+0];g=q[n+1];e=q[n+2];d.push(r,g,g,e,e,r)}}else for(q=g.position.array,n=0,u=q.length\/3-1;n<u;n+=3)r=n+0,g=n+1,e=n+2,d.push(r,g,g,e,e,r);d=new (65535<Qd(d)?eb:db)(d,1);b.update(d,a.ELEMENT_ARRAY_BUFFER);return f[c.id]=$/;"	r
getWorldDirection	js/three.js	/^			return function getWorldDirection( optionalTarget ) {$/;"	r
getWorldDirection	js/three.js	/^		getWorldDirection: function () {$/;"	r
getWorldDirection	js/three.min.js	/^getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,$/;"	r
getWorldDirection	js/three.min.js	/^this.projectionMatrix.copy(a.projectionMatrix);return this},getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}(),updateMatrixWorld:function(a){w.prototype.updateMatrixWorld.call(this,a);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});Gb.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Gb,isOrthographicCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,$/;"	r
getWorldPosition	js/three.js	/^		getWorldPosition: function ( optionalTarget ) {$/;"	r
getWorldQuaternion	js/three.js	/^			return function getWorldQuaternion( optionalTarget ) {$/;"	r
getWorldQuaternion	js/three.js	/^		getWorldQuaternion: function () {$/;"	r
getWorldQuaternion	js/three.min.js	/^return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new p,b=new p;return function(c){c=c||new X;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new X;return function(b){b=b||new Xa;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new p,b=new X;return function(c){c=c||new p;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),$/;"	r
getWorldRotation	js/three.js	/^			return function getWorldRotation( optionalTarget ) {$/;"	r
getWorldRotation	js/three.js	/^		getWorldRotation: function () {$/;"	r
getWorldScale	js/three.js	/^			return function getWorldScale( optionalTarget ) {$/;"	r
getWorldScale	js/three.js	/^		getWorldScale: function () {$/;"	r
getX	js/three.js	/^		getX: function ( index ) {$/;"	r
getY	js/three.js	/^		getY: function ( index ) {$/;"	r
getZ	js/three.js	/^		getZ: function ( index ) {$/;"	r
gf	js/three.min.js	/^b.setIndex(new O(c,1)));var d=a.data.attributes;for(f in d){var e=d[f];c=new gf[e.type](e.array);b.addAttribute(f,new O(c,e.itemSize,e.normalized))}var f=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==f)for(c=0,d=f.length;c!==d;++c)e=f[c],b.addGroup(e.start,e.count,e.materialIndex);a=a.data.boundingSphere;void 0!==a&&(f=new p,void 0!==a.center&&f.fromArray(a.center),b.boundingSphere=new Da(f,a.radius));return b}});var gf={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!==$/;"	r
gg	js/three.min.js	/^b.envMapCubeUV||b.bumpMap||b.normalMap||b.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(a.fragDepth||b.logarithmicDepthBuffer)&&c.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",a.drawBuffers&&c.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(a.shaderTextureLOD||b.envMap)&&c.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ac).join("\\n")}function gg(a){var b=[],c;for(c in a){var d=a[c];!1!==d&&b.push("#define "+$/;"	r
gl	js/three.js	/^		var gl = renderer.context;$/;"	r
gl	js/three.js	/^	function WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {$/;"	r
gl	js/three.js	/^	function WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {$/;"	r
glFormat	js/three.js	/^						glFormat = utils.convert( texture.format ),$/;"	r
glFormat	js/three.js	/^				glFormat = utils.convert( texture.format ),$/;"	r
glFormat	js/three.js	/^			var glFormat = utils.convert( renderTarget.texture.format );$/;"	r
glFragmentShader	js/three.js	/^		this.fragmentShader = glFragmentShader;$/;"	r
glFragmentShader	js/three.js	/^		var glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );$/;"	r
glTF	js/GLTFLoader.js	/^				var glTF = {$/;"	r
glType	js/three.js	/^						glType = utils.convert( texture.type );$/;"	r
glType	js/three.js	/^				glType = utils.convert( texture.type );$/;"	r
glType	js/three.js	/^			var glType = utils.convert( renderTarget.texture.type );$/;"	r
glVertexShader	js/three.js	/^		this.vertexShader = glVertexShader;$/;"	r
glVertexShader	js/three.js	/^		var glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );$/;"	r
globalState	js/three.js	/^				uniform.value = globalState;$/;"	r
globalState	js/three.js	/^			globalState = null,$/;"	r
globalState	js/three.js	/^			globalState = projectPlanes( planes, camera, 0 );$/;"	r
glossiness	js/GLTFLoader.js	/^					'float glossinessFactor = glossiness;',$/;"	r
glossiness	js/GLTFLoader.js	/^				material.glossiness = params.glossiness;$/;"	r
glossiness	js/GLTFLoader.js	/^				params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;$/;"	r
glossiness	js/GLTFLoader.js	/^				uniforms.glossiness = { value: 0.5 };$/;"	r
glossiness	js/GLTFLoader.js	/^				uniforms.glossiness.value = material.glossiness;$/;"	r
glossinessMap	js/GLTFLoader.js	/^					uvScaleMap = material.glossinessMap;$/;"	r
glossinessMap	js/GLTFLoader.js	/^				material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;$/;"	r
glossinessMap	js/GLTFLoader.js	/^				uniforms.glossinessMap = { value: null };$/;"	r
glossinessMap	js/GLTFLoader.js	/^				uniforms.glossinessMap.value = material.glossinessMap;$/;"	r
glossinessMapFragmentChunk	js/GLTFLoader.js	/^				var glossinessMapFragmentChunk = [$/;"	r
glossinessMapParsFragmentChunk	js/GLTFLoader.js	/^				var glossinessMapParsFragmentChunk = [$/;"	r
glyph	js/three.js	/^				var glyph = data.glyphs[ c ] || data.glyphs[ '?' ];$/;"	r
gradientMap	js/three.js	/^				data.gradientMap = this.gradientMap.toJSON( meta ).uuid;$/;"	r
gradientMap	js/three.js	/^				gradientMap: !! material.gradientMap,$/;"	r
gradientMap	js/three.js	/^				uniforms.gradientMap.value = material.gradientMap;$/;"	r
gradientMap	js/three.js	/^			gradientMap: { value: null }$/;"	r
gradientMap	js/three.js	/^		this.gradientMap = null;$/;"	r
gradientMap	js/three.js	/^		this.gradientMap = source.gradientMap;$/;"	r
gradientMap	js/three.min.js	/^a);this.gradientMap=a.gradientMap;return this};ob.prototype=Object.create(Q.prototype);ob.prototype.constructor=ob;ob.prototype.isMeshNormalMaterial=!0;ob.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;$/;"	r
gradientmap	js/three.js	/^				UniformsLib.gradientmap,$/;"	r
gradientmap	js/three.js	/^		gradientmap: {$/;"	r
gradientmap_pars_fragment	js/three.js	/^		gradientmap_pars_fragment: gradientmap_pars_fragment,$/;"	r
gradientmap_pars_fragment	js/three.js	/^	var gradientmap_pars_fragment = "#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n";$/;"	r
gradientmap_pars_fragment	js/three.min.js	/^gradientmap_pars_fragment:"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n",$/;"	r
grid	js/three.js	/^		var grid = [];$/;"	r
gridX	js/three.js	/^		var gridX = Math.floor( widthSegments ) || 1;$/;"	r
gridX1	js/three.js	/^			var gridX1 = gridX + 1;$/;"	r
gridX1	js/three.js	/^		var gridX1 = gridX + 1;$/;"	r
gridY	js/three.js	/^		var gridY = Math.floor( heightSegments ) || 1;$/;"	r
gridY1	js/three.js	/^			var gridY1 = gridY + 1;$/;"	r
gridY1	js/three.js	/^		var gridY1 = gridY + 1;$/;"	r
groundColor	js/three.js	/^							groundColor: new Color()$/;"	r
groundColor	js/three.js	/^				groundColor: {}$/;"	r
groundColor	js/three.js	/^		this.groundColor = new Color( groundColor );$/;"	r
groundColor	js/three.js	/^	function HemisphereLight( skyColor, groundColor, intensity ) {$/;"	r
group	js/GLTFLoader.js	/^				var group = new THREE.Group();$/;"	r
group	js/three.js	/^								var group = groups[ i ];$/;"	r
group	js/three.js	/^							var group = groups[ k ];$/;"	r
group	js/three.js	/^						var group = groups[ j ];$/;"	r
group	js/three.js	/^					group = groups[ o ];$/;"	r
group	js/three.js	/^					group = {$/;"	r
group	js/three.js	/^					group: group$/;"	r
group	js/three.js	/^					var group = groups[ i ];$/;"	r
group	js/three.js	/^				renderItem.group = group;$/;"	r
group	js/three.js	/^				var group = groups[ i ];$/;"	r
group	js/three.js	/^				var group = renderItem.group;$/;"	r
group	js/three.js	/^			var group = new Group();$/;"	r
group	js/three.js	/^			var group, start, count;$/;"	r
group	js/three.js	/^			var group;$/;"	r
groupCount	js/three.js	/^				groupCount = 0;$/;"	r
groupCount	js/three.js	/^				groupStart += groupCount;$/;"	r
groupCount	js/three.js	/^				this.addGroup( groupStart, groupCount, i ); \/\/ enables MultiMaterial support$/;"	r
groupCount	js/three.js	/^			groupStart += groupCount;$/;"	r
groupCount	js/three.js	/^			scope.addGroup( groupStart, groupCount, 0 );$/;"	r
groupCount	js/three.js	/^			scope.addGroup( groupStart, groupCount, materialIndex );$/;"	r
groupCount	js/three.js	/^			scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );$/;"	r
groupCount	js/three.js	/^			var groupCount = 0;$/;"	r
groupCount	js/three.js	/^			var groupCount = group !== null ? group.count * rangeFactor : Infinity;$/;"	r
groupCount	js/three.js	/^		var groupCount = 0;$/;"	r
groupMaterial	js/three.js	/^								var depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );$/;"	r
groupMaterial	js/three.js	/^								var groupMaterial = material[ group.materialIndex ];$/;"	r
groupMaterial	js/three.js	/^							var groupMaterial = material[ group.materialIndex ];$/;"	r
groupStart	js/three.js	/^			var groupStart = group !== null ? group.start * rangeFactor : 0;$/;"	r
groupStart	js/three.js	/^		var groupStart = 0;$/;"	r
groups	js/three.js	/^							var groups = geometry.groups;$/;"	r
groups	js/three.js	/^						var groups = geometry.groups;$/;"	r
groups	js/three.js	/^					groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];$/;"	r
groups	js/three.js	/^				data.data.groups = JSON.parse( JSON.stringify( groups ) );$/;"	r
groups	js/three.js	/^				groups = geometry.groups;$/;"	r
groups	js/three.js	/^				this.groups = geometry.groups;$/;"	r
groups	js/three.js	/^			this.groups = [];$/;"	r
groups	js/three.js	/^			this.groups = geometry.groups;$/;"	r
groups	js/three.js	/^			this.groups = groups;$/;"	r
groups	js/three.js	/^			var groups = [];$/;"	r
groups	js/three.js	/^			var groups = geometry.groups;$/;"	r
groups	js/three.js	/^			var groups = json.data.groups || json.data.drawcalls || json.data.offsets;$/;"	r
groups	js/three.js	/^			var groups = source.groups;$/;"	r
groups	js/three.js	/^			var groups = this.groups;$/;"	r
groups	js/three.js	/^		this.groups = [];$/;"	r
groups	js/three.min.js	/^new Float32Array(2*a.uvs2.length),this.addAttribute("uv2",(new O(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<Qd(a.indices)?Uint32Array:Uint16Array)(3*a.indices.length),this.setIndex((new O(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,f=d.length;e<f;e++){var g=d[e],h=new z(3*g.length,3);b.push(h.copyVector3sArray(g))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new z(4*a.skinIndices.length,$/;"	r
groups	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
groups	js/three.min.js	/^{};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Hb(a,b,c,d,e,f){L.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fb(a,b,c,d,e,f));this.mergeVertices()}function fb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,m,ya,ja,ma){var B=f\/ya,v=g\/ja,t=f\/2,x=g\/2,I=m\/2;g=ya+1;var A=ja+1,y=f=0,J,w,z=new p;for(w=0;w<A;w++){var D=w*v-x;for(J=0;J<g;J++)z[a]=$/;"	r
groupsNeedUpdate	js/three.js	/^				direct.groupsNeedUpdate = geometry.groupsNeedUpdate;$/;"	r
groupsNeedUpdate	js/three.js	/^				geometry.groupsNeedUpdate = false;$/;"	r
groupsNeedUpdate	js/three.js	/^			this.groupsNeedUpdate = geometry.groupsNeedUpdate;$/;"	r
groupsNeedUpdate	js/three.js	/^			this.groupsNeedUpdate = source.groupsNeedUpdate;$/;"	r
groupsNeedUpdate	js/three.js	/^		this.groupsNeedUpdate = false;$/;"	r
guessSizeSq	js/three.js	/^				var guessSizeSq = worldScale.x * worldScale.y \/ 4;$/;"	r
h	js/three.js	/^							var h = parseFloat( color[ 1 ] ) \/ 360;$/;"	r
h	js/three.js	/^				h = _Math.euclideanModulo( h, 1 );$/;"	r
h	js/three.js	/^			hsl.h += h; hsl.s += s; hsl.l += l;$/;"	r
h	js/three.js	/^			hsl.h = hue;$/;"	r
h	js/three.js	/^			setPoint( 'f3', - w, h, 1 );$/;"	r
h	js/three.js	/^			setPoint( 'n3', - w, h, - 1 );$/;"	r
h	js/three.js	/^			var h = 1.0 \/ ( top - bottom );$/;"	r
h	js/three.min.js	/^!1;break a}}}y=!0}}if(y){d.push([a[e[k]],a[e[g]],a[e[l]]]);f.push([e[k],e[g],e[l]]);k=g;for(l=g+1;l<c;k++,l++)e[k]=e[l];c--;h=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a){var b=a.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function d(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-c.x,l=e.y-c.y,m=a.x-c.x,n=a.y-c.y,q=h*k-g*l,p=h*m-g*n;if(Math.abs(q)>Number.EPSILON){if(0<$/;"	r
h	js/three.min.js	/^(h.push(e),k.push(k[0]));f.push((new fc(".morphTargetInfluences["+b[g].name+"]",h,k)).scale(1\/c))}return new ra(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(a=0;a<c.length;a++)if(c[a].name===b)return c[a];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d,e={},f=\/^([\\w-]*?)([\\d]+)$\/,g=0,h=a.length;g<h;g++){var k=a[g],l=k.name.match(f);l&&1<l.length&&(d=l[1],(l=e[d])||(e[d]=l=[]),l.push(k))}a=[];for(d in e)a.push(ra.CreateFromMorphTargetSequence(d,$/;"	r
h	js/three.min.js	/^0),f;if(void 0!==$a[a])$a[a].push({onLoad:b,onProgress:c,onError:d});else{var g=a.match(\/^data:(.*?)(;base64)?,(.*)$\/);if(g){c=g[1];var h=!!g[2],g=g[3],g=window.decodeURIComponent(g);h&&(g=window.atob(g));try{var k=(this.responseType||"").toLowerCase();switch(k){case "arraybuffer":case "blob":for(var l=new Uint8Array(g.length),h=0;h<g.length;h++)l[h]=g.charCodeAt(h);var m="blob"===k?new Blob([l.buffer],{type:c}):l.buffer;break;case "document":m=(new DOMParser).parseFromString(g,c);break;case "json":m=$/;"	r
h	js/three.min.js	/^0,2*Math.PI);var e=[],f=[],g=[],h=1\/b,k=new p,l=new D,q;for(q=0;q<=b;q++){var n=c+q*h*d;var u=Math.sin(n),m=Math.cos(n);for(n=0;n<=a.length-1;n++)k.x=a[n].x*u,k.y=a[n].y,k.z=a[n].x*m,f.push(k.x,k.y,k.z),l.x=q\/b,l.y=n\/(a.length-1),g.push(l.x,l.y)}for(q=0;q<b;q++)for(n=0;n<a.length-1;n++)c=n+q*a.length,h=c+a.length,k=c+a.length+1,l=c+1,e.push(c,h,l),e.push(h,k,l);this.setIndex(e);this.addAttribute("position",new z(f,3));this.addAttribute("uv",new z(g,2));this.computeVertexNormals();if(d===2*Math.PI)for(d=$/;"	r
h	js/three.min.js	/^6]=h;g[e+7]=l;g[e+8]=k}F.bufferData(F.ARRAY_BUFFER,a.normalArray,F.DYNAMIC_DRAW);aa.enableAttribute(b.normal);F.vertexAttribPointer(b.normal,3,F.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(F.bindBuffer(F.ARRAY_BUFFER,d.uv),F.bufferData(F.ARRAY_BUFFER,a.uvArray,F.DYNAMIC_DRAW),aa.enableAttribute(b.uv),F.vertexAttribPointer(b.uv,2,F.FLOAT,!1,0,0));a.hasColors&&0!==c.vertexColors&&(F.bindBuffer(F.ARRAY_BUFFER,d.color),F.bufferData(F.ARRAY_BUFFER,a.colorArray,F.DYNAMIC_DRAW),aa.enableAttribute(b.color),F.vertexAttribPointer(b.color,$/;"	r
h	js/three.min.js	/^Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.count;h<k;h++){var l=a.getX(h),q=a.getY(h),n=a.getZ(h);l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new p;return function(b,c){c=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);$/;"	r
h	js/three.min.js	/^Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute("position",new z(b,3));b=new T({fog:!1});this.cone=new P(a,b);this.add(this.cone);this.update()}function df(a){var b=[];a&&a.isBone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,df(a.children[c]));return b}function lc(a){for(var b=df(a),c=new C,d=[],e=[],f=new H(0,0,1),g=new H(0,1,0),h=0;h<b.length;h++){var k=b[h];k.parent&&k.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.addAttribute("position",$/;"	r
h	js/three.min.js	/^Y.get(a).__webglFramebuffer;if(g){var h=!1;g!==N&&(F.bindFramebuffer(F.FRAMEBUFFER,g),h=!0);try{var l=a.texture,k=l.format,n=l.type;1023!==k&&ra.convert(k)!==F.getParameter(F.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):1009===n||ra.convert(n)===F.getParameter(F.IMPLEMENTATION_COLOR_READ_TYPE)||1015===n&&(ha.get("OES_texture_float")||ha.get("WEBGL_color_buffer_float"))||1016===n&&ha.get("EXT_color_buffer_half_float")?$/;"	r
h	js/three.min.js	/^a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA))}E=D=ga=z=w=ya=null}else{l=l||d;k=k||g;n=n||h;if(d!==ya||l!==ga)a.blendEquationSeparate(c.convert(d),c.convert(l)),ya=d,ga=l;if(g!==w||h!==z||k!==D||n!==E)a.blendFuncSeparate(c.convert(g),c.convert(h),c.convert(k),c.convert(n)),w=g,z=h,D=k,E=n}J=b;M=q}function h(b){C!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),C=b)}$/;"	r
h	js/three.min.js	/^a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;return this};Object.assign(Na.prototype,{isBox3:!0,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],q=a[h+1],n=a[h+2];l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromBufferAttribute:function(a){for(var b=$/;"	r
h	js/three.min.js	/^a;return this},setMimeType:function(a){this.mimeType=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});Object.assign(Qe.prototype,{load:function(a,b,c,d){function e(e){l.load(a[e],function(a){a=g._parser(a,!0);h[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};f+=1;6===f&&(1===a.mipmapCount&&(k.minFilter=1006),k.format=a.format,k.needsUpdate=!0,b&&b(k))},c,d)}var f,g=this,h=[],k=new Nb;k.image=h;var l=new Ja(this.manager);l.setPath(this.path);l.setResponseType("arraybuffer");$/;"	r
h	js/three.min.js	/^a};this.setIndex=function(a){e=a.type;f=a.bytesPerElement};this.render=function(b,h){a.drawElements(d,h,e,b*f);c.calls++;c.vertices+=h;d===a.TRIANGLES?c.faces+=h\/3:d===a.POINTS&&(c.points+=h)};this.renderInstances=function(g,h,k){var l=b.get("ANGLE_instanced_arrays");null===l?console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."):(l.drawElementsInstancedANGLE(d,k,e,h*f,g.maxInstancedCount),c.calls++,c.vertices+=$/;"	r
h	js/three.min.js	/^b));this.mergeVertices()}function $b(a,b){function c(a){var c,h=e.length\/3;a=a.extractPoints(b);var l=a.shape,q=a.holes;if(!1===Ha.isClockWise(l))for(l=l.reverse(),a=0,c=q.length;a<c;a++){var m=q[a];!0===Ha.isClockWise(m)&&(q[a]=m.reverse())}var p=Ha.triangulateShape(l,q);a=0;for(c=q.length;a<c;a++)m=q[a],l=l.concat(m);a=0;for(c=l.length;a<c;a++)m=l[a],e.push(m.x,m.y,0),f.push(0,0,1),g.push(m.x,m.y);a=0;for(c=p.length;a<c;a++)l=p[a],d.push(l[0]+h,l[1]+h,l[2]+h),k+=3}C.call(this);this.type="ShapeBufferGeometry";$/;"	r
h	js/three.min.js	/^b,c)})}function h(a){null!==Ba&&Ba(a);(la.getDevice()||window).requestAnimationFrame(h)}function k(a,b,c){if(!1!==a.visible){if(a.layers.test(b.layers))if(a.isLight)ja.push(a),a.castShadow&&z.push(a);else if(a.isSprite)a.frustumCulled&&!Td.intersectsSprite(a)||C.push(a);else if(a.isLensFlare)Ua.push(a);else if(a.isImmediateRenderObject)c&&Jb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(md),D.push(a,null,a.material,Jb.z,null);else if(a.isMesh||a.isLine||a.isPoints)if(a.isSkinnedMesh&&a.skeleton.update(),$/;"	r
h	js/three.min.js	/^b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length\/3-1)}var d=new C,e=new T({color:16777215,vertexColors:1}),f=[],g=[],h={},k=new H(16755200),l=new H(16711680),q=new H(43775),n=new H(16777215),u=new H(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",l);b("p","n2",l);b("p","n3",l);b("p","n4",$/;"	r
h	js/three.min.js	/^b.width,b.height);break;case "SpotLight":g=new wd(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);break;case "HemisphereLight":g=new ud(b.color,b.groundColor,b.intensity);break;case "SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case "Mesh":g=e(b.geometry);var h=f(b.material);g=g.bones&&0<g.bones.length?new qd(g,h):new qa(g,h);break;case "LOD":g=new Cc;break;case "Line":g=new oa(e(b.geometry),f(b.material),b.mode);break;case "LineLoop":g=$/;"	r
h	js/three.min.js	/^c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a)},normalizeNormals:function(){var a=new p;return function(){for(var b=this.attributes.normal,c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.normalize(),b.setXYZ(c,a.x,a.y,a.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),$/;"	r
h	js/three.min.js	/^d&&(k=u,l=b.customDistanceMaterial);l?k=l:(l=!1,c.morphTargets&&(h&&h.isBufferGeometry?l=h.morphAttributes&&h.morphAttributes.position&&0<h.morphAttributes.position.length:h&&h.isGeometry&&(l=h.morphTargets&&0<h.morphTargets.length)),b.isSkinnedMesh&&!1===c.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",b),b=b.isSkinnedMesh&&c.skinning,h=0,l&&(h|=1),b&&(h|=2),k=k[h]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(h=$/;"	r
h	js/three.min.js	/^d=m.aspect*this.aspect;e=m.near;f=m.far;g=m.zoom;var n=m.projectionMatrix.clone();h=this.eyeSep\/2;var q=h*e\/b,p=e*Math.tan(R.DEG2RAD*c*.5)\/g;l.elements[12]=-h;k.elements[12]=h;var v=-p*d+q;var t=p*d+q;n.elements[0]=2*e\/(t-v);n.elements[8]=(t+v)\/(t-v);this.cameraL.projectionMatrix.copy(n);v=-p*d-q;t=p*d-q;n.elements[0]=2*e\/(t-v);n.elements[8]=(t+v)\/(t-v);this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(m.matrixWorld).multiply(l);this.cameraR.matrixWorld.copy(m.matrixWorld).multiply(k)}}()});$/;"	r
h	js/three.min.js	/^dd.prototype.constructor=dd;dd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var m=f[k],n=m.normal;a.copy(g[m.a]).add(g[m.b]).add(g[m.c]).divideScalar(3).applyMatrix4(d);b.copy(n).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);e.setXYZ(h,$/;"	r
h	js/three.min.js	/^e)&&.1>Math.abs(d+h)&&.1>Math.abs(g+k)&&.1>Math.abs(b+f+l-3))return this.set(1,0,0,0),this;a=Math.PI;b=(b+1)\/2;f=(f+1)\/2;l=(l+1)\/2;c=(c+e)\/4;d=(d+h)\/4;g=(g+k)\/4;b>f&&b>l?.01>b?(k=0,c=h=.707106781):(k=Math.sqrt(b),h=c\/k,c=d\/k):f>l?.01>f?(k=.707106781,h=0,c=.707106781):(h=Math.sqrt(f),k=c\/h,c=g\/h):.01>l?(h=k=.707106781,c=0):(c=Math.sqrt(l),k=d\/c,h=g\/c);this.set(k,h,c,a);return this}a=Math.sqrt((k-g)*(k-g)+(d-h)*(d-h)+(e-c)*(e-c));.001>Math.abs(a)&&(a=1);this.x=(k-g)\/a;this.y=(d-h)\/a;this.z=(e-c)\/a;$/;"	r
h	js/three.min.js	/^e,c=e.x):(b=e,q=e.x,l=c,c=c.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),c.y<e.y?(b=c,q=c.y,l=e,c=e.y):(b=e,q=e.y,l=c,c=c.y));return k<=q?a<q?[]:a===q?f?[]:[b]:a<=c?[b,h]:[b,l]:k>c?[]:k===c?f?[]:[g]:a<=c?[g,h]:[g,l]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}c(a);b.forEach(c);var g,h={},k=a.concat();var l=0;for(g=b.length;l<g;l++)Array.prototype.push.apply(k,$/;"	r
h	js/three.min.js	/^f instanceof Uint16Array?d=a.UNSIGNED_SHORT:f instanceof Int16Array?d=a.SHORT:f instanceof Uint32Array?d=a.UNSIGNED_INT:f instanceof Int32Array?d=a.INT:f instanceof Int8Array?d=a.BYTE:f instanceof Uint8Array&&(d=a.UNSIGNED_BYTE);b[e]={buffer:h,type:d,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}else e.version<c.version&&(f=c,h=f.array,g=f.updateRange,a.bindBuffer(d,e.buffer),!1===f.dynamic?a.bufferData(d,h,a.STATIC_DRAW):-1===g.count?a.bufferSubData(d,0,h):0===g.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):$/;"	r
h	js/three.min.js	/^fragmentShader:a.fragmentShader},a.onBeforeCompile(d.shader),h=oa.acquireProgram(a,d.shader,c,g),d.program=h,a.program=h);c=h.getAttributes();if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<M.maxMorphTargets;g++)0<=c["morphTarget"+g]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(g=a.numSupportedMorphNormals=0;g<M.maxMorphNormals;g++)0<=c["morphNormal"+g]&&a.numSupportedMorphNormals++;c=d.shader.uniforms;if(!a.isShaderMaterial&&!a.isRawShaderMaterial||!0===a.clipping)d.numClippingPlanes=$/;"	r
h	js/three.min.js	/^function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new Ta,g=new Wc(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(td.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){var e=new Wc(this.manager);e.setCrossOrigin(this.crossOrigin);e.setPath(this.path);var f=new da;f.image=e.load(a,$/;"	r
h	js/three.min.js	/^function(a,c,d,e){a="";for(c=parseInt(c);c<parseInt(d);c++)a+=e.replace(\/\\[ i \\]\/g,"[ "+c+" ]");return a})}function hg(a,b,c,d,e,f){var g=a.context,h=d.defines,k=e.vertexShader,l=e.fragmentShader,q="SHADOWMAP_TYPE_BASIC";1===f.shadowMapType?q="SHADOWMAP_TYPE_PCF":2===f.shadowMapType&&(q="SHADOWMAP_TYPE_PCF_SOFT");var n="ENVMAP_TYPE_CUBE",u="ENVMAP_MODE_REFLECTION",r="ENVMAP_BLENDING_MULTIPLY";if(f.envMap){switch(d.envMap.mapping){case 301:case 302:n="ENVMAP_TYPE_CUBE";break;case 306:case 307:n="ENVMAP_TYPE_CUBE_UV";$/;"	r
h	js/three.min.js	/^g.uuid);void 0===b[g.image]&&console.warn("THREE.ObjectLoader: Undefined image",g.image);var h=new da(b[g.image]);h.needsUpdate=!0;h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);void 0!==g.mapping&&(h.mapping=c(g.mapping,ug));void 0!==g.offset&&h.offset.fromArray(g.offset);void 0!==g.repeat&&h.repeat.fromArray(g.repeat);void 0!==g.center&&h.center.fromArray(g.center);void 0!==g.rotation&&(h.rotation=g.rotation);void 0!==g.wrap&&(h.wrapS=c(g.wrap[0],hf),h.wrapT=c(g.wrap[1],hf));void 0!==g.minFilter&&$/;"	r
h	js/three.min.js	/^h=0,k=a.length;h<k;h++)g.setXYZ(a[h],d.x,d.y,d.z)}var b,c,d=new p,e=new Ka;return function(){b=this.geometry;c=this.pointMap;e.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",.7,1.1,-1);a("u2",-.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",$/;"	r
h	js/three.min.js	/^h=d.attributes.normal,p=d=0,r=e.count;p<r;p++)a.set(e.getX(p),e.getY(p),e.getZ(p)).applyMatrix4(f),b.set(h.getX(p),h.getY(p),h.getZ(p)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),g.setXYZ(d,a.x,a.y,a.z),d+=1,g.setXYZ(d,b.x,b.y,b.z),d+=1;g.needsUpdate=!0}}();kc.prototype=Object.create(w.prototype);kc.prototype.constructor=kc;kc.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};kc.prototype.update=function(){var a=new p,b=new p;return function(){this.light.updateMatrixWorld();$/;"	r
h	js/three.min.js	/^if(h>g||g!==g)g=h;if(a<c||c!==c)c=a;return 0>c?null:this.at(0<=g?g:c,b)},intersectsBox:function(){var a=new p;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new p,b=new p,c=new p,d=new p;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;$/;"	r
h	js/three.min.js	/^if(void 0!==l[f].normals)for(d.normals=[],e=0,c=l[f].normals.length;e<c;e++)d.normals.push(l[f].normals[e].clone());this.morphTargets.push(d)}l=a.morphNormals;f=0;for(b=l.length;f<b;f++){d={};if(void 0!==l[f].vertexNormals)for(d.vertexNormals=[],e=0,c=l[f].vertexNormals.length;e<c;e++)g=l[f].vertexNormals[e],h={},h.a=g.a.clone(),h.b=g.b.clone(),h.c=g.c.clone(),d.vertexNormals.push(h);if(void 0!==l[f].faceNormals)for(d.faceNormals=[],e=0,c=l[f].faceNormals.length;e<c;e++)d.faceNormals.push(l[f].faceNormals[e].clone());$/;"	r
h	js/three.min.js	/^k.length;d++){var g=b[k[d]];for(f=0;f<g.length;f++){var h=f+1;h%=g.length;h=e(a,c,g[f],g[h],!0);if(0<h.length)return!0}}return!1}var h=a.concat(),k=[],l,m;a=[];var q,n=0;for(l=b.length;n<l;n++)k.push(n);var p=0;for(var u=2*k.length;0<k.length;){u--;if(0>u){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}for(m=p;m<h.length;m++){var w=h[m];l=-1;for(n=0;n<k.length;n++){var z=k[n];var D=w.x+":"+w.y+":"+z;if(void 0===a[D]){var C=$/;"	r
h	js/three.min.js	/^l.z=h,l.group=k);(!0===g.transparent?d:c).push(l);b++},sort:function(){1<c.length&&c.sort(Rf);1<d.length&&d.sort(Sf)}}}function Uf(){var a={};return{get:function(b,c){b=b.id+","+c.id;c=a[b];void 0===c&&(c=new Tf,a[b]=c);return c},dispose:function(){a={}}}}function Vf(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Wf(a){var b={},c=new Float32Array(8);return{update:function(d,e,f,g){var h=d.morphTargetInfluences,k=h.length;d=b[e.id];if(void 0===d){d=[];for(var l=0;l<k;l++)d[l]=[l,0];b[e.id]=d}var q=$/;"	r
h	js/three.min.js	/^m[u+1]*h,n.z=m[u+2]*h,l.push(n);if(void 0!==g.morphColors&&0<g.morphColors.length)for(console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'),h=c.faces,g=g.morphColors[0].colors,d=0,r=h.length;d<r;d++)h[d].color.fromArray(g,3*d);g=a;d=[];r=[];void 0!==g.animation&&r.push(g.animation);void 0!==g.animations&&(g.animations.length?r=r.concat(g.animations):r.push(g.animations));for(g=0;g<r.length;g++)(h=ra.parseAnimation(r[g],c.bones))&&d.push(h);c.morphTargets&&$/;"	r
h	js/three.min.js	/^q);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){return(new L).copy(this)},copy:function(a){var b,c,d;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var e=a.vertices;var f=0;for(b=e.length;f<b;f++)this.vertices.push(e[f].clone());e=a.colors;f=0;for(b=e.length;f<b;f++)this.colors.push(e[f].clone());$/;"	r
h	js/three.min.js	/^q){if(0>p||p>q)return[];k=l*m-k*n;if(0>k||k>q)return[]}else{if(0<p||p<q)return[];k=l*m-k*n;if(0<k||k<q)return[]}if(0===k)return!f||0!==p&&p!==q?[a]:[];if(k===q)return!f||0!==p&&p!==q?[b]:[];if(0===p)return[c];if(p===q)return[e];f=k\/q;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==p||l*m!==k*n)return[];h=0===g&&0===h;k=0===k&&0===l;if(h&&k)return a.x!==c.x||a.y!==c.y?[]:[a];if(h)return d(c,e,a)?[a]:[];if(k)return d(a,b,c)?[c]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),c.x<e.x?(b=c,q=c.x,l=$/;"	r
h	js/three.min.js	/^return a.join("\/")+"\/"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a={NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},b=new H,c=new td,d=new Id;return function(e,f,g){function h(a,b,d,e,h){a=f+a;var l=gc.Handlers.get(a);null!==l?a=l.load(a):(c.setCrossOrigin(g),a=c.load(a));void 0!==b&&(a.repeat.fromArray(b),1!==b[0]&&(a.wrapS=1E3),1!==b[1]&&(a.wrapT=$/;"	r
h	js/three.min.js	/^this.add(g);var h=new Y(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new p(0,0,1));this.add(h);var k=new Y(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new p(0,0,-1));this.add(k);this.renderTarget=new Eb(c,c,{format:1022,magFilter:1006,minFilter:1006});this.renderTarget.texture.name="CubeCamera";this.update=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,l=c.texture.generateMipmaps;c.texture.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);$/;"	r
h	js/three.min.js	/^this.fromBufferGeometry(new Ub(a,b,c,d,e,f));this.mergeVertices()}function Ub(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c\/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}C.call(this);this.type="TorusKnotBufferGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],k=[],l=[],q=[],n,u=new p,m=new p,v=new p,t=new p,x=new p,y=new p,B=new p;for(n=0;n<=$/;"	r
h	js/three.min.js	/^this.matrix.toArray();void 0!==this.geometry&&(f.geometry=b(a.geometries,this.geometry));if(void 0!==this.material)if(Array.isArray(this.material)){for(var g=[],h=0,k=this.material.length;h<k;h++)g.push(b(a.materials,this.material[h]));f.material=g}else f.material=b(a.materials,this.material);if(0<this.children.length)for(f.children=[],h=0;h<this.children.length;h++)f.children.push(this.children[h].toJSON(a).object);d&&(d=c(a.geometries),g=c(a.materials),h=c(a.textures),k=c(a.images),0<d.length&&$/;"	r
h	js/three.min.js	/^this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,k=0;if(!1===Array.isArray(a))c(a);else for(var l=0;l<a.length;l++)c(a[l]),this.addGroup(h,k,l),h+=k,k=0;this.setIndex(d);this.addAttribute("position",new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function ac(a,b){C.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:b};var c=[];b=Math.cos(R.DEG2RAD*(void 0!==b?b:1));var d=[0,0],e={},f=["a","b","c"];if(a.isBufferGeometry){var g=$/;"	r
h	js/three.min.js	/^this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;var h=[],k=[];(function(a){for(var c=new p,d=new p,g=new p,h=0;h<b.length;h+=3){f(b[h+0],c);f(b[h+1],d);f(b[h+2],g);var k,l,m=c,y=d,B=g,I=Math.pow(2,a),A=[];for(l=0;l<=I;l++){A[l]=[];var J=m.clone().lerp(B,l\/I),w=y.clone().lerp(B,l\/I),z=I-l;for(k=0;k<=z;k++)A[l][k]=0===k&&l===I?J:J.clone().lerp(w,k\/z)}for(l=0;l<I;l++)for(k=0;k<2*(I-l)-1;k++)m=Math.floor(k\/2),0===k%2?(e(A[l][m+1]),e(A[l+1][m]),e(A[l][m])):(e(A[l][m+1]),e(A[l+1][m+$/;"	r
h	js/three.min.js	/^var g=this.elements;g[0]=2*e\/(b-a);g[4]=0;g[8]=(b+a)\/(b-a);g[12]=0;g[1]=0;g[5]=2*e\/(c-d);g[9]=(c+d)\/(c-d);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)\/(f-e);g[14]=-2*f*e\/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1\/(b-a),k=1\/(c-d),l=1\/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;$/;"	r
h2	js/three.js	/^								holeIndex = h2;$/;"	r
hIdx	js/three.js	/^						hIdx, nextIdx, intersection;$/;"	r
ha	js/three.min.js	/^ha.get("OES_texture_half_float_linear");ha.get("OES_standard_derivatives");ha.get("OES_element_index_uint");ha.get("ANGLE_instanced_arrays");ra=new Pe(F,ha);X=new ng(F,ha,a);aa=new mg(F,ha,ra);aa.scissor(V.copy(da).multiplyScalar(P));aa.viewport(Q.copy(ca).multiplyScalar(P));Y=new lg;S=new kg(F,ha,aa,Y,X,ra,Vd);pa=new Mf(F);qa=new Zf(F,pa,Vd);ta=new bg(qa,Qa);va=new Wf(F);oa=new jg(M,ha,X);ua=new ag;sa=new Uf;ia=new Qf(M,aa,qa,J);wa=new Yf(F,ha,Qa);xa=new Xf(F,ha,Qa);za=new Jf(M,F,aa,S,X);Aa=new Kf(M,$/;"	r
halfAngle	js/three.js	/^			var halfAngle = angle \/ 2, s = Math.sin( halfAngle );$/;"	r
halfDt	js/three.js	/^			var halfDt = ( t1 - t0 ) * 0.5,$/;"	r
halfHeight	js/three.js	/^							halfHeight: new Vector3()$/;"	r
halfHeight	js/three.js	/^		var halfHeight = height \/ 2;$/;"	r
halfSize	js/three.js	/^				var halfSize = v1.copy( size ).multiplyScalar( 0.5 );$/;"	r
halfSize	js/three.js	/^		var halfSize = size \/ 2;$/;"	r
halfTheta	js/three.js	/^			var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );$/;"	r
halfViewportHeight	js/three.js	/^				halfViewportHeight = viewport.w * 0.5;$/;"	r
halfViewportWidth	js/three.js	/^				halfViewportWidth = viewport.z * 0.5,$/;"	r
halfWidth	js/three.js	/^							halfWidth: new Vector3(),$/;"	r
halt	js/three.js	/^		halt: function ( duration ) {$/;"	r
halt	js/three.min.js	/^setDuration:function(a){this.timeScale=this._clip.duration\/a;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a\/g;f[1]=b\/g;return this},stopWarping:function(){var a=$/;"	r
handleAlpha	js/three.js	/^			function handleAlpha( string ) {$/;"	r
handle_stop	js/three.js	/^				handle_stop: {$/;"	r
handlers	js/three.js	/^			var handlers = this.handlers;$/;"	r
handlers	js/three.js	/^		handlers: [],$/;"	r
handlers	js/three.min.js	/^typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};gc.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=this.handlers,c=0,d=b.length;c<d;c+=2){var e=b[c+1];if(b[c].test(a))return e}return null}};Object.assign(gc.prototype,{crossOrigin:void 0,extractUrlBase:function(a){a=a.split("\/");if(1===a.length)return".\/";a.pop();$/;"	r
hasEventListener	js/three.js	/^		hasEventListener: function ( type, listener ) {$/;"	r
hasEventListener	js/three.min.js	/^a||null===a)throw new TypeError("Cannot convert undefined or null to object");for(var b=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(void 0!==d&&null!==d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=d[e])}return b}}();Object.assign(ia.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;$/;"	r
hasFaceColor	js/three.js	/^					hasFaceColor = isBitSet( type, 6 );$/;"	r
hasFaceColor	js/three.js	/^					hasFaceColor, hasFaceVertexColor,$/;"	r
hasFaceColor	js/three.js	/^				var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;$/;"	r
hasFaceNormal	js/three.js	/^					hasFaceNormal = isBitSet( type, 4 );$/;"	r
hasFaceNormal	js/three.js	/^					hasFaceNormal, hasFaceVertexNormal,$/;"	r
hasFaceNormal	js/three.js	/^				var hasFaceNormal = face.normal.length() > 0;$/;"	r
hasFaceUv	js/three.js	/^				var hasFaceUv = false; \/\/ deprecated$/;"	r
hasFaceVertexColor	js/three.js	/^					hasFaceVertexColor = isBitSet( type, 7 );$/;"	r
hasFaceVertexColor	js/three.js	/^				var hasFaceVertexColor = face.vertexColors.length > 0;$/;"	r
hasFaceVertexNormal	js/three.js	/^					hasFaceVertexNormal = isBitSet( type, 5 );$/;"	r
hasFaceVertexNormal	js/three.js	/^				var hasFaceVertexNormal = face.vertexNormals.length > 0;$/;"	r
hasFaceVertexUv	js/three.js	/^					hasFaceVertexUv = isBitSet( type, 3 );$/;"	r
hasFaceVertexUv	js/three.js	/^					hasFaceVertexUv,$/;"	r
hasFaceVertexUv	js/three.js	/^				var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;$/;"	r
hasFaceVertexUv	js/three.js	/^			var hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;$/;"	r
hasFaceVertexUv2	js/three.js	/^			var hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;$/;"	r
hasMaterial	js/three.js	/^					hasMaterial = isBitSet( type, 1 );$/;"	r
hasMaterial	js/three.js	/^					hasMaterial,$/;"	r
hasMaterial	js/three.js	/^				var hasMaterial = true;$/;"	r
hasPlaybackControl	js/three.js	/^			this.hasPlaybackControl = false;$/;"	r
hasPlaybackControl	js/three.js	/^		this.hasPlaybackControl = true;$/;"	r
hasSkinIndices	js/three.js	/^			var hasSkinIndices = skinIndices.length === vertices.length;$/;"	r
hasSkinWeights	js/three.js	/^			var hasSkinWeights = skinWeights.length === vertices.length;$/;"	r
hash	js/three.js	/^				var hash = color.r.toString() + color.g.toString() + color.b.toString();$/;"	r
hash	js/three.js	/^				var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();$/;"	r
hash	js/three.js	/^				var hash = uv.x.toString() + uv.y.toString();$/;"	r
hash	js/three.js	/^			hash: '',$/;"	r
hash	js/three.js	/^			materialProperties.lightsHash = lights.state.hash;$/;"	r
hash	js/three.js	/^			state.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;$/;"	r
hash	js/three.js	/^			var hash = scene.id + ',' + camera.id;$/;"	r
haveDiagnostics	js/three.js	/^			haveDiagnostics = false;$/;"	r
haveDiagnostics	js/three.js	/^		var haveDiagnostics = true;$/;"	r
hb	js/three.min.js	/^drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function hb(a,b){this.origin=void 0!==a?a:new p;this.direction=void 0!==b?b:new p}function Ib(a,b){this.start=void 0!==a?a:new p;this.end=void 0!==b?b:new p}function Pa(a,b,c){this.a=void 0!==a?a:new p;this.b=void 0!==$/;"	r
hc	js/three.min.js	/^this.v2=b}function hc(){ca.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}function Sa(a,b,c,d,e,f,g,h){ca.call(this);this.type="EllipseCurve";this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0}function wb(a){ca.call(this);this.type="SplineCurve";this.points=void 0===a?[]:a}function xb(a,b,c,d){ca.call(this);this.type="CubicBezierCurve";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function yb(a,b,c){ca.call(this);$/;"	r
hd	js/three.min.js	/^void 0===d&&(d=16776960);void 0===c&&(c=1);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);void 0===Ld&&(Ld=new C,Ld.addAttribute("position",new z([0,0,0,0,1,0],3)),pe=new Ra(0,.5,1,5,1),pe.translate(0,-.5,0));this.position.copy(b);this.line=new oa(Ld,new T({color:d}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new qa(pe,new va({color:d}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f)}function hd(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,$/;"	r
hdr	js/three.js	/^	 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)$/;"	r
headLength	js/three.js	/^		this.cone.scale.set( headWidth, headLength, headWidth );$/;"	r
headLength	js/three.js	/^		this.setLength( length, headLength, headWidth );$/;"	r
headLength	js/three.js	/^	ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {$/;"	r
header	js/GLTFLoader.js	/^		this.header = {$/;"	r
headerView	js/GLTFLoader.js	/^		var headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );$/;"	r
height	js/three.js	/^								data.height,$/;"	r
height	js/three.js	/^								images[ f ].height = texDatas.height;$/;"	r
height	js/three.js	/^							var height = bounds.w * _height;$/;"	r
height	js/three.js	/^						height: texDatas.height,$/;"	r
height	js/three.js	/^						texture.image.height = texDatas.height;$/;"	r
height	js/three.js	/^					canvas.height = image.height;$/;"	r
height	js/three.js	/^					height: 1$/;"	r
height	js/three.js	/^					texture.image.height = texData.height;$/;"	r
height	js/three.js	/^				_canvas.style.height = height + 'px';$/;"	r
height	js/three.js	/^				canvas.height = Math.floor( image.height * scale );$/;"	r
height	js/three.js	/^				canvas.height = _Math.floorPowerOfTwo( image.height );$/;"	r
height	js/three.js	/^				height = 2 * top,$/;"	r
height	js/three.js	/^				height: _height * _pixelRatio$/;"	r
height	js/three.js	/^				height: _height$/;"	r
height	js/three.js	/^				height: {}$/;"	r
height	js/three.js	/^				renderTarget.depthTexture.image.height = renderTarget.height;$/;"	r
height	js/three.js	/^				this.height = height;$/;"	r
height	js/three.js	/^				this.shadow.mapSize.height = value;$/;"	r
height	js/three.js	/^			_canvas.height = height * _pixelRatio;$/;"	r
height	js/three.js	/^			_canvas.height = height * pixelRatio;$/;"	r
height	js/three.js	/^			_height = _canvas.height,$/;"	r
height	js/three.js	/^			_height = height;$/;"	r
height	js/three.js	/^			canvas.height = 8;$/;"	r
height	js/three.js	/^			data.object.height = this.height;$/;"	r
height	js/three.js	/^			height: height,$/;"	r
height	js/three.js	/^			this.height = source.height;$/;"	r
height	js/three.js	/^			this.view.height = height;$/;"	r
height	js/three.js	/^		height = height || 1;$/;"	r
height	js/three.js	/^		this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );$/;"	r
height	js/three.js	/^		this.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );$/;"	r
height	js/three.js	/^		this.height = ( height !== undefined ) ? height : 10;$/;"	r
height	js/three.js	/^		this.height = height;$/;"	r
height	js/three.js	/^		this.image = { width: width, height: height };$/;"	r
height	js/three.js	/^		this.setDrawingBufferSize = function ( width, height, pixelRatio ) {$/;"	r
height	js/three.js	/^		this.setSize = function ( width, height, updateStyle ) {$/;"	r
height	js/three.js	/^	function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {$/;"	r
height	js/three.js	/^	function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {$/;"	r
height	js/three.js	/^	function ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
height	js/three.js	/^	function ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
height	js/three.js	/^	function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {$/;"	r
height	js/three.js	/^	function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {$/;"	r
height	js/three.js	/^	function PlaneGeometry( width, height, widthSegments, heightSegments ) {$/;"	r
height	js/three.js	/^	function WebGLRenderTarget( width, height, options ) {$/;"	r
height	js/three.js	/^	function WebGLRenderTargetCube( width, height, options ) {$/;"	r
height	js/three.min.js	/^(J*B-t)*d,z[b]=D*e,z[c]=I,l.push(z.x,z.y,z.z),z[a]=0,z[b]=0,z[c]=0<m?1:-1,q.push(z.x,z.y,z.z),n.push(J\/ya),n.push(1-w\/ja),f+=1}for(w=0;w<ja;w++)for(J=0;J<ya;J++)a=u+J+g*(w+1),b=u+(J+1)+g*(w+1),c=u+(J+1)+g*w,k.push(u+J+g*w,a,c),k.push(a,b,c),y+=6;h.addGroup(r,y,ma);r+=y;u+=f}C.call(this);this.type="BoxBufferGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;a=a||1;b=b||1;c=c||1;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=$/;"	r
height	js/three.min.js	/^Math.floor(Math.log(a)\/Math.LN2))}};Object.defineProperties(D.prototype,{width:{get:function(){return this.x},set:function(a){this.x=a}},height:{get:function(){return this.y},set:function(a){this.y=a}}});Object.assign(D.prototype,{isVector2:!0,set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;$/;"	r
height	js/three.min.js	/^P,height:ea*P}};this.setDrawingBufferSize=function(a,b,c){W=a;ea=b;P=c;t.width=a*c;t.height=b*c;this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){ca.set(a,ea-b-d,c,d);aa.viewport(Q.copy(ca).multiplyScalar(P))};this.setScissor=function(a,b,c,d){da.set(a,ea-b-d,c,d);aa.scissor(V.copy(da).multiplyScalar(P))};this.setScissorTest=function(a){aa.setScissorTest(Oe=a)};this.getClearColor=function(){return ia.getClearColor()};this.setClearColor=function(){ia.setClearColor.apply(ia,arguments)};$/;"	r
height	js/three.min.js	/^[],l=[],q=[],n=[],u=0,r=0;g("z","y","x",-1,-1,c,b,a,f,e,0);g("z","y","x",1,-1,c,b,-a,f,e,1);g("x","z","y",1,1,a,c,b,d,f,2);g("x","z","y",1,-1,a,c,-b,d,f,3);g("x","y","z",1,-1,a,b,c,d,e,4);g("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.addAttribute("position",new z(l,3));this.addAttribute("normal",new z(q,3));this.addAttribute("uv",new z(n,2))}function zc(a,b,c,d){L.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new gb(a,$/;"	r
height	js/three.min.js	/^a&&a.restoreContext()};this.getPixelRatio=function(){return P};this.setPixelRatio=function(a){void 0!==a&&(P=a,this.setSize(W,ea,!1))};this.getSize=function(){return{width:W,height:ea}};this.setSize=function(a,b,c){var d=la.getDevice();d&&d.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(W=a,ea=b,t.width=a*P,t.height=b*P,!1!==c&&(t.style.width=a+"px",t.style.height=b+"px"),this.setViewport(0,0,a,b))};this.getDrawingBufferSize=function(){return{width:W*$/;"	r
height	js/three.min.js	/^a;return this},setMimeType:function(a){this.mimeType=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});Object.assign(Qe.prototype,{load:function(a,b,c,d){function e(e){l.load(a[e],function(a){a=g._parser(a,!0);h[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};f+=1;6===f&&(1===a.mipmapCount&&(k.minFilter=1006),k.format=a.format,k.needsUpdate=!0,b&&b(k))},c,d)}var f,g=this,h=[],k=new Nb;k.image=h;var l=new Ja(this.manager);l.setPath(this.path);l.setResponseType("arraybuffer");$/;"	r
height	js/three.min.js	/^b,c,d));this.mergeVertices()}function gb(a,b,c,d){C.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a\/2,f=b\/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a\/c,l=b\/d,q=[],n=[],u=[],r=[];for(a=0;a<h;a++){var m=a*l-f;for(b=0;b<g;b++)n.push(b*k-e,-m,0),u.push(0,0,1),r.push(b\/c),r.push(1-a\/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,q.push(b+g*a,e,h),q.push(e,f,h);this.setIndex(q);this.addAttribute("position",$/;"	r
height	js/three.min.js	/^function Nb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}function Fc(a,b,c,d,e,f,g,h,k,l){l=void 0!==l?l:1026;if(1026!==l&&1027!==l)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===l&&(c=1012);void 0===c&&1027===l&&(c=1020);da.call(this,null,d,e,f,g,h,l,c,k);this.image={width:a,height:b};this.magFilter=void 0!==g?g:1003;this.minFilter=void 0!==$/;"	r
height	js/three.min.js	/^this.view.height,e=e+this.view.offsetX\/c*f,c=e+this.view.width\/c*f,a=a-this.view.offsetY\/b*d,b=a-this.view.height\/b*d;this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});Object.assign(Oa.prototype,$/;"	r
height	js/three.min.js	/^this.width;a.object.height=this.height;return a}});var S={arraySlice:function(a,b,c){return S.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:"number"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-$/;"	r
height	js/three.min.js	/^y+=w})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(q);this.addAttribute("position",new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(m,2))}function Tc(a,b,c,d,e,f,g){lb.call(this,0,a,b,c,d,e,f,g);this.type="ConeGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Uc(a,b,c,d,e,f,g){Ra.call(this,0,a,b,c,d,e,f,g);this.type="ConeBufferGeometry";this.parameters={radius:a,height:b,radialSegments:c,$/;"	r
height	script.js	/^var height  = 400;$/;"	r
heightHalf	js/three.js	/^			var heightHalf = height \/ 2;$/;"	r
heightSegments	js/three.js	/^								data.heightSegments$/;"	r
heightSegments	js/three.js	/^								data.heightSegments,$/;"	r
heightSegments	js/three.js	/^			heightSegments: heightSegments$/;"	r
heightSegments	js/three.js	/^			heightSegments: heightSegments,$/;"	r
heightSegments	js/three.js	/^		heightSegments = Math.floor( heightSegments ) || 1;$/;"	r
heightSegments	js/three.js	/^		heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );$/;"	r
heightSegments	js/three.min.js	/^heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d){L.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new bc(a,b,c,d));this.mergeVertices()}function bc(a,b,c,d){C.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],k,l=new p,q=new D;f.push(0,$/;"	r
height_half	js/three.js	/^		var height_half = height \/ 2;$/;"	r
hemi	js/three.js	/^				uniforms.hemisphereLights.value = lights.state.hemi;$/;"	r
hemi	js/three.js	/^			hemi: []$/;"	r
hemiLength	js/three.js	/^			state.hemi.length = hemiLength;$/;"	r
hemiLength	js/three.js	/^			var hemiLength = 0;$/;"	r
hemisphereLights	js/three.js	/^			hemisphereLights: { value: [], properties: {$/;"	r
hex	js/three.js	/^								hex = colors[ colorIndex ];$/;"	r
hex	js/three.js	/^							hex = colors[ colorIndex ];$/;"	r
hex	js/three.js	/^				var hex = ColorKeywords[ style ];$/;"	r
hex	js/three.js	/^				var hex = m[ 1 ];$/;"	r
hex	js/three.js	/^			hex = Math.floor( hex );$/;"	r
hf	js/three.min.js	/^CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},hf={RepeatWrapping:1E3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},jf={NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008};Object.assign(ca.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(a,b){a=this.getUtoTmapping(a);return this.getPoint(a,b)},getPoints:function(a){void 0===$/;"	r
hg	js/three.min.js	/^function(a,c,d,e){a="";for(c=parseInt(c);c<parseInt(d);c++)a+=e.replace(\/\\[ i \\]\/g,"[ "+c+" ]");return a})}function hg(a,b,c,d,e,f){var g=a.context,h=d.defines,k=e.vertexShader,l=e.fragmentShader,q="SHADOWMAP_TYPE_BASIC";1===f.shadowMapType?q="SHADOWMAP_TYPE_PCF":2===f.shadowMapType&&(q="SHADOWMAP_TYPE_PCF_SOFT");var n="ENVMAP_TYPE_CUBE",u="ENVMAP_MODE_REFLECTION",r="ENVMAP_BLENDING_MULTIPLY";if(f.envMap){switch(d.envMap.mapping){case 301:case 302:n="ENVMAP_TYPE_CUBE";break;case 306:case 307:n="ENVMAP_TYPE_CUBE_UV";$/;"	r
hierarchyTracks	js/three.js	/^			var hierarchyTracks = animation.hierarchy || [];$/;"	r
high	js/three.js	/^					high = i - 1;$/;"	r
high	js/three.js	/^					high = i;$/;"	r
high	js/three.js	/^			i = high;$/;"	r
hl	js/three.js	/^				for ( var h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
hl	js/three.js	/^			for ( h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
hl	js/three.js	/^			for ( var h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
hl	js/three.js	/^		for ( h = 0, hl = holes.length; h < hl; h ++ ) {$/;"	r
ho	js/three.js	/^						var ho = sho[ hIdx ];$/;"	r
hole	js/three.js	/^							hole = holes[ holeIdx ];$/;"	r
hole	js/three.js	/^				var hole;$/;"	r
holeIdx	js/three.js	/^							holeIdx = indepHoles[ h ];$/;"	r
holeIdx	js/three.js	/^					holeIdx, cutKey, failedCuts = [],$/;"	r
holeIndex	js/three.js	/^								holeIndex = h2;$/;"	r
holeIndex	js/three.js	/^						holeIndex	= - 1;$/;"	r
holeIndex	js/three.js	/^				var holeIndex, shapeIndex,$/;"	r
holePt	js/three.js	/^								holePt = hole[ h2 ];$/;"	r
hole_unassigned	js/three.js	/^									hole_unassigned = false;$/;"	r
hole_unassigned	js/three.js	/^						var hole_unassigned = true;$/;"	r
holes	js/three.js	/^				holes: this.getPointsHoles( divisions )$/;"	r
holes	js/three.js	/^			var shapeHoles = points.holes;$/;"	r
holes	js/three.js	/^		this.holes = [];$/;"	r
holes	js/three.js	/^		var holes = shapePoints.holes;$/;"	r
holes	js/three.min.js	/^this.type="QuadraticBezierCurve";this.v0=a;this.v1=b;this.v2=c}function Zc(a){hc.call(this);this.type="Path";this.currentPoint=new D;a&&this.fromPoints(a)}function zb(){Zc.apply(this,arguments);this.type="Shape";this.holes=[]}function ce(){this.type="ShapePath";this.subPaths=[];this.currentPath=null}function de(a){this.type="Font";this.data=a}function Te(a){this.manager=void 0!==a?a:wa}function ee(a){this.manager=void 0!==a?a:wa}function Ue(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;$/;"	r
holesFirst	js/three.js	/^			holesFirst = isCCW ? ! holesFirst : holesFirst;$/;"	r
holesFirst	js/three.js	/^			var holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );$/;"	r
holesMovements	js/three.js	/^		var holesMovements = [],$/;"	r
holesPts	js/three.js	/^			var holesPts = [];$/;"	r
hsl	js/three.js	/^			var hsl = optionalTarget || { h: 0, s: 0, l: 0 };$/;"	r
hsl	js/three.js	/^			var hsl = this.getHSL();$/;"	r
https	js/GLTFLoader.js	/^		\/\/ Absolute URL http:\/\/,https:\/\/,\/\/$/;"	r
hue	js/three.js	/^				hue = 0;$/;"	r
hue	js/three.js	/^			hsl.h = hue;$/;"	r
hue	js/three.js	/^			var hue, saturation;$/;"	r
hue2rgb	js/three.js	/^			function hue2rgb( p, q, t ) {$/;"	r
hx	js/three.js	/^		array[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;$/;"	r
hx	js/three.js	/^		array[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;$/;"	r
hx	js/three.js	/^		array[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;$/;"	r
hx	js/three.js	/^		var hx = this.light.width * 0.5;$/;"	r
hy	js/three.js	/^		array[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;$/;"	r
hy	js/three.js	/^		var hy = this.light.height * 0.5;$/;"	r
i	js/three.js	/^								objectIndex = i;$/;"	r
i	js/three.js	/^								propertyIndex = i;$/;"	r
i	js/three.js	/^							a = i;$/;"	r
i	js/three.js	/^							state.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );$/;"	r
i	js/three.js	/^						state.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );$/;"	r
i	js/three.js	/^						state.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );$/;"	r
i	js/three.js	/^					\/\/console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);$/;"	r
i	js/three.js	/^					edges[ key ].face2 = i;$/;"	r
i	js/three.js	/^					high = i;$/;"	r
i	js/three.js	/^					i,$/;"	r
i	js/three.js	/^					indices.push( i + 1, i, c );$/;"	r
i	js/three.js	/^					var i, l;$/;"	r
i	js/three.js	/^					verticesMap[ key ] = i;$/;"	r
i	js/three.js	/^				\/\/console.log('b', i,j, i-1, k,vertices.length);$/;"	r
i	js/three.js	/^				allPointsMap[ key ] = i;$/;"	r
i	js/three.js	/^				faces[ i ]._id = i;$/;"	r
i	js/three.js	/^				i = 0;$/;"	r
i	js/three.js	/^				i = Math.floor( low + ( high - low ) \/ 2 ); \/\/ less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats$/;"	r
i	js/three.js	/^				influence[ 0 ] = i;$/;"	r
i	js/three.js	/^				j = i;$/;"	r
i	js/three.js	/^				renderTarget.activeCubeFace = i;$/;"	r
i	js/three.js	/^				var i = centerIndexEnd + x;$/;"	r
i	js/three.js	/^				var i = programs.indexOf( program );$/;"	r
i	js/three.js	/^				var i, j, fi,$/;"	r
i	js/three.js	/^			i = contour.length;$/;"	r
i	js/three.js	/^			i = high;$/;"	r
i	js/three.js	/^			indices[ arguments[ i ].uuid ] = i;$/;"	r
i	js/three.js	/^			var i = 0, il = arcLengths.length;$/;"	r
i	js/three.js	/^			var i = 0;$/;"	r
i	js/three.js	/^			var i = 1, key = jsonKeys[ 0 ];$/;"	r
i	js/three.js	/^			var i, il, f, face,$/;"	r
i	js/three.js	/^			var i, il, f, fl, face;$/;"	r
i	js/three.js	/^			var i, il, face;$/;"	r
i	js/three.js	/^			var i, il, j, jl, k, kl;$/;"	r
i	js/three.js	/^			var i, il;$/;"	r
i	js/three.js	/^			var i, j;$/;"	r
i	js/three.js	/^			var i, l, shapeHole;$/;"	r
i	js/three.js	/^			var i, u, theta;$/;"	r
i	js/three.js	/^		for ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {$/;"	r
i	js/three.js	/^		var i, j, l, o, ol;$/;"	r
i	js/three.js	/^		var i, j;$/;"	r
i	js/three.js	/^		var i, s;$/;"	r
i0	js/three.js	/^		setFromPointsAndIndices: function ( points, i0, i1, i2 ) {$/;"	r
i1	js/three.js	/^									i1 = pp.length;$/;"	r
i1	js/three.js	/^									this._cachedIndex = i1;$/;"	r
i1	js/three.js	/^								i1 = 2; \/\/ + 1, using the scan for the details$/;"	r
i1	js/three.js	/^							i1 = 0;$/;"	r
i1	js/three.js	/^							i1 = mid + 1;$/;"	r
i1	js/three.js	/^							right = i1;$/;"	r
i1	js/three.js	/^						i1 = pp.length;$/;"	r
i1	js/three.js	/^						iNext = i1;$/;"	r
i1	js/three.js	/^						iPrev = i1;$/;"	r
i1	js/three.js	/^						this._cachedIndex = i1;$/;"	r
i1	js/three.js	/^				i1 = this._cachedIndex,$/;"	r
i1	js/three.js	/^				this._cachedIndex = i1;$/;"	r
i4	js/three.js	/^					for ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {$/;"	r
iNext	js/three.js	/^						iNext = 1;$/;"	r
iNext	js/three.js	/^						iNext = i1 - 1;$/;"	r
iNext	js/three.js	/^						iNext = i1;$/;"	r
iNext	js/three.js	/^				iNext = i1 + 1,$/;"	r
iPrev	js/three.js	/^						iPrev = i1;$/;"	r
iPrev	js/three.js	/^						iPrev = pp.length - 2;$/;"	r
iPrev	js/three.js	/^				iPrev = i1 - 2,$/;"	r
ia	js/three.min.js	/^(function(m,ia){"object"===typeof exports&&"undefined"!==typeof module?ia(exports):"function"===typeof define&&define.amd?define(["exports"],ia):ia(m.THREE=m.THREE||{})})(this,function(m){function ia(){}function D(a,b){this.x=a||0;this.y=b||0}function K(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function X(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1}$/;"	r
ib	js/GLTFLoader.js	/^					var ib = new THREE.InterleavedBuffer( array, byteStride \/ elementBytes );$/;"	r
ib	js/three.min.js	/^ib={basic:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.fog]),vertexShader:V.meshbasic_vert,fragmentShader:V.meshbasic_frag},lambert:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.fog,E.lights,{emissive:{value:new H(0)}}]),vertexShader:V.meshlambert_vert,fragmentShader:V.meshlambert_frag},phong:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.bumpmap,E.normalmap,E.displacementmap,E.gradientmap,$/;"	r
ic	js/three.min.js	/^this.filter=null}function ic(a){w.call(this);this.type="Audio";this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=!1;this.offset=this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this.filters=[]}function he(a){ic.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function ie(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=$/;"	r
id	js/three.js	/^						material.id === _currentMaterialId;$/;"	r
id	js/three.js	/^					id: object.id,$/;"	r
id	js/three.js	/^				_currentMaterialId = material.id;$/;"	r
id	js/three.js	/^				id = match[ 1 ],$/;"	r
id	js/three.js	/^				renderItem.id = object.id;$/;"	r
id	js/three.js	/^				var id = faces[ i ]._id;$/;"	r
id	js/three.js	/^		this.id = id;$/;"	r
id	js/three.js	/^		this.id = programIdCount ++;$/;"	r
id	js/three.min.js	/^b}function id(a,b,c,d,e,f){Sa.call(this,a,b,c,c,d,e,f);this.type="ArcCurve"}function ef(a){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);this.type="catmullrom";this.closed=!0}function ff(a){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);this.type="catmullrom"}function re(a){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);$/;"	r
id	js/three.min.js	/^id.prototype=Object.create(Sa.prototype);id.prototype.constructor=id;id.prototype.isArcCurve=!0;ca.create=function(a,b){console.log("THREE.Curve.create() has been deprecated");a.prototype=Object.create(ca.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};Object.assign(hc.prototype,{createPointsGeometry:function(a){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getPoints(a);return this.createGeometry(a)},$/;"	r
idIsIndex	js/three.js	/^				idIsIndex = match[ 2 ] === ']',$/;"	r
identity	js/three.js	/^		identity: function () {$/;"	r
identityMatrix	js/three.js	/^			var identityMatrix = new Matrix4();$/;"	r
idx	js/three.js	/^						idx = idx + 1;$/;"	r
idx	js/three.js	/^					idx = idx + 1;$/;"	r
idx	js/three.js	/^				idx = idx + 1;$/;"	r
idx	js/three.js	/^				var idx = 0;$/;"	r
idx	js/three.js	/^				var idx = faceIndicesToRemove[ i ];$/;"	r
idx	js/three.js	/^			var idx = 0;$/;"	r
ig	js/three.min.js	/^C=g;E=h;U=k}if(w=b(this,w,u,e,C,E,U,x))I&&I[H]&&(K=I[H],m.copy(K[0]),r.copy(K[1]),v.copy(K[2]),w.uv=a(x,C,E,U,m,r,v)),w.face=N,w.faceIndex=H,p.push(w)}}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});var ig=0;Y.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Y,isPerspectiveCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,a,b);this.fov=a.fov;this.zoom=a.zoom;this.near=a.near;this.far=a.far;this.focus=a.focus;this.aspect=a.aspect;$/;"	r
ihIdx	js/three.js	/^					var ihIdx, chkHole,$/;"	r
il	js/GLTFLoader.js	/^			for ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {$/;"	r
il	js/GLTFLoader.js	/^		for ( var i = 0, il = array.length; i < il; i ++ ) {$/;"	r
il	js/GLTFLoader.js	/^		for ( var i = 0, il = targets.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^						for ( var i = 0, il = callbacks.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^						for ( var i = 0, il = indices.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^						for ( var i = start, il = start + count; i < il; i += 3 ) {$/;"	r
il	js/three.js	/^					for ( var i = 0, il = array.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^					for ( var i = 0, il = callbacks.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^					for ( var i = 0, il = position.count; i < il; i ++ ) {$/;"	r
il	js/three.js	/^					for ( var i = 0, il = positions.length; i < il; i += 9 ) {$/;"	r
il	js/three.js	/^				for ( i = 0, il = ahole.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( var i = 0, il = bones.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( var i = 0, il = normals.count; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( var i = 0, il = points.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( var i = 0, il = this.bones.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^				for ( var i = 0, il = url.length; i < il; ++ i ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = allpoints.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = colors.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = contour.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = faces.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = faces2.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = lineDistances.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = morphNormals.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = morphTargets.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = skinIndices.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = skinWeights.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = this.bones.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = this.faces.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = this.vertices.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = triangles.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = uvs2.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( i = 0, il = vertices.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = colors2.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = lights.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = morphTargets.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = newShapes.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = points.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = this.bones.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = this.faces.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = vertices.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^			for ( var i = 0, il = vertices2.length; i < il; i ++ ) {$/;"	r
il	js/three.js	/^		for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {$/;"	r
image	js/three.js	/^					canvas = image;$/;"	r
image	js/three.js	/^					texture.image = texData.image;$/;"	r
image	js/three.js	/^					texture.images[ i ] = image;$/;"	r
image	js/three.js	/^					var image = cubeImage[ 0 ],$/;"	r
image	js/three.js	/^					var image = json[ i ];$/;"	r
image	js/three.js	/^				image = makePowerOfTwo( image );$/;"	r
image	js/three.js	/^				output.image = image.uuid;$/;"	r
image	js/three.js	/^				var image = texture.image;$/;"	r
image	js/three.js	/^				var image = this.image;$/;"	r
image	js/three.js	/^			texture.image = images;$/;"	r
image	js/three.js	/^			texture.image = loader.load( url, function () {$/;"	r
image	js/three.js	/^			this.image = source.image;$/;"	r
image	js/three.js	/^			this.image = value;$/;"	r
image	js/three.js	/^			var image = clampToMaxSize( texture.image, capabilities.maxTextureSize );$/;"	r
image	js/three.js	/^			var image = document.createElementNS( 'http:\/\/www.w3.org\/1999\/xhtml', 'img' );$/;"	r
image	js/three.js	/^			var video = scope.image;$/;"	r
image	js/three.js	/^		this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;$/;"	r
image	js/three.js	/^		this.image = { data: data, width: width, height: height };$/;"	r
image	js/three.js	/^		this.image = { width: width, height: height };$/;"	r
image	js/three.min.js	/^a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function bb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:1003;this.minFilter=void 0!==l?l:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Ta(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];da.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,k,l);this.flipY=!1}function Fb(a,b,c){var d=a[0];if(0>=d||0<d)return a;var e=b*c,f=we[e];void 0===f&&(f=new Float32Array(e),$/;"	r
image	js/three.min.js	/^function Nb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}function Fc(a,b,c,d,e,f,g,h,k,l){l=void 0!==l?l:1026;if(1026!==l&&1027!==l)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===l&&(c=1012);void 0===c&&1027===l&&(c=1020);da.call(this,null,d,e,f,g,h,l,c,k);this.image={width:a,height:b};this.magFilter=void 0!==g?g:1003;this.minFilter=void 0!==$/;"	r
image	js/three.min.js	/^if(void 0!==this.image){var d=this.image;void 0===d.uuid&&(d.uuid=R.generateUUID());if(!b&&void 0===a.images[d.uuid]){var e=a.images,f=d.uuid,g=d.uuid;if(d instanceof HTMLCanvasElement)var h=d;else{h=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");h.width=d.width;h.height=d.height;var k=h.getContext("2d");d instanceof ImageData?k.putImageData(d,0,0):k.drawImage(d,0,0,d.width,d.height)}h=2048<h.width||2048<h.height?h.toDataURL("image\/jpeg",.6):h.toDataURL("image\/png");e[f]={uuid:g,$/;"	r
images	js/three.js	/^					images: {}$/;"	r
images	js/three.js	/^				if ( images.length > 0 ) data.images = images;$/;"	r
images	js/three.js	/^				if ( images.length > 0 ) output.images = images;$/;"	r
images	js/three.js	/^				var images = extractFromCache( meta.images );$/;"	r
images	js/three.js	/^			texture.image = images;$/;"	r
images	js/three.js	/^			var images = [];$/;"	r
images	js/three.js	/^			var images = this.parseImages( json.images, function () {$/;"	r
images	js/three.js	/^			var images = {};$/;"	r
images	js/three.js	/^		Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );$/;"	r
images	js/three.js	/^		images = images !== undefined ? images : [];$/;"	r
images	js/three.min.js	/^void 0===a||"string"===typeof a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};d.uuid=this.uuid;d.type=this.type;""!==this.name&&(d.name=this.name);this.color&&this.color.isColor&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);void 0!==this.metalness&&(d.metalness=this.metalness);this.emissive&&this.emissive.isColor&&(d.emissive=this.emissive.getHex());1!==this.emissiveIntensity&&(d.emissiveIntensity=this.emissiveIntensity);$/;"	r
inHolePt	js/three.js	/^							intersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );$/;"	r
inHolePt	js/three.js	/^						intersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );$/;"	r
inLegFromPt	js/three.js	/^			function isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {$/;"	r
inPrev	js/three.js	/^		function getBevelVec( inPt, inPrev, inNext ) {$/;"	r
inSeg1Pt1	js/three.js	/^							seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;$/;"	r
inSeg1Pt1	js/three.js	/^							seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;$/;"	r
inSeg1Pt1	js/three.js	/^							seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;$/;"	r
inSeg1Pt1	js/three.js	/^							seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;$/;"	r
inSeg1Pt2	js/three.js	/^							seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;$/;"	r
inSeg1Pt2	js/three.js	/^							seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;$/;"	r
inSeg1Pt2	js/three.js	/^							seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;$/;"	r
inSeg1Pt2	js/three.js	/^							seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;$/;"	r
inSeg1Pt2	js/three.js	/^						if ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )		return [];		\/\/ but not in segment#1$/;"	r
inSeg1Pt2	js/three.js	/^			function intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {$/;"	r
inSeg2Pt1	js/three.js	/^							seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;$/;"	r
inSeg2Pt1	js/three.js	/^							seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;$/;"	r
inSeg2Pt1	js/three.js	/^							seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;$/;"	r
inSeg2Pt1	js/three.js	/^							seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;$/;"	r
inSeg2Pt2	js/three.js	/^							seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;$/;"	r
inSeg2Pt2	js/three.js	/^							seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;$/;"	r
inSeg2Pt2	js/three.js	/^							seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;$/;"	r
inSeg2Pt2	js/three.js	/^							seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;$/;"	r
inSeg2Pt2	js/three.js	/^						if ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )		return [];		\/\/ but not in segment#2$/;"	r
inSegPt2	js/three.js	/^			function point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {$/;"	r
inclination	js/three.js	/^		function inclination( vector ) {$/;"	r
indepHoles	js/three.js	/^				var indepHoles = [];$/;"	r
index	js/GLTFLoader.js	/^					var specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;$/;"	r
index	js/GLTFLoader.js	/^					var textureIndex = metallicRoughness.metallicRoughnessTexture.index;$/;"	r
index	js/three.js	/^								index: i,$/;"	r
index	js/three.js	/^								intersection.index = a; \/\/ triangle number in positions buffer semantics$/;"	r
index	js/three.js	/^							index: i,$/;"	r
index	js/three.js	/^							index: index,$/;"	r
index	js/three.js	/^						face[ f ] = index;$/;"	r
index	js/three.js	/^						indicesByUUID[ lastCachedObject.uuid ] = index;$/;"	r
index	js/three.js	/^						indicesByUUID[ lastObject.uuid ] = index;$/;"	r
index	js/three.js	/^					index = allPointsMap[ key ];$/;"	r
index	js/three.js	/^					index = indicesByUUID[ uuid ],$/;"	r
index	js/three.js	/^					index = indicesByUUID[ uuid ];$/;"	r
index	js/three.js	/^					index = indices[ i ] * itemSize;$/;"	r
index	js/three.js	/^					index = nObjects ++;$/;"	r
index	js/three.js	/^					indicesByUUID[ firstActiveObject.uuid ] = index;$/;"	r
index	js/three.js	/^					indicesByUUID[ lastCachedObject.uuid ] = index;$/;"	r
index	js/three.js	/^					indicesByUUID[ uuid ] = index;$/;"	r
index	js/three.js	/^					var index = geometry.index;$/;"	r
index	js/three.js	/^					var index = influence[ 0 ];$/;"	r
index	js/three.js	/^				data.data.index = {$/;"	r
index	js/three.js	/^				index = geometries.getWireframeAttribute( geometry );$/;"	r
index	js/three.js	/^				index = indicesByPath[ path ],$/;"	r
index	js/three.js	/^				index = indicesByPath[ path ];$/;"	r
index	js/three.js	/^				indices = geometry.index;$/;"	r
index	js/three.js	/^				indicesByPath[ lastBindingsPath ] = index;$/;"	r
index	js/three.js	/^				this.index = index;$/;"	r
index	js/three.js	/^				this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );$/;"	r
index	js/three.js	/^				var index = 0, index2 = 0;$/;"	r
index	js/three.js	/^				var index = indices[ i ];$/;"	r
index	js/three.js	/^				var index = listenerArray.indexOf( listener );$/;"	r
index	js/three.js	/^			centerIndexEnd = index;$/;"	r
index	js/three.js	/^			centerIndexStart = index;$/;"	r
index	js/three.js	/^			index = bindings.length;$/;"	r
index	js/three.js	/^			index = index * this.data.stride + this.offset;$/;"	r
index	js/three.js	/^			index: indicesArray$/;"	r
index	js/three.js	/^			indicesByPath[ path ] = index;$/;"	r
index	js/three.js	/^			return this.fromBufferAttribute( attribute, index, offset );$/;"	r
index	js/three.js	/^			this.index = null;$/;"	r
index	js/three.js	/^			var geometryIndex = geometry.index;$/;"	r
index	js/three.js	/^			var index = action._cacheIndex;$/;"	r
index	js/three.js	/^			var index = geometry.index;$/;"	r
index	js/three.js	/^			var index = json.data.index;$/;"	r
index	js/three.js	/^			var index = source.index;$/;"	r
index	js/three.js	/^			var index = this.children.indexOf( object );$/;"	r
index	js/three.js	/^			var index = this.index;$/;"	r
index	js/three.js	/^		fromAttribute: function ( attribute, index, offset ) {$/;"	r
index	js/three.js	/^		fromBufferAttribute: function ( attribute, index, offset ) {$/;"	r
index	js/three.js	/^		this.index = null;$/;"	r
index	js/three.js	/^		var IndexAttribute = this.index;$/;"	r
index	js/three.js	/^		var index = 0;$/;"	r
index	js/three.js	/^		var indicesArray = arrays.index;$/;"	r
index	js/three.min.js	/^(a[c]=b[c]);return a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c];b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b,normalized:e.normalized}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),$/;"	r
index	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
index0AttributeName	js/three.js	/^		this.index0AttributeName = undefined;$/;"	r
index1	js/three.js	/^						index1 = 3 * i + j;$/;"	r
index1	js/three.js	/^			var index1, index2;$/;"	r
index2	js/three.js	/^								edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };$/;"	r
index2	js/three.js	/^						edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };$/;"	r
index2	js/three.js	/^						index2 = 3 * i + ( ( j + 1 ) % 3 );$/;"	r
index2	js/three.js	/^					edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };$/;"	r
index2	js/three.min.js	/^new L;g.fromBufferGeometry(a)}else g=a.clone();g.mergeVertices();g.computeFaceNormals();a=g.vertices;g=g.faces;for(var h=0,k=g.length;h<k;h++)for(var l=g[h],q=0;3>q;q++){var n=l[f[q]];var u=l[f[(q+1)%3]];d[0]=Math.min(n,u);d[1]=Math.max(n,u);n=d[0]+","+d[1];void 0===e[n]?e[n]={index1:d[0],index2:d[1],face1:h,face2:void 0}:e[n].face2=h}for(n in e)if(d=e[n],void 0===d.face2||g[d.face1].normal.dot(g[d.face2].normal)<=b)f=a[d.index1],c.push(f.x,f.y,f.z),f=a[d.index2],c.push(f.x,f.y,f.z);this.addAttribute("position",$/;"	r
indexArray	js/three.js	/^		var indexArray = [];$/;"	r
indexOffset	js/three.js	/^			var indexOffset = vertices.length \/ 3;$/;"	r
indexRow	js/three.js	/^				var indexRow = [];$/;"	r
indexedBufferRenderer	js/three.js	/^				renderer = indexedBufferRenderer;$/;"	r
indexedBufferRenderer	js/three.js	/^			indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );$/;"	r
indices	js/three.js	/^								data.indices,$/;"	r
indices	js/three.js	/^						var indices = index.array;$/;"	r
indices	js/three.js	/^					var indices = index.array;$/;"	r
indices	js/three.js	/^				indices = [ face.a, face.b, face.c ];$/;"	r
indices	js/three.js	/^				indices = geometry.index;$/;"	r
indices	js/three.js	/^				var indices = new TypeArray( geometry.indices.length * 3 );$/;"	r
indices	js/three.js	/^			indices: indices,$/;"	r
indices	js/three.js	/^			var indices = [];$/;"	r
indices	js/three.js	/^			var indices = geometry.index !== null ? geometry.index.array : undefined;$/;"	r
indices	js/three.js	/^			var indices = this.index.array;$/;"	r
indices	js/three.js	/^			var indices, j, jl;$/;"	r
indices	js/three.js	/^		this._indicesByUUID = indices;		\/\/ for bookkeeping$/;"	r
indices	js/three.js	/^		this.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );$/;"	r
indices	js/three.js	/^		this.indices = [];$/;"	r
indices	js/three.js	/^		var indices = [$/;"	r
indices	js/three.js	/^		var indices = [];$/;"	r
indices	js/three.js	/^		var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );$/;"	r
indices	js/three.js	/^		var indices = {};$/;"	r
indices	js/three.js	/^	function PolyhedronBufferGeometry( vertices, indices, radius, detail ) {$/;"	r
indices	js/three.js	/^	function PolyhedronGeometry( vertices, indices, radius, detail ) {$/;"	r
indices	js/three.min.js	/^new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function Hc(a,b,c,d){L.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new sa(a,b,c,d));this.mergeVertices()}function sa(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){b*=3;c.x=a[b+0];c.y=a[b+1];c.z=a[b+2]}function g(a,b,c,d){0>d&&1===a.x&&(k[b]=a.x-1);0===c.x&&0===c.z&&(k[b]=d\/2\/Math.PI+.5)}C.call(this);this.type="PolyhedronBufferGeometry";$/;"	r
indices	js/three.min.js	/^this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;var h=[],k=[];(function(a){for(var c=new p,d=new p,g=new p,h=0;h<b.length;h+=3){f(b[h+0],c);f(b[h+1],d);f(b[h+2],g);var k,l,m=c,y=d,B=g,I=Math.pow(2,a),A=[];for(l=0;l<=I;l++){A[l]=[];var J=m.clone().lerp(B,l\/I),w=y.clone().lerp(B,l\/I),z=I-l;for(k=0;k<=z;k++)A[l][k]=0===k&&l===I?J:J.clone().lerp(w,k\/z)}for(l=0;l<I;l++)for(k=0;k<2*(I-l)-1;k++)m=Math.floor(k\/2),0===k%2?(e(A[l][m+1]),e(A[l+1][m]),e(A[l][m])):(e(A[l][m+1]),e(A[l+1][m+$/;"	r
indicesArray	js/three.js	/^		var indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];$/;"	r
indicesArray	js/three.js	/^		var indicesArray = arrays.index;$/;"	r
indicesByPath	js/three.js	/^			var indicesByPath = this._bindingsIndicesByPath,$/;"	r
indicesByUUID	js/three.js	/^				indicesByUUID = this._indicesByUUID,$/;"	r
influence	js/three.js	/^								var influence = morphInfluences[ t ];$/;"	r
influence	js/three.js	/^				var influence = influences[ i ];$/;"	r
influences	js/three.js	/^				influences = [];$/;"	r
influences	js/three.js	/^				influencesList[ geometry.id ] = influences;$/;"	r
influences	js/three.js	/^			var influences = influencesList[ geometry.id ];$/;"	r
influencesList	js/three.js	/^		var influencesList = {};$/;"	r
influencesPerVertex	js/three.js	/^				var influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;$/;"	r
info	js/three.js	/^			var info = gl.getActiveAttrib( program, i );$/;"	r
info	js/three.js	/^			var info = gl.getActiveUniform( program, i ),$/;"	r
info	js/three.js	/^		this.info = {$/;"	r
init	js/three.js	/^			init: init,$/;"	r
init	js/three.js	/^		function init( x0, x1, t0, t1 ) {$/;"	r
init	js/three.js	/^		function init() {$/;"	r
init	js/three.js	/^		this.init = function ( planes, enableLocalClipping, camera ) {$/;"	r
init	js/three.min.js	/^b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Sf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Tf(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,k){var l=a[b];void 0===l?(l={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:k},a[b]=l):(l.id=e.id,l.object=e,l.geometry=f,l.material=g,l.program=g.program,l.renderOrder=e.renderOrder,$/;"	r
init	js/three.min.js	/^e=0,f=!1,g=!1,h=new za,k=new ta,l={value:null,needsUpdate:!1};this.uniform=l;this.numIntersection=this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,r,m,p){if(!f||null===c||0===c.length||g&&!k)g?b(null):a();else{k=g?0:e;var n=4*k,q=m.clippingState||null;l.value=q;q=b(c,r,n,p);for(c=0;c!==n;++c)q[c]=d[c];m.clippingState=q;this.numIntersection=$/;"	r
initAttributes	js/three.js	/^			initAttributes: initAttributes,$/;"	r
initAttributes	js/three.js	/^		function initAttributes() {$/;"	r
initAttributes	js/three.min.js	/^U=null,K=null,L=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(\/^WebGL\\ ([0-9])\/.exec(a.getParameter(a.VERSION))[1]),Z=1<=parseFloat(m),R=null,O={},Q=new ba,G=new ba,W={};W[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);W[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);n.setClear(0,0,0,1);u.setClear(1);r.setClear(0);e(a.DEPTH_TEST);u.setFunc(3);h(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1);return{buffers:{color:n,depth:u,stencil:r},initAttributes:function(){for(var a=$/;"	r
initBones	js/three.js	/^		initBones: function () {$/;"	r
initBones	js/three.min.js	/^this.boneInverses)}});pd.prototype=Object.assign(Object.create(w.prototype),{constructor:pd,isBone:!0});qd.prototype=Object.assign(Object.create(qa.prototype),{constructor:qd,isSkinnedMesh:!0,initBones:function(){var a=[],b;if(this.geometry&&void 0!==this.geometry.bones){var c=0;for(b=this.geometry.bones.length;c<b;c++){var d=this.geometry.bones[c];var e=new pd;a.push(e);e.name=d.name;e.position.fromArray(d.pos);e.quaternion.fromArray(d.rotq);void 0!==d.scl&&e.scale.fromArray(d.scl)}c=0;for(b=this.geometry.bones.length;c<$/;"	r
initCatmullRom	js/three.js	/^			initCatmullRom: function ( x0, x1, x2, x3, tension ) {$/;"	r
initFromArray	js/three.js	/^		initFromArray: function ( \/* a *\/ ) {$/;"	r
initGLContext	js/three.js	/^		function initGLContext() {$/;"	r
initMaterial	js/three.js	/^		function initMaterial( material, fog, object ) {$/;"	r
initMaterial	js/three.js	/^		initMaterial: function () {$/;"	r
initMaterials	js/three.js	/^		initMaterials: function ( materials, texturePath, crossOrigin ) {$/;"	r
initMaterials	js/three.min.js	/^return a.join("\/")+"\/"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a={NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5},b=new H,c=new td,d=new Id;return function(e,f,g){function h(a,b,d,e,h){a=f+a;var l=gc.Handlers.get(a);null!==l?a=l.load(a):(c.setCrossOrigin(g),a=c.load(a));void 0!==b&&(a.repeat.fromArray(b),1!==b[0]&&(a.wrapS=1E3),1!==b[1]&&(a.wrapT=$/;"	r
initNonuniformCatmullRom	js/three.js	/^			initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {$/;"	r
initNonuniformCatmullRom	js/three.min.js	/^0,0,0,0,a];a=new C;a.addAttribute("position",new z(b,3));a.addAttribute("color",new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new T({vertexColors:2});P.call(this,a,b)}function qe(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,k){e=k*(g-e);h=k*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,k,l,q){e=((f-e)\/k-(g-e)\/(k+l)+(g-f)\/l)*l;h=((g-f)\/l-(h-f)\/(l+q)+(h-g)\/q)*l;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+$/;"	r
innerRadius	js/three.js	/^								data.innerRadius,$/;"	r
innerRadius	js/three.js	/^			innerRadius: innerRadius,$/;"	r
innerRadius	js/three.js	/^		innerRadius = innerRadius || 0.5;$/;"	r
innerRadius	js/three.js	/^		var radius = innerRadius;$/;"	r
input	js/GLTFLoader.js	/^						var input = animation.parameters !== undefined ? animation.parameters[ sampler.input ] : sampler.input;$/;"	r
inputAccessor	js/GLTFLoader.js	/^						var inputAccessor = dependencies.accessors[ input ];$/;"	r
inside	js/three.js	/^							inside = ! inside;		\/\/ true intersection left of inPt$/;"	r
inside	js/three.js	/^				var inside = false;$/;"	r
insideAngle	js/three.js	/^					insideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );$/;"	r
insideAngle	js/three.js	/^					var insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );$/;"	r
instance	js/three.js	/^					instance = this;$/;"	r
instance	js/three.js	/^			var instance, focus, fov, aspect, near, far, zoom, eyeSep;$/;"	r
intPoint	js/three.js	/^			intPoint = l - 2;$/;"	r
intPoint	js/three.js	/^		var intPoint = Math.floor( p );$/;"	r
intensity	js/GLTFLoader.js	/^					lightNode.intensity = light.constantAttenuation;$/;"	r
intensity	js/three.js	/^				this.intensity = power \/ ( 4 * Math.PI );$/;"	r
intensity	js/three.js	/^				this.intensity = power \/ Math.PI;$/;"	r
intensity	js/three.js	/^				var intensity = light.intensity;$/;"	r
intensity	js/three.js	/^			data.object.intensity = this.intensity;$/;"	r
intensity	js/three.js	/^			this.intensity = source.intensity;$/;"	r
intensity	js/three.js	/^		this.intensity = intensity !== undefined ? intensity : 1;$/;"	r
intensity	js/three.js	/^	function PointLight( color, intensity, distance, decay ) {$/;"	r
intensity	js/three.js	/^	function RectAreaLight( color, intensity, width, height ) {$/;"	r
intensity	js/three.js	/^	function SpotLight( color, intensity, distance, angle, penumbra, decay ) {$/;"	r
intensity	js/three.min.js	/^a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex());void 0!==this.distance&&(a.object.distance=this.distance);void 0!==this.angle&&(a.object.angle=this.angle);void 0!==this.decay&&(a.object.decay=this.decay);void 0!==this.penumbra&&(a.object.penumbra=this.penumbra);void 0!==this.shadow&&(a.object.shadow=this.shadow.toJSON());return a}});ud.prototype=Object.assign(Object.create(fa.prototype),{constructor:ud,$/;"	r
interRay	js/three.js	/^						var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );$/;"	r
interRay	js/three.js	/^				var interRay = new Vector3();$/;"	r
interSegment	js/three.js	/^				var interSegment = new Vector3();$/;"	r
interleavedBuffer	js/three.js	/^		this.data = interleavedBuffer;$/;"	r
internalFormat	js/three.js	/^					internalFormat = _gl.DEPTH_COMPONENT16;$/;"	r
internalFormat	js/three.js	/^					internalFormat = _gl.DEPTH_COMPONENT32F;$/;"	r
internalFormat	js/three.js	/^					internalFormat = _gl.DEPTH_STENCIL;$/;"	r
internalFormat	js/three.js	/^				var internalFormat = _gl.DEPTH_COMPONENT;$/;"	r
interpolant	js/three.js	/^				interpolant = interpolants[ lastActiveIndex ];$/;"	r
interpolant	js/three.js	/^				interpolant = mixer._lendControlInterpolant();$/;"	r
interpolant	js/three.js	/^				interpolant = new LinearInterpolant($/;"	r
interpolant	js/three.js	/^				interpolant = this._timeScaleInterpolant,$/;"	r
interpolant	js/three.js	/^				interpolant = this._weightInterpolant;$/;"	r
interpolant	js/three.js	/^				interpolants[ lastActiveIndex ] = interpolant;$/;"	r
interpolant	js/three.js	/^				this._timeScaleInterpolant = interpolant;$/;"	r
interpolant	js/three.js	/^				this._weightInterpolant = interpolant;$/;"	r
interpolant	js/three.js	/^				var interpolant = this._timeScaleInterpolant;$/;"	r
interpolant	js/three.js	/^				var interpolant = this._weightInterpolant;$/;"	r
interpolant	js/three.js	/^			interpolants[ firstInactiveIndex ] = interpolant;$/;"	r
interpolant	js/three.js	/^			interpolants[ i ] = interpolant;$/;"	r
interpolant	js/three.js	/^			var interpolant = tracks[ i ].createInterpolant( null );$/;"	r
interpolantSettings	js/three.js	/^			interpolant.settings = interpolantSettings;$/;"	r
interpolantSettings	js/three.js	/^		this._interpolantSettings = interpolantSettings;$/;"	r
interpolantSettings	js/three.js	/^		var interpolantSettings = {$/;"	r
interpolantValue	js/three.js	/^					timeScale *= interpolantValue;$/;"	r
interpolantValue	js/three.js	/^					var interpolantValue = interpolant.evaluate( time )[ 0 ];$/;"	r
interpolantValue	js/three.js	/^					weight *= interpolantValue;$/;"	r
interpolants	js/three.js	/^				interpolants = action._interpolants,$/;"	r
interpolants	js/three.js	/^				var interpolants = this._interpolants;$/;"	r
interpolants	js/three.js	/^			interpolants = new Array( nTracks );$/;"	r
interpolants	js/three.js	/^			var interpolants = this._controlInterpolants,$/;"	r
interpolants	js/three.js	/^		this._interpolants = interpolants;	\/\/ bound by the mixer$/;"	r
interpolate_	js/three.js	/^		interpolate_: function ( \/* i1, t0, t, t1 *\/ ) {$/;"	r
interpolate_	js/three.js	/^		interpolate_: function ( i1 \/*, t0, t, t1 *\/ ) {$/;"	r
interpolate_	js/three.js	/^		interpolate_: function ( i1, t0, t, t1 ) {$/;"	r
interpolate_	js/three.min.js	/^a;g=2*b-c;break;case 2402:e=d.length-2;g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a;h=2*c-b;break;case 2402:f=1;h=c+d[1]-d[0];break;default:f=a-1,h=b}a=.5*(c-b);d=this.valueSize;this._weightPrev=a\/(b-g);this._weightNext=a\/(h-c);this._offsetPrev=e*d;this._offsetNext=f*d},interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g,k=this._offsetPrev,l=this._offsetNext,m=this._weightPrev,n=this._weightNext,$/;"	r
interpolate_	js/three.min.js	/^d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(xa.prototype,{beforeStart_:xa.prototype.copySampleValue_,afterEnd_:xa.prototype.copySampleValue_});Cd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Cd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=$/;"	r
interpolate_	js/three.min.js	/^interpolate_:function(a){return this.copySampleValue_(a-1)}});var ab={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(a){return new Dd(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new Xc(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new Cd(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){switch(a){case 2300:var b=$/;"	r
interpolate_	js/three.min.js	/^interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;b=(c-b)\/(d-b);for(c=a+g;a!==c;a+=4)X.slerpFlat(e,0,f,a-g,f,a,b);return e}});Yc.prototype=Object.assign(Object.create(ab),{constructor:Yc,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(a){return new Ed(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0});fc.prototype=Object.assign(Object.create(ab),{constructor:fc,ValueTypeName:"number"});$/;"	r
interpolate_	js/three.min.js	/^p=(c-b)\/(d-b);c=p*p;d=c*p;b=-m*d+2*m*c-m*p;m=(1+m)*d+(-1.5-2*m)*c+(-.5+m)*p+1;p=(-1-n)*d+(1.5+n)*c+.5*p;n=n*d-n*c;for(c=0;c!==g;++c)e[c]=b*f[k+c]+m*f[h+c]+p*f[a+c]+n*f[l+c];return e}});Xc.prototype=Object.assign(Object.create(xa.prototype),{constructor:Xc,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)\/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});Dd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Dd,$/;"	r
interpolation	js/GLTFLoader.js	/^									interpolation$/;"	r
interpolation	js/GLTFLoader.js	/^							var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;$/;"	r
interpolation	js/three.js	/^					json.interpolation = interpolation;$/;"	r
interpolation	js/three.js	/^				var interpolation = track.getInterpolation();$/;"	r
intersect	js/three.js	/^					intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );$/;"	r
intersect	js/three.js	/^					intersect = ray.intersectTriangle( pC, pB, pA, true, point );$/;"	r
intersect	js/three.js	/^				var intersect;$/;"	r
intersect	js/three.js	/^		intersect: function ( box ) {$/;"	r
intersect	js/three.min.js	/^b){return(b||new p).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new p;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new p;return function(b){b=b||new Da;this.getCenter(b.center);b.radius=.5*this.getSize(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);this.isEmpty()&&this.makeEmpty();return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=$/;"	r
intersectBox	js/three.js	/^		intersectBox: function ( box, optionalTarget ) {$/;"	r
intersectBox	js/three.min.js	/^return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c=1\/this.direction.x;var d=1\/this.direction.y;var e=1\/this.direction.z,f=this.origin;if(0<=c){var g=(a.min.x-f.x)*c;c*=a.max.x-f.x}else g=(a.max.x-f.x)*c,c*=a.min.x-f.x;if(0<=d){var h=(a.min.y-f.y)*d;d*=a.max.y-f.y}else h=(a.max.y-f.y)*d,d*=a.min.y-f.y;if(g>d||h>c)return null;if(h>g||g!==g)g=h;if(d<c||c!==c)c=d;0<=e?(h=(a.min.z-f.z)*e,a=(a.max.z-f.z)*e):(h=(a.max.z-f.z)*e,a=(a.min.z-f.z)*e);if(g>a||h>c)return null;$/;"	r
intersectLine	js/three.js	/^			return function intersectLine( line, optionalTarget ) {$/;"	r
intersectLine	js/three.js	/^		intersectLine: function () {$/;"	r
intersectObject	js/three.js	/^		intersectObject: function ( object, recursive ) {$/;"	r
intersectObject	js/three.js	/^	function intersectObject( object, raycaster, intersects, recursive ) {$/;"	r
intersectObject	js/three.min.js	/^console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,b){var c=[];oe(a,this,c,b);c.sort($e);return c},intersectObjects:function(a,b){var c=[];if(!1===Array.isArray(a))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),c;for(var d=0,e=a.length;d<e;d++)oe(a[d],this,c,b);c.sort($e);return c}});Object.assign(af.prototype,{start:function(){this.oldTime=this.startTime=("undefined"===typeof performance?Date:performance).now();this.elapsedTime=$/;"	r
intersectObjects	js/three.js	/^		intersectObjects: function ( objects, recursive ) {$/;"	r
intersectPlane	js/three.js	/^		intersectPlane: function ( plane, optionalTarget ) {$/;"	r
intersectPlane	js/three.min.js	/^b=Math.sqrt(b-e);e=d-b;d+=b;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)\/b;return 0<=a?a:null},intersectPlane:function(a,b){a=this.distanceToPlane(a);return null===a?null:this.at(a,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);$/;"	r
intersectPoint	js/three.js	/^						var intersectPoint = ray.closestPointToPoint( point );$/;"	r
intersectPoint	js/three.js	/^			var intersectPoint = new Vector3();$/;"	r
intersectSphere	js/three.js	/^			return function intersectSphere( sphere, optionalTarget ) {$/;"	r
intersectSphere	js/three.js	/^		intersectSphere: function () {$/;"	r
intersectSphere	js/three.min.js	/^-q),h),k=-d*d+e*(e+2*q)+n):e<=p?(d=0,e=Math.min(Math.max(-h,-q),h),k=e*(e+2*q)+n):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-q),h),k=-d*d+e*(e+2*q)+n)}else e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n;f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new p;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d;b=b.radius*b.radius;if(e>b)return null;$/;"	r
intersectTriangle	js/three.js	/^			return function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {$/;"	r
intersectTriangle	js/three.js	/^		intersectTriangle: function () {$/;"	r
intersect_segments_2D	js/three.js	/^			function intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {$/;"	r
intersection	js/three.js	/^							intersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );$/;"	r
intersection	js/three.js	/^							intersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );$/;"	r
intersection	js/three.js	/^						intersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );$/;"	r
intersection	js/three.js	/^						intersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );$/;"	r
intersection	js/three.js	/^				var intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );$/;"	r
intersection	js/three.js	/^				var intersection;$/;"	r
intersectionPoint	js/three.js	/^			var intersectionPoint = new Vector3();$/;"	r
intersectionPointWorld	js/three.js	/^			var intersectionPointWorld = new Vector3();$/;"	r
intersects	js/three.js	/^			var intersects = [];$/;"	r
intersectsBox	js/three.js	/^			return function intersectsBox( box ) {$/;"	r
intersectsBox	js/three.js	/^		intersectsBox: ( function () {$/;"	r
intersectsBox	js/three.js	/^		intersectsBox: function ( box ) {$/;"	r
intersectsBox	js/three.js	/^		intersectsBox: function () {$/;"	r
intersectsBox	js/three.min.js	/^b*b},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius},clampPoint:function(a,b){var c=this.center.distanceToSquared(a);b=b||new p;b.copy(a);c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center));return b},getBoundingBox:function(a){a=a||new Na;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);$/;"	r
intersectsBox	js/three.min.js	/^if(h>g||g!==g)g=h;if(a<c||c!==c)c=a;return 0>c?null:this.at(0<=g?g:c,b)},intersectsBox:function(){var a=new p;return function(b){return null!==this.intersectBox(b,a)}}(),intersectTriangle:function(){var a=new p,b=new p,c=new p,d=new p;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;$/;"	r
intersectsBox	js/three.min.js	/^this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(a){return(a||new p).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new p,b=new ta;return function(c,d){d=d||b.getNormalMatrix(c);c=this.coplanarPoint(a).applyMatrix4(c);d=this.normal.applyMatrix3(d).normalize();this.constant=-c.dot(d);return this}}(),$/;"	r
intersectsHoleEdge	js/three.js	/^				function intersectsHoleEdge( inShapePt, inHolePt ) {$/;"	r
intersectsLine	js/three.js	/^		intersectsLine: function ( line ) {$/;"	r
intersectsObject	js/three.js	/^			return function intersectsObject( object ) {$/;"	r
intersectsObject	js/three.js	/^		intersectsObject: function () {$/;"	r
intersectsObject	js/three.min.js	/^c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],q=c[8],n=c[9],m=c[10],r=c[11],p=c[12],t=c[13],x=c[14],c=c[15];b[0].setComponents(f-a,l-g,r-q,c-p).normalize();b[1].setComponents(f+a,l+g,r+q,c+p).normalize();b[2].setComponents(f+d,l+h,r+n,c+t).normalize();b[3].setComponents(f-d,l-h,r-n,c-t).normalize();b[4].setComponents(f-e,l-k,r-m,c-x).normalize();b[5].setComponents(f+e,l+k,r+m,c+x).normalize();return this},intersectsObject:function(){var a=new Da;return function(b){var c=$/;"	r
intersectsPlane	js/three.js	/^		intersectsPlane: function ( plane ) {$/;"	r
intersectsPlane	js/three.min.js	/^a);return a.distanceToSquared(b.center)<=b.radius*b.radius}}(),intersectsPlane:function(a){if(0<a.normal.x){var b=a.normal.x*this.min.x;var c=a.normal.x*this.max.x}else b=a.normal.x*this.max.x,c=a.normal.x*this.min.x;0<a.normal.y?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y);0<a.normal.z?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z);return b<=a.constant&&c>=a.constant},clampPoint:function(a,$/;"	r
intersectsShapeEdge	js/three.js	/^				function intersectsShapeEdge( inShapePt, inHolePt ) {$/;"	r
intersectsSphere	js/three.js	/^			return function intersectsSphere( sphere ) {$/;"	r
intersectsSphere	js/three.js	/^		intersectsSphere: ( function () {$/;"	r
intersectsSphere	js/three.js	/^		intersectsSphere: function ( sphere ) {$/;"	r
intersectsSphere	js/three.min.js	/^b=Math.sqrt(b-e);e=d-b;d+=b;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+a.constant)\/b;return 0<=a?a:null},intersectPlane:function(a,b){a=this.distanceToPlane(a);return null===a?null:this.at(a,b)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);$/;"	r
intersectsSprite	js/three.js	/^			return function intersectsSprite( sprite ) {$/;"	r
intersectsSprite	js/three.js	/^		intersectsSprite: function () {$/;"	r
intersectsSprite	js/three.min.js	/^b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSprite:function(){var a=new Da;return function(b){a.center.set(0,0,0);a.radius=.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new p,b=$/;"	r
intervalChanged_	js/three.js	/^		intervalChanged_: function ( \/* i1, t0, t1 *\/ ) {$/;"	r
intervalChanged_	js/three.js	/^		intervalChanged_: function ( i1, t0, t1 ) {$/;"	r
invAspect	js/three.js	/^			var invAspect = viewport.w \/ viewport.z,$/;"	r
invDenom	js/three.js	/^				var invDenom = 1 \/ denom;$/;"	r
invDet	js/three.js	/^								s0 *= invDet;$/;"	r
invDet	js/three.js	/^								s1 *= invDet;$/;"	r
invDet	js/three.js	/^								var invDet = 1 \/ det;$/;"	r
invSX	js/three.js	/^				matrix.elements[ 0 ] *= invSX;$/;"	r
invSX	js/three.js	/^				matrix.elements[ 1 ] *= invSX;$/;"	r
invSX	js/three.js	/^				matrix.elements[ 2 ] *= invSX;$/;"	r
invSX	js/three.js	/^				var invSX = 1 \/ sx;$/;"	r
invSY	js/three.js	/^				matrix.elements[ 4 ] *= invSY;$/;"	r
invSY	js/three.js	/^				matrix.elements[ 5 ] *= invSY;$/;"	r
invSY	js/three.js	/^				matrix.elements[ 6 ] *= invSY;$/;"	r
invSY	js/three.js	/^				var invSY = 1 \/ sy;$/;"	r
invSZ	js/three.js	/^				matrix.elements[ 10 ] *= invSZ;$/;"	r
invSZ	js/three.js	/^				matrix.elements[ 8 ] *= invSZ;$/;"	r
invSZ	js/three.js	/^				matrix.elements[ 9 ] *= invSZ;$/;"	r
invSZ	js/three.js	/^				var invSZ = 1 \/ sz;$/;"	r
invdirx	js/three.js	/^			var invdirx = 1 \/ this.direction.x,$/;"	r
invdiry	js/three.js	/^				invdiry = 1 \/ this.direction.y,$/;"	r
invdirz	js/three.js	/^				invdirz = 1 \/ this.direction.z;$/;"	r
inverse	js/three.js	/^				var inverse = new Matrix4();$/;"	r
inverse	js/three.js	/^		inverse: function () {$/;"	r
inverse	js/three.min.js	/^.25*c,this._z=(g+k)\/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)\/c,this._x=(d+h)\/c,this._y=(g+k)\/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a=new p,b;return function(c,d){void 0===a&&(a=new p);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=$/;"	r
inverseBindMatrices	js/GLTFLoader.js	/^					inverseBindMatrices: dependencies.accessors[ skin.inverseBindMatrices ]$/;"	r
inverseMatrix	js/three.js	/^			var inverseMatrix = new Matrix4();$/;"	r
inverseNormalLength	js/three.js	/^			this.constant *= inverseNormalLength;$/;"	r
inverseNormalLength	js/three.js	/^			var inverseNormalLength = 1.0 \/ this.normal.length();$/;"	r
inverseSegments	js/three.js	/^		var inverseSegments = 1.0 \/ segments;$/;"	r
isAmbientLight	js/three.js	/^		isAmbientLight: true$/;"	r
isAnimating	js/three.js	/^			isAnimating = true;$/;"	r
isAnimating	js/three.js	/^		var isAnimating = false;$/;"	r
isAnimationObjectGroup	js/three.js	/^		isAnimationObjectGroup: true,$/;"	r
isArcCurve	js/three.js	/^	ArcCurve.prototype.isArcCurve = true;$/;"	r
isArrayCamera	js/three.js	/^		isArrayCamera: true$/;"	r
isArrayCamera	js/three.min.js	/^this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});nd.prototype=Object.assign(Object.create(Y.prototype),{constructor:nd,isArrayCamera:!0});Kb.prototype.isFogExp2=!0;Kb.prototype.clone=function(){return new Kb(this.color.getHex(),this.density)};Kb.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),$/;"	r
isBase64	js/three.js	/^				var isBase64 = !! dataUriRegexResult[ 2 ];$/;"	r
isBitSet	js/three.js	/^				function isBitSet( value, position ) {$/;"	r
isBone	js/three.js	/^		isBone: true$/;"	r
isBone	js/three.min.js	/^this.boneInverses)}});pd.prototype=Object.assign(Object.create(w.prototype),{constructor:pd,isBone:!0});qd.prototype=Object.assign(Object.create(qa.prototype),{constructor:qd,isSkinnedMesh:!0,initBones:function(){var a=[],b;if(this.geometry&&void 0!==this.geometry.bones){var c=0;for(b=this.geometry.bones.length;c<b;c++){var d=this.geometry.bones[c];var e=new pd;a.push(e);e.name=d.name;e.position.fromArray(d.pos);e.quaternion.fromArray(d.rotq);void 0!==d.scl&&e.scale.fromArray(d.scl)}c=0;for(b=this.geometry.bones.length;c<$/;"	r
isBox3	js/three.js	/^		isBox3: true,$/;"	r
isBufferAttribute	js/three.js	/^		isBufferAttribute: true,$/;"	r
isBufferGeometry	js/three.js	/^		isBufferGeometry: true,$/;"	r
isCamera	js/three.js	/^		isCamera: true,$/;"	r
isCamera	js/three.min.js	/^this.layers.mask=a.layers.mask;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(b=0;b<a.children.length;b++)this.add(a.children[b].clone());return this}});Ka.prototype=Object.assign(Object.create(w.prototype),{constructor:Ka,isCamera:!0,copy:function(a,b){w.prototype.copy.call(this,a,b);this.matrixWorldInverse.copy(a.matrixWorldInverse);$/;"	r
isCatmullRomCurve3	js/three.js	/^	CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;$/;"	r
isClockWise	js/three.js	/^			var isClockWise = ShapeUtils.isClockWise;$/;"	r
isClockWise	js/three.js	/^		isClockWise: function ( pts ) {$/;"	r
isClockWise	js/three.min.js	/^b[z];for(q=0;q<C.length;q++)if(z=C[q],c(m,q)&&!d(w,z)&&!g(w,z)){l=q;k.splice(n,1);p=h.slice(0,m+1);z=h.slice(m);q=C.slice(l);var E=C.slice(0,l+1);h=p.concat(q).concat(E).concat(z);p=m;break}if(0<=l)break;a[D]=!0}}if(0<=l)break}}return h}(a,b);k=Ha.triangulate(l,!1);l=0;for(g=k.length;l<g;l++)for(b=k[l],a=0;3>a;a++)m=b[a].x+":"+b[a].y,m=h[m],void 0!==m&&(b[a]=m);return k.concat()},isClockWise:function(a){return 0>Ha.area(a)}};Za.prototype=Object.create(L.prototype);Za.prototype.constructor=Za;Ga.prototype=$/;"	r
isClockWise	js/three.min.js	/^g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=Ha.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);b=[];if(1===f.length){var g=f[0];var h=new zb;h.curves=g.curves;b.push(h);return b}var k=!e(f[0].getPoints()),k=a?!k:k;h=[];var l=[],m=[],n=0;l[n]=void 0;m[n]=[];for(var p=0,r=f.length;p<r;p++){g=f[p];var v=g.getPoints();var t=e(v);(t=a?!t:t)?(!k&&l[n]&&n++,l[n]={s:new zb,p:v},l[n].s.curves=g.curves,k&&n++,m[n]=[]):m[n].push({h:g,p:v[0]})}if(!l[0])return c(f);if(1<l.length){p=$/;"	r
isColor	js/three.js	/^		isColor: true,$/;"	r
isCompressed	js/three.js	/^					var isCompressed = ( texture && texture.isCompressedTexture );$/;"	r
isCompressedTexture	js/three.js	/^	CompressedTexture.prototype.isCompressedTexture = true;$/;"	r
isCube	js/three.js	/^					isCube = true;$/;"	r
isCube	js/three.js	/^			var isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );$/;"	r
isCube	js/three.js	/^			var isCube = ( renderTarget.isWebGLRenderTargetCube === true );$/;"	r
isCube	js/three.js	/^			var isCube = false;$/;"	r
isCubeTexture	js/three.js	/^	CubeTexture.prototype.isCubeTexture = true;$/;"	r
isCubeTexture	js/three.min.js	/^Ta;Ta.prototype.isCubeTexture=!0;Object.defineProperty(Ta.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});var Be=new da,Ce=new Ta,we=[],ye=[],Ae=new Float32Array(16),ze=new Float32Array(9);Ge.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var Od=\/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;cb.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};cb.prototype.setOptional=function(a,$/;"	r
isCubicBezierCurve	js/three.js	/^	CubicBezierCurve.prototype.isCubicBezierCurve = true;$/;"	r
isCubicBezierCurve3	js/three.js	/^	CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;$/;"	r
isCutLineInsideAngles	js/three.js	/^				function isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {$/;"	r
isDataTexture	js/three.js	/^					var isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );$/;"	r
isDataTexture	js/three.js	/^	DataTexture.prototype.isDataTexture = true;$/;"	r
isDepthTexture	js/three.js	/^	DepthTexture.prototype.isDepthTexture = true;$/;"	r
isDirectionalLight	js/three.js	/^		isDirectionalLight: true,$/;"	r
isDirectionalLight	js/three.min.js	/^{constructor:zd,isDirectionalLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});Ad.prototype=Object.assign(Object.create(fa.prototype),{constructor:Ad,isAmbientLight:!0});Bd.prototype=Object.assign(Object.create(fa.prototype),{constructor:Bd,isRectAreaLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.width=a.width;this.height=a.height;return this},toJSON:function(a){a=fa.prototype.toJSON.call(this,a);a.object.width=$/;"	r
isEllipseCurve	js/three.js	/^	EllipseCurve.prototype.isEllipseCurve = true;$/;"	r
isEmpty	js/three.js	/^		isEmpty: function () {$/;"	r
isEuler	js/three.js	/^		isEuler: true,$/;"	r
isFog	js/three.js	/^	Fog.prototype.isFog = true;$/;"	r
isFog	js/three.min.js	/^density:this.density}};Lb.prototype.isFog=!0;Lb.prototype.clone=function(){return new Lb(this.color.getHex(),this.near,this.far)};Lb.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};od.prototype=Object.assign(Object.create(w.prototype),{constructor:od,copy:function(a,b){w.prototype.copy.call(this,a,b);null!==a.background&&(this.background=a.background.clone());null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=$/;"	r
isFogExp2	js/three.js	/^	FogExp2.prototype.isFogExp2 = true;$/;"	r
isFont	js/three.js	/^		isFont: true,$/;"	r
isGLTFSpecularGlossinessMaterial	js/GLTFLoader.js	/^				material.isGLTFSpecularGlossinessMaterial = true;$/;"	r
isGLTFSpecularGlossinessMaterial	js/GLTFLoader.js	/^				target.isGLTFSpecularGlossinessMaterial = true;$/;"	r
isGeometry	js/three.js	/^		isGeometry: true,$/;"	r
isHemisphereLight	js/three.js	/^		isHemisphereLight: true,$/;"	r
isHemisphereLight	js/three.min.js	/^isHemisphereLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this}});Object.assign(rb.prototype,{copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var a={};0!==this.bias&&(a.bias=this.bias);1!==this.radius&&(a.radius=this.radius);if(512!==this.mapSize.x||512!==this.mapSize.y)a.mapSize=this.mapSize.toArray();$/;"	r
isImmediateRenderObject	js/three.js	/^	ImmediateRenderObject.prototype.isImmediateRenderObject = true;$/;"	r
isInstancedBufferAttribute	js/three.js	/^		isInstancedBufferAttribute: true,$/;"	r
isInstancedBufferGeometry	js/three.js	/^		isInstancedBufferGeometry: true,$/;"	r
isInstancedBufferGeometry	js/three.min.js	/^{constructor:ke,isInstancedBufferGeometry:!0,copy:function(a){C.prototype.copy.call(this,a);this.maxInstancedCount=a.maxInstancedCount;return this},clone:function(){return(new this.constructor).copy(this)}});Object.defineProperties(le.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(le.prototype,{isInterleavedBufferAttribute:!0,setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*$/;"	r
isInstancedInterleavedBuffer	js/three.js	/^		isInstancedInterleavedBuffer: true,$/;"	r
isInteger	js/three.js	/^		Number.isInteger = function ( value ) {$/;"	r
isInterleavedBuffer	js/three.js	/^		isInterleavedBuffer: true,$/;"	r
isInterleavedBufferAttribute	js/three.js	/^		isInterleavedBufferAttribute: true,$/;"	r
isIntersectionBox	js/three.js	/^		isIntersectionBox: function ( box ) {$/;"	r
isIntersectionLine	js/three.js	/^	Plane.prototype.isIntersectionLine = function ( line ) {$/;"	r
isIntersectionLine	js/three.min.js	/^applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(a,b,c,d,e,f){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(a,b,d,c,e,f)}});za.prototype.isIntersectionLine=function(a){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(a)};X.prototype.multiplyVector3=$/;"	r
isIntersectionPlane	js/three.js	/^		isIntersectionPlane: function ( plane ) {$/;"	r
isIntersectionPlane	js/three.min.js	/^function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)};Object.assign(hb.prototype,{isIntersectionBox:function(a){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},isIntersectionPlane:function(a){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(a)},isIntersectionSphere:function(a){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");$/;"	r
isIntersectionSphere	js/three.js	/^		isIntersectionSphere: function ( sphere ) {$/;"	r
isIntersectionSphere	js/three.min.js	/^isIntersectionSphere:function(a){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(a)},size:function(a){console.warn("THREE.Box3: .size() has been renamed to .getSize().");return this.getSize(a)}});Ib.prototype.center=function(a){console.warn("THREE.Line3: .center() has been renamed to .getCenter().");return this.getCenter(a)};Object.assign(R,{random16:function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");$/;"	r
isJPEG	js/three.js	/^				var isJPEG = url.search( \/\\.(jpg|jpeg)$\/ ) > 0 || url.search( \/^data\\:image\\\/jpeg\/ ) === 0;$/;"	r
isLensFlare	js/three.js	/^		isLensFlare: true,$/;"	r
isLensFlare	js/three.min.js	/^a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this},toJSON:function(a){var b=w.prototype.toJSON.call(this,a);null!==this.background&&(b.object.background=this.background.toJSON(a));null!==this.fog&&(b.object.fog=this.fog.toJSON());return b}});Xd.prototype=Object.assign(Object.create(w.prototype),{constructor:Xd,isLensFlare:!0,copy:function(a){w.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=$/;"	r
isLight	js/three.js	/^		isLight: true,$/;"	r
isLight	js/three.min.js	/^function(){var c=0<a.search(\/\\.(jpg|jpeg)$\/)||0===a.search(\/^data\\:image\\\/jpeg\/);f.format=c?1022:1023;f.needsUpdate=!0;void 0!==b&&b(f)},c,d);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});fa.prototype=Object.assign(Object.create(w.prototype),{constructor:fa,isLight:!0,copy:function(a){w.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=w.prototype.toJSON.call(this,$/;"	r
isLine	js/three.js	/^		isLine: true,$/;"	r
isLine	js/three.min.js	/^oa.prototype=Object.assign(Object.create(w.prototype),{constructor:oa,isLine:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new p,l=new p,h=new p,q=new p,n=this&&this.isLineSegments?2:1;if(g.isBufferGeometry){var m=g.index;var r=g.attributes.position.array;$/;"	r
isLineBasicMaterial	js/three.js	/^	LineBasicMaterial.prototype.isLineBasicMaterial = true;$/;"	r
isLineCurve	js/three.js	/^	LineCurve.prototype.isLineCurve = true;$/;"	r
isLineCurve3	js/three.js	/^	LineCurve3.prototype.isLineCurve3 = true;$/;"	r
isLineDashedMaterial	js/three.js	/^	LineDashedMaterial.prototype.isLineDashedMaterial = true;$/;"	r
isLineDashedMaterial	js/three.min.js	/^qb;qb.prototype.isLineDashedMaterial=!0;qb.prototype.copy=function(a){T.prototype.copy.call(this,a);this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};var tg=Object.freeze({ShadowMaterial:cc,SpriteMaterial:Ya,RawShaderMaterial:dc,ShaderMaterial:Aa,PointsMaterial:Ba,MeshPhysicalMaterial:mb,MeshStandardMaterial:La,MeshPhongMaterial:Ia,MeshToonMaterial:nb,MeshNormalMaterial:ob,MeshLambertMaterial:pb,MeshDepthMaterial:Va,MeshDistanceMaterial:Wa,MeshBasicMaterial:va,LineDashedMaterial:qb,$/;"	r
isLineLoop	js/three.js	/^		isLineLoop: true,$/;"	r
isLineSegments	js/three.js	/^		isLineSegments: true$/;"	r
isLineSegments	js/three.min.js	/^this.material)).copy(this)}});P.prototype=Object.assign(Object.create(oa.prototype),{constructor:P,isLineSegments:!0});rd.prototype=Object.assign(Object.create(oa.prototype),{constructor:rd,isLineLoop:!0});Ba.prototype=Object.create(Q.prototype);Ba.prototype.constructor=Ba;Ba.prototype.isPointsMaterial=!0;Ba.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};Mb.prototype=Object.assign(Object.create(w.prototype),$/;"	r
isLoading	js/three.js	/^				isLoading = false;$/;"	r
isLoading	js/three.js	/^			isLoading = true;$/;"	r
isLoading	js/three.js	/^		var isLoading = false;$/;"	r
isMaterial	js/three.js	/^		isMaterial: true,$/;"	r
isMatrix3	js/three.js	/^		isMatrix3: true,$/;"	r
isMatrix4	js/three.js	/^		isMatrix4: true,$/;"	r
isMesh	js/three.js	/^		isMesh: true,$/;"	r
isMesh	js/three.min.js	/^{constructor:qa,isMesh:!0,setDrawMode:function(a){this.drawMode=a},copy:function(a){w.prototype.copy.call(this,a);this.drawMode=a.drawMode;void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice());void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary));return this},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length){var c=a[b[0]];if(void 0!==$/;"	r
isMeshBasicMaterial	js/three.js	/^	MeshBasicMaterial.prototype.isMeshBasicMaterial = true;$/;"	r
isMeshDepthMaterial	js/three.js	/^	MeshDepthMaterial.prototype.isMeshDepthMaterial = true;$/;"	r
isMeshDistanceMaterial	js/three.js	/^	MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;$/;"	r
isMeshLambertMaterial	js/three.js	/^	MeshLambertMaterial.prototype.isMeshLambertMaterial = true;$/;"	r
isMeshNormalMaterial	js/three.js	/^	MeshNormalMaterial.prototype.isMeshNormalMaterial = true;$/;"	r
isMeshPhongMaterial	js/three.js	/^	MeshPhongMaterial.prototype.isMeshPhongMaterial = true;$/;"	r
isMeshPhysicalMaterial	js/three.js	/^	MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;$/;"	r
isMeshStandardMaterial	js/three.js	/^	MeshStandardMaterial.prototype.isMeshStandardMaterial = true;$/;"	r
isMeshToonMaterial	js/three.js	/^	MeshToonMaterial.prototype.isMeshToonMaterial = true;$/;"	r
isMultiMaterial	js/three.js	/^					var isMultiMaterial = Array.isArray( material );$/;"	r
isMultiMaterial	js/three.js	/^		materials.isMultiMaterial = true;$/;"	r
isObject3D	js/three.js	/^		isObject3D: true,$/;"	r
isObjectURL	js/GLTFLoader.js	/^					isObjectURL = true;$/;"	r
isObjectURL	js/GLTFLoader.js	/^		var isObjectURL = false;$/;"	r
isObjectViewable	js/three.js	/^		function isObjectViewable( object ) {$/;"	r
isOrthographicCamera	js/three.js	/^		isOrthographicCamera: true,$/;"	r
isPerspectiveCamera	js/three.js	/^		isPerspectiveCamera: true,$/;"	r
isPlaying	js/three.js	/^				this.isPlaying = false;$/;"	r
isPlaying	js/three.js	/^			this.isPlaying = false;$/;"	r
isPlaying	js/three.js	/^			this.isPlaying = true;$/;"	r
isPlaying	js/three.js	/^		this.isPlaying = false;$/;"	r
isPointInsideAngle	js/three.js	/^			function isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {$/;"	r
isPointInsidePolygon	js/three.js	/^			function isPointInsidePolygon( inPt, inPolygon ) {$/;"	r
isPointLight	js/three.js	/^				var isPointLight = light && light.isPointLight;$/;"	r
isPointLight	js/three.js	/^		isPointLight: true,$/;"	r
isPointLight	js/three.min.js	/^a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});xd.prototype=Object.assign(Object.create(fa.prototype),{constructor:xd,isPointLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this}});yd.prototype=Object.assign(Object.create(rb.prototype),{constructor:yd});zd.prototype=Object.assign(Object.create(fa.prototype),$/;"	r
isPoints	js/three.js	/^		isPoints: true,$/;"	r
isPoints	js/three.min.js	/^{constructor:Mb,isPoints:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<m){a=b.closestPointToPoint(a);a.applyMatrix4(k);var h=d.ray.origin.distanceTo(a);h<d.near||h>d.far||e.push({distance:h,distanceToRay:Math.sqrt(f),point:a.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);$/;"	r
isPointsMaterial	js/three.js	/^	PointsMaterial.prototype.isPointsMaterial = true;$/;"	r
isPowerOfTwo	js/three.js	/^		function isPowerOfTwo( image ) {$/;"	r
isPowerOfTwo	js/three.js	/^		isPowerOfTwo: function ( value ) {$/;"	r
isPowerOfTwoImage	js/three.js	/^						isPowerOfTwoImage = isPowerOfTwo( image ),$/;"	r
isPowerOfTwoImage	js/three.js	/^			var isPowerOfTwoImage = isPowerOfTwo( image ),$/;"	r
isQuad	js/three.js	/^					isQuad = isBitSet( type, 0 );$/;"	r
isQuad	js/three.js	/^					isQuad,$/;"	r
isQuadraticBezierCurve	js/three.js	/^	QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;$/;"	r
isQuadraticBezierCurve3	js/three.js	/^	QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;$/;"	r
isQuadraticBezierCurve3	js/three.min.js	/^rc;rc.prototype.isQuadraticBezierCurve3=!0;rc.prototype.getPoint=function(a,b){b=b||new p;var c=this.v0,d=this.v1,e=this.v2;b.set(ub(a,c.x,d.x,e.x),ub(a,c.y,d.y,e.y),ub(a,c.z,d.z,e.z));return b};Cb.prototype=Object.create(ca.prototype);Cb.prototype.constructor=Cb;Cb.prototype.isLineCurve3=!0;Cb.prototype.getPoint=function(a,b){b=b||new p;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Cb.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};$/;"	r
isRawShaderMaterial	js/three.js	/^	RawShaderMaterial.prototype.isRawShaderMaterial = true;$/;"	r
isRectAreaLight	js/three.js	/^		isRectAreaLight: true,$/;"	r
isRoot	js/three.js	/^			var isRoot = ( meta === undefined || typeof meta === 'string' );$/;"	r
isRootObject	js/three.js	/^			var isRootObject = ( meta === undefined || typeof meta === 'string' );$/;"	r
isRunning	js/three.js	/^		isRunning: function () {$/;"	r
isScheduled	js/three.js	/^		isScheduled: function () {$/;"	r
isScheduled	js/three.min.js	/^isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);$/;"	r
isShaderMaterial	js/three.js	/^	ShaderMaterial.prototype.isShaderMaterial = true;$/;"	r
isShadowMaterial	js/three.js	/^	ShadowMaterial.prototype.isShadowMaterial = true;$/;"	r
isSkinnedMesh	js/three.js	/^		isSkinnedMesh: true,$/;"	r
isSphereViewable	js/three.js	/^		function isSphereViewable( sphere ) {$/;"	r
isSplineCurve	js/three.js	/^	SplineCurve.prototype.isSplineCurve = true;$/;"	r
isSpotLight	js/three.js	/^		isSpotLight: true,$/;"	r
isSpotLightShadow	js/three.js	/^		isSpotLightShadow: true,$/;"	r
isSpotLightShadow	js/three.min.js	/^a.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});vd.prototype=Object.assign(Object.create(rb.prototype),{constructor:vd,isSpotLightShadow:!0,update:function(a){var b=this.camera,c=2*R.RAD2DEG*a.angle,d=this.mapSize.width\/this.mapSize.height;a=a.distance||b.far;if(c!==b.fov||d!==b.aspect||a!==b.far)b.fov=c,b.aspect=d,b.far=a,b.updateProjectionMatrix()}});wd.prototype=Object.assign(Object.create(fa.prototype),{constructor:wd,isSpotLight:!0,copy:function(a){fa.prototype.copy.call(this,$/;"	r
isSprite	js/three.js	/^		isSprite: true,$/;"	r
isSprite	js/three.min.js	/^isSprite:!0,raycast:function(){var a=new p,b=new p,c=new p;return function(d,e){b.setFromMatrixPosition(this.matrixWorld);d.ray.closestPointToPoint(b,a);c.setFromMatrixScale(this.matrixWorld);var f=c.x*c.y\/4;b.distanceToSquared(a)>f||(f=d.ray.origin.distanceTo(a),f<d.near||f>d.far||e.push({distance:f,point:a.clone(),face:null,object:this}))}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}});Cc.prototype=Object.assign(Object.create(w.prototype),{constructor:Cc,copy:function(a){w.prototype.copy.call(this,$/;"	r
isSpriteMaterial	js/three.js	/^	SpriteMaterial.prototype.isSpriteMaterial = true;$/;"	r
isSpriteViewable	js/three.js	/^		function isSpriteViewable( sprite ) {$/;"	r
isTargetPowerOfTwo	js/three.js	/^			var isTargetPowerOfTwo = isPowerOfTwo( renderTarget );$/;"	r
isTexture	js/three.js	/^		isTexture: true,$/;"	r
isTexture	js/three.min.js	/^this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}});var kf=0;da.DEFAULT_IMAGE=void 0;da.DEFAULT_MAPPING=300;Object.defineProperty(da.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(da.prototype,ia.prototype,{constructor:da,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=$/;"	r
isTypedArray	js/three.js	/^		isTypedArray: function ( object ) {$/;"	r
isVector2	js/three.js	/^		isVector2: true,$/;"	r
isVector3	js/three.js	/^		isVector3: true,$/;"	r
isVector4	js/three.js	/^		isVector4: true,$/;"	r
isWebGLRenderTarget	js/three.js	/^		isWebGLRenderTarget: true,$/;"	r
isWebGLRenderTargetCube	js/three.js	/^	WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;$/;"	r
itemBytes	js/GLTFLoader.js	/^				var itemBytes = elementBytes * itemSize;$/;"	r
itemEnd	js/three.js	/^		this.itemEnd = function ( url ) {$/;"	r
itemError	js/three.js	/^		this.itemError = function ( url ) {$/;"	r
itemError	js/three.min.js	/^f,g);if(f===g&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)};this.resolveURL=function(a){return h?h(a):a};this.setURLModifier=function(a){h=a}}function Ja(a){this.manager=void 0!==a?a:wa}function Qe(a){this.manager=void 0!==a?a:wa;this._parser=null}function Zd(a){this.manager=void 0!==a?a:wa;this._parser=null}function Wc(a){this.manager=void 0!==a?a:wa}function $d(a){this.manager=void 0!==a?a:wa}function td(a){this.manager=void 0!==a?a:wa}function fa(a,$/;"	r
itemSize	js/GLTFLoader.js	/^					return new THREE.InterleavedBufferAttribute( ib, itemSize, accessor.byteOffset \/ elementBytes );$/;"	r
itemSize	js/GLTFLoader.js	/^				var itemSize = WEBGL_TYPE_SIZES[ accessor.type ];$/;"	r
itemSize	js/three.js	/^						var size = geometryAttribute.itemSize;$/;"	r
itemSize	js/three.js	/^					itemSize: attribute.itemSize,$/;"	r
itemSize	js/three.js	/^				var attributeSize = attribute2.itemSize;$/;"	r
itemSize	js/three.js	/^				var itemSize = attribute.itemSize;$/;"	r
itemSize	js/three.js	/^			index *= this.itemSize;$/;"	r
itemSize	js/three.js	/^			index1 *= this.itemSize;$/;"	r
itemSize	js/three.js	/^			index2 *= attribute.itemSize;$/;"	r
itemSize	js/three.js	/^			this.itemSize = source.itemSize;$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		BufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );$/;"	r
itemSize	js/three.js	/^		this.itemSize = itemSize;$/;"	r
itemSize	js/three.js	/^	function BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Float32BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Float64BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {$/;"	r
itemSize	js/three.js	/^	function Int16BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Int32BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Int8BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Uint16BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Uint32BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Uint8BufferAttribute( array, itemSize, normalized ) {$/;"	r
itemSize	js/three.js	/^	function Uint8ClampedBufferAttribute( array, itemSize, normalized ) {$/;"	r
itemStart	js/three.js	/^		this.itemStart = function ( url ) {$/;"	r
itemStart	js/three.min.js	/^1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function qb(a){T.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}function Yd(a,b,c){var d=this,e=!1,f=0,g=0,h=void 0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,$/;"	r
itemsLoaded	js/three.js	/^					scope.onStart( url, itemsLoaded, itemsTotal );$/;"	r
itemsLoaded	js/three.js	/^				scope.onProgress( url, itemsLoaded, itemsTotal );$/;"	r
itemsLoaded	js/three.js	/^		var itemsLoaded = 0;$/;"	r
itemsTotal	js/three.js	/^		var itemsTotal = 0;$/;"	r
iw	js/three.js	/^			var iw = - qx * x - qy * y - qz * z;$/;"	r
ix	js/three.js	/^			var ix = qw * x + qy * z - qz * y;$/;"	r
ix	js/three.js	/^			var ix, iy;$/;"	r
ix	js/three.js	/^		var ix, iy;$/;"	r
iy	js/three.js	/^			var iy = qw * y + qz * x - qx * z;$/;"	r
iz	js/three.js	/^			var iz = qw * z + qx * y - qy * x;$/;"	r
j	js/GLTFLoader.js	/^						j,$/;"	r
j	js/three.js	/^										state.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );$/;"	r
j	js/three.js	/^									state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );$/;"	r
j	js/three.js	/^				for ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {$/;"	r
j	js/three.js	/^				for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )$/;"	r
j	js/three.js	/^				j = i;$/;"	r
j	js/three.js	/^				var j = dstOffset + i;$/;"	r
j	js/three.js	/^			\/\/ console.log('i,j,k', i, j , k)$/;"	r
j	js/three.js	/^			for ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {$/;"	r
j	js/three.js	/^			for ( var i = 0, j = 0; i < bones.length; i ++ ) {$/;"	r
j	js/three.js	/^			for ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {$/;"	r
j	js/three.js	/^			for ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {$/;"	r
j	js/three.js	/^			var j, k;$/;"	r
j	js/three.js	/^		for ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {$/;"	r
j	js/three.js	/^		for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {$/;"	r
j	js/three.js	/^		var j, i;$/;"	r
ja	js/three.min.js	/^"canvas"),x=void 0!==a.context?a.context:null,y=void 0!==a.alpha?a.alpha:!1,B=void 0!==a.depth?a.depth:!0,I=void 0!==a.stencil?a.stencil:!0,A=void 0!==a.antialias?a.antialias:!1,J=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,w=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ja=[],z=[],D=null,C=[],Ua=[];this.domElement=t;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=$/;"	r
ja	js/three.min.js	/^A.shadow,h.shadowBias=k.bias,h.shadowRadius=k.radius,h.shadowMapSize=k.mapSize;b.directionalShadowMap[u]=ja;b.directionalShadowMatrix[u]=A.shadow.matrix;b.directional[u]=h;u++}else if(A.isSpotLight){h=a.get(A);h.position.setFromMatrixPosition(A.matrixWorld);h.position.applyMatrix4(p);h.color.copy(k).multiplyScalar(J);h.distance=ya;h.direction.setFromMatrixPosition(A.matrixWorld);c.setFromMatrixPosition(A.target.matrixWorld);h.direction.sub(c);h.direction.transformDirection(p);h.coneCos=Math.cos(A.angle);$/;"	r
ja	js/three.min.js	/^b.pointShadowMap[r]=ja;b.pointShadowMatrix[r]=A.shadow.matrix;b.point[r]=h;r++}else A.isHemisphereLight&&(h=a.get(A),h.direction.setFromMatrixPosition(A.matrixWorld),h.direction.transformDirection(p),h.direction.normalize(),h.skyColor.copy(A.color).multiplyScalar(J),h.groundColor.copy(A.groundColor).multiplyScalar(J),b.hemi[x]=h,x++)}b.ambient[0]=l;b.ambient[1]=q;b.ambient[2]=n;b.directional.length=u;b.spot.length=m;b.rectArea.length=t;b.point.length=r;b.hemi.length=x;b.hash=u+","+r+","+m+","+t+","+$/;"	r
ja	js/three.min.js	/^h.penumbraCos=Math.cos(A.angle*(1-A.penumbra));h.decay=0===A.distance?0:A.decay;if(h.shadow=A.castShadow)k=A.shadow,h.shadowBias=k.bias,h.shadowRadius=k.radius,h.shadowMapSize=k.mapSize;b.spotShadowMap[m]=ja;b.spotShadowMatrix[m]=A.shadow.matrix;b.spot[m]=h;m++}else if(A.isRectAreaLight)h=a.get(A),h.color.copy(k).multiplyScalar(J\/(A.width*A.height)),h.position.setFromMatrixPosition(A.matrixWorld),h.position.applyMatrix4(p),e.identity(),d.copy(A.matrixWorld),d.premultiply(p),e.extractRotation(d),h.halfWidth.set(.5*$/;"	r
jb	js/three.min.js	/^function jb(a,b){sa.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Kc(a,b){L.call(this);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Rb(a,b));this.mergeVertices()}function Rb(a,b){var c=(1+Math.sqrt(5))\/2;sa.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,$/;"	r
jd	js/three.min.js	/^LineBasicMaterial:T,Material:Q}),jd={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},wa=new Yd,$a={};Object.assign(Ja.prototype,{load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},$/;"	r
je	js/three.min.js	/^void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)}function je(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case "quaternion":b=this._slerp;break;case "string":case "bool":a=Array;b=this._select;break;default:b=this._lerp}this.buffer=new a(4*c);this._mixBufferRegion=b;this.referenceCount=this.useCount=this.cumulativeWeight=0}function Ve(a,b,c){c=c||pa.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,$/;"	r
jg	js/three.min.js	/^this.program=p;this.vertexShader=k;this.fragmentShader=l;return this}function jg(a,b,c){function d(a,b){if(a)a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),c=a.texture.encoding);else var c=3E3;3E3===c&&b&&(c=3007);return c}var e=[],f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",$/;"	r
jl	js/GLTFLoader.js	/^							for ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {$/;"	r
jl	js/GLTFLoader.js	/^				for ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {$/;"	r
jl	js/GLTFLoader.js	/^				for ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^							for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( var j = 0, jl = cameras.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^					for ( var j = 0, jl = groups.length; j < jl; ++ j ) {$/;"	r
jl	js/three.js	/^					for ( var j = start, jl = start + count; j < jl; j += 3 ) {$/;"	r
jl	js/three.js	/^				for ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( var j = 0, jl = objPos.count; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {$/;"	r
jl	js/three.js	/^				for ( var j = 0, jl = uv.length; j < jl; j ++ ) {$/;"	r
jointId	js/GLTFLoader.js	/^								var jointId = skinEntry.joints[ j ];$/;"	r
jointNode	js/GLTFLoader.js	/^								var jointNode = __nodes[ jointId ];$/;"	r
joints	js/GLTFLoader.js	/^					joints: skin.joints,$/;"	r
joints	js/GLTFLoader.js	/^			var joints = skins[ skinIndex ].joints;$/;"	r
json	js/GLTFLoader.js	/^			var json = JSON.parse( content );$/;"	r
json	js/GLTFLoader.js	/^		this.json = json || {};$/;"	r
json	js/GLTFLoader.js	/^		var json = this.json;$/;"	r
json	js/three.js	/^					json = JSON.parse( text );$/;"	r
json	js/three.js	/^					json = JSON.parse( text.substring( 65, text.length - 2 ) );$/;"	r
json	js/three.js	/^					json = json.data;$/;"	r
json	js/three.js	/^				json = trackType.toJSON( track );$/;"	r
json	js/three.js	/^				json = {$/;"	r
json	js/three.js	/^				var json = JSON.parse( text );$/;"	r
json	js/three.js	/^				var json = null;$/;"	r
json	js/three.js	/^				var json = {$/;"	r
json	js/three.js	/^				var json;$/;"	r
json	js/three.js	/^			var json = {$/;"	r
json	js/three.js	/^			var json;$/;"	r
jsonTracks	js/three.js	/^				jsonTracks = json.tracks,$/;"	r
k	js/three.js	/^					var k = Math.floor( j \/ 2 );$/;"	r
k	js/three.js	/^				k = i - 1;$/;"	r
k	js/three.js	/^		var k = 1 - t;$/;"	r
k	js/three.min.js	/^!1;break a}}}y=!0}}if(y){d.push([a[e[k]],a[e[g]],a[e[l]]]);f.push([e[k],e[g],e[l]]);k=g;for(l=g+1;l<c;k++,l++)e[k]=e[l];c--;h=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a){var b=a.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function d(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-c.x,l=e.y-c.y,m=a.x-c.x,n=a.y-c.y,q=h*k-g*l,p=h*m-g*n;if(Math.abs(q)>Number.EPSILON){if(0<$/;"	r
k	js/three.min.js	/^"",f.dithering?"#define DITHERING":"",f.outputEncoding||f.mapEncoding||f.envMapEncoding||f.emissiveMapEncoding?V.encodings_pars_fragment:"",f.mapEncoding?Rd("mapTexelToLinear",f.mapEncoding):"",f.envMapEncoding?Rd("envMapTexelToLinear",f.envMapEncoding):"",f.emissiveMapEncoding?Rd("emissiveMapTexelToLinear",f.emissiveMapEncoding):"",f.outputEncoding?dg("linearToOutputTexel",f.outputEncoding):"",f.depthPacking?"#define DEPTH_PACKING "+d.depthPacking:"","\\n"].filter(Ac).join("\\n"));k=Sd(k);k=Me(k,f);$/;"	r
k	js/three.min.js	/^-q),h),k=-d*d+e*(e+2*q)+n):e<=p?(d=0,e=Math.min(Math.max(-h,-q),h),k=e*(e+2*q)+n):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-q),h),k=-d*d+e*(e+2*q)+n)}else e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*q)+n;f&&f.copy(this.direction).multiplyScalar(d).add(this.origin);g&&g.copy(b).multiplyScalar(e).add(a);return k}}(),intersectSphere:function(){var a=new p;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d;b=b.radius*b.radius;if(e>b)return null;$/;"	r
k	js/three.min.js	/^0,0,a.width,a.height,0,0,c.width,c.height);console.warn("THREE.WebGLRenderer: image is too big ("+a.width+"x"+a.height+"). Resized to "+c.width+"x"+c.height,a);return c}return a}function k(a){return R.isPowerOfTwo(a.width)&&R.isPowerOfTwo(a.height)}function l(a,b){return a.generateMipmaps&&b&&1003!==a.minFilter&&1006!==a.minFilter}function q(b){return 1003===b||1004===b||1005===b?a.NEAREST:a.LINEAR}function n(b){b=b.target;b.removeEventListener("dispose",n);a:{var c=d.get(b);if(b.image&&c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);$/;"	r
k	js/three.min.js	/^b.count);a.addAttribute("color",new O(b,3));this.add(new qa(a,this.material));this.update()}function cd(a,b,c,d){a=a||10;b=b||10;c=new H(void 0!==c?c:4473924);d=new H(void 0!==d?d:8947848);var e=b\/2,f=a\/b,g=a\/2;a=[];for(var h=[],k=0,l=0,q=-g;k<=b;k++,q+=f){a.push(-g,0,q,g,0,q);a.push(q,0,-g,q,0,g);var n=k===e?c:d;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3;n.toArray(h,l);l+=3}b=new C;b.addAttribute("position",new z(a,3));b.addAttribute("color",new z(h,3));c=new T({vertexColors:2});$/;"	r
k	js/three.min.js	/^b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var h=b.children,k=0;k<h.length;k++)g.add(this.parseObject(h[k],c,d));if("LOD"===b.type)for(b=b.levels,h=0;h<b.length;h++){var k=b[h],l=g.getObjectByProperty("uuid",k.object);void 0!==l&&g.addLevel(l,k.distance)}return g}}()});var ug={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,$/;"	r
k	js/three.min.js	/^c.update(l.geometry)),l.material.uniforms.tCube.value=d,b.push(l,l.geometry,l.material,0,null)):d&&d.isTexture&&(void 0===h&&(h=new Gb(-1,1,1,-1,0,1),k=new qa(new gb(2,2),new va({depthTest:!1,depthWrite:!1,fog:!1})),c.update(k.geometry)),k.material.map=d,a.renderBufferDirect(h,null,k.geometry,k.material,k,null))}}}function Rf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.program&&b.program&&a.program!==b.program?a.program.id-b.program.id:a.material.id!==b.material.id?a.material.id-$/;"	r
k	js/three.min.js	/^d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var q=e[f+1],n=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==q||l!==n){f=1-g;var m=h*d+k*q+l*n+c*e,r=0<=m?1:-1,p=1-m*m;p>Number.EPSILON&&(p=Math.sqrt(p),m=Math.atan2(p,m*r),f=Math.sin(f*m)\/p,g=Math.sin(g*m)\/p);r*=g;h=h*f+d*r;k=k*f+q*r;l=l*f+n*r;c=c*f+e*r;f===1-g&&(g=1\/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;a[b+3]=c}});Object.defineProperties(X.prototype,{x:{get:function(){return this._x},$/;"	r
k	js/three.min.js	/^d.__originalVertexNormals[e]=d.vertexNormals[e].clone()}var f=new L;f.faces=this.faces;e=0;for(a=this.morphTargets.length;e<a;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];d=this.morphNormals[e].faceNormals;var g=this.morphNormals[e].vertexNormals;c=0;for(b=this.faces.length;c<b;c++){var h=new p;var k={a:new p,b:new p,c:new p};d.push(h);g.push(k)}}g=this.morphNormals[e];f.vertices=this.morphTargets[e].vertices;f.computeFaceNormals();$/;"	r
k	js/three.min.js	/^d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=f+g,k,l,q=0,n=[],u=new p,m=new p,v=[],t=[],x=[],y=[];for(l=0;l<=c;l++){var B=[],I=l\/c;for(k=0;k<=b;k++){var A=k\/b;u.x=-a*Math.cos(d+A*e)*Math.sin(f+I*g);u.y=a*Math.cos(f+I*g);u.z=a*Math.sin(d+A*e)*Math.sin(f+I*g);t.push(u.x,u.y,u.z);m.set(u.x,u.y,u.z).normalize();x.push(m.x,m.y,m.z);y.push(A,1-I);B.push(q++)}n.push(B)}for(l=0;l<c;l++)for(k=0;k<b;k++)a=n[l][k+1],d=n[l][k],e=n[l+1][k],g=n[l+1][k+1],(0!==l||0<f)&&v.push(a,d,$/;"	r
k	js/three.min.js	/^e.getMaxAnisotropy())),d.get(g).__currentAnisotropy=g.anisotropy)}function t(b,e,g,h){var l=f.convert(e.texture.format),k=f.convert(e.texture.type);c.texImage2D(h,0,l,e.width,e.height,0,l,k,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,0);a.bindFramebuffer(a.FRAMEBUFFER,null)}function p(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&&!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c.width,c.height),$/;"	r
k	js/three.min.js	/^e=a.faces;f=0;for(b=e.length;f<b;f++)this.faces.push(e[f].clone());f=0;for(b=a.faceVertexUvs.length;f<b;f++){var g=a.faceVertexUvs[f];void 0===this.faceVertexUvs[f]&&(this.faceVertexUvs[f]=[]);e=0;for(c=g.length;e<c;e++){var h=g[e],k=[];var l=0;for(d=h.length;l<d;l++)k.push(h[l].clone());this.faceVertexUvs[f].push(k)}}l=a.morphTargets;f=0;for(b=l.length;f<b;f++){d={};d.name=l[f].name;if(void 0!==l[f].vertices)for(d.vertices=[],e=0,c=l[f].vertices.length;e<c;e++)d.vertices.push(l[f].vertices[e].clone());$/;"	r
k	js/three.min.js	/^e[k-1].clone(),f[k]=f[k-1].clone(),g.crossVectors(d[k-1],d[k]),g.length()>Number.EPSILON&&(g.normalize(),c=Math.acos(R.clamp(d[k-1].dot(d[k]),-1,1)),e[k].applyMatrix4(h.makeRotationAxis(g,c))),f[k].crossVectors(d[k],e[k]);if(!0===b)for(c=Math.acos(R.clamp(e[0].dot(e[a]),-1,1)),c\/=a,0<d[0].dot(g.crossVectors(e[0],e[a]))&&(c=-c),k=1;k<=a;k++)e[k].applyMatrix4(h.makeRotationAxis(d[k],c*k)),f[k].crossVectors(d[k],e[k]);return{tangents:d,normals:e,binormals:f}}});Ma.prototype=Object.create(ca.prototype);$/;"	r
k	js/three.min.js	/^function k(b){0!==b?(e(a.CULL_FACE),b!==H&&(1===b?a.cullFace(a.BACK):2===b?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):f(a.CULL_FACE);H=b}function l(b,c,d){if(b){if(e(a.POLYGON_OFFSET_FILL),U!==c||K!==d)a.polygonOffset(c,d),U=c,K=d}else f(a.POLYGON_OFFSET_FILL)}function q(b){void 0===b&&(b=a.TEXTURE0+L-1);R!==b&&(a.activeTexture(b),R=b)}var n=new function(){var b=!1,c=new ba,d=null,e=new ba(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},$/;"	r
k	js/three.min.js	/^getTangentAt:function(a){a=this.getUtoTmapping(a);return this.getTangent(a)},computeFrenetFrames:function(a,b){var c=new p,d=[],e=[],f=[],g=new p,h=new K,k;for(k=0;k<=a;k++){var l=k\/a;d[k]=this.getTangentAt(l);d[k].normalize()}e[0]=new p;f[0]=new p;k=Number.MAX_VALUE;l=Math.abs(d[0].x);var m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0));m<=k&&(k=m,c.set(0,1,0));n<=k&&c.set(0,0,1);g.crossVectors(d[0],c).normalize();e[0].crossVectors(d[0],g);f[0].crossVectors(d[0],e[0]);for(k=1;k<=a;k++)e[k]=$/;"	r
k	js/three.min.js	/^k.length;d++){var g=b[k[d]];for(f=0;f<g.length;f++){var h=f+1;h%=g.length;h=e(a,c,g[f],g[h],!0);if(0<h.length)return!0}}return!1}var h=a.concat(),k=[],l,m;a=[];var q,n=0;for(l=b.length;n<l;n++)k.push(n);var p=0;for(var u=2*k.length;0<k.length;){u--;if(0>u){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}for(m=p;m<h.length;m++){var w=h[m];l=-1;for(n=0;n<k.length;n++){var z=k[n];var D=w.x+":"+w.y+":"+z;if(void 0===a[D]){var C=$/;"	r
k	js/three.min.js	/^k;l++){var q=e[l];if(q.code===g){h=q;++h.usedTimes;break}}void 0===h&&(h=new hg(a,b,g,c,d,f),e.push(h));return h};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=e.indexOf(a);e[b]=e[e.length-1];e.pop();a.destroy()}};this.programs=e}function kg(a,b,c,d,e,f,g){function h(a,b){if(a.width>b||a.height>b){b\/=Math.max(a.width,a.height);var c=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");c.width=Math.floor(a.width*b);c.height=Math.floor(a.height*b);c.getContext("2d").drawImage(a,$/;"	r
k	js/three.min.js	/^k=c[7];c[0]=b*d+a*g;c[3]=b*e+a*h;c[6]=b*f+a*k;c[1]=-a*d+b*g;c[4]=-a*e+b*h;c[7]=-a*f+b*k;return this},translate:function(a,b){var c=this.elements;c[0]+=a*c[2];c[3]+=a*c[5];c[6]+=a*c[8];c[1]+=b*c[2];c[4]+=b*c[5];c[7]+=b*c[8];return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;9>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;9>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=$/;"	r
k	js/three.min.js	/^n[l];n[l]=n[m];n[m]=p}}}this.nCachedObjects_=b},uncache:function(){for(var a,b,c=this._objects,d=c.length,e=this.nCachedObjects_,f=this._indicesByUUID,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){b=arguments[k].uuid;var m=f[b];if(void 0!==m)if(delete f[b],m<e){var n=--e,p=c[n];b=--d;a=c[b];f[p.uuid]=m;c[m]=p;f[a.uuid]=n;c[n]=a;c.pop();for(var p=0,r=h;p!==r;++p){a=g[p];var v=a[b];a[m]=a[n];a[n]=v;a.pop()}}else for(b=--d,a=c[b],f[a.uuid]=m,c[m]=a,c.pop(),p=0,r=h;p!==r;++p)a=g[p],a[m]=$/;"	r
k	js/three.min.js	/^new p,k=new p,l=new p,q=new p,n=new p,u,r,m=b+1;for(u=0;u<=c;u++){var t=u\/c;for(r=0;r<=b;r++){var x=r\/b,k=a(x,t,k);e.push(k.x,k.y,k.z);0<=x-1E-5?(l=a(x-1E-5,t,l),q.subVectors(k,l)):(l=a(x+1E-5,t,l),q.subVectors(l,k));0<=t-1E-5?(l=a(x,t-1E-5,l),n.subVectors(k,l)):(l=a(x,t+1E-5,l),n.subVectors(l,k));h.crossVectors(q,n).normalize();f.push(h.x,h.y,h.z);g.push(x,t)}}for(u=0;u<c;u++)for(r=0;r<b;r++)a=u*m+r+1,h=(u+1)*m+r+1,k=(u+1)*m+r,d.push(u*m+r,a,k),d.push(a,h,k);this.setIndex(d);this.addAttribute("position",$/;"	r
k	js/three.min.js	/^q){if(0>p||p>q)return[];k=l*m-k*n;if(0>k||k>q)return[]}else{if(0<p||p<q)return[];k=l*m-k*n;if(0<k||k<q)return[]}if(0===k)return!f||0!==p&&p!==q?[a]:[];if(k===q)return!f||0!==p&&p!==q?[b]:[];if(0===p)return[c];if(p===q)return[e];f=k\/q;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==p||l*m!==k*n)return[];h=0===g&&0===h;k=0===k&&0===l;if(h&&k)return a.x!==c.x||a.y!==c.y?[]:[a];if(h)return d(c,e,a)?[a]:[];if(k)return d(a,b,c)?[c]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),c.x<e.x?(b=c,q=c.x,l=$/;"	r
k	js/three.min.js	/^this.bones,f=this.geometry,g=f.getAttribute("position");c.getInverse(this.root.matrixWorld);for(var h=0,k=0;h<e.length;h++){var l=e[h];l.parent&&l.parent.isBone&&(b.multiplyMatrices(c,l.matrixWorld),a.setFromMatrixPosition(b),g.setXYZ(k,a.x,a.y,a.z),b.multiplyMatrices(c,l.parent.matrixWorld),a.setFromMatrixPosition(b),g.setXYZ(k+1,a.x,a.y,a.z),k+=2)}f.getAttribute("position").needsUpdate=!0;w.prototype.updateMatrixWorld.call(this,d)}}();mc.prototype=Object.create(qa.prototype);mc.prototype.constructor=$/;"	r
k	js/three.min.js	/^this;var a=new C,b=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h,k=0,l=0,q=b.length;l<q;l++){h=b[l]*e;for(var n=0;n<e;n++)g[k++]=f[h++]}a.addAttribute(d,new O(g,e))}return a},toJSON:function(){var a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};a.uuid=this.uuid;a.type=this.type;""!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters;for(var c in b)void 0!==b[c]&&$/;"	r
k	js/three.min.js	/^window.webkitAudioContext));return Md},setContext:function(a){Md=a}};Object.assign(ee.prototype,{load:function(a,b,c,d){var e=new Ja(this.manager);e.setResponseType("arraybuffer");e.load(a,function(a){ge.getContext().decodeAudioData(a,function(a){b(a)})},c,d)}});Object.assign(Ue.prototype,{update:function(){var a,b,c,d,e,f,g,h,k=new K,l=new K;return function(m){if(a!==this||b!==m.focus||c!==m.fov||d!==m.aspect*this.aspect||e!==m.near||f!==m.far||g!==m.zoom||h!==this.eyeSep){a=this;b=m.focus;c=m.fov;$/;"	r
k	js/three.min.js	/^{isAnimationObjectGroup:!0,add:function(){for(var a=this._objects,b=a.length,c=this.nCachedObjects_,d=this._indicesByUUID,e=this._paths,f=this._parsedPaths,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){var m=arguments[k],n=m.uuid,p=d[n];if(void 0===p){p=b++;d[n]=p;a.push(m);for(var n=0,r=h;n!==r;++n)g[n].push(new pa(m,e[n],f[n]))}else if(p<c){var v=--c,r=a[v];d[r.uuid]=p;a[p]=r;d[n]=v;a[v]=m;n=0;for(r=h;n!==r;++n){var t=g[n],w=t[p];t[p]=t[v];void 0===w&&(w=new pa(m,e[n],f[n]));t[v]=$/;"	r
k	js/three.min.js	/^{metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},q=[],n={},m=[],r={};for(g=0;g<this.faces.length;g++){var p=this.faces[g],t=void 0!==this.faceVertexUvs[0][g],x=0<p.normal.length(),y=0<p.vertexNormals.length,B=$/;"	r
kDiff	js/three.js	/^				\/\/ Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,$/;"	r
kEdge1	js/three.js	/^				\/\/ E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by$/;"	r
kc	js/three.min.js	/^b=3*c.faces.length:c&&c.isBufferGeometry&&(b=c.attributes.normal.count);c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function kc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new C;b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var c=0,d=1;32>c;c++,d++){var e=c\/32*Math.PI*2,f=d\/32*Math.PI*2;b.push(Math.cos(e),$/;"	r
keep	js/three.js	/^								keep = true;$/;"	r
keep	js/three.js	/^				var keep = false;$/;"	r
key	js/three.js	/^							key = edge[ 0 ] + ',' + edge[ 1 ];$/;"	r
key	js/three.js	/^					console.warn( 'THREE.ShapeUtils: Duplicate point', key, i );$/;"	r
key	js/three.js	/^					key = edge[ 0 ] + ',' + edge[ 1 ];$/;"	r
key	js/three.js	/^					key = face[ f ].x + ':' + face[ f ].y;$/;"	r
key	js/three.js	/^					key = jsonKeys[ i ++ ];$/;"	r
key	js/three.js	/^				key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );$/;"	r
key	js/three.js	/^				key = allpoints[ i ].x + ':' + allpoints[ i ].y;$/;"	r
key	js/three.js	/^				key = edge[ 0 ] + ',' + edge[ 1 ];$/;"	r
key	js/three.js	/^				key = jsonKeys[ i ++ ];$/;"	r
key	js/three.js	/^				key, index,$/;"	r
key	js/three.js	/^		var key, keys = [ 'a', 'b', 'c' ];$/;"	r
keyA	js/three.js	/^				var keyA = result.uuid, keyB = material.uuid;$/;"	r
keys	js/GLTFLoader.js	/^		var keys = [];$/;"	r
keys	js/three.js	/^				var keys = Object.keys( morphAttributes );$/;"	r
keys	js/three.js	/^			var keys = [ 'a', 'b', 'c' ];$/;"	r
keys	js/three.js	/^		var key, keys = [ 'a', 'b', 'c' ];$/;"	r
kf	js/three.min.js	/^this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a}});var kf=0;da.DEFAULT_IMAGE=void 0;da.DEFAULT_MAPPING=300;Object.defineProperty(da.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});Object.assign(da.prototype,ia.prototype,{constructor:da,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=$/;"	r
kg	js/three.min.js	/^k;l++){var q=e[l];if(q.code===g){h=q;++h.usedTimes;break}}void 0===h&&(h=new hg(a,b,g,c,d,f),e.push(h));return h};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=e.indexOf(a);e[b]=e[e.length-1];e.pop();a.destroy()}};this.programs=e}function kg(a,b,c,d,e,f,g){function h(a,b){if(a.width>b||a.height>b){b\/=Math.max(a.width,a.height);var c=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");c.width=Math.floor(a.width*b);c.height=Math.floor(a.height*b);c.getContext("2d").drawImage(a,$/;"	r
khcExtension	js/GLTFLoader.js	/^				var khcExtension = extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ];$/;"	r
khrMaterial	js/GLTFLoader.js	/^		var khrMaterial = material.extensions[ this.name ];$/;"	r
kl	js/three.js	/^						for ( var k = 0, kl = groups.length; k < kl; k ++ ) {$/;"	r
kl	js/three.js	/^					for ( k = 0, kl = uvs.length; k < kl; k ++ ) {$/;"	r
knownActions	js/three.js	/^					knownActions: [ action ],$/;"	r
knownActions	js/three.js	/^				knownActionsForClip = actionsForClip.knownActions,$/;"	r
knownActions	js/three.js	/^				var actionsToRemove = actionsForClip.knownActions;$/;"	r
knownActions	js/three.js	/^				var knownActions = actionsForClip.knownActions;$/;"	r
knownActionsForClip	js/three.js	/^				knownActionsForClip = actionsForClip.knownActions,$/;"	r
knownObject	js/three.js	/^					knownObject = objects[ index ];$/;"	r
knownObject	js/three.js	/^					knownObject = undefined;$/;"	r
l	js/GLTFLoader.js	/^							for ( var j = 0, l = skinEntry.joints.length; j < l; j ++ ) {$/;"	r
l	js/GLTFLoader.js	/^				for ( var i = 0, l = children.length; i < l; i ++ ) {$/;"	r
l	js/GLTFLoader.js	/^				for ( var i = 0, l = nodes.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^							for ( i = 0, l = attribute.count; i < l; i ++ ) {$/;"	r
l	js/three.js	/^							for ( var i = 0, l = groups.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^							var l = parseInt( color[ 3 ], 10 ) \/ 100;$/;"	r
l	js/three.js	/^						for ( i = 0, l = index.count; i < l; i += 3 ) {$/;"	r
l	js/three.js	/^						for ( i = 0, l = position.count; i < l; i += 3 ) {$/;"	r
l	js/three.js	/^						for ( i = 0, l = vertices.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^						for ( var i = 0, l = indices.length - 1; i < l; i += step ) {$/;"	r
l	js/three.js	/^						for ( var i = 0, l = name.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^						for ( var i = 0, l = positions.length \/ 3 - 1; i < l; i += step ) {$/;"	r
l	js/three.js	/^						for ( var i = 0, l = positions.length \/ 3; i < l; i ++ ) {$/;"	r
l	js/three.js	/^					for ( i = start, l = ( start + count ); i < l; i += 3 ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = object.count * 3; i < l; i += 9 ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = outline.length; i < l; ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = this.material.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^					for ( var i = 0, l = vertices.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^					for ( var i = 1, l = levels.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^					this.r = this.g = this.b = l;$/;"	r
l	js/three.js	/^				for ( i = 0, l = ( position.count \/ 3 ); i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( i = 0, l = morphAttribute.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = ( array.length \/ 3 ) - 1; i < l; i += 3 ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = array.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = array.length; i < l; i += 3 ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = attribute.count; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = colors.count; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = indices.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = json.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = morphTargets.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 0, l = points.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				for ( var i = 1, l = this.filters.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^				l = 1 \/ l;$/;"	r
l	js/three.js	/^				l = _Math.clamp( l, 0, 1 );$/;"	r
l	js/three.js	/^				var l = points.length;$/;"	r
l	js/three.js	/^			for ( i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( i = 0, l = groups.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( i = 0, l = shapeVertices.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = array.length; i < l; i += 3 ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = attribute.count; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = children.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = colors.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = flares.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = handlers.length; i < l; i += 2 ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = indices.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = levels.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = lights.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = materials.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = newAttributes.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = objects.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = points.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = renderList.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = sprites.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = subPaths.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = this.children.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = this.curves.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = this.holes.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = this.itemSize; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = this.stride; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 0, l = vectors.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 1, l = levels.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			for ( var i = 1, l = vectors.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^			hsl.l = lightness;$/;"	r
l	js/three.js	/^			var l = this.length();$/;"	r
l	js/three.js	/^		for ( var i = 0, l = faces.length; i < l; i ++ ) {$/;"	r
l	js/three.js	/^		for ( var i = 1, l = array.length; i < l; ++ i ) {$/;"	r
l	js/three.js	/^		var l = points.length;$/;"	r
l	js/three.min.js	/^!a.frustumCulled||Td.intersectsObject(a)){c&&Jb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(md);var d=ta.update(a),e=a.material;if(Array.isArray(e))for(var f=d.groups,g=0,h=f.length;g<h;g++){var l=f[g],n=e[l.materialIndex];n&&n.visible&&D.push(a,d,n,Jb.z,l)}else e.visible&&D.push(a,d,e,Jb.z,null)}a=a.children;g=0;for(h=a.length;g<h;g++)k(a[g],b,c)}}function l(a,b,c,d){for(var e=0,f=a.length;e<f;e++){var g=a[e],h=g.object,l=g.geometry,k=void 0===d?g.material:d,g=g.group;if(c.isArrayCamera){Z=$/;"	r
l	js/three.min.js	/^(h.push(e),k.push(k[0]));f.push((new fc(".morphTargetInfluences["+b[g].name+"]",h,k)).scale(1\/c))}return new ra(a,-1,f)},findByName:function(a,b){var c=a;Array.isArray(a)||(c=a.geometry&&a.geometry.animations||a.animations);for(a=0;a<c.length;a++)if(c[a].name===b)return c[a];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){for(var d,e={},f=\/^([\\w-]*?)([\\d]+)$\/,g=0,h=a.length;g<h;g++){var k=a[g],l=k.name.match(f);l&&1<l.length&&(d=l[1],(l=e[d])||(e[d]=l=[]),l.push(k))}a=[];for(d in e)a.push(ra.CreateFromMorphTargetSequence(d,$/;"	r
l	js/three.min.js	/^1E3));void 0!==d&&a.offset.fromArray(d);void 0!==e&&("repeat"===e[0]&&(a.wrapS=1E3),"mirror"===e[0]&&(a.wrapS=1002),"repeat"===e[1]&&(a.wrapT=1E3),"mirror"===e[1]&&(a.wrapT=1002));void 0!==h&&(a.anisotropy=h);b=R.generateUUID();k[b]=a;return b}var k={},l={uuid:R.generateUUID(),type:"MeshLambertMaterial"},m;for(m in e){var n=e[m];switch(m){case "DbgColor":case "DbgIndex":case "opticalDensity":case "illumination":break;case "DbgName":l.name=n;break;case "blending":l.blending=a[n];break;case "colorAmbient":case "mapAmbient":console.warn("THREE.Loader.createMaterial:",$/;"	r
l	js/three.min.js	/^[],l=[],q=[],n=[],u=0,r=0;g("z","y","x",-1,-1,c,b,a,f,e,0);g("z","y","x",1,-1,c,b,-a,f,e,1);g("x","z","y",1,1,a,c,b,d,f,2);g("x","z","y",1,-1,a,c,-b,d,f,3);g("x","y","z",1,-1,a,b,c,d,e,4);g("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.addAttribute("position",new z(l,3));this.addAttribute("normal",new z(q,3));this.addAttribute("uv",new z(n,2))}function zc(a,b,c,d){L.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new gb(a,$/;"	r
l	js/three.min.js	/^a-k*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(k=f*h,l=f*e,q=c*h,a=c*e,b[0]=g*h,b[4]=q*d-l,b[8]=k*d+a,b[1]=g*e,b[5]=a*d+k,b[9]=l*d-q,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(k=f*g,l=f*d,q=c*g,a=c*d,b[0]=g*h,b[4]=a-k*e,b[8]=q*e+l,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=l*e+q,b[10]=k-a*e):"XZY"===a.order&&(k=f*g,l=f*d,q=c*g,a=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=k*e+a,b[5]=f*h,b[9]=l*e-q,b[2]=q*e-l,b[6]=c*h,b[10]=a*e+k);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=$/;"	r
l	js/three.min.js	/^alphaTest:b.alphaTest,doubleSided:2===b.side,flipSided:1===b.side,depthPacking:void 0!==b.depthPacking?b.depthPacking:!1}};this.getProgramCode=function(b,c){var d=[];c.shaderID?d.push(c.shaderID):(d.push(b.fragmentShader),d.push(b.vertexShader));if(void 0!==b.defines)for(var e in b.defines)d.push(e),d.push(b.defines[e]);for(e=0;e<g.length;e++)d.push(c[g[e]]);d.push(b.onBeforeCompile.toString());d.push(a.gammaOutput);return d.join()};this.acquireProgram=function(c,d,f,g){for(var h,l=0,k=e.length;l<$/;"	r
l	js/three.min.js	/^b[l]);l=0;for(g=k.length;l<g;l++){var m=k[l].x+":"+k[l].y;void 0!==h[m]&&console.warn("THREE.ShapeUtils: Duplicate point",m,l);h[m]=l}l=function(a,b){function c(a,b){var c=h.length-1,d=a-1;0>d&&(d=c);var e=a+1;e>c&&(e=0);c=f(h[a],h[d],h[e],C[b]);if(!c)return!1;c=C.length-1;d=b-1;0>d&&(d=c);e=b+1;e>c&&(e=0);return(c=f(C[b],C[d],C[e],h[a]))?!0:!1}function d(a,b){var c;for(c=0;c<h.length;c++){var d=c+1;d%=h.length;d=e(a,b,h[c],h[d],!0);if(0<d.length)return!0}return!1}function g(a,c){var d,f;for(d=0;d<$/;"	r
l	js/three.min.js	/^b[z];for(q=0;q<C.length;q++)if(z=C[q],c(m,q)&&!d(w,z)&&!g(w,z)){l=q;k.splice(n,1);p=h.slice(0,m+1);z=h.slice(m);q=C.slice(l);var E=C.slice(0,l+1);h=p.concat(q).concat(E).concat(z);p=m;break}if(0<=l)break;a[D]=!0}}if(0<=l)break}}return h}(a,b);k=Ha.triangulate(l,!1);l=0;for(g=k.length;l<g;l++)for(b=k[l],a=0;3>a;a++)m=b[a].x+":"+b[a].y,m=h[m],void 0!==m&&(b[a]=m);return k.concat()},isClockWise:function(a){return 0>Ha.area(a)}};Za.prototype=Object.create(L.prototype);Za.prototype.constructor=Za;Ga.prototype=$/;"	r
l	js/three.min.js	/^c.radius+=l;if(!1!==d.ray.intersectsSphere(c)){a.getInverse(k);b.copy(d.ray).applyMatrix4(a);var l=l\/((this.scale.x+this.scale.y+this.scale.z)\/3),m=l*l,l=new p;if(h.isBufferGeometry){var n=h.index,h=h.attributes.position.array;if(null!==n)for(var u=n.array,n=0,r=u.length;n<r;n++){var v=u[n];l.fromArray(h,3*v);f(l,v)}else for(n=0,u=h.length\/3;n<u;n++)l.fromArray(h,3*n),f(l,n)}else for(l=h.vertices,n=0,u=l.length;n<u;n++)f(l[n],n)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});$/;"	r
l	js/three.min.js	/^d&&(k=u,l=b.customDistanceMaterial);l?k=l:(l=!1,c.morphTargets&&(h&&h.isBufferGeometry?l=h.morphAttributes&&h.morphAttributes.position&&0<h.morphAttributes.position.length:h&&h.isGeometry&&(l=h.morphTargets&&0<h.morphTargets.length)),b.isSkinnedMesh&&!1===c.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",b),b=b.isSkinnedMesh&&c.skinning,h=0,l&&(h|=1),b&&(h|=2),k=k[h]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(h=$/;"	r
l	js/three.min.js	/^e,c=e.x):(b=e,q=e.x,l=c,c=c.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),c.y<e.y?(b=c,q=c.y,l=e,c=e.y):(b=e,q=e.y,l=c,c=c.y));return k<=q?a<q?[]:a===q?f?[]:[b]:a<=c?[b,h]:[b,l]:k>c?[]:k===c?f?[]:[g]:a<=c?[g,h]:[g,l]}function f(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return Math.abs(a)>Number.EPSILON?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}c(a);b.forEach(c);var g,h={},k=a.concat();var l=0;for(g=b.length;l<g;l++)Array.prototype.push.apply(k,$/;"	r
l	js/three.min.js	/^e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1\/Math.sqrt(b)):e.set(0,0,0)}}(),barycoordFromPoint:function(){var a=new p,b=new p,c=new p;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new p;if(0===l)return h.set(-2,-1,-1);l=1\/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}(),containsPoint:function(){var a=new p;return function(b,c,d,e){b=$/;"	r
l	js/three.min.js	/^e=0,f=!1,g=!1,h=new za,k=new ta,l={value:null,needsUpdate:!1};this.uniform=l;this.numIntersection=this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,r,m,p){if(!f||null===c||0===c.length||g&&!k)g?b(null):a();else{k=g?0:e;var n=4*k,q=m.clippingState||null;l.value=q;q=b(c,r,n,p);for(c=0;c!==n;++c)q[c]=d[c];m.clippingState=q;this.numIntersection=$/;"	r
l	js/three.min.js	/^e=d[0]&&0<d[0].length,f=d[1]&&0<d[1].length,g=a.morphTargets,h=g.length;if(0<h){var k=[];for(var l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var q=a.morphNormals,n=q.length;if(0<n){var m=[];for(l=0;l<n;l++)m[l]=[];this.morphTargets.normal=m}for(var r=a.skinIndices,p=a.skinWeights,t=r.length===c.length,x=p.length===c.length,l=0;l<b.length;l++){var y=b[l];this.vertices.push(c[y.a],c[y.b],c[y.c]);var B=y.vertexNormals;3===B.length?this.normals.push(B[0],B[1],B[2]):(B=y.normal,this.normals.push(B,$/;"	r
l	js/three.min.js	/^e[d],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];S.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var m=0;m<k[l].morphTargets.length;m++)f[k[l].morphTargets[m]]=$/;"	r
l	js/three.min.js	/^g,h){for(var k,l=0,q=0,n=0,u=0,r=0,m=0,t=0,x=0,p=h.matrixWorldInverse,B=0,I=f.length;B<I;B++){var A=f[B];k=A.color;var J=A.intensity,ya=A.distance,ja=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)l+=k.r*J,q+=k.g*J,n+=k.b*J;else if(A.isDirectionalLight){h=a.get(A);h.color.copy(A.color).multiplyScalar(A.intensity);h.direction.setFromMatrixPosition(A.matrixWorld);c.setFromMatrixPosition(A.target.matrixWorld);h.direction.sub(c);h.direction.transformDirection(p);if(h.shadow=A.castShadow)k=$/;"	r
l	js/three.min.js	/^h?h:1003;this.generateMipmaps=this.flipY=!1}function Ob(a){C.call(this);this.type="WireframeGeometry";var b=[],c,d,e,f=[0,0],g={},h=["a","b","c"];if(a&&a.isGeometry){var k=a.faces;var l=0;for(d=k.length;l<d;l++){var q=k[l];for(c=0;3>c;c++){var n=q[h[c]];var u=q[h[(c+1)%3]];f[0]=Math.min(n,u);f[1]=Math.max(n,u);n=f[0]+","+f[1];void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]})}}for(n in g)l=g[n],h=a.vertices[l.index1],b.push(h.x,h.y,h.z),h=a.vertices[l.index2],b.push(h.x,h.y,h.z)}else if(a&&a.isBufferGeometry){var h=$/;"	r
l	js/three.min.js	/^k.uuid,l=c.uuid,b=r[h],void 0===b&&(b={},r[h]=b),h=b[l],void 0===h&&(h=k.clone(),b[l]=h),k=h);k.visible=c.visible;k.wireframe=c.wireframe;l=c.side;A.renderSingleSided&&2==l&&(l=0);A.renderReverseSided&&(0===l?l=1:1===l&&(l=0));k.side=l;k.clipShadows=c.clipShadows;k.clippingPlanes=c.clippingPlanes;k.clipIntersection=c.clipIntersection;k.wireframeLinewidth=c.wireframeLinewidth;k.linewidth=c.linewidth;d&&k.isMeshDistanceMaterial&&(k.referencePosition.copy(e),k.nearDistance=f,k.farDistance=g);return k}$/;"	r
l	js/three.min.js	/^l!==l[0]))if(f)a=!0;else{b=k*e;for(var m=b-e,n=b+e,l=0;l!==e;++l){var p=d[b+l];if(p!==d[m+l]||p!==d[n+l]){a=!0;break}}}if(a){if(k!==g)for(c[g]=c[k],b=k*e,a=g*e,l=0;l!==e;++l)d[a+l]=d[b+l];++g}}if(0<h){c[g]=c[h];b=h*e;a=g*e;for(l=0;l!==e;++l)d[a+l]=d[b+l];++g}g!==c.length&&(this.times=S.arraySlice(c,0,g),this.values=S.arraySlice(d,0,g*e));return this}};ec.prototype=Object.assign(Object.create(ab),{constructor:ec,ValueTypeName:"vector"});Ed.prototype=Object.assign(Object.create(xa.prototype),{constructor:Ed,$/;"	r
l	js/three.min.js	/^l=0,d=k.count\/3;l<d;l++)for(c=0;3>c;c++)g=3*l+c,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z),g=3*l+(c+1)%3,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z)}this.addAttribute("position",new z(b,3))}function Gc(a,b,c){L.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){C.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=$/;"	r
l	js/three.min.js	/^l=Sd(l);l=Me(l,f);d.isShaderMaterial||(k=Ne(k),l=Ne(l));l=b+l;k=Ke(g,g.VERTEX_SHADER,h+k);l=Ke(g,g.FRAGMENT_SHADER,l);g.attachShader(p,k);g.attachShader(p,l);void 0!==d.index0AttributeName?g.bindAttribLocation(p,0,d.index0AttributeName):!0===f.morphTargets&&g.bindAttribLocation(p,0,"position");g.linkProgram(p);f=g.getProgramInfoLog(p);e=g.getShaderInfoLog(k);q=g.getShaderInfoLog(l);u=n=!0;if(!1===g.getProgramParameter(p,g.LINK_STATUS))n=!1,console.error("THREE.WebGLProgram: shader error: ",g.getError(),$/;"	r
l	js/three.min.js	/^m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g.isGeometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=n)m=b.distanceSqToSegment(k[g],k[g+1],q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,$/;"	r
l	js/three.min.js	/^p);break;default:F.vertexAttrib1fv(m,p)}}}aa.disableUnusedAttributes()}null!==l&&F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,n.buffer)}n=0;null!==l?n=l.count:void 0!==k&&(n=k.count);l=c.drawRange.start*b;k=null!==f?f.start*b:0;var J=Math.max(l,k);f=Math.max(0,Math.min(n,l+c.drawRange.count*b,k+(null!==f?f.count*b:Infinity))-1-J+1);if(0!==f){if(e.isMesh)if(!0===d.wireframe)aa.setLineWidth(d.wireframeLinewidth*(null===ka?P:1)),a.setMode(F.LINES);else switch(e.drawMode){case 0:a.setMode(F.TRIANGLES);break;case 1:a.setMode(F.TRIANGLE_STRIP);$/;"	r
l	js/three.min.js	/^this.getParameters=function(b,e,g,q,n,u,r){var h=f[b.type];if(r.isSkinnedMesh){var l=r.skeleton.bones;if(c.floatVertexTextures)l=1024;else{var k=Math.min(Math.floor((c.maxVertexUniforms-20)\/4),l.length);k<l.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+l.length+" bones. This GPU supports "+k+"."),l=0):l=k}}else l=0;k=c.precision;null!==b.precision&&(k=c.getMaxPrecision(b.precision),k!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",k,"instead."));$/;"	r
l	js/three.min.js	/^{metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},q=[],n={},m=[],r={};for(g=0;g<this.faces.length;g++){var p=this.faces[g],t=void 0!==this.faceVertexUvs[0][g],x=0<p.normal.length(),y=0<p.vertexNormals.length,B=$/;"	r
lGlobal	js/three.js	/^					lGlobal = nGlobal * 4,$/;"	r
la	js/three.min.js	/^b*e+c*f+d*f*e}}}function la(a){ca.call(this);this.type="CatmullRomCurve3";2>a.length&&console.warn("THREE.CatmullRomCurve3: Points array needs at least two entries.");this.points=a||[];this.closed=!1;this.curveType="centripetal"}function qc(a,b,c,d){ca.call(this);this.type="CubicBezierCurve3";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function rc(a,b,c){ca.call(this);this.type="QuadraticBezierCurve3";this.v0=a;this.v1=b;this.v2=c}function Cb(a,b){ca.call(this);this.type="LineCurve3";this.v1=a;this.v2=$/;"	r
la	js/three.min.js	/^la;m.CubicBezierCurve3=qc;m.QuadraticBezierCurve3=rc;m.LineCurve3=Cb;m.ArcCurve=id;m.EllipseCurve=Sa;m.SplineCurve=wb;m.CubicBezierCurve=xb;m.QuadraticBezierCurve=yb;m.LineCurve=Ma;m.Shape=zb;m.Path=Zc;m.ShapePath=ce;m.Font=de;m.CurvePath=hc;m.Curve=ca;m.ShapeUtils=Ha;m.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new Ec,d=0,e=b.length;d<e;d++)c.add(new qa(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){a.applyMatrix((new K).getInverse(c.matrixWorld));$/;"	r
la	js/three.min.js	/^t.addEventListener("webglcontextrestored",d,!1)}catch(rg){console.error("THREE.WebGLRenderer: "+rg)}var ha,X,aa,Y,S,pa,qa,ta,ua,oa,sa,ia,va,wa,xa,za,Aa,ra;b();var la=new og(M);this.vr=la;var Ca=new Ie(M,ta,X.maxTextureSize);this.shadowMap=Ca;this.getContext=function(){return F};this.getContextAttributes=function(){return F.getContextAttributes()};this.forceContextLoss=function(){var a=ha.get("WEBGL_lose_context");a&&a.loseContext()};this.forceContextRestore=function(){var a=ha.get("WEBGL_lose_context");$/;"	r
la	js/three.min.js	/^te=new qe,ue=new qe,ve=new qe;la.prototype=Object.create(ca.prototype);la.prototype.constructor=la;la.prototype.isCatmullRomCurve3=!0;la.prototype.getPoint=function(a,b){b=b||new p;var c=this.points,d=c.length;a*=d-(this.closed?0:1);var e=Math.floor(a);a-=e;this.closed?e+=0<e?0:(Math.floor(Math.abs(e)\/c.length)+1)*c.length:0===a&&e===d-1&&(e=d-2,a=1);if(this.closed||0<e)var f=c[(e-1)%d];else Nd.subVectors(c[0],c[1]).add(c[0]),f=Nd;var g=c[e%d];var h=c[(e+1)%d];this.closed||e+2<d?c=c[(e+2)%d]:(Nd.subVectors(c[d-$/;"	r
lambert	js/three.js	/^		lambert: {$/;"	r
lambert	js/three.min.js	/^ib={basic:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.fog]),vertexShader:V.meshbasic_vert,fragmentShader:V.meshbasic_frag},lambert:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.fog,E.lights,{emissive:{value:new H(0)}}]),vertexShader:V.meshlambert_vert,fragmentShader:V.meshlambert_frag},phong:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.bumpmap,E.normalmap,E.displacementmap,E.gradientmap,$/;"	r
last	js/three.js	/^								last = bindingsForPath[ lastIndex ];$/;"	r
last	js/three.js	/^							bindingsForPath[ firstActiveIndex ] = last;$/;"	r
last	js/three.js	/^					last = point;$/;"	r
last	js/three.js	/^				last = current;$/;"	r
last	js/three.js	/^			var current, last = this.getPoint( 0 );$/;"	r
last	js/three.js	/^			var points = [], last;$/;"	r
lastActiveAction	js/three.js	/^				lastActiveAction = actions[ firstInactiveIndex ];$/;"	r
lastActiveAction	js/three.js	/^			actions[ prevIndex ] = lastActiveAction;$/;"	r
lastActiveBinding	js/three.js	/^				lastActiveBinding = bindings[ firstInactiveIndex ];$/;"	r
lastActiveBinding	js/three.js	/^			bindings[ prevIndex ] = lastActiveBinding;$/;"	r
lastActiveIndex	js/three.js	/^				interpolant.__cacheIndex = lastActiveIndex;$/;"	r
lastActiveIndex	js/three.js	/^				lastActiveIndex = this._nActiveActions ++,$/;"	r
lastActiveIndex	js/three.js	/^				lastActiveIndex = this._nActiveBindings ++,$/;"	r
lastActiveIndex	js/three.js	/^				lastActiveIndex = this._nActiveControlInterpolants ++,$/;"	r
lastActiveIndex	js/three.js	/^			action._cacheIndex = lastActiveIndex;$/;"	r
lastActiveIndex	js/three.js	/^			binding._cacheIndex = lastActiveIndex;$/;"	r
lastActiveInterpolant	js/three.js	/^				lastActiveInterpolant = interpolants[ firstInactiveIndex ];$/;"	r
lastActiveInterpolant	js/three.js	/^			interpolants[ prevIndex ] = lastActiveInterpolant;$/;"	r
lastBindings	js/three.js	/^					lastBindings = bindings[ lastBindingsIndex ],$/;"	r
lastBindings	js/three.js	/^				bindings[ index ] = lastBindings;$/;"	r
lastBindingsIndex	js/three.js	/^					lastBindingsIndex = bindings.length - 1,$/;"	r
lastBindingsPath	js/three.js	/^					lastBindingsPath = path[ lastBindingsIndex ];$/;"	r
lastCached	js/three.js	/^								lastCached = bindingsForPath[ firstActiveIndex ],$/;"	r
lastCached	js/three.js	/^							bindingsForPath[ index ] = lastCached;$/;"	r
lastCached	js/three.js	/^							lastCached = bindingsForPath[ firstActiveIndex ],$/;"	r
lastCached	js/three.js	/^						bindingsForPath[ index ] = lastCached;$/;"	r
lastCachedIndex	js/three.js	/^					indicesByUUID[ uuid ] = lastCachedIndex;$/;"	r
lastCachedIndex	js/three.js	/^					var lastCachedIndex = nCachedObjects ++,$/;"	r
lastCachedObject	js/three.js	/^							lastCachedObject = objects[ firstActiveIndex ],$/;"	r
lastCachedObject	js/three.js	/^						lastCachedObject = objects[ firstActiveIndex ];$/;"	r
lastCachedObject	js/three.js	/^						objects[ index ] = lastCachedObject;$/;"	r
lastCachedObject	js/three.js	/^					objects[ index ] = lastCachedObject;$/;"	r
lastDot	js/three.js	/^				var lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );$/;"	r
lastHoleIdx	js/three.js	/^					if ( prevHoleIdx < 0 )			prevHoleIdx = lastHoleIdx;$/;"	r
lastHoleIdx	js/three.js	/^					var lastHoleIdx = hole.length - 1;$/;"	r
lastInactiveAction	js/three.js	/^						lastInactiveAction = actions[ actions.length - 1 ];$/;"	r
lastInactiveAction	js/three.js	/^					actions[ cacheIndex ] = lastInactiveAction;$/;"	r
lastInactiveAction	js/three.js	/^				lastInactiveAction = actions[ actions.length - 1 ],$/;"	r
lastInactiveAction	js/three.js	/^			actions[ cacheIndex ] = lastInactiveAction;$/;"	r
lastInactiveBinding	js/three.js	/^				lastInactiveBinding = bindings[ bindings.length - 1 ],$/;"	r
lastInactiveBinding	js/three.js	/^			bindings[ cacheIndex ] = lastInactiveBinding;$/;"	r
lastIndex	js/three.js	/^							lastIndex = -- nObjects,$/;"	r
lastIndex	js/three.js	/^						var lastIndex = -- nObjects,$/;"	r
lastIndex	js/three.js	/^				lastIndex = times.length - 1;$/;"	r
lastIndex	js/three.js	/^				matchEnd = RePathPart.lastIndex,$/;"	r
lastIndex	js/three.js	/^		RePathPart.lastIndex = 0;$/;"	r
lastKnownAction	js/three.js	/^			knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;$/;"	r
lastObject	js/three.js	/^							lastObject = objects[ lastIndex ];$/;"	r
lastObject	js/three.js	/^						objects[ firstActiveIndex ] = lastObject;$/;"	r
lastObject	js/three.js	/^						objects[ index ] = lastObject;$/;"	r
lastPoint	js/three.js	/^			var lastPoint = curve.getPoint( 1 );$/;"	r
lastShapeIdx	js/three.js	/^					if ( prevShapeIdx < 0 )			prevShapeIdx = lastShapeIdx;$/;"	r
lastShapeIdx	js/three.js	/^					var lastShapeIdx = shape.length - 1;$/;"	r
laste	js/three.js	/^								laste = pts[ pts.length - 1 ];$/;"	r
layer	js/three.js	/^				layer = steps + bevelSegments * 2;$/;"	r
layer	js/three.js	/^				var layer = 0; \/\/ steps + 1$/;"	r
layer	js/three.js	/^				var layer = layers[ 0 ];$/;"	r
layeroffset	js/three.js	/^			var layeroffset = 0;$/;"	r
layers	js/three.js	/^			var layers = device.getLayers();$/;"	r
layers	js/three.js	/^		this.layers = new Layers();$/;"	r
lb	js/three.min.js	/^new z(c,3))}function lb(a,b,c,d,e,f,g,h){L.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Ra(a,b,c,d,e,f,g,h));this.mergeVertices()}function Ra(a,b,c,d,e,f,g,h){function k(c){var e,f=new D,k=new p,r=0,t=!0===c?a:b,B=!0===c?1:-1;var w=v;for(e=1;e<=d;e++)n.push(0,x*B,0),u.push(0,B,0),m.push(.5,.5),v++;var z=v;for(e=0;e<=d;e++){var C=e\/d*h+g,M=Math.cos(C),$/;"	r
le	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
left	js/three.js	/^				left = - 0.5 * width,$/;"	r
left	js/three.js	/^				this.shadow.camera.left = value;$/;"	r
left	js/three.js	/^			data.object.left = this.left;$/;"	r
left	js/three.js	/^			this.left = source.left;$/;"	r
left	js/three.js	/^			var left = cx - dx;$/;"	r
left	js/three.js	/^		this.left = left;$/;"	r
left	js/three.min.js	/^a,b);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},$/;"	r
legFromPtX	js/three.js	/^				var legFromPtX	= inLegFromPt.x - inVertex.x, legFromPtY = inLegFromPt.y - inVertex.y;$/;"	r
legToPtX	js/three.js	/^				var legToPtX	= inLegToPt.x	- inVertex.x, legToPtY = inLegToPt.y	- inVertex.y;$/;"	r
len	js/three.js	/^						len = Math.atan2( sin, cos * dir );$/;"	r
length	js/GLTFLoader.js	/^			length: headerView.getUint32( 8, true )$/;"	r
length	js/GLTFLoader.js	/^			var length = object.length;$/;"	r
length	js/three.js	/^									i1 = pp.length;$/;"	r
length	js/three.js	/^							nextIdx = hIdx + 1; nextIdx %= chkHole.length;$/;"	r
length	js/three.js	/^							right = pp.length;$/;"	r
length	js/three.js	/^						fi = geometry.faces.length;$/;"	r
length	js/three.js	/^						i1 = pp.length;$/;"	r
length	js/three.js	/^						nextIdx = sIdx + 1; nextIdx %= shape.length;$/;"	r
length	js/three.js	/^					  n = bindings.length; i !== n; ++ i ) {$/;"	r
length	js/three.js	/^					var nbVertices = vertices.length;$/;"	r
length	js/three.js	/^				action._byClipCacheIndex = knownActions.length;$/;"	r
length	js/three.js	/^				colorsHash[ hash ] = colors.length;$/;"	r
length	js/three.js	/^				layeroffset += ahole.length;$/;"	r
length	js/three.js	/^				nBindings = bindings.length;$/;"	r
length	js/three.js	/^				nKeys = times.length,$/;"	r
length	js/three.js	/^				nKeys = times.length;$/;"	r
length	js/three.js	/^				nObjects = objects.length,$/;"	r
length	js/three.js	/^				nTracks = tracks.length,$/;"	r
length	js/three.js	/^				var l = points.length;$/;"	r
length	js/three.js	/^				var n = contour.length;$/;"	r
length	js/three.js	/^				var n = srcPlanes.length;$/;"	r
length	js/three.js	/^				var polyLen = inPolygon.length;$/;"	r
length	js/three.js	/^				var size = hex.length;$/;"	r
length	js/three.js	/^				vertexOffset = this.vertices.length,$/;"	r
length	js/three.js	/^				zLength = faces.length;$/;"	r
length	js/three.js	/^				zLength = vertices.length;$/;"	r
length	js/three.js	/^			action._cacheIndex = actions.length;$/;"	r
length	js/three.js	/^			binding._cacheIndex = bindings.length;$/;"	r
length	js/three.js	/^			flaresArray.length = 0;$/;"	r
length	js/three.js	/^			i = contour.length;$/;"	r
length	js/three.js	/^			index = bindings.length;$/;"	r
length	js/three.js	/^			layeroffset += contour.length;$/;"	r
length	js/three.js	/^			lightsArray.length = 0;$/;"	r
length	js/three.js	/^			nNormals = objGeometry.faces.length;$/;"	r
length	js/three.js	/^			nTracks = tracks.length,$/;"	r
length	js/three.js	/^			numGlobalPlanes = planes.length;$/;"	r
length	js/three.js	/^			opaque.length = 0;$/;"	r
length	js/three.js	/^			pathLength = path.length;$/;"	r
length	js/three.js	/^			shadowsArray.length = 0;$/;"	r
length	js/three.js	/^			spritesArray.length = 0;$/;"	r
length	js/three.js	/^			state.directional.length = directionalLength;$/;"	r
length	js/three.js	/^			state.hemi.length = hemiLength;$/;"	r
length	js/three.js	/^			state.point.length = pointLength;$/;"	r
length	js/three.js	/^			state.rectArea.length = rectAreaLength;$/;"	r
length	js/three.js	/^			state.spot.length = spotLength;$/;"	r
length	js/three.js	/^			transparent.length = 0;$/;"	r
length	js/three.js	/^			var hasSkinIndices = skinIndices.length === vertices.length;$/;"	r
length	js/three.js	/^			var hasSkinWeights = skinWeights.length === vertices.length;$/;"	r
length	js/three.js	/^			var length = faces.length;$/;"	r
length	js/three.js	/^			var length = objectInfluences.length;$/;"	r
length	js/three.js	/^			var length = this.length();$/;"	r
length	js/three.js	/^			var morphNormalsLength = morphNormals.length;$/;"	r
length	js/three.js	/^			var morphTargetsLength = morphTargets.length;$/;"	r
length	js/three.js	/^			var n = contour.length;$/;"	r
length	js/three.js	/^			var n = times.length;$/;"	r
length	js/three.js	/^			var nValues = values.length;$/;"	r
length	js/three.js	/^			var numMorphTargets = morphTargetSequence.length;$/;"	r
length	js/three.js	/^		length: function () {$/;"	r
length	js/three.js	/^		length: {$/;"	r
length	js/three.js	/^		this.cone.position.y = length;$/;"	r
length	js/three.js	/^		var l = points.length;$/;"	r
length	js/three.js	/^		var sl = shapes.length;$/;"	r
length	js/three.min.js	/^b.matrixWorldInverse);Td.setFromMatrix(md);ja.length=0;z.length=0;C.length=0;Ua.length=0;Ud=this.localClippingEnabled;fa=Fa.init(this.clippingPlanes,Ud,b);D=sa.get(a,b);D.init();k(a,b,M.sortObjects);!0===M.sortObjects&&D.sort();fa&&Fa.beginShadows();Ca.render(z,a,b);ua.setup(ja,z,b);fa&&Fa.endShadows();Qa.frame++;Qa.calls=0;Qa.vertices=0;Qa.faces=0;Qa.points=0;void 0===c&&(c=null);this.setRenderTarget(c);ia.render(D,a,b,d);d=D.opaque;var e=D.transparent;if(a.overrideMaterial){var f=a.overrideMaterial;$/;"	r
length	js/three.min.js	/^b.pointShadowMap[r]=ja;b.pointShadowMatrix[r]=A.shadow.matrix;b.point[r]=h;r++}else A.isHemisphereLight&&(h=a.get(A),h.direction.setFromMatrixPosition(A.matrixWorld),h.direction.transformDirection(p),h.direction.normalize(),h.skyColor.copy(A.color).multiplyScalar(J),h.groundColor.copy(A.groundColor).multiplyScalar(J),b.hemi[x]=h,x++)}b.ambient[0]=l;b.ambient[1]=q;b.ambient[2]=n;b.directional.length=u;b.spot.length=m;b.rectArea.length=t;b.point.length=r;b.hemi.length=x;b.hash=u+","+r+","+m+","+t+","+$/;"	r
length	js/three.min.js	/^c.faces.push(v);c.faces.push(w)}else{v=new Oa;v.a=h[r++];v.b=h[r++];v.c=h[r++];t&&(t=h[r++],v.materialIndex=t);t=c.faces.length;if(e)for(e=0;e<u;e++)for(z=d.uvs[e],c.faceVertexUvs[e][t]=[],f=0;3>f;f++)A=h[r++],C=z[2*A],A=z[2*A+1],C=new D(C,A),c.faceVertexUvs[e][t].push(C);x&&(x=3*h[r++],v.normal.set(l[x++],l[x++],l[x]));if(y)for(e=0;3>e;e++)x=3*h[r++],y=new p(l[x++],l[x++],l[x]),v.vertexNormals.push(y);n&&(n=h[r++],v.color.setHex(m[n]));if(k)for(e=0;3>e;e++)n=h[r++],v.vertexColors.push(new H(m[n]));$/;"	r
length	js/three.min.js	/^this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var a=[],b=0,c=0,d=this.curves.length;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},getSpacedPoints:function(a){void 0===a&&(a=40);for(var b=[],c=0;c<=a;c++)b.push(this.getPoint(c\/a));this.autoClose&&b.push(b[0]);return b},getPoints:function(a){a=a||12;for(var b=[],c,d=0,e=this.curves;d<e.length;d++)for(var f=e[d],f=f.getPoints(f&&f.isEllipseCurve?2*a:f&&f.isLineCurve?1:f&&f.isSplineCurve?a*f.points.length:$/;"	r
length	js/three.min.js	/^this.vertices.length;d<b;d++)c[d].normalize();a=0;for(d=this.faces.length;a<d;a++)b=this.faces[a],g=b.vertexNormals,3===g.length?(g[0].copy(c[b.a]),g[1].copy(c[b.b]),g[2].copy(c[b.c])):(g[0]=c[b.a].clone(),g[1]=c[b.b].clone(),g[2]=c[b.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var a;this.computeFaceNormals();var b=0;for(a=this.faces.length;b<a;b++){var c=this.faces[b];var d=c.vertexNormals;3===d.length?(d[0].copy(c.normal),d[1].copy(c.normal),$/;"	r
lengthAfter	js/three.js	/^			var lengthAfter = arcLengths[ i + 1 ];$/;"	r
lengthBefore	js/three.js	/^			var lengthBefore = arcLengths[ i ];$/;"	r
lengthManhattan	js/three.js	/^		lengthManhattan: function () {$/;"	r
lengthManhattan	js/three.min.js	/^return this.manhattanDistanceTo(a)},lengthManhattan:function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(ba.prototype,{fromAttribute:function(a,b,c){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,b,c)},lengthManhattan:function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});$/;"	r
lengthSq	js/three.js	/^		lengthSq: function () {$/;"	r
lengths	js/three.js	/^			this.cacheLengths = lengths;$/;"	r
lengths	js/three.js	/^			var lengths = [], sums = 0;$/;"	r
lengths	js/three.js	/^			var lengths = this.getLengths();$/;"	r
lens	js/three.js	/^			var lens = this.getCurveLengths();$/;"	r
lensFlares	js/three.js	/^		this.lensFlares = [];$/;"	r
lensFlares	js/three.min.js	/^function Kb(a,b){this.name="";this.color=new H(a);this.density=void 0!==b?b:2.5E-4}function Lb(a,b,c){this.name="";this.color=new H(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}function od(){w.call(this);this.type="Scene";this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function Xd(a,b,c,d,e){w.call(this);this.lensFlares=[];this.positionScreen=new p;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)}function Ya(a){Q.call(this);this.type="SpriteMaterial";$/;"	r
lerp	js/three.js	/^		lerp: function ( color, alpha ) {$/;"	r
lerp	js/three.js	/^		lerp: function ( v, alpha ) {$/;"	r
lerp	js/three.js	/^		lerp: function ( x, y, t ) {$/;"	r
lerp	js/three.min.js	/^a;this.g+=a;this.b+=a;return this},sub:function(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=$/;"	r
lerpVectors	js/three.js	/^		lerpVectors: function ( v1, v2, alpha ) {$/;"	r
lerpVectors	js/three.min.js	/^(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromBufferAttribute:function(a,$/;"	r
lerpVectors	js/three.min.js	/^(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);$/;"	r
lerpVectors	js/three.min.js	/^this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},cross:function(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)},crossVectors:function(a,b){var c=a.x,d=a.y;a=a.z;var e=b.x,f=b.y;b=b.z;this.x=d*b-a*f;this.y=a*e-c*b;this.z=c*f-d*e;return this},projectOnVector:function(a){var b=$/;"	r
level	js/three.js	/^						var level = levels[ l ];$/;"	r
level	js/three.js	/^				var level = levels[ i ];$/;"	r
levels	js/three.js	/^					var levels = data.levels;$/;"	r
levels	js/three.js	/^				var levels = this.levels;$/;"	r
levels	js/three.js	/^			data.object.levels = [];$/;"	r
levels	js/three.js	/^			levels: {$/;"	r
levels	js/three.js	/^			var levels = source.levels;$/;"	r
levels	js/three.js	/^			var levels = this.levels;$/;"	r
levels	js/three.min.js	/^[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});Object.assign(Dc.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new K;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){var a,b;var c=0;for(b=this.bones.length;c<b;c++)(a=this.bones[c])&&a.matrixWorld.getInverse(this.boneInverses[c]);c=0;for(b=this.bones.length;c<$/;"	r
levels	js/three.min.js	/^b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),update:function(){var a=new p,b=new p;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=d[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}(),toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.levels=$/;"	r
lg	js/three.min.js	/^b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=function(b){var e=b.texture,f=k(b);l(e,f)&&(b=b.isWebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}}function lg(){var a={};return{get:function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c},remove:function(b){delete a[b.uuid]},clear:function(){a={}}}}function mg(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();$/;"	r
light	js/GLTFLoader.js	/^			var light = lights[ lightId ];$/;"	r
light	js/three.js	/^					console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );$/;"	r
light	js/three.js	/^				var light = lights[ i ];$/;"	r
light	js/three.js	/^		this.light = light;$/;"	r
lightDistance	js/three.js	/^		this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );$/;"	r
lightMap	js/GLTFLoader.js	/^				material.lightMap = null;$/;"	r
lightMap	js/GLTFLoader.js	/^				uniforms.lightMap.value = material.lightMap;$/;"	r
lightMap	js/three.js	/^							json.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );$/;"	r
lightMap	js/three.js	/^				lightMap: !! material.lightMap,$/;"	r
lightMap	js/three.js	/^				uniforms.lightMap.value = material.lightMap;$/;"	r
lightMap	js/three.js	/^			lightMap: { value: null },$/;"	r
lightMap	js/three.js	/^		this.lightMap = null;$/;"	r
lightMap	js/three.js	/^		this.lightMap = source.lightMap;$/;"	r
lightMapIntensity	js/GLTFLoader.js	/^				material.lightMapIntensity = 1.0;$/;"	r
lightMapIntensity	js/GLTFLoader.js	/^				uniforms.lightMapIntensity.value = material.lightMapIntensity;$/;"	r
lightMapIntensity	js/three.js	/^				uniforms.lightMapIntensity.value = material.lightMapIntensity;$/;"	r
lightMapIntensity	js/three.js	/^			if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;$/;"	r
lightMapIntensity	js/three.js	/^			lightMapIntensity: { value: 1 }$/;"	r
lightMapIntensity	js/three.js	/^		this.lightMapIntensity = 1.0;$/;"	r
lightMapIntensity	js/three.js	/^		this.lightMapIntensity = source.lightMapIntensity;$/;"	r
lightMapIntensity	js/three.min.js	/^a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=$/;"	r
lightMapIntensity	js/three.min.js	/^function dc(a){Aa.call(this,a);this.type="RawShaderMaterial"}function La(a){Q.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new H(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=$/;"	r
lightMapIntensity	js/three.min.js	/^new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(r,2))}function va(a){Q.call(this);this.type="MeshBasicMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.lights=this.morphTargets=this.skinning=$/;"	r
lightNode	js/GLTFLoader.js	/^					lightNode = new THREE.AmbientLight( color );$/;"	r
lightNode	js/GLTFLoader.js	/^					lightNode = new THREE.DirectionalLight( color );$/;"	r
lightNode	js/GLTFLoader.js	/^					lightNode = new THREE.PointLight( color );$/;"	r
lightNode	js/GLTFLoader.js	/^					lightNode = new THREE.SpotLight( color );$/;"	r
lightNode	js/GLTFLoader.js	/^				this.lights[ lightId ] = lightNode;$/;"	r
lightNode	js/GLTFLoader.js	/^			var lightNode;$/;"	r
lightPhysicalFragmentChunk	js/GLTFLoader.js	/^				var lightPhysicalFragmentChunk = [$/;"	r
lightPlane	js/three.js	/^		this.lightPlane = new Line( geometry, material );$/;"	r
lightSphere	js/three.js	/^		this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );$/;"	r
lightcyan	js/three.min.js	/^lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,$/;"	r
lightmap	js/three.js	/^				UniformsLib.lightmap,$/;"	r
lightmap	js/three.js	/^		lightmap: {$/;"	r
lightmap_fragment	js/three.js	/^		lightmap_fragment: lightmap_fragment,$/;"	r
lightmap_fragment	js/three.js	/^	var lightmap_fragment = "#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n";$/;"	r
lightmap_pars_fragment	js/three.js	/^		lightmap_pars_fragment: lightmap_pars_fragment,$/;"	r
lightmap_pars_fragment	js/three.js	/^	var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif";$/;"	r
lightmap_pars_fragment	js/three.min.js	/^lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",$/;"	r
lightness	js/three.js	/^			hsl.l = lightness;$/;"	r
lightness	js/three.js	/^			var lightness = ( min + max ) \/ 2.0;$/;"	r
lights	js/GLTFLoader.js	/^					lights: true,$/;"	r
lights	js/GLTFLoader.js	/^					var lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;$/;"	r
lights	js/GLTFLoader.js	/^		this.lights = {};$/;"	r
lights	js/GLTFLoader.js	/^		var lights = extension.lights || {};$/;"	r
lights	js/three.js	/^				UniformsLib.lights,$/;"	r
lights	js/three.js	/^			lights = new WebGLLights();$/;"	r
lights	js/three.js	/^			this.lights = source.lights;$/;"	r
lights	js/three.js	/^		lights: {$/;"	r
lights	js/three.js	/^		this.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {$/;"	r
lights	js/three.js	/^		this.lights = false; \/\/ set to use scene lights$/;"	r
lights	js/three.js	/^		this.lights = false;$/;"	r
lights	js/three.js	/^		this.lights = source.lights;$/;"	r
lights	js/three.js	/^		this.lights = true;$/;"	r
lights	js/three.js	/^		var lights = {};$/;"	r
lights	js/three.min.js	/^this.lights=a.lights;this.blending=a.blending;this.side=a.side;this.flatShading=a.flatShading;this.vertexColors=a.vertexColors;this.opacity=a.opacity;this.transparent=a.transparent;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=$/;"	r
lightsArray	js/three.js	/^		var lightsArray = [];$/;"	r
lightsHash	js/three.js	/^			materialProperties.lightsHash = lights.state.hash;$/;"	r
lights_lambert_vertex	js/three.js	/^		lights_lambert_vertex: lights_lambert_vertex,$/;"	r
lights_lambert_vertex	js/three.js	/^	var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n";$/;"	r
lights_pars	js/three.js	/^		lights_pars: lights_pars,$/;"	r
lights_pars	js/three.js	/^	var lights_pars = "uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n";$/;"	r
lights_pars	js/three.min.js	/^lights_pars:"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n",$/;"	r
lights_phong_fragment	js/three.js	/^		lights_phong_fragment: lights_phong_fragment,$/;"	r
lights_phong_fragment	js/three.js	/^	var lights_phong_fragment = "BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n";$/;"	r
lights_phong_fragment	js/three.min.js	/^lights_phong_fragment:"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n",$/;"	r
lights_phong_pars_fragment	js/three.js	/^		lights_phong_pars_fragment: lights_phong_pars_fragment,$/;"	r
lights_phong_pars_fragment	js/three.js	/^	var lights_phong_pars_fragment = "varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n";$/;"	r
lights_physical_fragment	js/three.js	/^		lights_physical_fragment: lights_physical_fragment,$/;"	r
lights_physical_fragment	js/three.js	/^	var lights_physical_fragment = "PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n";$/;"	r
lights_physical_fragment	js/three.min.js	/^lights_physical_fragment:"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n",$/;"	r
lights_physical_pars_fragment	js/three.js	/^		lights_physical_pars_fragment: lights_physical_pars_fragment,$/;"	r
lights_physical_pars_fragment	js/three.js	/^	var lights_physical_pars_fragment = "struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n";$/;"	r
lights_physical_pars_fragment	js/three.min.js	/^lights_physical_pars_fragment:"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n",$/;"	r
lights_template	js/three.js	/^		lights_template: lights_template,$/;"	r
lights_template	js/three.js	/^	var lights_template = "\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n";$/;"	r
lights_template	js/three.min.js	/^lights_template:"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n",$/;"	r
limit	js/three.js	/^				var limit		= seg1dy * seg2dx - seg1dx * seg2dy;$/;"	r
line	js/three.js	/^		this.line = new Line( geometry, material );$/;"	r
line	js/three.js	/^		this.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );$/;"	r
lineDistance	js/three.js	/^				attribute = this.attributes.lineDistance;$/;"	r
lineDistances	js/three.js	/^					var lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );$/;"	r
lineDistances	js/three.js	/^			this.lineDistances = [];$/;"	r
lineDistances	js/three.js	/^			var lineDistances = source.lineDistances;$/;"	r
lineDistances	js/three.js	/^		this.lineDistances = [];$/;"	r
lineDistancesNeedUpdate	js/three.js	/^				geometry.lineDistancesNeedUpdate = false;$/;"	r
lineDistancesNeedUpdate	js/three.js	/^			this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;$/;"	r
lineDistancesNeedUpdate	js/three.js	/^		this.lineDistancesNeedUpdate = false;$/;"	r
lineGeometry	js/three.js	/^			lineGeometry = new BufferGeometry();$/;"	r
lineGeometry	js/three.js	/^	var lineGeometry;$/;"	r
linePrecision	js/three.js	/^				var precision = raycaster.linePrecision;$/;"	r
linePrecision	js/three.js	/^		linePrecision: 1,$/;"	r
lineTo	js/three.js	/^		lineTo: function ( x, y ) {$/;"	r
lineWidth	js/three.js	/^				var lineWidth = material.linewidth;$/;"	r
lineWidthAvailable	js/three.js	/^		var lineWidthAvailable = parseFloat( version ) >= 1.0;$/;"	r
line_height	js/three.js	/^						offsetY -= line_height;$/;"	r
line_height	js/three.js	/^				var line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;$/;"	r
linear_scan	js/three.js	/^					linear_scan: {$/;"	r
linecap	js/three.js	/^		this.linecap = 'round';$/;"	r
linecap	js/three.js	/^		this.linecap = source.linecap;$/;"	r
linedashed_frag	js/three.js	/^		linedashed_frag: linedashed_frag,$/;"	r
linedashed_frag	js/three.js	/^	var linedashed_frag = "uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
linedashed_frag	js/three.min.js	/^linedashed_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",$/;"	r
linedashed_vert	js/three.js	/^		linedashed_vert: linedashed_vert,$/;"	r
linedashed_vert	js/three.js	/^	var linedashed_vert = "uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
linedashed_vert	js/three.min.js	/^linedashed_vert:"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
linejoin	js/three.js	/^		this.linejoin = 'round';$/;"	r
linejoin	js/three.js	/^		this.linejoin = source.linejoin;$/;"	r
lines	js/three.js	/^		var lines = string.split( '\\n' );$/;"	r
linewidth	js/three.js	/^				var lineWidth = material.linewidth;$/;"	r
linewidth	js/three.js	/^			if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;$/;"	r
linewidth	js/three.js	/^			if ( this.linewidth !== 1 ) data.linewidth = this.linewidth;$/;"	r
linewidth	js/three.js	/^			result.linewidth = material.linewidth;$/;"	r
linewidth	js/three.js	/^		LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );$/;"	r
linewidth	js/three.js	/^		this.linewidth = 1;$/;"	r
linewidth	js/three.js	/^		this.linewidth = source.linewidth;$/;"	r
linewidth	js/three.min.js	/^!1;this.setValues(a)}function Aa(a){Q.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}";this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,$/;"	r
linewidth	js/three.min.js	/^b=3*c.faces.length:c&&c.isBufferGeometry&&(b=c.attributes.normal.count);c=new C;b=new z(6*b,3);c.addAttribute("position",b);P.call(this,c,new T({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function kc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new C;b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var c=0,d=1;32>c;c++,d++){var e=c\/32*Math.PI*2,f=d\/32*Math.PI*2;b.push(Math.cos(e),$/;"	r
linewidth	js/three.min.js	/^linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function pc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;void 0===b&&(b=1);a=new C;a.addAttribute("position",new z([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));b=new T({fog:!1});this.lightPlane=new oa(a,b);this.add(this.lightPlane);a=new C;a.addAttribute("position",new z([0,0,0,0,0,1],3));this.targetLine=new oa(a,b);this.add(this.targetLine);this.update()}function ed(a){function b(a,$/;"	r
list	js/three.js	/^				list = new WebGLRenderList();$/;"	r
list	js/three.js	/^				lists[ hash ] = list;$/;"	r
list	js/three.js	/^			var list = lists[ hash ];$/;"	r
listener	js/three.js	/^				var listener = this.context.listener;$/;"	r
listenerArray	js/three.js	/^			var listenerArray = listeners[ event.type ];$/;"	r
listenerArray	js/three.js	/^			var listenerArray = listeners[ type ];$/;"	r
listeners	js/three.js	/^			var listeners = this._listeners;$/;"	r
lists	js/three.js	/^			lists = {};$/;"	r
lists	js/three.js	/^		var lists = {};$/;"	r
load	js/GLTFLoader.js	/^		load: function ( url, onLoad, onProgress, onError ) {$/;"	r
load	js/three.js	/^		load: function ( url, onLoad, onProgress, onError ) {$/;"	r
load	js/three.js	/^		load: function ( urls, onLoad, onProgress, onError ) {$/;"	r
load	js/three.js	/^	Audio.prototype.load = function ( file ) {$/;"	r
load	js/three.min.js	/^"img");c.addEventListener("load",function(){jd.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);c.addEventListener("error",function(b){d&&d(b);e.manager.itemEnd(a);e.manager.itemError(a)},!1);"data:"!==a.substr(0,5)&&void 0!==this.crossOrigin&&(c.crossOrigin=this.crossOrigin);e.manager.itemStart(a);c.src=a;return c},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign($d.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){function e(c){g.load(a[c],$/;"	r
load	js/three.min.js	/^a.anisotropy:1,void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps),1===a.mipmapCount&&(f.minFilter=1006),f.needsUpdate=!0,b&&b(f,a)},c,d);return f}});Object.assign(Wc.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){void 0===a&&(a="");void 0!==this.path&&(a=this.path+a);a=this.manager.resolveURL(a);var e=this,f=jd.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f);e.manager.itemEnd(a)},0),f;c=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml",$/;"	r
load	js/three.min.js	/^function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new Ta,g=new Wc(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(td.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){var e=new Wc(this.manager);e.setCrossOrigin(this.crossOrigin);e.setPath(this.path);var f=new da;f.image=e.load(a,$/;"	r
load	js/three.min.js	/^set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a}}});ic.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var b=this;(new ee).load(a,function(a){b.setBuffer(a)});return this};ie.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};$c.prototype.updateCubeMap=function(a,$/;"	r
loadAccessors	js/GLTFLoader.js	/^	GLTFParser.prototype.loadAccessors = function () {$/;"	r
loadAnimations	js/GLTFLoader.js	/^	GLTFParser.prototype.loadAnimations = function () {$/;"	r
loadBuffer	js/GLTFLoader.js	/^	GLTFParser.prototype.loadBuffer = function ( bufferIndex ) {$/;"	r
loadBufferView	js/GLTFLoader.js	/^	GLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {$/;"	r
loadCamera	js/GLTFLoader.js	/^	GLTFParser.prototype.loadCamera = function ( cameraIndex ) {$/;"	r
loadCompressedTexture	js/three.js	/^		loadCompressedTexture: function () {$/;"	r
loadCompressedTextureCube	js/three.js	/^		loadCompressedTextureCube: function () {$/;"	r
loadGeometries	js/GLTFLoader.js	/^	GLTFParser.prototype.loadGeometries = function ( primitives ) {$/;"	r
loadImage	js/three.js	/^			function loadImage( url ) {$/;"	r
loadMaterials	js/GLTFLoader.js	/^	GLTFParser.prototype.loadMaterials = function () {$/;"	r
loadMeshes	js/GLTFLoader.js	/^	GLTFParser.prototype.loadMeshes = function () {$/;"	r
loadNodes	js/GLTFLoader.js	/^	GLTFParser.prototype.loadNodes = function () {$/;"	r
loadScenes	js/GLTFLoader.js	/^	GLTFParser.prototype.loadScenes = function () {$/;"	r
loadSkins	js/GLTFLoader.js	/^	GLTFParser.prototype.loadSkins = function () {$/;"	r
loadTexture	js/GLTFLoader.js	/^	GLTFParser.prototype.loadTexture = function ( textureIndex ) {$/;"	r
loadTexture	js/three.js	/^				function loadTexture( path, repeat, offset, wrap, anisotropy ) {$/;"	r
loadTexture	js/three.js	/^			function loadTexture( i ) {$/;"	r
loadTexture	js/three.js	/^		loadTexture: function ( url, mapping, onLoad, onError ) {$/;"	r
loadTextureCube	js/three.js	/^		loadTextureCube: function ( urls, mapping, onLoad, onError ) {$/;"	r
loadTextureCube	js/three.min.js	/^var e=new td;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadTextureCube:function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var e=new $d;e.setCrossOrigin(this.crossOrigin);a=e.load(a,c,void 0,d);b&&(a.mapping=b);return a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};$/;"	r
loaded	js/three.js	/^				var loaded = 0;$/;"	r
loaded	js/three.js	/^			var loaded = 0;$/;"	r
loader	js/GLTFLoader.js	/^			var loader = THREE.Loader.Handlers.get( sourceURI ) || textureLoader;$/;"	r
loader	js/GLTFLoader.js	/^			var loader = new THREE.FileLoader( scope.manager );$/;"	r
loader	js/GLTFLoader.js	/^		var loader = this.fileLoader;$/;"	r
loader	js/three.js	/^					var loader = Loader.Handlers.get( fullPath );$/;"	r
loader	js/three.js	/^				var loader = handlers[ i + 1 ];$/;"	r
loader	js/three.js	/^				var loader = new ImageLoader( manager );$/;"	r
loader	js/three.js	/^				var loader = new MaterialLoader();$/;"	r
loader	js/three.js	/^			var loader = new CubeTextureLoader();$/;"	r
loader	js/three.js	/^			var loader = new FileLoader( scope.manager );$/;"	r
loader	js/three.js	/^			var loader = new FileLoader( this.manager );$/;"	r
loader	js/three.js	/^			var loader = new ImageLoader( this.manager );$/;"	r
loader	js/three.js	/^			var loader = new TextureLoader();$/;"	r
loader	script.js	/^var loader = new THREE.GLTFLoader();$/;"	r
loading	js/three.js	/^	var loading = {};$/;"	r
localClippingEnabled	js/three.js	/^				localClippingEnabled;$/;"	r
localClippingEnabled	js/three.js	/^			_localClippingEnabled = this.localClippingEnabled;$/;"	r
localClippingEnabled	js/three.js	/^			localClippingEnabled = enableLocalClipping;$/;"	r
localClippingEnabled	js/three.js	/^			localClippingEnabled = false,$/;"	r
localClippingEnabled	js/three.js	/^		this.localClippingEnabled = false;$/;"	r
localThreshold	js/three.js	/^				var localThreshold = threshold \/ ( ( this.scale.x + this.scale.y + this.scale.z ) \/ 3 );$/;"	r
localThresholdSq	js/three.js	/^				var localThresholdSq = localThreshold * localThreshold;$/;"	r
localToWorld	js/three.js	/^		localToWorld: function ( vector ) {$/;"	r
localToWorld	js/three.min.js	/^b)}}(),translateZ:function(){var a=new p(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new K;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new K,b=new p;return function(c,d,e){c.isVector3?b.copy(c):b.set(c,d,e);this.isCamera?a.lookAt(this.position,b,this.up):a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),$/;"	r
lock	js/three.js	/^					locked = lock;$/;"	r
locked	js/three.js	/^					locked = false;$/;"	r
locked	js/three.js	/^					locked = lock;$/;"	r
locked	js/three.js	/^			var locked = false;$/;"	r
log	js/three.js	/^					log: fragmentLog,$/;"	r
log	js/three.js	/^					log: vertexLog,$/;"	r
logarithmicDepthBuffer	js/three.js	/^				logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,$/;"	r
logarithmicDepthBuffer	js/three.js	/^			logarithmicDepthBuffer: logarithmicDepthBuffer,$/;"	r
logarithmicDepthBuffer	js/three.js	/^		var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;$/;"	r
logdepthbuf_fragment	js/three.js	/^		logdepthbuf_fragment: logdepthbuf_fragment,$/;"	r
logdepthbuf_fragment	js/three.js	/^	var logdepthbuf_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif";$/;"	r
logdepthbuf_pars_fragment	js/three.js	/^		logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,$/;"	r
logdepthbuf_pars_fragment	js/three.js	/^	var logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n";$/;"	r
logdepthbuf_pars_fragment	js/three.min.js	/^logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n",$/;"	r
logdepthbuf_pars_vertex	js/three.js	/^		logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,$/;"	r
logdepthbuf_pars_vertex	js/three.js	/^	var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif";$/;"	r
logdepthbuf_vertex	js/three.js	/^		logdepthbuf_vertex: logdepthbuf_vertex,$/;"	r
logdepthbuf_vertex	js/three.js	/^	var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n";$/;"	r
lookAt	js/three.js	/^			return function lookAt( eye, target, up ) {$/;"	r
lookAt	js/three.js	/^			return function lookAt( vector ) {$/;"	r
lookAt	js/three.js	/^			return function lookAt( x, y, z ) {$/;"	r
lookAt	js/three.js	/^		lookAt: function ( v ) {$/;"	r
lookAt	js/three.js	/^		lookAt: function () {$/;"	r
lookAt	js/three.min.js	/^this.elements,c=a._x,d=a._y,e=a._z,f=a._w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*h,c=c*k,q=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(q+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new p,b=new p,c=new p;return function(d,e,f){var g=this.elements;c.subVectors(d,e);0===c.lengthSq()&&(c.z=1);c.normalize();a.crossVectors(f,c);0===a.lengthSq()&&(1===Math.abs(f.z)?c.x+=1E-4:c.z+=1E-4,$/;"	r
loop	js/three.js	/^				loop = this.loop,$/;"	r
loop	js/three.js	/^				this.source.loop = this.loop;$/;"	r
loop	js/three.js	/^			source.loop = this.loop;$/;"	r
loop	js/three.js	/^			this.loop = mode;$/;"	r
loop	js/three.js	/^			this.loop = value;$/;"	r
loop	js/three.js	/^		function loop( time ) {$/;"	r
loop	js/three.js	/^		this.loop = LoopRepeat;$/;"	r
loop	js/three.js	/^		this.loop = false;$/;"	r
loopCount	js/three.js	/^						loopCount = 0;$/;"	r
loopCount	js/three.js	/^						this._loopCount = loopCount;$/;"	r
loopCount	js/three.js	/^				loopCount = this._loopCount;$/;"	r
loopDelta	js/three.js	/^					var loopDelta = Math.floor( time \/ duration ); \/\/ signed$/;"	r
low	js/three.js	/^					low = i + 1;$/;"	r
low	js/three.js	/^			var low = 0, high = il - 1, comparison;$/;"	r
lt	js/three.js	/^	var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) \/ size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz \/= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 \/ max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) \/ ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n";$/;"	r
m	js/GLTFLoader.js	/^									var m = skinEntry.inverseBindMatrices.array;$/;"	r
m	js/three.js	/^							this.morphTargetDictionary[ name ] = m;$/;"	r
m	js/three.js	/^						for ( var j = 0, m = nBindings; j !== m; ++ j ) {$/;"	r
m	js/three.js	/^						this.morphTargetDictionary[ name ] = m;$/;"	r
m	js/three.js	/^					for ( var j = 0, m = nBindings; j !== m; ++ j ) {$/;"	r
m	js/three.js	/^				for ( var j = 0, m = interpolants.length; j !== m; ++ j ) {$/;"	r
m	js/three.js	/^			var m = this.elements;$/;"	r
m	js/three.js	/^			var m, ml, name;$/;"	r
m	js/three.js	/^			var m;$/;"	r
m	js/three.js	/^			var tmp, m = this.elements;$/;"	r
m	js/three.min.js	/^-1;for(var n in f){for(var p=[],r=[],m=0;m!==k[l].morphTargets.length;++m){var v=k[l];p.push(v.time);r.push(v.morphTarget===n?1:0)}d.push(new fc(".morphTargetInfluence["+n+"]",p,r))}f=f.length*(g||1)}else l=".bones["+b[h].name+"]",c(ec,l+".position",k,"pos",d),c(Yc,l+".quaternion",k,"rot",d),c(ec,l+".scale",k,"scl",d)}return 0===d.length?null:new ra(e,f,d)}});Object.assign(ra.prototype,{resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-$/;"	r
m	js/three.min.js	/^b.displacementMap?c=b.displacementMap:b.normalMap?c=b.normalMap:b.bumpMap?c=b.bumpMap:b.roughnessMap?c=b.roughnessMap:b.metalnessMap?c=b.metalnessMap:b.alphaMap?c=b.alphaMap:b.emissiveMap&&(c=b.emissiveMap);if(void 0!==c){c.isWebGLRenderTarget&&(c=c.texture);if(!0===c.matrixAutoUpdate){b=c.offset;var d=c.repeat,e=c.center;c.matrix.setUvTransform(b.x,b.y,d.x,d.y,c.rotation,e.x,e.y)}a.uvTransform.value.copy(c.matrix)}}function m(a,b){a.specular.value=b.specular;a.shininess.value=Math.max(b.shininess,$/;"	r
m	js/three.min.js	/^c.texImage2D(a.TEXTURE_2D,t,r,v.width,v.height,0,r,B,v.data);else if(0<p.length&&q){t=0;for(x=p.length;t<x;t++)v=p[t],c.texImage2D(a.TEXTURE_2D,t,r,r,B,v);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,r,B,v);l(b,q)&&a.generateMipmap(a.TEXTURE_2D);u.__version=b.version;if(b.onUpdate)b.onUpdate(b);return}}c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_2D,u.__webglTexture)}function m(c,g,h){h?(a.texParameteri(c,a.TEXTURE_WRAP_S,f.convert(g.wrapS)),a.texParameteri(c,a.TEXTURE_WRAP_T,$/;"	r
m	js/three.min.js	/^function e(c,g,h,k){var l;if(!1!==c.visible){if(c.layers.test(g.layers)&&(c.isMesh||c.isLine||c.isPoints)&&c.castShadow&&(!c.frustumCulled||f.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,c.matrixWorld);var n=b.update(c),u=c.material;if(Array.isArray(u))for(var r=n.groups,m=0,B=r.length;m<B;m++){var v=r[m];(l=u[v.materialIndex])&&l.visible&&(l=d(c,l,k,q,h.near,h.far),a.renderBufferDirect(h,null,n,l,c,v))}else u.visible&&(l=d(c,u,k,q,h.near,h.far),a.renderBufferDirect(h,$/;"	r
m	js/three.min.js	/^k.y,k.z);h.x=q.x+c*k.x;h.y=q.y+c*k.y;h.z=q.z+c*k.z;m.push(h.x,h.y,h.z)}}C.call(this);this.type="TubeBufferGeometry";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var g=a.computeFrenetFrames(b,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;var h=new p,k=new p,l=new D,q=new p,n,u,m=[],v=[],t=[],x=[];for(n=0;n<b;n++)f(n);f(!1===e?b:0);for(n=0;n<=b;n++)for(u=0;u<=d;u++)l.x=n\/b,l.y=u\/d,t.push(l.x,l.y);(function(){for(u=$/;"	r
m	js/three.min.js	/^m,"is no longer supported.");break;case "colorDiffuse":l.color=b.fromArray(n).getHex();break;case "colorSpecular":l.specular=b.fromArray(n).getHex();break;case "colorEmissive":l.emissive=b.fromArray(n).getHex();break;case "specularCoef":l.shininess=n;break;case "shading":"basic"===n.toLowerCase()&&(l.type="MeshBasicMaterial");"phong"===n.toLowerCase()&&(l.type="MeshPhongMaterial");"standard"===n.toLowerCase()&&(l.type="MeshStandardMaterial");break;case "mapDiffuse":l.map=h(n,e.mapDiffuseRepeat,e.mapDiffuseOffset,$/;"	r
m	js/three.min.js	/^m=b.getUniformLocation(ga,"fogType");t=b.getUniformLocation(ga,"fogDensity");x=b.getUniformLocation(ga,"fogNear");y=b.getUniformLocation(ga,"fogFar");B=b.getUniformLocation(ga,"fogColor");b.getUniformLocation(ga,"fogDepth");I=b.getUniformLocation(ga,"alphaTest");N=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");N.width=8;N.height=8;na=N.getContext("2d");na.fillStyle="white";na.fillRect(0,0,8,8);He=new sc(N)}c.useProgram(ga);c.initAttributes();c.enableAttribute(A);c.enableAttribute(J);$/;"	r
m	js/three.min.js	/^null,n,l,c,null))}c=c.children;n=0;for(u=c.length;n<u;n++)e(c[n],g,h,k)}}var f=new ld,g=new K,h=new D,k=new D(c,c),l=new p,q=new p,n=Array(4),u=Array(4),r={},m=[new p(1,0,0),new p(-1,0,0),new p(0,0,1),new p(0,0,-1),new p(0,1,0),new p(0,-1,0)],t=[new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,0,1),new p(0,0,-1)],x=[new ba,new ba,new ba,new ba,new ba,new ba];for(c=0;4!==c;++c){var y=0!==(c&1),B=0!==(c&2),I=new Va({depthPacking:3201,morphTargets:y,skinning:B});n[c]=I;y=new Wa({morphTargets:y,$/;"	r
m	js/three.min.js	/^r=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),m=0<h,t=!!b.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==e)return e;var c=b.get("EXT_texture_filter_anisotropic");return e=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:d,precision:f,logarithmicDepthBuffer:c,maxTextures:g,maxVertexTextures:h,maxTextureSize:k,maxCubemapSize:l,maxAttributes:q,maxVertexUniforms:n,maxVaryings:u,maxFragmentUniforms:r,vertexTextures:m,floatFragmentTextures:t,floatVertexTextures:m&&$/;"	r
m	js/three.min.js	/^var m=a.getRenderTarget();return{shaderID:h,precision:k,supportsVertexTextures:c.vertexTextures,outputEncoding:d(m?m.texture:null,a.gammaOutput),map:!!b.map,mapEncoding:d(b.map,a.gammaInput),envMap:!!b.envMap,envMapMode:b.envMap&&b.envMap.mapping,envMapEncoding:d(b.envMap,a.gammaInput),envMapCubeUV:!!b.envMap&&(306===b.envMap.mapping||307===b.envMap.mapping),lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:d(b.emissiveMap,a.gammaInput),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,$/;"	r
m1	js/three.js	/^			var m1 = new Matrix3();$/;"	r
m1	js/three.js	/^			var m1 = new Matrix4();$/;"	r
m11	js/three.js	/^				m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],$/;"	r
m11	js/three.js	/^			var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];$/;"	r
m21	js/three.js	/^				m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],$/;"	r
m21	js/three.js	/^			var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];$/;"	r
m31	js/three.js	/^				m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],$/;"	r
m31	js/three.js	/^				m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];$/;"	r
m31	js/three.js	/^			var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];$/;"	r
m_uniforms	js/three.js	/^				m_uniforms = materialProperties.shader.uniforms;$/;"	r
magFilter	js/GLTFLoader.js	/^			texture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;$/;"	r
magFilter	js/three.js	/^					var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };$/;"	r
magFilter	js/three.js	/^				magFilter: this.magFilter,$/;"	r
magFilter	js/three.js	/^				texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;$/;"	r
magFilter	js/three.js	/^				this.texture.magFilter = value;$/;"	r
magFilter	js/three.js	/^			this.magFilter = source.magFilter;$/;"	r
magFilter	js/three.js	/^		magFilter: {$/;"	r
magFilter	js/three.js	/^		this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;$/;"	r
magFilter	js/three.js	/^		this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;$/;"	r
magFilter	js/three.js	/^		var options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };$/;"	r
magFilter	js/three.min.js	/^this.add(g);var h=new Y(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new p(0,0,1));this.add(h);var k=new Y(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new p(0,0,-1));this.add(k);this.renderTarget=new Eb(c,c,{format:1022,magFilter:1006,minFilter:1006});this.renderTarget.texture.name="CubeCamera";this.update=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,l=c.texture.generateMipmaps;c.texture.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);$/;"	r
magFilter	js/three.min.js	/^v,"has no shadow.");else{var p=u.camera;h.copy(u.mapSize);h.min(k);if(I){var y=h.x,J=h.y;x[0].set(2*y,J,y,J);x[1].set(0,J,y,J);x[2].set(3*y,J,y,J);x[3].set(y,J,y,J);x[4].set(3*y,0,y,J);x[5].set(y,0,y,J);h.x*=4;h.y*=2}null===u.map&&(u.map=new Db(h.x,h.y,{minFilter:1003,magFilter:1003,format:1023}),u.map.texture.name=v.name+".shadowMap",p.updateProjectionMatrix());u.isSpotLightShadow&&u.update(v);y=u.map;J=u.matrix;q.setFromMatrixPosition(v.matrixWorld);p.position.copy(q);I?(u=6,J.makeTranslation(-q.x,$/;"	r
magic	js/GLTFLoader.js	/^				var magic = convertUint8ArrayToString( new Uint8Array( data, 0, 4 ) );$/;"	r
magic	js/GLTFLoader.js	/^			magic: convertUint8ArrayToString( new Uint8Array( data.slice( 0, 4 ) ) ),$/;"	r
mainIdx	js/three.js	/^			var mainIdx = 0;$/;"	r
makeBasis	js/three.js	/^		makeBasis: function ( xAxis, yAxis, zAxis ) {$/;"	r
makeEmpty	js/three.js	/^		makeEmpty: function () {$/;"	r
makeFrustum	js/three.js	/^		makeFrustum: function ( left, right, bottom, top, near, far ) {$/;"	r
makeGeometry	js/three.js	/^		makeGeometry: function ( options ) {$/;"	r
makeGeometry	js/three.min.js	/^return this.intersectsSphere(a)}});Object.assign(zb.prototype,{extrude:function(a){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new Za(this,a)},makeGeometry:function(a){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");return new Zb(this,a)}});Object.assign(D.prototype,{fromAttribute:function(a,b,c){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(a,$/;"	r
makeOrthographic	js/three.js	/^		makeOrthographic: function ( left, right, top, bottom, near, far ) {$/;"	r
makeOrthographic	js/three.min.js	/^var g=this.elements;g[0]=2*e\/(b-a);g[4]=0;g[8]=(b+a)\/(b-a);g[12]=0;g[1]=0;g[5]=2*e\/(c-d);g[9]=(c+d)\/(c-d);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)\/(f-e);g[14]=-2*f*e\/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=1\/(b-a),k=1\/(c-d),l=1\/(f-e);g[0]=2*h;g[4]=0;g[8]=0;g[12]=-((b+a)*h);g[1]=0;g[5]=2*k;g[9]=0;g[13]=-((c+d)*k);g[2]=0;g[6]=0;g[10]=-2*l;g[14]=-((f+e)*l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},equals:function(a){var b=this.elements;$/;"	r
makePerspective	js/three.js	/^		makePerspective: function ( left, right, top, bottom, near, far ) {$/;"	r
makePerspective	js/three.min.js	/^d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g);c.x=f[12];c.y=f[13];c.z=f[14];b.copy(this);c=1\/g;var f=1\/h,l=1\/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makePerspective:function(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");$/;"	r
makePowerOfTwo	js/three.js	/^		function makePowerOfTwo( image ) {$/;"	r
makeRotationAxis	js/three.js	/^		makeRotationAxis: function ( axis, angle ) {$/;"	r
makeRotationFromEuler	js/three.js	/^		makeRotationFromEuler: function ( euler ) {$/;"	r
makeRotationFromEuler	js/three.min.js	/^b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a=new p;return function(b){var c=this.elements,d=b.elements,e=1\/a.setFromMatrixColumn(b,0).length(),f=1\/a.setFromMatrixColumn(b,1).length();b=1\/a.setFromMatrixColumn(b,2).length();c[0]=d[0]*e;c[1]=d[1]*e;c[2]=d[2]*e;c[4]=d[4]*f;c[5]=d[5]*f;c[6]=d[6]*f;c[8]=d[8]*b;c[9]=d[9]*b;c[10]=d[10]*b;return this}}(),makeRotationFromEuler:function(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");$/;"	r
makeRotationFromQuaternion	js/three.js	/^		makeRotationFromQuaternion: function ( q ) {$/;"	r
makeRotationFromQuaternion	js/three.min.js	/^a-k*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(k=f*h,l=f*e,q=c*h,a=c*e,b[0]=g*h,b[4]=q*d-l,b[8]=k*d+a,b[1]=g*e,b[5]=a*d+k,b[9]=l*d-q,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(k=f*g,l=f*d,q=c*g,a=c*d,b[0]=g*h,b[4]=a-k*e,b[8]=q*e+l,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=l*e+q,b[10]=k-a*e):"XZY"===a.order&&(k=f*g,l=f*d,q=c*g,a=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=k*e+a,b[5]=f*h,b[9]=l*e-q,b[2]=q*e-l,b[6]=c*h,b[10]=a*e+k);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},makeRotationFromQuaternion:function(a){var b=$/;"	r
makeRotationX	js/three.js	/^		makeRotationX: function ( theta ) {$/;"	r
makeRotationY	js/three.js	/^		makeRotationY: function ( theta ) {$/;"	r
makeRotationZ	js/three.js	/^		makeRotationZ: function ( theta ) {$/;"	r
makeSafe	js/three.js	/^		makeSafe: function () {$/;"	r
makeScale	js/three.js	/^		makeScale: function ( x, y, z ) {$/;"	r
makeScale	js/three.min.js	/^Math.cos(b);b=Math.sin(b);var d=1-c,e=a.x,f=a.y;a=a.z;var g=d*e,h=d*f;this.set(g*e+c,g*f-b*a,g*a+b*f,0,g*f+b*a,h*f+c,h*a-b*e,0,g*a-b*f,h*a+b*e,d*a*a+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeShear:function(a,b,c){this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new p,b=new K;return function(c,$/;"	r
makeShear	js/three.js	/^		makeShear: function ( x, y, z ) {$/;"	r
makeTranslation	js/three.js	/^		makeTranslation: function ( x, y, z ) {$/;"	r
makeTranslation	js/three.min.js	/^a[8]*a[8]+a[9]*a[9]+a[10]*a[10]))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=$/;"	r
manager	js/GLTFLoader.js	/^				manager: this.manager$/;"	r
manager	js/GLTFLoader.js	/^		this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;$/;"	r
manager	js/three.js	/^				var manager = new LoadingManager( onLoad );$/;"	r
manager	js/three.js	/^			manager = undefined;$/;"	r
manager	js/three.js	/^		this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;$/;"	r
manhattanDistanceTo	js/three.js	/^		manhattanDistanceTo: function ( v ) {$/;"	r
manhattanDistanceTo	js/three.min.js	/^a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},manhattanDistanceTo:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)},setFromSpherical:function(a){var b=Math.sin(a.phi)*a.radius;this.x=b*Math.sin(a.theta);this.y=Math.cos(a.phi)*a.radius;this.z=b*Math.cos(a.theta);return this},setFromCylindrical:function(a){this.x=a.radius*Math.sin(a.theta);this.y=a.y;this.z=a.radius*Math.cos(a.theta);return this},setFromMatrixPosition:function(a){a=a.elements;this.x=a[12];this.y=$/;"	r
manhattanLength	js/three.js	/^		manhattanLength: function () {$/;"	r
map	js/GLTFLoader.js	/^					uvScaleMap = material.map;$/;"	r
map	js/GLTFLoader.js	/^				material.map = params.map === undefined ? null : params.map;$/;"	r
map	js/GLTFLoader.js	/^				uniforms.map.value = material.map;$/;"	r
map	js/three.js	/^							json.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );$/;"	r
map	js/three.js	/^					shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );$/;"	r
map	js/three.js	/^				map = {};$/;"	r
map	js/three.js	/^				map: !! material.map,$/;"	r
map	js/three.js	/^				map: gl.getUniformLocation( program, 'map' ),$/;"	r
map	js/three.js	/^				planeMesh.material.map = background;$/;"	r
map	js/three.js	/^				properties[ uuid ] = map;$/;"	r
map	js/three.js	/^				uniforms.map.value = material.map;$/;"	r
map	js/three.js	/^				uvScaleMap = material.map;$/;"	r
map	js/three.js	/^				var map = container.map, next = map[ id ];$/;"	r
map	js/three.js	/^				var shadowMap = shadow.map;$/;"	r
map	js/three.js	/^			map: { value: null },$/;"	r
map	js/three.js	/^			uniforms.map.value = material.map;$/;"	r
map	js/three.js	/^			var map = properties[ uuid ];$/;"	r
map	js/three.js	/^		this.map = null;$/;"	r
map	js/three.js	/^		this.map = source.map;$/;"	r
map	js/three.js	/^		this.map = {};$/;"	r
map	js/three.min.js	/^case 35667:case 35671:return De;case 35668:case 35672:return Ee;case 35669:case 35673:return Fe}}function Hf(a,b,c){this.id=a;this.addr=c;this.setValue=vf(b.type)}function If(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=Gf(b.type)}function Ge(a){this.id=a;this.seq=[];this.map={}}function cb(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d<c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=$/;"	r
map	js/three.min.js	/^this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)}function Mb(a,b){w.call(this);this.type="Points";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new Ba({color:16777215*Math.random()})}function Ec(){w.call(this);this.type="Group"}function sd(a,b,c,d,e,f,g,h,k){function l(){var a=q.image;a.readyState>=a.HAVE_CURRENT_DATA&&(q.needsUpdate=!0);requestAnimationFrame(l)}da.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var q=this;requestAnimationFrame(l)}$/;"	r
mapEncoding	js/three.js	/^				mapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),$/;"	r
mapLinear	js/three.js	/^		mapLinear: function ( x, a1, a2, b1, b2 ) {$/;"	r
mapSize	js/three.js	/^						uniforms.shadowMapSize = shadow.mapSize;$/;"	r
mapSize	js/three.js	/^		this.mapSize = new Vector2( 512, 512 );$/;"	r
map_fragment	js/three.js	/^		map_fragment: map_fragment,$/;"	r
map_fragment	js/three.js	/^	var map_fragment = "#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n";$/;"	r
map_pars_fragment	js/three.js	/^		map_pars_fragment: map_pars_fragment,$/;"	r
map_pars_fragment	js/three.js	/^	var map_pars_fragment = "#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n";$/;"	r
map_pars_fragment	js/three.min.js	/^map_fragment:"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n",map_pars_fragment:"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n",map_particle_fragment:"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n",map_particle_pars_fragment:"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n",$/;"	r
map_particle_fragment	js/three.js	/^		map_particle_fragment: map_particle_fragment,$/;"	r
map_particle_fragment	js/three.js	/^	var map_particle_fragment = "#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n";$/;"	r
map_particle_pars_fragment	js/three.js	/^		map_particle_pars_fragment: map_particle_pars_fragment,$/;"	r
map_particle_pars_fragment	js/three.js	/^	var map_particle_pars_fragment = "#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n";$/;"	r
mapping	js/three.js	/^				mapping: this.mapping,$/;"	r
mapping	js/three.js	/^			if ( mapping ) texture.mapping = mapping;$/;"	r
mapping	js/three.js	/^			this.mapping = source.mapping;$/;"	r
mapping	js/three.js	/^		loadTexture: function ( url, mapping, onLoad, onError ) {$/;"	r
mapping	js/three.js	/^		loadTextureCube: function ( urls, mapping, onLoad, onError ) {$/;"	r
mapping	js/three.js	/^		mapping = mapping !== undefined ? mapping : CubeReflectionMapping;$/;"	r
mapping	js/three.js	/^		this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;$/;"	r
mapping	js/three.js	/^	function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {$/;"	r
mapping	js/three.js	/^	function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {$/;"	r
mapping	js/three.js	/^	function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {$/;"	r
mapping	js/three.js	/^	function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {$/;"	r
markUniformsLightsNeedsUpdate	js/three.js	/^		function markUniformsLightsNeedsUpdate( uniforms, value ) {$/;"	r
mask	js/three.js	/^			this.layers.mask = source.layers.mask;$/;"	r
mask	js/three.js	/^			this.mask = 1 << channel | 0;$/;"	r
mask	js/three.js	/^		this.mask = 1 | 0;$/;"	r
mask	js/three.min.js	/^this.layers.mask=a.layers.mask;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=JSON.parse(JSON.stringify(a.userData));if(!0===b)for(b=0;b<a.children.length;b++)this.add(a.children[b].clone());return this}});Ka.prototype=Object.assign(Object.create(w.prototype),{constructor:Ka,isCamera:!0,copy:function(a,b){w.prototype.copy.call(this,a,b);this.matrixWorldInverse.copy(a.matrixWorldInverse);$/;"	r
mat	js/GLTFLoader.js	/^									var mat = new THREE.Matrix4().fromArray( m, j * 16 );$/;"	r
mat	js/three.js	/^			var mat = new Matrix4();$/;"	r
mat3array	js/three.js	/^	var mat3array = new Float32Array( 9 );$/;"	r
mat4array	js/three.js	/^	var mat4array = new Float32Array( 16 );$/;"	r
match	js/three.js	/^			var match = RePathPart.exec( path ),$/;"	r
matchEnd	js/three.js	/^				matchEnd = RePathPart.lastIndex,$/;"	r
matches	js/three.js	/^				var matches = trackRe.exec( trackName );$/;"	r
material	js/GLTFLoader.js	/^								material = material.clone();$/;"	r
material	js/GLTFLoader.js	/^								material = specGlossExtension.cloneMaterial( material );$/;"	r
material	js/GLTFLoader.js	/^							var material = mesh.material;$/;"	r
material	js/GLTFLoader.js	/^						var material = primitive.material === undefined$/;"	r
material	js/GLTFLoader.js	/^				pending.push( khcExtension.extendParams( materialParams, material, parser ) );$/;"	r
material	js/GLTFLoader.js	/^				pending.push( sgExtension.extendParams( materialParams, material, parser ) );$/;"	r
material	js/GLTFLoader.js	/^				var material = new THREE.ShaderMaterial( {$/;"	r
material	js/GLTFLoader.js	/^			extendParams: function ( params, material, parser ) {$/;"	r
material	js/GLTFLoader.js	/^		var material = mesh.material;$/;"	r
material	js/GLTFLoader.js	/^	GLTFMaterialsCommonExtension.prototype.extendParams = function ( materialParams, material, parser ) {$/;"	r
material	js/three.js	/^						var depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );$/;"	r
material	js/three.js	/^						var material = getMaterial( data.material );$/;"	r
material	js/three.js	/^						var material = object.material;$/;"	r
material	js/three.js	/^					material: material,$/;"	r
material	js/three.js	/^					object.material = serialize( meta.materials, this.material );$/;"	r
material	js/three.js	/^					object.material = uuids;$/;"	r
material	js/three.js	/^					var material = object.material;$/;"	r
material	js/three.js	/^				material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );$/;"	r
material	js/three.js	/^				material: material,$/;"	r
material	js/three.js	/^				renderItem.material = material;$/;"	r
material	js/three.js	/^				var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;$/;"	r
material	js/three.js	/^				var material = sprite.material;$/;"	r
material	js/three.js	/^				var material = this.material;$/;"	r
material	js/three.js	/^				var program = setProgram( camera, scene.fog, material, object );$/;"	r
material	js/three.js	/^			function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {$/;"	r
material	js/three.js	/^			var material = event.target;$/;"	r
material	js/three.js	/^			var material = new Materials[ json.type ]();$/;"	r
material	js/three.js	/^		function getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {$/;"	r
material	js/three.js	/^		this.material = ( material !== undefined ) ? material : new SpriteMaterial();$/;"	r
material	js/three.js	/^		this.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );$/;"	r
material	js/three.js	/^		this.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );$/;"	r
material	js/three.js	/^		this.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );$/;"	r
material	js/three.js	/^		this.material = material;$/;"	r
material	js/three.js	/^		this.material = new MeshBasicMaterial( { wireframe: true, fog: false } );$/;"	r
material	js/three.js	/^		var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );$/;"	r
material	js/three.js	/^		var material = new LineBasicMaterial( { fog: false } );$/;"	r
material	js/three.js	/^		var material = new LineBasicMaterial( { vertexColors: VertexColors } );$/;"	r
material	js/three.js	/^		var material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );$/;"	r
material	js/three.js	/^		var material = new MeshBasicMaterial( { wireframe: true, fog: false } );$/;"	r
material	js/three.js	/^	function Line( geometry, material, mode ) {$/;"	r
material	js/three.min.js	/^"gl.VALIDATE_STATUS",g.getProgramParameter(p,g.VALIDATE_STATUS),"gl.getProgramInfoLog",f,e,q);else if(""!==f)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f);else if(""===e||""===q)u=!1;u&&(this.diagnostics={runnable:n,material:d,programLog:f,vertexShader:{log:e,prefix:h},fragmentShader:{log:q,prefix:b}});g.deleteShader(k);g.deleteShader(l);var B;this.getUniforms=function(){void 0===B&&(B=new cb(g,p,a));return B};var I;this.getAttributes=function(){if(void 0===I){for(var a={},b=g.getProgramParameter(p,$/;"	r
materialDefaultAttributeValues	js/three.js	/^			var materialDefaultAttributeValues = material.defaultAttributeValues;$/;"	r
materialExtensions	js/GLTFLoader.js	/^			var materialExtensions = material.extensions || {};$/;"	r
materialId	js/three.js	/^	var materialId = 0;$/;"	r
materialIndex	js/three.js	/^							face.materialIndex = materialIndex;$/;"	r
materialIndex	js/three.js	/^							faceA.materialIndex = materialIndex;$/;"	r
materialIndex	js/three.js	/^							faceB.materialIndex = materialIndex;$/;"	r
materialIndex	js/three.js	/^							materialIndex = faces[ offset ++ ];$/;"	r
materialIndex	js/three.js	/^						materialIndex: materialIndex$/;"	r
materialIndex	js/three.js	/^					groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];$/;"	r
materialIndex	js/three.js	/^					materialIndex = face.materialIndex;$/;"	r
materialIndex	js/three.js	/^				faceCopy.materialIndex = face.materialIndex + materialIndexOffset;$/;"	r
materialIndex	js/three.js	/^			this.materialIndex = source.materialIndex;$/;"	r
materialIndex	js/three.js	/^			var materialIndex = undefined;$/;"	r
materialIndex	js/three.js	/^		this.materialIndex = materialIndex !== undefined ? materialIndex : 0;$/;"	r
materialIndex	js/three.min.js	/^new p;if(null!==a.index){k=a.attributes.position;q=a.index;var r=a.groups;0===r.length&&(r=[{start:0,count:q.count,materialIndex:0}]);a=0;for(e=r.length;a<e;++a)for(l=r[a],c=l.start,d=l.count,l=c,d=c+d;l<d;l+=3)for(c=0;3>c;c++)n=q.getX(l+c),u=q.getX(l+(c+1)%3),f[0]=Math.min(n,u),f[1]=Math.max(n,u),n=f[0]+","+f[1],void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]});for(n in g)l=g[n],h.fromBufferAttribute(k,l.index1),b.push(h.x,h.y,h.z),h.fromBufferAttribute(k,l.index2),b.push(h.x,h.y,h.z)}else for(k=a.attributes.position,$/;"	r
materialIndexSort	js/three.js	/^			function materialIndexSort( a, b ) {$/;"	r
materialLoader	js/three.js	/^			var materialLoader = new MaterialLoader();$/;"	r
materialParams	js/GLTFLoader.js	/^			var materialParams = {};$/;"	r
materialProperties	js/three.js	/^			var materialProperties = properties.get( material );$/;"	r
materialType	js/GLTFLoader.js	/^				materialType = THREE.MeshPhongMaterial;$/;"	r
materialType	js/GLTFLoader.js	/^				materialType = THREE.MeshStandardMaterial;$/;"	r
materialType	js/GLTFLoader.js	/^				materialType = khcExtension.getMaterialType( material );$/;"	r
materialType	js/GLTFLoader.js	/^				materialType = sgExtension.getMaterialType( material );$/;"	r
materialType	js/GLTFLoader.js	/^			var materialType;$/;"	r
materialValues	js/GLTFLoader.js	/^		var materialValues = {};$/;"	r
materialVariants	js/three.js	/^				materialVariants = _distanceMaterials;$/;"	r
materialVariants	js/three.js	/^			var materialVariants = _depthMaterials;$/;"	r
materials	js/three.js	/^						targetObject = targetObject.material.materials;$/;"	r
materials	js/three.js	/^					materials: {},$/;"	r
materials	js/three.js	/^					return { geometry: geometry, materials: materials };$/;"	r
materials	js/three.js	/^					var materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );$/;"	r
materials	js/three.js	/^				if ( materials.length > 0 ) output.materials = materials;$/;"	r
materials	js/three.js	/^				var materials = extractFromCache( meta.materials );$/;"	r
materials	js/three.js	/^			var materials = this.parseMaterials( json.materials, textures );$/;"	r
materials	js/three.js	/^			var materials = {};$/;"	r
materials	js/three.js	/^		materials.materials = materials;$/;"	r
materials	js/three.min.js	/^(r=ra.CreateClipsFromMorphTargetSequences(c.morphTargets,10),d=d.concat(r));0<d.length&&(c.animations=d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};a=gc.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:a}}}()});Object.assign(Re.prototype,{load:function(a,b,c,d){""===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf("\/")+1));var e=this;(new Ja(e.manager)).load(a,function(c){var f=$/;"	r
materials	js/three.min.js	/^[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var d=void 0===a||"string"===typeof a,e={};d&&(a={geometries:{},materials:{},textures:{},images:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var f={};f.uuid=this.uuid;f.type=this.type;""!==this.name&&(f.name=this.name);!0===this.castShadow&&(f.castShadow=!0);!0===this.receiveShadow&&(f.receiveShadow=!0);!1===this.visible&&(f.visible=!1);"{}"!==JSON.stringify(this.userData)&&(f.userData=this.userData);f.matrix=$/;"	r
materials	js/three.min.js	/^this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case "bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(c=0;c<a.length;c++)if(a[c].name===f){f=c;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",$/;"	r
materialsForVariant	js/three.js	/^					_materialCache[ keyA ] = materialsForVariant;$/;"	r
materialsForVariant	js/three.js	/^					materialsForVariant = {};$/;"	r
materialsForVariant	js/three.js	/^				var materialsForVariant = _materialCache[ keyA ];$/;"	r
matrix	js/GLTFLoader.js	/^						var matrix = new THREE.Matrix4();$/;"	r
matrix	js/three.js	/^					state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;$/;"	r
matrix	js/three.js	/^					state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;$/;"	r
matrix	js/three.js	/^					state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;$/;"	r
matrix	js/three.js	/^					var matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;$/;"	r
matrix	js/three.js	/^				matrix = geometry2.matrix;$/;"	r
matrix	js/three.js	/^				var shadowMatrix = shadow.matrix;$/;"	r
matrix	js/three.js	/^			console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );$/;"	r
matrix	js/three.js	/^			geometry1.merge( geometry2, matrix, materialIndexOffset );$/;"	r
matrix	js/three.js	/^			object.matrix = this.matrix.toArray();$/;"	r
matrix	js/three.js	/^			var matrix = new Matrix4();$/;"	r
matrix	js/three.js	/^			var matrix;$/;"	r
matrix	js/three.js	/^		merge: function ( geometry, matrix, materialIndexOffset ) {$/;"	r
matrix	js/three.js	/^		this.matrix = camera.matrixWorld;$/;"	r
matrix	js/three.js	/^		this.matrix = light.matrixWorld;$/;"	r
matrix	js/three.js	/^		this.matrix = new Matrix3();$/;"	r
matrix	js/three.js	/^		this.matrix = new Matrix4();$/;"	r
matrix	js/three.js	/^		this.matrix = object.matrixWorld;$/;"	r
matrix	js/three.js	/^		this.matrix = this.light.matrixWorld;$/;"	r
matrix	js/three.min.js	/^!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new K},normalMatrix:{value:new ta}});this.matrix=new K;this.matrixWorld=new K;this.matrixAutoUpdate=w.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new Pd;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=$/;"	r
matrix4	js/three.js	/^		var matrix4 = new Matrix4();$/;"	r
matrix42	js/three.js	/^		var matrix42 = new Matrix4();$/;"	r
matrixAutoUpdate	js/GLTFLoader.js	/^							node.matrixAutoUpdate = true;$/;"	r
matrixAutoUpdate	js/three.js	/^			this.matrixAutoUpdate = source.matrixAutoUpdate;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.cameraL.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.cameraR.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.cone.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.line.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.matrixAutoUpdate = false;$/;"	r
matrixAutoUpdate	js/three.js	/^		this.matrixAutoUpdate = true;$/;"	r
matrixAutoUpdate	js/three.min.js	/^a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new T({fog:!1});b=new C;b.addAttribute("position",new O(new Float32Array(15),3));this.line=new oa(b,a);this.add(this.line);this.update()}function oc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;a=new jb(b);a.rotateY(.5*Math.PI);this.material=new va({wireframe:!0,fog:!1});void 0===this.color&&(this.material.vertexColors=2);b=a.getAttribute("position");b=new Float32Array(3*$/;"	r
matrixAutoUpdate	js/three.min.js	/^linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function pc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;void 0===b&&(b=1);a=new C;a.addAttribute("position",new z([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));b=new T({fog:!1});this.lightPlane=new oa(a,b);this.add(this.lightPlane);a=new C;a.addAttribute("position",new z([0,0,0,0,0,1],3));this.targetLine=new oa(a,b);this.add(this.targetLine);this.update()}function ed(a){function b(a,$/;"	r
matrixPosition	js/three.js	/^			var matrixPosition = new Vector3();$/;"	r
matrixWorld	js/three.js	/^				bindMatrix = this.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^				var matrixWorld = this.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^			var matrixWorld = this.object.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^		this.matrix = camera.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^		this.matrix = light.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^		this.matrix = object.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^		this.matrix = this.light.matrixWorld;$/;"	r
matrixWorld	js/three.js	/^		this.matrixWorld = new Matrix4();$/;"	r
matrixWorld	js/three.min.js	/^c.getNormalMatrix(this.object.matrixWorld);var f=this.object.matrixWorld,g=this.geometry.attributes.position;if((d=this.object.geometry)&&d.isGeometry)for(var h=d.vertices,k=d.faces,l=d=0,m=k.length;l<m;l++)for(var n=k[l],p=0,r=n.vertexNormals.length;p<r;p++){var v=n.vertexNormals[p];a.copy(h[n[e[p]]]).applyMatrix4(f);b.copy(v).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);g.setXYZ(d,a.x,a.y,a.z);d+=1;g.setXYZ(d,b.x,b.y,b.z);d+=1}else if(d&&d.isBufferGeometry)for(e=d.attributes.position,$/;"	r
matrixWorldInv	js/three.js	/^		var matrixWorldInv = new Matrix4();$/;"	r
matrixWorldInverse	js/three.js	/^						viewMatrix = camera.matrixWorldInverse;$/;"	r
matrixWorldInverse	js/three.js	/^			var viewMatrix = camera.matrixWorldInverse;$/;"	r
matrixWorldInverse	js/three.js	/^		this.matrixWorldInverse = new Matrix4();$/;"	r
matrixWorldInverse	js/three.js	/^		var matrixWorldInverse = new Matrix4();$/;"	r
matrixWorldNeedsUpdate	js/three.js	/^					this.targetObject.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	js/three.js	/^				this.matrixWorldNeedsUpdate = false;$/;"	r
matrixWorldNeedsUpdate	js/three.js	/^			this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;$/;"	r
matrixWorldNeedsUpdate	js/three.js	/^			this.matrixWorldNeedsUpdate = true;$/;"	r
matrixWorldNeedsUpdate	js/three.js	/^		this.matrixWorldNeedsUpdate = false;$/;"	r
matrixWorldNeedsUpdate	js/three.min.js	/^this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},toJSON:function(a){function b(b,c){void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a));return c.uuid}function c(a){var b=$/;"	r
max	js/three.js	/^					max = new Vector4();$/;"	r
max	js/three.js	/^				max = plane.normal.x * this.max.x;$/;"	r
max	js/three.js	/^				max = plane.normal.x * this.min.x;$/;"	r
max	js/three.js	/^				var max = Math.max( x0, x1, x2 );$/;"	r
max	js/three.js	/^			var max = Math.max( r, g, b );$/;"	r
max	js/three.js	/^			var max = box.max;$/;"	r
max	js/three.js	/^			var max = new Vector2();$/;"	r
max	js/three.js	/^			var max = new Vector3();$/;"	r
max	js/three.js	/^		max: function ( v ) {$/;"	r
max	js/three.js	/^		this.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );$/;"	r
max	js/three.js	/^		this.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );$/;"	r
max	js/three.js	/^		var max = array[ 0 ];$/;"	r
max	js/three.min.js	/^a?a:new p(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new p(-Infinity,-Infinity,-Infinity)}function Da(a,b){this.center=void 0!==a?a:new p;this.radius=void 0!==b?b:0}function za(a,b){this.normal=void 0!==a?a:new p(1,0,0);this.constant=void 0!==b?b:0}function ld(a,b,c,d,e,f){this.planes=[void 0!==a?a:new za,void 0!==b?b:new za,void 0!==c?c:new za,void 0!==d?d:new za,void 0!==e?e:new za,void 0!==f?f:new za]}function Ie(a,b,c){function d(b,c,d,e,f,g){var h=b.geometry;var k=n;var l=b.customDepthMaterial;$/;"	r
maxAnisotropy	js/three.js	/^				maxAnisotropy = 0;$/;"	r
maxAnisotropy	js/three.js	/^				maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );$/;"	r
maxAnisotropy	js/three.js	/^		var maxAnisotropy;$/;"	r
maxAttributes	js/three.js	/^			maxAttributes: maxAttributes,$/;"	r
maxAttributes	js/three.js	/^		var maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );$/;"	r
maxBones	js/three.js	/^				maxBones: maxBones,$/;"	r
maxBones	js/three.js	/^				var maxBones = Math.min( nVertexMatrices, bones.length );$/;"	r
maxBones	js/three.js	/^			var maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;$/;"	r
maxCubemapSize	js/three.js	/^			maxCubemapSize: maxCubemapSize,$/;"	r
maxCubemapSize	js/three.js	/^		var maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );$/;"	r
maxDistance	js/three.js	/^			this.panner.maxDistance = value;$/;"	r
maxFragmentUniforms	js/three.js	/^			maxFragmentUniforms: maxFragmentUniforms,$/;"	r
maxFragmentUniforms	js/three.js	/^		var maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );$/;"	r
maxInstancedCount	js/three.js	/^									geometry.maxInstancedCount = data.meshPerAttribute * data.count;$/;"	r
maxInstancedCount	js/three.js	/^									geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;$/;"	r
maxInstancedCount	js/three.js	/^			this.maxInstancedCount = source.maxInstancedCount;$/;"	r
maxInstancedCount	js/three.js	/^		this.maxInstancedCount = undefined;$/;"	r
maxInstancedCount	js/three.min.js	/^{constructor:ke,isInstancedBufferGeometry:!0,copy:function(a){C.prototype.copy.call(this,a);this.maxInstancedCount=a.maxInstancedCount;return this},clone:function(){return(new this.constructor).copy(this)}});Object.defineProperties(le.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(le.prototype,{isInterleavedBufferAttribute:!0,setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*$/;"	r
maxMorphNormals	js/three.js	/^				maxMorphNormals: renderer.maxMorphNormals,$/;"	r
maxMorphNormals	js/three.js	/^		this.maxMorphNormals = 4;$/;"	r
maxMorphTargets	js/three.js	/^				maxMorphTargets: renderer.maxMorphTargets,$/;"	r
maxMorphTargets	js/three.js	/^		this.maxMorphTargets = 8;$/;"	r
maxMorphTargets	js/three.min.js	/^maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:e.directional.length,numPointLights:e.point.length,numSpotLights:e.spot.length,numRectAreaLights:e.rectArea.length,numHemiLights:e.hemi.length,numClippingPlanes:n,numClipIntersection:u,dithering:b.dithering,shadowMapEnabled:a.shadowMap.enabled&&r.receiveShadow&&0<g.length,shadowMapType:a.shadowMap.type,toneMapping:a.toneMapping,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,$/;"	r
maxPrecision	js/three.js	/^			precision = maxPrecision;$/;"	r
maxPrecision	js/three.js	/^		var maxPrecision = getMaxPrecision( precision );$/;"	r
maxRadiusSq	js/three.js	/^						maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );$/;"	r
maxRadiusSq	js/three.js	/^					maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );$/;"	r
maxRadiusSq	js/three.js	/^					var maxRadiusSq = 0;$/;"	r
maxRadiusSq	js/three.js	/^				var maxRadiusSq = 0;$/;"	r
maxTextureSize	js/three.js	/^			maxTextureSize: maxTextureSize,$/;"	r
maxTextureSize	js/three.js	/^		var maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );$/;"	r
maxTextures	js/three.js	/^			maxTextures: maxTextures,$/;"	r
maxTextures	js/three.js	/^		var maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );$/;"	r
maxTextures	js/three.js	/^		var maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );$/;"	r
maxVal	js/three.js	/^				max.set( maxVal, maxVal, maxVal );$/;"	r
maxVal	js/three.js	/^				max.set( maxVal, maxVal, maxVal, maxVal );$/;"	r
maxVaryings	js/three.js	/^			maxVaryings: maxVaryings,$/;"	r
maxVaryings	js/three.js	/^		var maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );$/;"	r
maxVertexAttributes	js/three.js	/^		var maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );$/;"	r
maxVertexTextures	js/three.js	/^			maxVertexTextures: maxVertexTextures,$/;"	r
maxVertexTextures	js/three.js	/^		var maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );$/;"	r
maxVertexUniforms	js/three.js	/^				var nVertexUniforms = capabilities.maxVertexUniforms;$/;"	r
maxVertexUniforms	js/three.js	/^			maxVertexUniforms: maxVertexUniforms,$/;"	r
maxVertexUniforms	js/three.js	/^		var maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );$/;"	r
maxX	js/three.js	/^			var maxX = - Infinity;$/;"	r
maxY	js/three.js	/^			this.max.set( maxX, maxY, maxZ );$/;"	r
maxY	js/three.js	/^			var maxY = - Infinity;$/;"	r
maxZ	js/three.js	/^			var maxZ = - Infinity;$/;"	r
mb	js/three.min.js	/^0;this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function mb(a){La.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.clearCoatRoughness=this.clearCoat=0;this.setValues(a)}function Ia(a){Q.call(this);this.type="MeshPhongMaterial";$/;"	r
mb	js/three.min.js	/^a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};mb.prototype=Object.create(La.prototype);mb.prototype.constructor=mb;mb.prototype.isMeshPhysicalMaterial=$/;"	r
mc	js/three.min.js	/^mc;mc.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};mc.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};nc.prototype=Object.create(w.prototype);nc.prototype.constructor=nc;nc.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose()};nc.prototype.update=function(){var a=.5*this.light.width,b=.5*this.light.height,c=this.line.geometry.attributes.position,$/;"	r
mc	js/three.min.js	/^new z(d,3));c.addAttribute("color",new z(e,3));d=new T({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});P.call(this,c,d);this.root=a;this.bones=b;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1}function mc(a,b,c){this.light=a;this.light.updateMatrixWorld();this.color=c;a=new kb(b,4,2);b=new va({wireframe:!0,fog:!1});qa.call(this,a,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function nc(a,b){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=$/;"	r
me	js/three.js	/^				me = m.elements,$/;"	r
me	js/three.js	/^				var me = m.elements;$/;"	r
me	js/three.js	/^			var me = m.elements;$/;"	r
me	js/three.js	/^			var me = matrix.elements,$/;"	r
me	js/three.js	/^			var me = matrix.elements;$/;"	r
me0	js/three.js	/^			var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];$/;"	r
me12	js/three.js	/^			var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];$/;"	r
me4	js/three.js	/^			var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];$/;"	r
me8	js/three.js	/^			var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];$/;"	r
mediumturquoise	js/three.min.js	/^mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,$/;"	r
memory	js/three.js	/^			memory: _infoMemory,$/;"	r
memory	js/three.min.js	/^memory:Vd,programs:null};try{y={alpha:y,depth:B,stencil:I,antialias:A,premultipliedAlpha:J,preserveDrawingBuffer:w};var F=x||t.getContext("webgl",y)||t.getContext("experimental-webgl",y);if(null===F){if(null!==t.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context.";}void 0===F.getShaderPrecisionFormat&&(F.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});t.addEventListener("webglcontextlost",c,!1);$/;"	r
merge	js/three.js	/^		merge: function ( geometry, matrix, materialIndexOffset ) {$/;"	r
merge	js/three.js	/^		merge: function ( geometry, offset ) {$/;"	r
merge	js/three.js	/^		merge: function ( geometry1, geometry2, materialIndexOffset ) {$/;"	r
merge	js/three.js	/^		merge: function ( uniforms ) {$/;"	r
merge	js/three.min.js	/^1]+=q.y;e[v+2]+=q.z;e[t]+=q.x;e[t+1]+=q.y;e[t+2]+=q.z;e[x]+=q.x;e[x+1]+=q.y;e[x+2]+=q.z}}}else for(f=0,g=d.length;f<g;f+=9)h.fromArray(d,f),k.fromArray(d,f+3),l.fromArray(d,f+6),q.subVectors(l,k),n.subVectors(h,k),q.cross(n),e[f]=q.x,e[f+1]=q.y,e[f+2]=q.z,e[f+3]=q.x,e[f+4]=q.y,e[f+5]=q.z,e[f+6]=q.x,e[f+7]=q.y,e[f+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=!0}},merge:function(a,b){if(a&&a.isBufferGeometry){void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=$/;"	r
merge	js/three.min.js	/^this.boundingBox&&(this.boundingBox=new Na);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Da);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a&&a.isGeometry){var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0],q=a.faceVertexUvs[0],n=this.colors,m=a.colors;void 0===c&&(c=0);void 0!==b&&(d=(new ta).getNormalMatrix(b));a=0;for(var r=g.length;a<$/;"	r
mergeMesh	js/three.js	/^		mergeMesh: function ( mesh ) {$/;"	r
mergeMesh	js/three.min.js	/^c;h.push(n)}a=0;for(r=q.length;a<r;a++)if(c=q[a],d=[],void 0!==c){b=0;for(f=c.length;b<f;b++)d.push(c[b].clone());l.push(d)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a)},mergeMesh:function(a){a&&a.isMesh?(a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a)},mergeVertices:function(){var a={},b=[],c=[],d=Math.pow(10,4),e;var f=0;for(e=this.vertices.length;f<$/;"	r
mergeVertices	js/three.js	/^		mergeVertices: function () {$/;"	r
merged	js/three.js	/^			var merged = {};$/;"	r
mesh	js/GLTFLoader.js	/^							mesh = new THREE.Line( geometry, material );$/;"	r
mesh	js/GLTFLoader.js	/^							mesh = new THREE.LineLoop( geometry, material );$/;"	r
mesh	js/GLTFLoader.js	/^							mesh = new THREE.LineSegments( geometry, material );$/;"	r
mesh	js/GLTFLoader.js	/^							mesh = new THREE.Mesh( geometry, material );$/;"	r
mesh	js/GLTFLoader.js	/^							mesh = new THREE.Points( geometry, material );$/;"	r
mesh	js/GLTFLoader.js	/^							var mesh = meshes[ i ];$/;"	r
mesh	js/GLTFLoader.js	/^						var mesh;$/;"	r
mesh	js/GLTFLoader.js	/^					var mesh = dependencies.meshes[ nodeDef.mesh ].clone();$/;"	r
mesh	js/three.js	/^			var mesh = this.children[ 0 ];$/;"	r
meshDef	js/GLTFLoader.js	/^							addMorphTargets( mesh, meshDef, primitive, dependencies );$/;"	r
meshDef	js/GLTFLoader.js	/^	function addMorphTargets( mesh, meshDef, primitiveDef, dependencies ) {$/;"	r
meshPerAttribute	js/three.js	/^				attributeDivisors[ attribute ] = meshPerAttribute;$/;"	r
meshPerAttribute	js/three.js	/^			this.meshPerAttribute = source.meshPerAttribute;$/;"	r
meshPerAttribute	js/three.js	/^		this.meshPerAttribute = meshPerAttribute || 1;$/;"	r
meshPerAttribute	js/three.min.js	/^copy:function(a){O.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this}});Object.assign(Ze.prototype,{linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize()):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)\/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld)):$/;"	r
meshReferences	js/GLTFLoader.js	/^		var meshReferences = {};$/;"	r
meshUses	js/GLTFLoader.js	/^		var meshUses = {};$/;"	r
meshbasic_frag	js/three.js	/^		meshbasic_frag: meshbasic_frag,$/;"	r
meshbasic_frag	js/three.js	/^	var meshbasic_frag = "uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
meshbasic_frag	js/three.min.js	/^meshbasic_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",$/;"	r
meshbasic_vert	js/three.js	/^		meshbasic_vert: meshbasic_vert,$/;"	r
meshbasic_vert	js/three.js	/^	var meshbasic_vert = "#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
meshbasic_vert	js/three.min.js	/^meshbasic_vert:"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
meshes	js/GLTFLoader.js	/^						var meshes = node.children.length > 0 ? node.children : [ node ];$/;"	r
meshlambert_frag	js/three.js	/^		meshlambert_frag: meshlambert_frag,$/;"	r
meshlambert_frag	js/three.js	/^	var meshlambert_frag = "uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n";$/;"	r
meshlambert_frag	js/three.min.js	/^meshlambert_frag:"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n",$/;"	r
meshlambert_vert	js/three.js	/^		meshlambert_vert: meshlambert_vert,$/;"	r
meshlambert_vert	js/three.js	/^	var meshlambert_vert = "#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
meshlambert_vert	js/three.min.js	/^meshlambert_vert:"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
meshphong_frag	js/three.js	/^		meshphong_frag: meshphong_frag,$/;"	r
meshphong_frag	js/three.js	/^	var meshphong_frag = "#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n";$/;"	r
meshphong_frag	js/three.min.js	/^meshphong_frag:"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n",$/;"	r
meshphong_vert	js/three.js	/^		meshphong_vert: meshphong_vert,$/;"	r
meshphong_vert	js/three.js	/^	var meshphong_vert = "#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
meshphong_vert	js/three.min.js	/^meshphong_vert:"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
meshphysical_frag	js/three.js	/^		meshphysical_frag: meshphysical_frag,$/;"	r
meshphysical_frag	js/three.js	/^	var meshphysical_frag = "#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n";$/;"	r
meshphysical_frag	js/three.min.js	/^meshphysical_frag:"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n",$/;"	r
meshphysical_vert	js/three.js	/^		meshphysical_vert: meshphysical_vert,$/;"	r
meshphysical_vert	js/three.js	/^	var meshphysical_vert = "#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
meshphysical_vert	js/three.min.js	/^meshphysical_vert:"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
message	js/three.js	/^				var message = "unsupported interpolation for " +$/;"	r
meta	js/three.js	/^				meta = {$/;"	r
metadata	js/three.js	/^				metadata: {$/;"	r
metadata	js/three.js	/^				output.metadata = {$/;"	r
metadata	js/three.js	/^				var metadata = json.metadata;$/;"	r
metal	js/three.js	/^		metal: {$/;"	r
metallicRoughness	js/GLTFLoader.js	/^				var metallicRoughness = material.pbrMetallicRoughness;$/;"	r
metalness	js/GLTFLoader.js	/^				materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;$/;"	r
metalness	js/GLTFLoader.js	/^			metalness: 1,$/;"	r
metalness	js/three.js	/^					metalness: { value: 0.5 },$/;"	r
metalness	js/three.js	/^			if ( json.metalness !== undefined ) material.metalness = json.metalness;$/;"	r
metalness	js/three.js	/^			if ( this.metalness !== undefined ) data.metalness = this.metalness;$/;"	r
metalness	js/three.js	/^			uniforms.metalness.value = material.metalness;$/;"	r
metalness	js/three.js	/^		this.metalness = 0.5;$/;"	r
metalness	js/three.js	/^		this.metalness = source.metalness;$/;"	r
metalness	js/three.js	/^	var metalnessmap_fragment = "float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n";$/;"	r
metalness	js/three.min.js	/^metalnessmap_fragment:"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n",$/;"	r
metalnessMap	js/three.js	/^							json.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );$/;"	r
metalnessMap	js/three.js	/^				metalnessMap: !! material.metalnessMap,$/;"	r
metalnessMap	js/three.js	/^				uniforms.metalnessMap.value = material.metalnessMap;$/;"	r
metalnessMap	js/three.js	/^				uvScaleMap = material.metalnessMap;$/;"	r
metalnessMap	js/three.js	/^			metalnessMap: { value: null }$/;"	r
metalnessMap	js/three.js	/^		this.metalnessMap = null;$/;"	r
metalnessMap	js/three.js	/^		this.metalnessMap = source.metalnessMap;$/;"	r
metalnessmap	js/three.js	/^				UniformsLib.metalnessmap,$/;"	r
metalnessmap	js/three.js	/^		metalnessmap: {$/;"	r
metalnessmap_fragment	js/three.js	/^		metalnessmap_fragment: metalnessmap_fragment,$/;"	r
metalnessmap_fragment	js/three.js	/^	var metalnessmap_fragment = "float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n";$/;"	r
metalnessmap_pars_fragment	js/three.js	/^		metalnessmap_pars_fragment: metalnessmap_pars_fragment,$/;"	r
metalnessmap_pars_fragment	js/three.js	/^	var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif";$/;"	r
metalnessmap_pars_fragment	js/three.min.js	/^metalnessmap_fragment:"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n",$/;"	r
mid	js/three.js	/^							right = mid;$/;"	r
mid	js/three.js	/^						var mid = ( i1 + right ) >>> 1;$/;"	r
midpoint	js/three.js	/^		midpoint: function ( optionalTarget ) {$/;"	r
midpoint	js/three.min.js	/^this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new p).addVectors(this.a,this.b).add(this.c).multiplyScalar(1\/3)},normal:function(a){return Pa.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new za).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return Pa.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return Pa.containsPoint(a,this.a,this.b,this.c)},closestPointToPoint:function(){var a=$/;"	r
mimeType	js/three.js	/^				var mimeType = dataUriRegexResult[ 1 ];$/;"	r
mimeType	js/three.js	/^			this.mimeType = value;$/;"	r
min	js/three.js	/^					min = new Vector4();$/;"	r
min	js/three.js	/^				min = plane.normal.x * this.max.x;$/;"	r
min	js/three.js	/^				min = plane.normal.x * this.min.x;$/;"	r
min	js/three.js	/^				min = tx;$/;"	r
min	js/three.js	/^				min = ty;$/;"	r
min	js/three.js	/^				var min = Math.min( x0, x1, x2 );$/;"	r
min	js/three.js	/^			var min = Math.min( r, g, b );$/;"	r
min	js/three.js	/^			var min = Number.MAX_VALUE;$/;"	r
min	js/three.js	/^			var min = box.min;$/;"	r
min	js/three.js	/^			var min = new Vector2();$/;"	r
min	js/three.js	/^			var min = new Vector3();$/;"	r
min	js/three.js	/^			var min, max;$/;"	r
min	js/three.js	/^		clamp: function ( value, min, max ) {$/;"	r
min	js/three.js	/^		min: function ( v ) {$/;"	r
min	js/three.js	/^		smootherstep: function ( x, min, max ) {$/;"	r
min	js/three.js	/^		smoothstep: function ( x, min, max ) {$/;"	r
min	js/three.js	/^		this.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );$/;"	r
min	js/three.js	/^		this.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );$/;"	r
min	js/three.min.js	/^this.w=Math.acos((b+f+l-1)\/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,$/;"	r
minDistance	js/three.js	/^							minDistance = distance;$/;"	r
minDistance	js/three.js	/^				var minDistance = Infinity;$/;"	r
minFilter	js/GLTFLoader.js	/^			texture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;$/;"	r
minFilter	js/three.js	/^							texture.minFilter = LinearFilter;$/;"	r
minFilter	js/three.js	/^						texture.minFilter = LinearFilter;$/;"	r
minFilter	js/three.js	/^					texture.minFilter = LinearFilter;$/;"	r
minFilter	js/three.js	/^				minFilter: this.minFilter,$/;"	r
minFilter	js/three.js	/^				texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;$/;"	r
minFilter	js/three.js	/^				this.texture.minFilter = value;$/;"	r
minFilter	js/three.js	/^			this.minFilter = source.minFilter;$/;"	r
minFilter	js/three.js	/^		minFilter: {$/;"	r
minFilter	js/three.js	/^		this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;$/;"	r
minFilter	js/three.js	/^		this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;$/;"	r
minFilter	js/three.min.js	/^a}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=a}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=$/;"	r
minFilter	js/three.min.js	/^void 0!==e?e:1006;this.minFilter=void 0!==f?f:1008;this.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:1023;this.type=void 0!==h?h:1009;this.offset=new D(0,0);this.repeat=new D(1,1);this.center=new D(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new ta;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:3E3;this.version=0;this.onUpdate=null}function ba(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function Db(a,$/;"	r
minShapeIndex	js/three.js	/^								minShapeIndex = shapeIndex;$/;"	r
minShapeIndex	js/three.js	/^					for ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {$/;"	r
minShapeIndex	js/three.js	/^				var minShapeIndex = 0;$/;"	r
minVal	js/three.js	/^				min.set( minVal, minVal, minVal );$/;"	r
minVal	js/three.js	/^				min.set( minVal, minVal, minVal, minVal );$/;"	r
minX	js/three.js	/^			var minX = + Infinity;$/;"	r
minY	js/three.js	/^			this.min.set( minX, minY, minZ );$/;"	r
minY	js/three.js	/^			var minY = + Infinity;$/;"	r
minZ	js/three.js	/^			var minZ = + Infinity;$/;"	r
mipLevel	js/three.min.js	/^cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 \/ cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) \/ exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 \/ powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz \/ abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n",$/;"	r
mipmap	js/three.js	/^								mipmap = mipmaps[ j ];$/;"	r
mipmap	js/three.js	/^							var mipmap, mipmaps = cubeImage[ i ].mipmaps;$/;"	r
mipmap	js/three.js	/^						mipmap = mipmaps[ i ];$/;"	r
mipmap	js/three.js	/^					mipmap = mipmaps[ i ];$/;"	r
mipmap	js/three.js	/^			var mipmap, mipmaps = texture.mipmaps;$/;"	r
mipmaps	js/three.js	/^							var mipmap, mipmaps = cubeImage[ i ].mipmaps;$/;"	r
mipmaps	js/three.js	/^						mipmaps: texDatas.mipmaps$/;"	r
mipmaps	js/three.js	/^						texture.mipmaps = texDatas.mipmaps;$/;"	r
mipmaps	js/three.js	/^					texture.mipmaps = texData.mipmaps;$/;"	r
mipmaps	js/three.js	/^			this.mipmaps = source.mipmaps.slice( 0 );$/;"	r
mipmaps	js/three.js	/^			var mipmap, mipmaps = texture.mipmaps;$/;"	r
mipmaps	js/three.js	/^		this.mipmaps = [];$/;"	r
mipmaps	js/three.js	/^		this.mipmaps = mipmaps;$/;"	r
mipmaps	js/three.min.js	/^function p(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0}function ta(){this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function da(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,"id",{value:kf++});this.uuid=R.generateUUID();this.name="";this.image=void 0!==a?a:da.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:da.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=void 0!==d?d:1001;this.magFilter=$/;"	r
mix	js/three.js	/^				var mix = weight \/ currentWeight;$/;"	r
mixFunction	js/three.js	/^				mixFunction = this._lerp;$/;"	r
mixFunction	js/three.js	/^				mixFunction = this._select;$/;"	r
mixFunction	js/three.js	/^				mixFunction = this._slerp;$/;"	r
mixFunction	js/three.js	/^			mixFunction;$/;"	r
mixFunction	js/three.js	/^		this._mixBufferRegion = mixFunction;$/;"	r
mixer	js/three.js	/^			var mixer = this._mixer, now = mixer.time,$/;"	r
mixer	js/three.js	/^		this._mixer = mixer;$/;"	r
ml	js/three.js	/^						for ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {$/;"	r
ml	js/three.js	/^					for ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {$/;"	r
mode	js/three.js	/^			mode = value;$/;"	r
mode	js/three.js	/^			this.loop = mode;$/;"	r
mode	js/three.js	/^		var mode;$/;"	r
modelViewMatrix	js/three.js	/^				modelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),$/;"	r
modelViewMatrix	js/three.js	/^			modelViewMatrix: {$/;"	r
morphAnimationClips	js/three.js	/^					var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );$/;"	r
morphAttribute	js/three.js	/^					var morphAttribute = morphAttributes[ keys[ 0 ] ];$/;"	r
morphAttribute	js/three.js	/^				var morphAttribute = morphAttributes[ name ]; \/\/ morphAttribute: array of Float32BufferAttributes$/;"	r
morphAttributes	js/GLTFLoader.js	/^		var morphAttributes = geometry.morphAttributes;$/;"	r
morphAttributes	js/three.js	/^				var morphAttributes = geometry.morphAttributes;$/;"	r
morphAttributes	js/three.js	/^			this.morphAttributes = {};$/;"	r
morphAttributes	js/three.js	/^			var morphAttributes = geometry.morphAttributes;$/;"	r
morphAttributes	js/three.js	/^			var morphAttributes = source.morphAttributes;$/;"	r
morphAttributes	js/three.js	/^		this.morphAttributes = {};$/;"	r
morphColors	js/three.js	/^					var morphColors = json.morphColors[ 0 ].colors;$/;"	r
morphInfluences	js/three.js	/^							var morphInfluences = this.morphTargetInfluences;$/;"	r
morphInfluences	js/three.js	/^		var morphInfluences = new Float32Array( 8 );$/;"	r
morphNormal	js/three.js	/^					var morphNormal = morphNormals[ j ].vertexNormals[ i ];$/;"	r
morphNormal	js/three.js	/^				var morphNormal = {};$/;"	r
morphNormals	js/GLTFLoader.js	/^				material.morphNormals = true;$/;"	r
morphNormals	js/three.js	/^				morphNormals: material.morphNormals,$/;"	r
morphNormals	js/three.js	/^				var morphNormals = this.morphNormals[ i ];$/;"	r
morphNormals	js/three.js	/^			this.morphNormals = [];$/;"	r
morphNormals	js/three.js	/^			var morphNormals = geometry.morphNormals;$/;"	r
morphNormals	js/three.js	/^			var morphNormals = material.morphNormals && geometry.morphAttributes.normal;$/;"	r
morphNormals	js/three.js	/^			var morphNormals = source.morphNormals;$/;"	r
morphNormals	js/three.js	/^		this.morphNormals = [];$/;"	r
morphNormals	js/three.js	/^		this.morphNormals = false; \/\/ set to use morph normals$/;"	r
morphNormals	js/three.js	/^		this.morphNormals = false;$/;"	r
morphNormals	js/three.js	/^		this.morphNormals = source.morphNormals;$/;"	r
morphNormalsLength	js/three.js	/^			var morphNormalsLength = morphNormals.length;$/;"	r
morphTarget	js/three.js	/^					var morphTarget = morphTargets[ i ];$/;"	r
morphTarget	js/three.js	/^					var morphTarget = morphTargets[ j ].vertices;$/;"	r
morphTarget	js/three.js	/^				var morphTarget = morphTargets[ i ];$/;"	r
morphTarget	js/three.js	/^				var morphTarget = {};$/;"	r
morphTargetDictionary	js/three.js	/^						this.morphTargetDictionary = {};$/;"	r
morphTargetDictionary	js/three.js	/^					this.morphTargetDictionary = {};$/;"	r
morphTargetDictionary	js/three.js	/^				this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );$/;"	r
morphTargetInfluences	js/GLTFLoader.js	/^							skinnedMesh.morphTargetInfluences = mesh.morphTargetInfluences;$/;"	r
morphTargetInfluences	js/three.js	/^							var morphInfluences = this.morphTargetInfluences;$/;"	r
morphTargetInfluences	js/three.js	/^						this.morphTargetInfluences = [];$/;"	r
morphTargetInfluences	js/three.js	/^					this.morphTargetInfluences = [];$/;"	r
morphTargetInfluences	js/three.js	/^				this.morphTargetInfluences = source.morphTargetInfluences.slice();$/;"	r
morphTargetInfluences	js/three.js	/^			var objectInfluences = object.morphTargetInfluences;$/;"	r
morphTargetNames	js/three.js	/^					var morphTargetNames = {};$/;"	r
morphTargetSequence	js/three.js	/^		CreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {$/;"	r
morphTargets	js/GLTFLoader.js	/^		material.morphTargets = true;$/;"	r
morphTargets	js/three.js	/^							var morphTargets = geometry.morphTargets;$/;"	r
morphTargets	js/three.js	/^				morphTargets: material.morphTargets,$/;"	r
morphTargets	js/three.js	/^				morphTargets: useMorphing,$/;"	r
morphTargets	js/three.js	/^				var morphTargets = geometry.morphTargets;$/;"	r
morphTargets	js/three.js	/^				var morphTargets = geometry.morphTargets[ name ];$/;"	r
morphTargets	js/three.js	/^			if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;$/;"	r
morphTargets	js/three.js	/^			this.morphTargets = [];$/;"	r
morphTargets	js/three.js	/^			var morphTargets = geometry.morphTargets;$/;"	r
morphTargets	js/three.js	/^			var morphTargets = material.morphTargets && geometry.morphAttributes.position;$/;"	r
morphTargets	js/three.js	/^			var morphTargets = source.morphTargets;$/;"	r
morphTargets	js/three.js	/^		this.morphTargets = [];$/;"	r
morphTargets	js/three.js	/^		this.morphTargets = false; \/\/ set to use morph targets$/;"	r
morphTargets	js/three.js	/^		this.morphTargets = false;$/;"	r
morphTargets	js/three.js	/^		this.morphTargets = source.morphTargets;$/;"	r
morphTargets	js/three.js	/^		this.morphTargets = {};$/;"	r
morphTargets	js/three.min.js	/^[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function Qd(a){if(0===a.length)return-Infinity;for(var b=a[0],c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}function C(){Object.defineProperty(this,"id",{value:Pf+=2});this.uuid=R.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes=$/;"	r
morphTargets	js/three.min.js	/^null,n,l,c,null))}c=c.children;n=0;for(u=c.length;n<u;n++)e(c[n],g,h,k)}}var f=new ld,g=new K,h=new D,k=new D(c,c),l=new p,q=new p,n=Array(4),u=Array(4),r={},m=[new p(1,0,0),new p(-1,0,0),new p(0,0,1),new p(0,0,-1),new p(0,1,0),new p(0,-1,0)],t=[new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,0,1),new p(0,0,-1)],x=[new ba,new ba,new ba,new ba,new ba,new ba];for(c=0;4!==c;++c){var y=0!==(c&1),B=0!==(c&2),I=new Va({depthPacking:3201,morphTargets:y,skinning:B});n[c]=I;y=new Wa({morphTargets:y,$/;"	r
morphTargetsLength	js/three.js	/^			var morphTargetsLength = morphTargets.length;$/;"	r
morphTargetsNormal	js/three.js	/^				morphTargetsNormal = [];$/;"	r
morphTargetsNormal	js/three.js	/^				this.morphTargets.normal = morphTargetsNormal;$/;"	r
morphTargetsNormal	js/three.js	/^			var morphTargetsNormal;$/;"	r
morphTargetsPosition	js/three.js	/^				morphTargetsPosition = [];$/;"	r
morphTargetsPosition	js/three.js	/^				this.morphTargets.position = morphTargetsPosition;$/;"	r
morphTargetsPosition	js/three.js	/^			var morphTargetsPosition;$/;"	r
morphnormal_vertex	js/three.js	/^		morphnormal_vertex: morphnormal_vertex,$/;"	r
morphnormal_vertex	js/three.js	/^	var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n";$/;"	r
morphtarget_pars_vertex	js/three.js	/^		morphtarget_pars_vertex: morphtarget_pars_vertex,$/;"	r
morphtarget_pars_vertex	js/three.js	/^	var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif";$/;"	r
morphtarget_pars_vertex	js/three.min.js	/^morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n",$/;"	r
morphtarget_vertex	js/three.js	/^		morphtarget_vertex: morphtarget_vertex,$/;"	r
morphtarget_vertex	js/three.js	/^	var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n";$/;"	r
morphtargets	js/three.js	/^			morphtargets = new WebGLMorphtargets( _gl );$/;"	r
moveTo	js/three.js	/^		moveTo: function ( x, y ) {$/;"	r
moveTo	js/three.min.js	/^e=this.v2;b.set(ub(a,c.x,d.x,e.x),ub(a,c.y,d.y,e.y));return b};var se=Object.assign(Object.create(hc.prototype),{fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},moveTo:function(a,b){this.currentPoint.set(a,b)},lineTo:function(a,b){var c=new Ma(this.currentPoint.clone(),new D(a,b));this.curves.push(c);this.currentPoint.set(a,b)},quadraticCurveTo:function(a,b,c,d){a=new yb(this.currentPoint.clone(),new D(a,b),new D(c,d));this.curves.push(a);$/;"	r
msg	js/three.js	/^				var msg = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";$/;"	r
msg	js/three.js	/^				var msg = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";$/;"	r
multiply	js/three.js	/^		multiply: function ( color ) {$/;"	r
multiply	js/three.js	/^		multiply: function ( m ) {$/;"	r
multiply	js/three.js	/^		multiply: function ( m, n ) {$/;"	r
multiply	js/three.js	/^		multiply: function ( q, p ) {$/;"	r
multiply	js/three.js	/^		multiply: function ( v ) {$/;"	r
multiply	js/three.js	/^		multiply: function ( v, w ) {$/;"	r
multiply	js/three.min.js	/^a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a=new X;return function(b){b&&b.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");$/;"	r
multiply	js/three.min.js	/^c.normalize(),a.crossVectors(f,c));a.normalize();b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements;$/;"	r
multiply	js/three.min.js	/^copy:function(a){var b=this.elements;a=a.elements;b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return this},setFromMatrix4:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]);return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),multiply:function(a){return this.multiplyMatrices(this,$/;"	r
multiply	js/three.min.js	/^multiply:function(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},premultiply:function(a){return this.multiplyQuaternions(a,this)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z;a=a._w;var f=b._x,g=b._y,h=b._z;b=b._w;this._x=c*b+a*f+d*h-e*g;this._y=d*b+a*g+e*f-c*h;this._z=e*b+a*h+c*g-d*f;this._w=a*b-c*f-d*g-e*h;this.onChangeCallback();$/;"	r
multiply	js/three.min.js	/^return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x\/=a.x;this.y\/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},applyMatrix3:function(a){var b=this.x,c=this.y;a=a.elements;this.x=a[0]*b+a[3]*c+a[6];this.y=a[1]*b+a[4]*c+a[7];return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=$/;"	r
multiplyMatrices	js/three.js	/^		multiplyMatrices: function ( a, b ) {$/;"	r
multiplyQuaternions	js/three.js	/^		multiplyQuaternions: function ( a, b ) {$/;"	r
multiplyScalar	js/three.js	/^		multiplyScalar: function ( s ) {$/;"	r
multiplyScalar	js/three.js	/^		multiplyScalar: function ( scalar ) {$/;"	r
multiplyScalar	js/three.min.js	/^C+r*L+p*d;b[3]=t*B+x*w+y*E+c*K;b[7]=t*I+x*z+y*H+c*N;b[11]=t*A+x*D+y*M+c*U;b[15]=t*J+x*C+y*L+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToBufferAttribute:function(){var a=new p;return function(b){for(var c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(c,a.x,a.y,a.z);return b}}(),determinant:function(){var a=$/;"	r
multiplyToArray	js/three.js	/^		multiplyToArray: function () {$/;"	r
multiplyVector3	js/three.js	/^		multiplyVector3: function ( vector ) {$/;"	r
multiplyVector3	js/three.js	/^	Quaternion.prototype.multiplyVector3 = function ( vector ) {$/;"	r
multiplyVector3	js/three.min.js	/^multiplyVector3:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(a){console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.");return this.applyToBufferAttribute(a)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});$/;"	r
multiplyVector3Array	js/three.js	/^		multiplyVector3Array: function ( \/* a *\/ ) {$/;"	r
multiplyVector3Array	js/three.min.js	/^return a.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)},crossVector:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},$/;"	r
multiplyVector4	js/three.js	/^		multiplyVector4: function ( vector ) {$/;"	r
multiplyVectors	js/three.js	/^		multiplyVectors: function ( a, b ) {$/;"	r
n	js/three.js	/^					  n = bindings.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^					for ( var i = 0, n = dest.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^					for ( var i = 0, n = values.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^				for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^				for ( var i = 0, n = bindings.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^				for ( var i = 0, n = groups.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^				for ( var i = 0, n = source.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^				for ( var i = 0, n = times.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^				var n = contour.length;$/;"	r
n	js/three.js	/^				var n = srcPlanes.length;$/;"	r
n	js/three.js	/^				var nv = n;$/;"	r
n	js/three.js	/^			for ( var i = 0, n = arguments.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^			for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^			for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^			for ( var i = 0, n = tracks.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^			for ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^			var n = contour.length;$/;"	r
n	js/three.js	/^			var n = new Vector3();$/;"	r
n	js/three.js	/^			var n = times.length;$/;"	r
n	js/three.js	/^		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^		for ( var i = 0, n = seq.length; i !== n; ++ i ) {$/;"	r
n	js/three.js	/^		var n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );$/;"	r
n	js/three.js	/^		var n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );$/;"	r
n	js/three.js	/^		var n = nBlocks * blockSize,$/;"	r
n	js/three.js	/^		var n = v.length,$/;"	r
n	js/three.min.js	/^0,0);g.push(0,0,1);h.push(.5,.5);var n=0;for(k=3;n<=b;n++,k+=3){var u=c+n\/b*d;l.x=a*Math.cos(u);l.y=a*Math.sin(u);f.push(l.x,l.y,l.z);g.push(0,0,1);q.x=(f[k]\/a+1)\/2;q.y=(f[k+1]\/a+1)\/2;h.push(q.x,q.y)}for(k=1;k<=b;k++)e.push(k,k+1,0);this.setIndex(e);this.addAttribute("position",new z(f,3));this.addAttribute("normal",new z(g,3));this.addAttribute("uv",new z(h,2))}function cc(a){Q.call(this);this.type="ShadowMaterial";this.color=new H(0);this.opacity=1;this.transparent=this.lights=!0;this.setValues(a)}$/;"	r
n	js/three.min.js	/^JSON.parse(g);break;default:m=g}window.setTimeout(function(){b&&b(m);e.manager.itemEnd(a)},0)}catch(u){window.setTimeout(function(){d&&d(u);e.manager.itemEnd(a);e.manager.itemError(a)},0)}}else{$a[a]=[];$a[a].push({onLoad:b,onProgress:c,onError:d});var n=new XMLHttpRequest;n.open("GET",a,!0);n.addEventListener("load",function(b){var c=b.target.response;jd.add(a,c);var d=$a[a];delete $a[a];if(200===this.status){for(var f=0,g=d.length;f<g;f++){var h=d[f];if(h.onLoad)h.onLoad(c)}e.manager.itemEnd(a)}else if(0===$/;"	r
n	js/three.min.js	/^c.radius+=l;if(!1!==d.ray.intersectsSphere(c)){a.getInverse(k);b.copy(d.ray).applyMatrix4(a);var l=l\/((this.scale.x+this.scale.y+this.scale.z)\/3),m=l*l,l=new p;if(h.isBufferGeometry){var n=h.index,h=h.attributes.position.array;if(null!==n)for(var u=n.array,n=0,r=u.length;n<r;n++){var v=u[n];l.fromArray(h,3*v);f(l,v)}else for(n=0,u=h.length\/3;n<u;n++)l.fromArray(h,3*n),f(l,n)}else for(l=h.vertices,n=0,u=l.length;n<u;n++)f(l[n],n)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}});$/;"	r
n	js/three.min.js	/^d,e,a,f);a.onAfterRender(M,b,c,d,e,f)}function n(a,b,c){var d=Y.get(a);c=oa.getParameters(a,ua.state,z,b,Fa.numPlanes,Fa.numIntersection,c);var g=oa.getProgramCode(a,c),h=d.program,l=!0;if(void 0===h)a.addEventListener("dispose",e);else if(h.code!==g)f(a);else{if(void 0!==c.shaderID)return;l=!1}l&&(c.shaderID?(h=ib[c.shaderID],d.shader={name:a.type,uniforms:Ea.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}):d.shader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,$/;"	r
n	js/three.min.js	/^d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=f+g,k,l,q=0,n=[],u=new p,m=new p,v=[],t=[],x=[],y=[];for(l=0;l<=c;l++){var B=[],I=l\/c;for(k=0;k<=b;k++){var A=k\/b;u.x=-a*Math.cos(d+A*e)*Math.sin(f+I*g);u.y=a*Math.cos(f+I*g);u.z=a*Math.sin(d+A*e)*Math.sin(f+I*g);t.push(u.x,u.y,u.z);m.set(u.x,u.y,u.z).normalize();x.push(m.x,m.y,m.z);y.push(A,1-I);B.push(q++)}n.push(B)}for(l=0;l<c;l++)for(k=0;k<b;k++)a=n[l][k+1],d=n[l][k],e=n[l+1][k],g=n[l+1][k+1],(0!==l||0<f)&&v.push(a,d,$/;"	r
n	js/three.min.js	/^function e(c,g,h,k){var l;if(!1!==c.visible){if(c.layers.test(g.layers)&&(c.isMesh||c.isLine||c.isPoints)&&c.castShadow&&(!c.frustumCulled||f.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,c.matrixWorld);var n=b.update(c),u=c.material;if(Array.isArray(u))for(var r=n.groups,m=0,B=r.length;m<B;m++){var v=r[m];(l=u[v.materialIndex])&&l.visible&&(l=d(c,l,k,q,h.near,h.far),a.renderBufferDirect(h,null,n,l,c,v))}else u.visible&&(l=d(c,u,k,q,h.near,h.far),a.renderBufferDirect(h,$/;"	r
n	js/three.min.js	/^g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var e=Ha.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);b=[];if(1===f.length){var g=f[0];var h=new zb;h.curves=g.curves;b.push(h);return b}var k=!e(f[0].getPoints()),k=a?!k:k;h=[];var l=[],m=[],n=0;l[n]=void 0;m[n]=[];for(var p=0,r=f.length;p<r;p++){g=f[p];var v=g.getPoints();var t=e(v);(t=a?!t:t)?(!k&&l[n]&&n++,l[n]={s:new zb,p:v},l[n].s.curves=g.curves,k&&n++,m[n]=[]):m[n].push({h:g,p:v[0]})}if(!l[0])return c(f);if(1<l.length){p=$/;"	r
n	js/three.min.js	/^g=void 0!==e.normal?e.normal.array:void 0,h=void 0!==e.color?e.color.array:void 0,k=void 0!==e.uv?e.uv.array:void 0,l=void 0!==e.uv2?e.uv2.array:void 0;void 0!==l&&(this.faceVertexUvs[1]=[]);for(var q=[],n=[],m=[],r=e=0;e<f.length;e+=3,r+=2)c.vertices.push(new p(f[e],f[e+1],f[e+2])),void 0!==g&&q.push(new p(g[e],g[e+1],g[e+2])),void 0!==h&&c.colors.push(new H(h[e],h[e+1],h[e+2])),void 0!==k&&n.push(new D(k[r],k[r+1])),void 0!==l&&m.push(new D(l[r],l[r+1]));var v=a.groups;if(0<v.length)for(e=0;e<v.length;e++)for(var f=$/;"	r
n	js/three.min.js	/^k.length;d++){var g=b[k[d]];for(f=0;f<g.length;f++){var h=f+1;h%=g.length;h=e(a,c,g[f],g[h],!0);if(0<h.length)return!0}}return!1}var h=a.concat(),k=[],l,m;a=[];var q,n=0;for(l=b.length;n<l;n++)k.push(n);var p=0;for(var u=2*k.length;0<k.length;){u--;if(0>u){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}for(m=p;m<h.length;m++){var w=h[m];l=-1;for(n=0;n<k.length;n++){var z=k[n];var D=w.x+":"+w.y+":"+z;if(void 0===a[D]){var C=$/;"	r
n	js/three.min.js	/^k.y,k.z);h.x=q.x+c*k.x;h.y=q.y+c*k.y;h.z=q.z+c*k.z;m.push(h.x,h.y,h.z)}}C.call(this);this.type="TubeBufferGeometry";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var g=a.computeFrenetFrames(b,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;var h=new p,k=new p,l=new D,q=new p,n,u,m=[],v=[],t=[],x=[];for(n=0;n<b;n++)f(n);f(!1===e?b:0);for(n=0;n<=b;n++)for(u=0;u<=d;u++)l.x=n\/b,l.y=u\/d,t.push(l.x,l.y);(function(){for(u=$/;"	r
n	js/three.min.js	/^l!==l[0]))if(f)a=!0;else{b=k*e;for(var m=b-e,n=b+e,l=0;l!==e;++l){var p=d[b+l];if(p!==d[m+l]||p!==d[n+l]){a=!0;break}}}if(a){if(k!==g)for(c[g]=c[k],b=k*e,a=g*e,l=0;l!==e;++l)d[a+l]=d[b+l];++g}}if(0<h){c[g]=c[h];b=h*e;a=g*e;for(l=0;l!==e;++l)d[a+l]=d[b+l];++g}g!==c.length&&(this.times=S.arraySlice(c,0,g),this.values=S.arraySlice(d,0,g*e));return this}};ec.prototype=Object.assign(Object.create(ab),{constructor:ec,ValueTypeName:"vector"});Ed.prototype=Object.assign(Object.create(xa.prototype),{constructor:Ed,$/;"	r
n	js/three.min.js	/^null,n,l,c,null))}c=c.children;n=0;for(u=c.length;n<u;n++)e(c[n],g,h,k)}}var f=new ld,g=new K,h=new D,k=new D(c,c),l=new p,q=new p,n=Array(4),u=Array(4),r={},m=[new p(1,0,0),new p(-1,0,0),new p(0,0,1),new p(0,0,-1),new p(0,1,0),new p(0,-1,0)],t=[new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,0,1),new p(0,0,-1)],x=[new ba,new ba,new ba,new ba,new ba,new ba];for(c=0;4!==c;++c){var y=0!==(c&1),B=0!==(c&2),I=new Va({depthPacking:3201,morphTargets:y,skinning:B});n[c]=I;y=new Wa({morphTargets:y,$/;"	r
n1	js/three.js	/^			var n1 = new Vector3();$/;"	r
n11	js/three.js	/^				n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],$/;"	r
n11	js/three.js	/^				n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],$/;"	r
n11	js/three.js	/^			te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;$/;"	r
n11	js/three.js	/^			te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;$/;"	r
n11	js/three.js	/^			var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];$/;"	r
n12	js/three.js	/^				n12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],$/;"	r
n12	js/three.js	/^				n12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],$/;"	r
n12	js/three.js	/^			te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;$/;"	r
n12	js/three.js	/^		set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {$/;"	r
n12	js/three.js	/^		set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {$/;"	r
n13	js/three.js	/^				n13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],$/;"	r
n13	js/three.js	/^				n13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],$/;"	r
n13	js/three.js	/^			te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;$/;"	r
n14	js/three.js	/^				n14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],$/;"	r
n2	js/three.js	/^			var n2 = new Vector3();$/;"	r
n21	js/three.js	/^			te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;$/;"	r
n21	js/three.js	/^			var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];$/;"	r
n31	js/three.js	/^			te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;$/;"	r
n31	js/three.js	/^			var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];$/;"	r
n41	js/three.js	/^			te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;$/;"	r
n41	js/three.js	/^			var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];$/;"	r
nActions	js/three.js	/^				nActions = this._nActiveActions,$/;"	r
nBindings	js/three.js	/^				nBindings = bindings.length;$/;"	r
nBindings	js/three.js	/^				nBindings = this._nActiveBindings;$/;"	r
nBlocks	js/three.js	/^	function flatten( array, nBlocks, blockSize ) {$/;"	r
nCachedObjects	js/three.js	/^				nCachedObjects = this.nCachedObjects_,$/;"	r
nCachedObjects	js/three.js	/^			for ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {$/;"	r
nCachedObjects	js/three.js	/^			this.nCachedObjects_ = nCachedObjects;$/;"	r
nCachedObjects_	js/three.js	/^				nCachedObjects = this.nCachedObjects_,$/;"	r
nCachedObjects_	js/three.js	/^			for ( var i = this._targetGroup.nCachedObjects_,$/;"	r
nCachedObjects_	js/three.js	/^			this.nCachedObjects_ = nCachedObjects;$/;"	r
nCachedObjects_	js/three.js	/^			var firstValidIndex = this._targetGroup.nCachedObjects_,$/;"	r
nCachedObjects_	js/three.js	/^		this.nCachedObjects_ = 0;			\/\/ threshold$/;"	r
nCachedObjects_	js/three.min.js	/^c)}function pa(a,b,c){this.path=b;this.parsedPath=c||pa.parseTrackName(b);this.node=pa.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function We(){this.uuid=R.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var d=this;this.stats={objects:{get total(){return d._objects.length},$/;"	r
nGlobal	js/three.js	/^				this.numPlanes += nGlobal;$/;"	r
nGlobal	js/three.js	/^				var nGlobal = renderingShadows ? 0 : numGlobalPlanes,$/;"	r
nKeys	js/three.js	/^				nKeys = times.length,$/;"	r
nKeys	js/three.js	/^				nKeys = times.length;$/;"	r
nNormals	js/three.js	/^			nNormals = objGeometry.attributes.normal.count;$/;"	r
nNormals	js/three.js	/^			nNormals = objGeometry.faces.length * 3;$/;"	r
nNormals	js/three.js	/^			nNormals = objGeometry.faces.length;$/;"	r
nNormals	js/three.js	/^		var nNormals = 0;$/;"	r
nObjects	js/three.js	/^				nObjects = objects.length,$/;"	r
nPlanes	js/three.js	/^			scope.numPlanes = nPlanes;$/;"	r
nPlanes	js/three.js	/^			var nPlanes = planes !== null ? planes.length : 0,$/;"	r
nTracks	js/three.js	/^				nTracks = tracks.length,$/;"	r
nTracks	js/three.js	/^			nTracks = tracks.length,$/;"	r
nUvLayers	js/three.js	/^					nUvLayers = 0;$/;"	r
nValues	js/three.js	/^			var nValues = values.length;$/;"	r
nVertexMatrices	js/three.js	/^				var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) \/ 4 );$/;"	r
nVertexUniforms	js/three.js	/^				var nVertexUniforms = capabilities.maxVertexUniforms;$/;"	r
na	js/three.min.js	/^b.uniform1i(m,2),na=N=2)):(b.uniform1i(m,0),na=N=0);for(var D=0,ka=v.length;D<ka;D++)w=v[D],w.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,w.matrixWorld),w.z=-w.modelViewMatrix.elements[14];v.sort(ya);for(var E=[],D=0,ka=v.length;D<ka;D++){w=v[D];var G=w.material;if(!1!==G.visible){w.onBeforeRender(a,p,U,void 0,G,void 0);b.uniform1f(I,G.alphaTest);b.uniformMatrix4fv(u,!1,w.modelViewMatrix.elements);w.matrixWorld.decompose(Ua,M,z);E[0]=z.x;E[1]=z.y;var C=0;p.fog&&G.fog&&(C=na);N!==C&&(b.uniform1i(m,$/;"	r
na	js/three.min.js	/^c.disableUnusedAttributes();c.disable(b.CULL_FACE);c.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,ja);b.vertexAttribPointer(A,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(J,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,ma);b.uniformMatrix4fv(r,!1,U.projectionMatrix.elements);c.activeTexture(b.TEXTURE0);b.uniform1i(q,0);na=N=0;(w=p.fog)?(b.uniform3f(B,w.color.r,w.color.g,w.color.b),w.isFog?(b.uniform1f(x,w.near),b.uniform1f(y,w.far),b.uniform1i(m,1),na=N=1):w.isFogExp2&&(b.uniform1f(t,w.density),$/;"	r
name	js/GLTFLoader.js	/^							skinnedMesh.name = mesh.name;$/;"	r
name	js/GLTFLoader.js	/^						mesh.name = meshDef.name || ( 'mesh_' + meshIndex );$/;"	r
name	js/GLTFLoader.js	/^						node.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );$/;"	r
name	js/GLTFLoader.js	/^						var name = target.node !== undefined ? target.node : target.id; \/\/ NOTE: target.id is deprecated.$/;"	r
name	js/GLTFLoader.js	/^				if ( material.name !== undefined ) _material.name = material.name;$/;"	r
name	js/GLTFLoader.js	/^				if ( scene.name !== undefined ) _scene.name = scene.name;$/;"	r
name	js/GLTFLoader.js	/^				lightNode.name = light.name || ( 'light_' + lightId );$/;"	r
name	js/GLTFLoader.js	/^				normalAttribute.name = attributeName;$/;"	r
name	js/GLTFLoader.js	/^				positionAttribute.name = attributeName;$/;"	r
name	js/GLTFLoader.js	/^				var name = animation.name !== undefined ? animation.name : 'animation_' + animationId;$/;"	r
name	js/GLTFLoader.js	/^			if ( textureDef.name !== undefined ) texture.name = textureDef.name;$/;"	r
name	js/GLTFLoader.js	/^			name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,$/;"	r
name	js/GLTFLoader.js	/^		if ( cameraDef.name !== undefined ) camera.name = cameraDef.name;$/;"	r
name	js/GLTFLoader.js	/^		this.name = EXTENSIONS.KHR_BINARY_GLTF;$/;"	r
name	js/GLTFLoader.js	/^		this.name = EXTENSIONS.KHR_LIGHTS;$/;"	r
name	js/GLTFLoader.js	/^		this.name = EXTENSIONS.KHR_MATERIALS_COMMON;$/;"	r
name	js/three.js	/^							console.error( 'THREE.Loader.createMaterial: Unsupported', name, value );$/;"	r
name	js/three.js	/^							console.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );$/;"	r
name	js/three.js	/^							json.name = value;$/;"	r
name	js/three.js	/^							name = morphAttribute[ m ].name || String( m );$/;"	r
name	js/three.js	/^						name = morphTargets[ m ].name || String( m );$/;"	r
name	js/three.js	/^						name: material.type,$/;"	r
name	js/three.js	/^					bone.name = gbone.name;$/;"	r
name	js/three.js	/^					if ( data.name !== undefined ) geometry.name = data.name;$/;"	r
name	js/three.js	/^					if ( data.name !== undefined ) texture.name = data.name;$/;"	r
name	js/three.js	/^					shadow.map.texture.name = light.name + ".shadowMap";$/;"	r
name	js/three.js	/^					trackName = track.name,$/;"	r
name	js/three.js	/^					var name = parts[ 1 ];$/;"	r
name	js/three.js	/^				if ( data.name !== undefined ) object.name = data.name;$/;"	r
name	js/three.js	/^				morphTarget.name = morphTargets[ i ].name;$/;"	r
name	js/three.js	/^				name: this.name,$/;"	r
name	js/three.js	/^				path = info.name,$/;"	r
name	js/three.js	/^				var name = m[ 1 ];$/;"	r
name	js/three.js	/^			\/\/ console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );$/;"	r
name	js/three.js	/^			if ( json.name !== undefined ) material.name = json.name;$/;"	r
name	js/three.js	/^			if ( this.name !== '' ) data.name = this.name;$/;"	r
name	js/three.js	/^			if ( this.name !== '' ) object.name = this.name;$/;"	r
name	js/three.js	/^			this.name = source.name;$/;"	r
name	js/three.js	/^			var name = info.name;$/;"	r
name	js/three.js	/^			var name, i, l;$/;"	r
name	js/three.js	/^		KeyframeTrackConstructor.apply( this, name, times, values, interpolation );$/;"	r
name	js/three.js	/^		KeyframeTrackConstructor.call( this, name, times, values );$/;"	r
name	js/three.js	/^		KeyframeTrackConstructor.call( this, name, times, values, interpolation );$/;"	r
name	js/three.js	/^		\/\/ this.path = activeInfo.name; \/\/ DEBUG$/;"	r
name	js/three.js	/^		if ( v !== undefined ) this.setValue( gl, name, v );$/;"	r
name	js/three.js	/^		this.name = '';$/;"	r
name	js/three.js	/^		this.name = name;$/;"	r
name	js/three.js	/^		this.renderTarget.texture.name = "CubeCamera";$/;"	r
name	js/three.js	/^		var path = activeInfo.name,$/;"	r
name	js/three.js	/^	 * .setValue( gl, name, value )$/;"	r
name	js/three.js	/^	WebGLUniforms.prototype.setValue = function ( gl, name, value ) {$/;"	r
name	js/three.min.js	/^(e.geometries=d),0<g.length&&(e.materials=g),0<h.length&&(e.textures=h),0<k.length&&(e.images=k));e.object=f;return e},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===b&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;$/;"	r
name	js/three.min.js	/^b.length)throw Error("no keyframes in track named "+a);this.name=a;this.times=S.convertArray(b,this.TimeBufferType);this.values=S.convertArray(c,this.ValueBufferType);this.setInterpolation(d||this.DefaultInterpolation);this.validate();this.optimize()}function ec(a,b,c,d){sb.call(this,a,b,c,d)}function Ed(a,b,c,d){xa.call(this,a,b,c,d)}function Yc(a,b,c,d){sb.call(this,a,b,c,d)}function fc(a,b,c,d){sb.call(this,a,b,c,d)}function Fd(a,b,c,d){sb.call(this,a,b,c,d)}function Gd(a,b,c){sb.call(this,a,b,$/;"	r
nb	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function nb(a){Ia.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.gradientMap=null;this.setValues(a)}function ob(a){Q.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=$/;"	r
nb	js/three.min.js	/^a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};nb.prototype=Object.create(Ia.prototype);nb.prototype.constructor=nb;nb.prototype.isMeshToonMaterial=!0;nb.prototype.copy=function(a){Ia.prototype.copy.call(this,$/;"	r
nbVertices	js/three.js	/^					var nbVertices = vertices.length;$/;"	r
near	js/three.js	/^						uniforms.shadowCameraNear = shadow.camera.near;$/;"	r
near	js/three.js	/^					near = camera.near;$/;"	r
near	js/three.js	/^				this.shadow.camera.near = value;$/;"	r
near	js/three.js	/^				uniforms.fogNear.value = fog.near;$/;"	r
near	js/three.js	/^			cameraL.near = camera.near;$/;"	r
near	js/three.js	/^			cameraR.near = camera.near;$/;"	r
near	js/three.js	/^			data.object.near = this.near;$/;"	r
near	js/three.js	/^			device.depthNear = camera.near;$/;"	r
near	js/three.js	/^			near: this.near,$/;"	r
near	js/three.js	/^			this.near = source.near;$/;"	r
near	js/three.js	/^			var near = this.near,$/;"	r
near	js/three.js	/^		this.near = ( near !== undefined ) ? near : 0.1;$/;"	r
near	js/three.js	/^		this.near = ( near !== undefined ) ? near : 1;$/;"	r
near	js/three.js	/^		this.near = near !== undefined ? near : 0.1;$/;"	r
near	js/three.js	/^		this.near = near || 0;$/;"	r
near	js/three.js	/^	function Fog( color, near, far ) {$/;"	r
near	js/three.min.js	/^c||1}function Ze(a,b,c,d){this.ray=new hb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function $e(a,b){return a.distance-b.distance}function oe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)oe(a[d],b,c,!0)}}function af(a){this.autoStart=$/;"	r
near	js/three.min.js	/^this.near;a.object.far=this.far;a.object.focus=this.focus;a.object.aspect=this.aspect;null!==this.view&&(a.object.view=Object.assign({},this.view));a.object.filmGauge=this.filmGauge;a.object.filmOffset=this.filmOffset;return a}});nd.prototype=Object.assign(Object.create(Y.prototype),{constructor:nd,isArrayCamera:!0});Kb.prototype.isFogExp2=!0;Kb.prototype.clone=function(){return new Kb(this.color.getHex(),this.density)};Kb.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),$/;"	r
near	js/three.min.js	/^updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d\/g,b=b-f.offsetY*c\/h,d=f.width\/g*d,c=f.height\/h*c;f=this.filmOffset;0!==f&&(e+=a*f\/this.getFilmWidth());this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=$/;"	r
near	script.js	/^var near    = 0.1;              \/* near plane *\/$/;"	r
nearDistance	js/three.js	/^					nearDistance: { value: 1 },$/;"	r
nearDistance	js/three.js	/^				result.nearDistance = shadowCameraNear;$/;"	r
nearDistance	js/three.js	/^			uniforms.nearDistance.value = material.nearDistance;$/;"	r
nearDistance	js/three.js	/^		this.nearDistance = 1;$/;"	r
nearDistance	js/three.js	/^		this.nearDistance = source.nearDistance;$/;"	r
nearestPowerOfTwo	js/three.js	/^		nearestPowerOfTwo: function ( value ) {$/;"	r
nearestPowerOfTwo	js/three.min.js	/^return Math.random()},nearestPowerOfTwo:function(a){console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().");return R.floorPowerOfTwo(a)},nextPowerOfTwo:function(a){console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().");return R.ceilPowerOfTwo(a)}});Object.assign(ta.prototype,{flattenToArrayOffset:function(a,b){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(a,b)},$/;"	r
needsUpdate	js/GLTFLoader.js	/^							material.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^						texture.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^					attribute.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^					boneTexture.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^					material.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^					texture.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^					this.targetObject.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				attributes.normal.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				colors.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				material.needsUpdate = false;$/;"	r
needsUpdate	js/three.js	/^				normal.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				position.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				renderTarget.depthTexture.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				scope.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				texture.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				uniform.needsUpdate = numGlobalPlanes > 0;$/;"	r
needsUpdate	js/three.js	/^				uniform.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^				var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||$/;"	r
needsUpdate	js/three.js	/^			position.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^			scope.needsUpdate = false;$/;"	r
needsUpdate	js/three.js	/^			this.needsUpdate = false;$/;"	r
needsUpdate	js/three.js	/^			this.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^			uniform = { value: null, needsUpdate: false };$/;"	r
needsUpdate	js/three.js	/^			uniforms.ambientLightColor.needsUpdate = value;$/;"	r
needsUpdate	js/three.js	/^			uniforms.directionalLights.needsUpdate = value;$/;"	r
needsUpdate	js/three.js	/^			uniforms.hemisphereLights.needsUpdate = value;$/;"	r
needsUpdate	js/three.js	/^			uniforms.pointLights.needsUpdate = value;$/;"	r
needsUpdate	js/three.js	/^			uniforms.rectAreaLights.needsUpdate = value;$/;"	r
needsUpdate	js/three.js	/^			uniforms.spotLights.needsUpdate = value;$/;"	r
needsUpdate	js/three.js	/^		position.needsUpdate = true;$/;"	r
needsUpdate	js/three.js	/^		this.needsUpdate = false;$/;"	r
needsUpdate	js/three.js	/^		this.needsUpdate = true;$/;"	r
needsUpdate	js/three.min.js	/^!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,b)},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=!0}]],$/;"	r
needsUpdate	js/three.min.js	/^a[b]},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=$/;"	r
needsUpdate	js/three.min.js	/^c.reset()}}}function sc(a,b,c,d,e,f,g,h,k){da.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0}function Kf(a,b,c,d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A,J;function ya(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var ja,ma,ga,He,Ua=new p,M=new X,z=new p;this.render=function(v,p,U){if(0!==v.length){if(void 0===ga){var N=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),na=new Uint16Array([0,1,2,0,2,3]);ja=b.createBuffer();ma=b.createBuffer();$/;"	r
needsUpdate	js/three.min.js	/^e=0,f=!1,g=!1,h=new za,k=new ta,l={value:null,needsUpdate:!1};this.uniform=l;this.numIntersection=this.numPlanes=0;this.init=function(a,c,g){var h=0!==a.length||c||0!==e||f;f=c;d=b(a,g,0);e=a.length;return h};this.beginShadows=function(){g=!0;b(null)};this.endShadows=function(){g=!1;a()};this.setState=function(c,h,k,r,m,p){if(!f||null===c||0===c.length||g&&!k)g?b(null):a();else{k=g?0:e;var n=4*k,q=m.clippingState||null;l.value=q;q=b(c,r,n,p);for(c=0;c!==n;++c)q[c]=d[c];m.clippingState=q;this.numIntersection=$/;"	r
negRad	js/three.js	/^				negRad = - sphere.radius,$/;"	r
negRadius	js/three.js	/^			var negRadius = - sphere.radius;$/;"	r
negate	js/three.js	/^		negate: function () {$/;"	r
negx	js/three.js	/^	 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),$/;"	r
negx	js/three.js	/^	 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),$/;"	r
newAction	js/three.js	/^			var newAction = new AnimationAction( this, clipObject, optionalRoot );$/;"	r
newAttributes	js/three.js	/^		var newAttributes = new Uint8Array( maxVertexAttributes );$/;"	r
newShapeHoles	js/three.js	/^			var newShapeHoles = [];$/;"	r
newShapes	js/three.js	/^			var newShapes = [];$/;"	r
newTime	js/three.js	/^				this.oldTime = newTime;$/;"	r
newTime	js/three.js	/^				var newTime = ( typeof performance === 'undefined' ? Date : performance ).now();$/;"	r
newUvs1	js/three.js	/^			if ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;$/;"	r
newUvs1	js/three.js	/^			var newUvs1, newUvs2;$/;"	r
newUvs2	js/three.js	/^			if ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;$/;"	r
newValue	js/three.js	/^					this[ key ] = newValue;$/;"	r
newValue	js/three.js	/^				var newValue = values[ key ];$/;"	r
next	js/three.js	/^					next = new StructuredUniform( id );$/;"	r
next	js/three.js	/^				container = next;$/;"	r
nextHoleIdx	js/three.js	/^					var nextHoleIdx = inHoleIdx + 1;$/;"	r
nextIdx	js/three.js	/^							nextIdx = hIdx + 1; nextIdx %= chkHole.length;$/;"	r
nextIdx	js/three.js	/^						nextIdx = sIdx + 1; nextIdx %= shape.length;$/;"	r
nextIndex	js/three.js	/^			var nextIndex = verticesArray.length \/ 3;$/;"	r
nextPowerOfTwo	js/three.js	/^		nextPowerOfTwo: function ( value ) {$/;"	r
nextShapeIdx	js/three.js	/^					var nextShapeIdx = inShapeIdx + 1;$/;"	r
ng	js/three.min.js	/^reset:function(){for(var b=0;b<p.length;b++)1===p[b]&&(a.disableVertexAttribArray(b),p[b]=0);B={};R=I=null;O={};H=C=J=A=null;n.reset();u.reset();r.reset()}}}function ng(a,b,c){function d(b){if("highp"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return"highp";b="mediump"}return"mediump"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,$/;"	r
node	js/GLTFLoader.js	/^							node = skinnedMeshes[ 0 ];$/;"	r
node	js/GLTFLoader.js	/^						var node = dependencies.nodes[ name ];$/;"	r
node	js/GLTFLoader.js	/^			var node = json.nodes[ nodeId ];$/;"	r
node	js/three.js	/^				this.node = targetObject;$/;"	r
node	js/three.js	/^			this.node = null;$/;"	r
node	js/three.js	/^			var targetObject = this.node,$/;"	r
node	js/three.js	/^		this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;$/;"	r
node	js/three.min.js	/^getValue:function(a,b){this.bind();this.getValue(a,b)},setValue:function(a,b){this.bind();this.setValue(a,b)},bind:function(){var a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;a||(this.node=a=pa.findNode(this.rootNode,b.nodeName)||this.rootNode);this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(a){if(c){var f=b.objectIndex;switch(c){case "materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",$/;"	r
nodeDef	js/GLTFLoader.js	/^					var nodeDef = json.nodes[ nodeIndex ];$/;"	r
nodeDef	js/GLTFLoader.js	/^			var nodeDef = nodes[ nodeIndex ];$/;"	r
nodeId	js/GLTFLoader.js	/^					var nodeId = nodes[ i ];$/;"	r
nodeName	js/three.js	/^						results.nodeName = results.nodeName.substring( 0, lastDot );$/;"	r
nodeName	js/three.js	/^					nodeName: matches[ 2 ],$/;"	r
nodeName	js/three.js	/^				var nodeName = parsedPath.nodeName;$/;"	r
nodeProperty	js/three.js	/^				this.resolvedProperty = nodeProperty;$/;"	r
nodeProperty	js/three.js	/^			var nodeProperty = targetObject[ propertyName ];$/;"	r
nodeRe	js/three.js	/^			var nodeRe = \/([\\w-\\.]+)?\/;$/;"	r
nodes	js/GLTFLoader.js	/^				var nodes = scene.nodes || [];$/;"	r
nodes	js/GLTFLoader.js	/^		var nodes = json.nodes || [];$/;"	r
normal	js/GLTFLoader.js	/^				var normal = geometry.attributes.normal;$/;"	r
normal	js/GLTFLoader.js	/^		morphAttributes.normal = [];$/;"	r
normal	js/three.js	/^								normal = new Vector3($/;"	r
normal	js/three.js	/^						var normal = face.vertexNormals[ j ];$/;"	r
normal	js/three.js	/^					normal = faceVertexNormals[ j ].clone();$/;"	r
normal	js/three.js	/^					this.normals.push( normal, normal, normal );$/;"	r
normal	js/three.js	/^					var normal = face.normal;$/;"	r
normal	js/three.js	/^				attribute = this.attributes.normal;$/;"	r
normal	js/three.js	/^				face.normal = face.__originalFaceNormal;$/;"	r
normal	js/three.js	/^				this.morphTargets.normal = morphTargetsNormal;$/;"	r
normal	js/three.js	/^				var normal = face.normal;$/;"	r
normal	js/three.js	/^				var normal = this.normal.applyMatrix3( normalMatrix ).normalize();$/;"	r
normal	js/three.js	/^				var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();$/;"	r
normal	js/three.js	/^				var normals = this.attributes.normal;$/;"	r
normal	js/three.js	/^				var objNorm = objGeometry.attributes.normal;$/;"	r
normal	js/three.js	/^			normal = new Vector3();$/;"	r
normal	js/three.js	/^			return function normal( a, b, c, optionalTarget ) {$/;"	r
normal	js/three.js	/^			var normal = new Vector3();$/;"	r
normal	js/three.js	/^			var normal = this.attributes.normal;$/;"	r
normal	js/three.js	/^		normal: function ( optionalTarget ) {$/;"	r
normal	js/three.js	/^		normal: function () {$/;"	r
normal	js/three.js	/^		normal: {$/;"	r
normal	js/three.js	/^		this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );$/;"	r
normal	js/three.js	/^		this.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();$/;"	r
normal	js/three.js	/^		var normal = new Vector3();$/;"	r
normal	js/three.js	/^	var lights_physical_pars_fragment = "struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n";$/;"	r
normal	js/three.js	/^	var lights_template = "\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n";$/;"	r
normal	js/three.js	/^	var normal_fragment = "#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n";$/;"	r
normal	js/three.min.js	/^h=d.attributes.normal,p=d=0,r=e.count;p<r;p++)a.set(e.getX(p),e.getY(p),e.getZ(p)).applyMatrix4(f),b.set(h.getX(p),h.getY(p),h.getZ(p)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),g.setXYZ(d,a.x,a.y,a.z),d+=1,g.setXYZ(d,b.x,b.y,b.z),d+=1;g.needsUpdate=!0}}();kc.prototype=Object.create(w.prototype);kc.prototype.constructor=kc;kc.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};kc.prototype.update=function(){var a=new p,b=new p;return function(){this.light.updateMatrixWorld();$/;"	r
normal	js/three.min.js	/^lights_physical_pars_fragment:"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n",$/;"	r
normal	js/three.min.js	/^lights_template:"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n",$/;"	r
normal	js/three.min.js	/^normal_fragment:"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n",$/;"	r
normalArray	js/three.js	/^						var array = object.normalArray;$/;"	r
normalAttribute	js/GLTFLoader.js	/^				normalAttribute = dependencies.accessors[ target.NORMAL ].clone();$/;"	r
normalAttribute	js/GLTFLoader.js	/^				normalAttribute = geometry.attributes.normal.clone();$/;"	r
normalIndex	js/three.js	/^								normalIndex = faces[ offset ++ ] * 3;$/;"	r
normalIndex	js/three.js	/^							normalIndex = faces[ offset ++ ] * 3;$/;"	r
normalMap	js/GLTFLoader.js	/^					uvScaleMap = material.normalMap;$/;"	r
normalMap	js/GLTFLoader.js	/^				material.normalMap = params.normalMap === undefined ? null : params.normalMap;$/;"	r
normalMap	js/GLTFLoader.js	/^				uniforms.normalMap.value = material.normalMap;$/;"	r
normalMap	js/three.js	/^							json.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );$/;"	r
normalMap	js/three.js	/^				data.normalMap = this.normalMap.toJSON( meta ).uuid;$/;"	r
normalMap	js/three.js	/^				normalMap: !! material.normalMap,$/;"	r
normalMap	js/three.js	/^				uniforms.normalMap.value = material.normalMap;$/;"	r
normalMap	js/three.js	/^				uvScaleMap = material.normalMap;$/;"	r
normalMap	js/three.js	/^			normalMap: { value: null },$/;"	r
normalMap	js/three.js	/^		this.normalMap = null;$/;"	r
normalMap	js/three.js	/^		this.normalMap = source.normalMap;$/;"	r
normalMatrix	js/three.js	/^				normalMatrix = new Matrix3().getNormalMatrix( matrix );$/;"	r
normalMatrix	js/three.js	/^				var normalMatrix = new Matrix3().getNormalMatrix( matrix );$/;"	r
normalMatrix	js/three.js	/^				var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );$/;"	r
normalMatrix	js/three.js	/^			normalMatrix: {$/;"	r
normalMatrix	js/three.js	/^			var normalMatrix = new Matrix3().getNormalMatrix( matrix );$/;"	r
normalMatrix	js/three.js	/^			var normalMatrix,$/;"	r
normalMatrix	js/three.js	/^		var normalMatrix = new Matrix3();$/;"	r
normalScale	js/GLTFLoader.js	/^				if ( params.normalScale ) material.normalScale = params.normalScale;$/;"	r
normalScale	js/GLTFLoader.js	/^				materialParams.normalScale = new THREE.Vector2( 1, 1 );$/;"	r
normalScale	js/three.js	/^							json.normalScale = [ value, value ];$/;"	r
normalScale	js/three.js	/^					normalScale = [ normalScale, normalScale ];$/;"	r
normalScale	js/three.js	/^				data.normalScale = this.normalScale.toArray();$/;"	r
normalScale	js/three.js	/^				material.normalScale = new Vector2().fromArray( normalScale );$/;"	r
normalScale	js/three.js	/^				var normalScale = json.normalScale;$/;"	r
normalScale	js/three.js	/^			normalScale: { value: new Vector2( 1, 1 ) }$/;"	r
normalScale	js/three.js	/^		this.normalScale = new Vector2( 1, 1 );$/;"	r
normal_frag	js/three.js	/^		normal_frag: normal_frag,$/;"	r
normal_frag	js/three.js	/^	var normal_frag = "#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n";$/;"	r
normal_frag	js/three.min.js	/^normal_frag:"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n",$/;"	r
normal_fragment	js/three.js	/^		normal_fragment: normal_fragment,$/;"	r
normal_fragment	js/three.js	/^	var normal_fragment = "#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n";$/;"	r
normal_vert	js/three.js	/^		normal_vert: normal_vert,$/;"	r
normal_vert	js/three.js	/^	var normal_vert = "#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n";$/;"	r
normal_vert	js/three.min.js	/^normal_vert:"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n",$/;"	r
normalize	js/three.js	/^		normalize: function () {$/;"	r
normalize	js/three.min.js	/^Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var a=Math.atan2(this.y,this.x);0>a&&(a+=2*Math.PI);return a},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},manhattanDistanceTo:function(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=$/;"	r
normalize	js/three.min.js	/^a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1\/b,c=new K;c.set(b,0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new p,b=new p,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){void 0===$/;"	r
normalizeNormals	js/three.js	/^			return function normalizeNormals() {$/;"	r
normalizeNormals	js/three.js	/^		normalizeNormals: function () {$/;"	r
normalizeNormals	js/three.min.js	/^c[d].array,f=a.attributes[d],g=f.array,h=0,f=f.itemSize*b;h<g.length;h++,f++)e[f]=g[h];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a)},normalizeNormals:function(){var a=new p;return function(){for(var b=this.attributes.normal,c=0,d=b.count;c<d;c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.normalize(),b.setXYZ(c,a.x,a.y,a.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),$/;"	r
normalizeSkinWeights	js/three.js	/^		normalizeSkinWeights: function () {$/;"	r
normalized	js/three.js	/^						var normalized = geometryAttribute.normalized;$/;"	r
normalized	js/three.js	/^					normalized: attribute.normalized$/;"	r
normalized	js/three.js	/^			this.normalized = source.normalized;$/;"	r
normalized	js/three.js	/^		this.normalized = normalized === true;$/;"	r
normalmap	js/three.js	/^				UniformsLib.normalmap,$/;"	r
normalmap	js/three.js	/^		normalmap: {$/;"	r
normalmap_pars_fragment	js/three.js	/^		normalmap_pars_fragment: normalmap_pars_fragment,$/;"	r
normalmap_pars_fragment	js/three.js	/^	var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n";$/;"	r
normalmap_pars_fragment	js/three.min.js	/^normalmap_pars_fragment:"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n",$/;"	r
normals	js/three.js	/^					morphTarget.normals = [];$/;"	r
normals	js/three.js	/^					normals = json.normals,$/;"	r
normals	js/three.js	/^				normals: normals,$/;"	r
normals	js/three.js	/^				var normals = attributes.normal.array;$/;"	r
normals	js/three.js	/^				var normals = new Float32Array( geometry.normals.length * 3 );$/;"	r
normals	js/three.js	/^				var normals = this.attributes.normal;$/;"	r
normals	js/three.js	/^			\/\/ vertices, normals, uvs$/;"	r
normals	js/three.js	/^			data.data.normals = normals;$/;"	r
normals	js/three.js	/^			var normals = [];$/;"	r
normals	js/three.js	/^			var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;$/;"	r
normals	js/three.js	/^			var normals = this.attributes.normal.array;$/;"	r
normals	js/three.js	/^		this.normals = [];$/;"	r
normals	js/three.js	/^		this.normals = bufferGeometry.normals;$/;"	r
normals	js/three.js	/^		this.normals = frames.normals;$/;"	r
normals	js/three.js	/^		var normals = [];$/;"	r
normals	js/three.js	/^	 *  frames: <Object> \/\/ containing arrays of tangents, normals, binormals$/;"	r
normals	js/three.min.js	/^e[k-1].clone(),f[k]=f[k-1].clone(),g.crossVectors(d[k-1],d[k]),g.length()>Number.EPSILON&&(g.normalize(),c=Math.acos(R.clamp(d[k-1].dot(d[k]),-1,1)),e[k].applyMatrix4(h.makeRotationAxis(g,c))),f[k].crossVectors(d[k],e[k]);if(!0===b)for(c=Math.acos(R.clamp(e[0].dot(e[a]),-1,1)),c\/=a,0<d[0].dot(g.crossVectors(e[0],e[a]))&&(c=-c),k=1;k<=a;k++)e[k].applyMatrix4(h.makeRotationAxis(d[k],c*k)),f[k].crossVectors(d[k],e[k]);return{tangents:d,normals:e,binormals:f}}});Ma.prototype=Object.create(ca.prototype);$/;"	r
normalsHash	js/three.js	/^			var normalsHash = {};$/;"	r
normalsNeedUpdate	js/three.js	/^				direct.normalsNeedUpdate = geometry.normalsNeedUpdate;$/;"	r
normalsNeedUpdate	js/three.js	/^				geometry.normalsNeedUpdate = false;$/;"	r
normalsNeedUpdate	js/three.js	/^				this.normalsNeedUpdate = true;$/;"	r
normalsNeedUpdate	js/three.js	/^			this.normalsNeedUpdate = geometry.normalsNeedUpdate;$/;"	r
normalsNeedUpdate	js/three.js	/^			this.normalsNeedUpdate = source.normalsNeedUpdate;$/;"	r
normalsNeedUpdate	js/three.js	/^			this.normalsNeedUpdate = true;$/;"	r
normalsNeedUpdate	js/three.js	/^		this.normalsNeedUpdate = false;$/;"	r
now	js/three.js	/^			times[ 0 ] = now; 				values[ 0 ] = weightNow;$/;"	r
now	js/three.js	/^			times[ 0 ] = now;$/;"	r
npts	js/three.js	/^			var npts = [ this.currentPoint.clone() ].concat( pts );$/;"	r
null	js/GLTFLoader.js	/^				material.alphaMap = null;$/;"	r
null	js/GLTFLoader.js	/^				material.displacementMap = null;$/;"	r
null	js/GLTFLoader.js	/^				material.lightMap = null;$/;"	r
null	js/GLTFLoader.js	/^		this.body = null;$/;"	r
null	js/GLTFLoader.js	/^		this.content = null;$/;"	r
null	js/three.js	/^								_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );$/;"	r
null	js/three.js	/^						_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );$/;"	r
null	js/three.js	/^					_currentArrayCamera = null;$/;"	r
null	js/three.js	/^					action._byClipCacheIndex = null;$/;"	r
null	js/three.js	/^					action._cacheIndex = null;$/;"	r
null	js/three.js	/^					currentColorMask = null;$/;"	r
null	js/three.js	/^					currentDepthClear = null;$/;"	r
null	js/three.js	/^					currentDepthFunc = null;$/;"	r
null	js/three.js	/^					currentDepthMask = null;$/;"	r
null	js/three.js	/^					currentRenderList.push( object, null, object.material, _vector3.z, null );$/;"	r
null	js/three.js	/^					currentStencilClear = null;$/;"	r
null	js/three.js	/^					currentStencilFail = null;$/;"	r
null	js/three.js	/^					currentStencilFunc = null;$/;"	r
null	js/three.js	/^					currentStencilFuncMask = null;$/;"	r
null	js/three.js	/^					currentStencilMask = null;$/;"	r
null	js/three.js	/^					currentStencilRef = null;$/;"	r
null	js/three.js	/^					currentStencilZFail = null;$/;"	r
null	js/three.js	/^					currentStencilZPass = null;$/;"	r
null	js/three.js	/^				currentBlendDst = null;$/;"	r
null	js/three.js	/^				currentBlendDstAlpha = null;$/;"	r
null	js/three.js	/^				currentBlendEquation = null;$/;"	r
null	js/three.js	/^				currentBlendEquationAlpha = null;$/;"	r
null	js/three.js	/^				currentBlendSrc = null;$/;"	r
null	js/three.js	/^				currentBlendSrcAlpha = null;$/;"	r
null	js/three.js	/^				dstArray = null;$/;"	r
null	js/three.js	/^				dstPlanes = null;$/;"	r
null	js/three.js	/^				object.parent = null;$/;"	r
null	js/three.js	/^				prototypeAction = null;$/;"	r
null	js/three.js	/^				renderTarget = null;$/;"	r
null	js/three.js	/^				renderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );$/;"	r
null	js/three.js	/^				return this.intersectBox( box, v ) !== null;$/;"	r
null	js/three.js	/^				this._startTime = null; \/\/ unschedule$/;"	r
null	js/three.js	/^				this._timeScaleInterpolant = null;$/;"	r
null	js/three.js	/^				this._weightInterpolant = null;$/;"	r
null	js/three.js	/^				this.filter = null;$/;"	r
null	js/three.js	/^				var json = null;$/;"	r
null	js/three.js	/^			_currentArrayCamera = null,$/;"	r
null	js/three.js	/^			_currentCamera = null,$/;"	r
null	js/three.js	/^			_currentCamera = null;$/;"	r
null	js/three.js	/^			_currentFramebuffer = null,$/;"	r
null	js/three.js	/^			_currentRenderTarget = null,$/;"	r
null	js/three.js	/^			_currentScissorTest = null,$/;"	r
null	js/three.js	/^			action._byClipCacheIndex = null;$/;"	r
null	js/three.js	/^			action._cacheIndex = null;$/;"	r
null	js/three.js	/^			compressedTextureFormats = null;$/;"	r
null	js/three.js	/^			currentBlending = null;$/;"	r
null	js/three.js	/^			currentCullFace = null;$/;"	r
null	js/three.js	/^			currentFlipSided = null;$/;"	r
null	js/three.js	/^			currentProgram = null;$/;"	r
null	js/three.js	/^			currentTextureSlot = null;$/;"	r
null	js/three.js	/^			globalState = null,$/;"	r
null	js/three.js	/^			this._startTime = null;	\/\/ forget scheduling$/;"	r
null	js/three.js	/^			this.boundingBox = null;$/;"	r
null	js/three.js	/^			this.boundingSphere = null;$/;"	r
null	js/three.js	/^			this.cacheLengths = null;$/;"	r
null	js/three.js	/^			this.index = null;$/;"	r
null	js/three.js	/^			this.node = null;$/;"	r
null	js/three.js	/^			var currentColorMask = null;$/;"	r
null	js/three.js	/^			var currentDepthClear = null;$/;"	r
null	js/three.js	/^			var currentDepthFunc = null;$/;"	r
null	js/three.js	/^			var currentDepthMask = null;$/;"	r
null	js/three.js	/^			var currentStencilClear = null;$/;"	r
null	js/three.js	/^			var currentStencilFail = null;$/;"	r
null	js/three.js	/^			var currentStencilFunc = null;$/;"	r
null	js/three.js	/^			var currentStencilFuncMask = null;$/;"	r
null	js/three.js	/^			var currentStencilMask = null;$/;"	r
null	js/three.js	/^			var currentStencilRef = null;$/;"	r
null	js/three.js	/^			var currentStencilZFail = null;$/;"	r
null	js/three.js	/^			var currentStencilZPass = null;$/;"	r
null	js/three.js	/^			var framebuffer = null;$/;"	r
null	js/three.js	/^			var prevTime = null;$/;"	r
null	js/three.js	/^			var result = null;$/;"	r
null	js/three.js	/^		Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );$/;"	r
null	js/three.js	/^		Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );$/;"	r
null	js/three.js	/^		this._byClipCacheIndex = null;		\/\/ for the memory manager$/;"	r
null	js/three.js	/^		this._cacheIndex = null;			\/\/ for the memory manager$/;"	r
null	js/three.js	/^		this._parser = null;$/;"	r
null	js/three.js	/^		this._startTime = null;$/;"	r
null	js/three.js	/^		this._timeScaleInterpolant = null;$/;"	r
null	js/three.js	/^		this._weightInterpolant = null;$/;"	r
null	js/three.js	/^		this.alphaMap = null;$/;"	r
null	js/three.js	/^		this.aoMap = null;$/;"	r
null	js/three.js	/^		this.background = null;$/;"	r
null	js/three.js	/^		this.blendDstAlpha = null;$/;"	r
null	js/three.js	/^		this.blendEquationAlpha = null;$/;"	r
null	js/three.js	/^		this.blendSrcAlpha = null;$/;"	r
null	js/three.js	/^		this.boundingBox = null;$/;"	r
null	js/three.js	/^		this.boundingSphere = null;$/;"	r
null	js/three.js	/^		this.buffer = null;$/;"	r
null	js/three.js	/^		this.bumpMap = null;$/;"	r
null	js/three.js	/^		this.clippingPlanes = null;$/;"	r
null	js/three.js	/^		this.context = null;$/;"	r
null	js/three.js	/^		this.currentPath = null;$/;"	r
null	js/three.js	/^		this.displacementMap = null;$/;"	r
null	js/three.js	/^		this.emissiveMap = null;$/;"	r
null	js/three.js	/^		this.envMap = null;$/;"	r
null	js/three.js	/^		this.filter = null;$/;"	r
null	js/three.js	/^		this.fog = null;$/;"	r
null	js/three.js	/^		this.gradientMap = null;$/;"	r
null	js/three.js	/^		this.index = null;$/;"	r
null	js/three.js	/^		this.lightMap = null;$/;"	r
null	js/three.js	/^		this.map = null;$/;"	r
null	js/three.js	/^		this.metalnessMap = null;$/;"	r
null	js/three.js	/^		this.normalMap = null;$/;"	r
null	js/three.js	/^		this.onUpdate = null;$/;"	r
null	js/three.js	/^		this.overrideMaterial = null;$/;"	r
null	js/three.js	/^		this.parent = null;$/;"	r
null	js/three.js	/^		this.precision = null; \/\/ override the renderer's default precision for this material$/;"	r
null	js/three.js	/^		this.roughnessMap = null;$/;"	r
null	js/three.js	/^		this.specularMap = null;$/;"	r
null	js/three.js	/^		this.view = null;$/;"	r
null	js/three.js	/^		var compressedTextureFormats = null;$/;"	r
null	js/three.js	/^		var currentBlendDst = null;$/;"	r
null	js/three.js	/^		var currentBlendDstAlpha = null;$/;"	r
null	js/three.js	/^		var currentBlendEquation = null;$/;"	r
null	js/three.js	/^		var currentBlendEquationAlpha = null;$/;"	r
null	js/three.js	/^		var currentBlendSrc = null;$/;"	r
null	js/three.js	/^		var currentBlendSrcAlpha = null;$/;"	r
null	js/three.js	/^		var currentBlending = null;$/;"	r
null	js/three.js	/^		var currentCullFace = null;$/;"	r
null	js/three.js	/^		var currentFlipSided = null;$/;"	r
null	js/three.js	/^		var currentLineWidth = null;$/;"	r
null	js/three.js	/^		var currentPolygonOffsetFactor = null;$/;"	r
null	js/three.js	/^		var currentPolygonOffsetUnits = null;$/;"	r
null	js/three.js	/^		var currentProgram = null;$/;"	r
null	js/three.js	/^		var currentRenderList = null;$/;"	r
null	js/three.js	/^		var currentTextureSlot = null;$/;"	r
null	js/three.js	/^		var device = null;$/;"	r
null	js/three.js	/^		var frameData = null;$/;"	r
null	js/three.js	/^		var onAnimationFrame = null;$/;"	r
null	js/three.min.js	/^!1;return function(b,c){b&&b.isWebGLRenderTargetCube&&(a||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),a=!0),b=b.texture);b&&b.isCubeTexture||Array.isArray(b.image)&&6===b.image.length?S.setTextureCube(b,c):S.setTextureCubeDynamic(b,c)}}();this.getRenderTarget=function(){return ka};this.setRenderTarget=function(a){(ka=a)&&void 0===Y.get(a).__webglFramebuffer&&S.setupRenderTarget(a);var b=null,c=!1;a?(b=Y.get(a).__webglFramebuffer,$/;"	r
null	js/three.min.js	/^"canvas"),x=void 0!==a.context?a.context:null,y=void 0!==a.alpha?a.alpha:!1,B=void 0!==a.depth?a.depth:!0,I=void 0!==a.stencil?a.stencil:!0,A=void 0!==a.antialias?a.antialias:!1,J=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,w=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ja=[],z=[],D=null,C=[],Ua=[];this.domElement=t;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=$/;"	r
null	js/three.min.js	/^1)},getFilmHeight:function(){return this.filmGauge\/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a\/b;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},$/;"	r
null	js/three.min.js	/^U=null,K=null,L=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(\/^WebGL\\ ([0-9])\/.exec(a.getParameter(a.VERSION))[1]),Z=1<=parseFloat(m),R=null,O={},Q=new ba,G=new ba,W={};W[a.TEXTURE_2D]=d(a.TEXTURE_2D,a.TEXTURE_2D,1);W[a.TEXTURE_CUBE_MAP]=d(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6);n.setClear(0,0,0,1);u.setClear(1);r.setClear(0);e(a.DEPTH_TEST);u.setFunc(3);h(!1);k(1);e(a.CULL_FACE);e(a.BLEND);g(1);return{buffers:{color:n,depth:u,stencil:r},initAttributes:function(){for(var a=$/;"	r
null	js/three.min.js	/^[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function Qd(a){if(0===a.length)return-Infinity;for(var b=a[0],c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}function C(){Object.defineProperty(this,"id",{value:Pf+=2});this.uuid=R.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes=$/;"	r
null	js/three.min.js	/^a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.dithering=a.dithering;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.userData=JSON.parse(JSON.stringify(a.userData));this.clipShadows=a.clipShadows;this.clipIntersection=a.clipIntersection;a=a.clippingPlanes;var b=null;if(null!==a)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=$/;"	r
null	js/three.min.js	/^b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSprite:function(){var a=new Da;return function(b){a.center.set(0,0,0);a.radius=.7071067811865476;a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new p,b=$/;"	r
null	js/three.min.js	/^b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,b){var c=b||this._root,d=c.uuid,c="string"===typeof a?ra.findByName(c,a):a;a=null!==c?c.uuid:a;var e=this._actionsByClip[a],f=null;if(void 0!==e){f=e.actionByRoot[d];if(void 0!==f)return f;f=e.knownActions[0];null===c&&(c=f._clip)}if(null===c)return null;b=new Xe(this,c,b);this._bindAction(b,f);this._addInactiveAction(b,a,d);return b},existingAction:function(a,b){var c=b||this._root;b=c.uuid;c="string"===typeof a?ra.findByName(c,$/;"	r
null	js/three.min.js	/^e.copy(u.ray).applyMatrix4(d),null===t.boundingBox||!1!==e.intersectsBox(t.boundingBox)))){var w;if(t.isBufferGeometry){var y=t.index,I=t.attributes.position,B=t.attributes.uv,z;if(null!==y){var D=0;for(z=y.count;D<z;D+=3){t=y.getX(D);var C=y.getX(D+1);var E=y.getX(D+2);if(w=c(this,u,e,I,B,t,C,E))w.faceIndex=Math.floor(D\/3),p.push(w)}}else if(void 0!==I)for(D=0,z=I.count;D<z;D+=3)if(t=D,C=D+1,E=D+2,w=c(this,u,e,I,B,t,C,E))w.index=t,p.push(w)}else if(t.isGeometry){var B=Array.isArray(y);D=t.vertices;$/;"	r
null	js/three.min.js	/^e:new H;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}function L(){Object.defineProperty(this,"id",{value:Of+=2});this.uuid=R.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=$/;"	r
null	js/three.min.js	/^function dc(a){Aa.call(this,a);this.type="RawShaderMaterial"}function La(a){Q.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new H(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=$/;"	r
null	js/three.min.js	/^g)},render:function(b,d,u,r){d=d.background;null===d?e(f,g):d&&d.isColor&&(e(d,1),r=!0);(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil);d&&d.isCubeTexture?(void 0===l&&(l=new qa(new fb(1,1,1),new Aa({uniforms:ib.cube.uniforms,vertexShader:ib.cube.vertexShader,fragmentShader:ib.cube.fragmentShader,side:1,depthTest:!0,depthWrite:!1,fog:!1})),l.geometry.removeAttribute("normal"),l.geometry.removeAttribute("uv"),l.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},$/;"	r
null	js/three.min.js	/^new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(r,2))}function va(a){Q.call(this);this.type="MeshBasicMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.lights=this.morphTargets=this.skinning=$/;"	r
null	js/three.min.js	/^null,n,l,c,null))}c=c.children;n=0;for(u=c.length;n<u;n++)e(c[n],g,h,k)}}var f=new ld,g=new K,h=new D,k=new D(c,c),l=new p,q=new p,n=Array(4),u=Array(4),r={},m=[new p(1,0,0),new p(-1,0,0),new p(0,0,1),new p(0,0,-1),new p(0,1,0),new p(0,-1,0)],t=[new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,0,1),new p(0,0,-1)],x=[new ba,new ba,new ba,new ba,new ba,new ba];for(c=0;4!==c;++c){var y=0!==(c&1),B=0!==(c&2),I=new Va({depthPacking:3201,morphTargets:y,skinning:B});n[c]=I;y=new Wa({morphTargets:y,$/;"	r
null	js/three.min.js	/^null;this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.overdraw=0;this.visible=!0;this.userData={};this.needsUpdate=!0}function Va(a){Q.call(this);this.type="MeshDepthMaterial";this.depthPacking=3200;this.morphTargets=this.skinning=!1;this.displacementMap=$/;"	r
null	js/three.min.js	/^null;try{f=JSON.parse(c)}catch(h){void 0!==d&&d(h);console.error("THREE:ObjectLoader: Can't parse "+a+".",h.message);return}c=f.metadata;void 0===c||void 0===c.type||"geometry"===c.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+a+". Use THREE.JSONLoader instead."):e.parse(f,b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==$/;"	r
null	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
null	js/three.min.js	/^return this}b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:"removed"}),this.children.splice(b,1));return this},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=a||new p;this.updateMatrixWorld(!0);$/;"	r
null	js/three.min.js	/^this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.setValues(a)}function Wa(a){Q.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new p;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.lights=this.fog=!1;this.setValues(a)}function Na(a,b){this.min=void 0!==$/;"	r
null	js/three.min.js	/^this.color=new H(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)}function Bc(a){w.call(this);this.type="Sprite";this.material=void 0!==a?a:new Ya}function Cc(){w.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Dc(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),$/;"	r
null	js/three.min.js	/^this.filter=null}function ic(a){w.call(this);this.type="Audio";this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=!1;this.offset=this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this.filters=[]}function he(a){ic.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function ie(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=$/;"	r
null	js/three.min.js	/^this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)}function Mb(a,b){w.call(this);this.type="Points";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new Ba({color:16777215*Math.random()})}function Ec(){w.call(this);this.type="Group"}function sd(a,b,c,d,e,f,g,h,k){function l(){var a=q.image;a.readyState>=a.HAVE_CURRENT_DATA&&(q.needsUpdate=!0);requestAnimationFrame(l)}da.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var q=this;requestAnimationFrame(l)}$/;"	r
null	js/three.min.js	/^{};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}}function Hb(a,b,c,d,e,f){L.call(this);this.type="BoxGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};this.fromBufferGeometry(new fb(a,b,c,d,e,f));this.mergeVertices()}function fb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,m,ya,ja,ma){var B=f\/ya,v=g\/ja,t=f\/2,x=g\/2,I=m\/2;g=ya+1;var A=ja+1,y=f=0,J,w,z=new p;for(w=0;w<A;w++){var D=w*v-x;for(J=0;J<g;J++)z[a]=$/;"	r
numClipIntersection	js/three.js	/^				numClipIntersection: nClipIntersection,$/;"	r
numClippingPlanes	js/three.js	/^				materialProperties.numClippingPlanes = _clipping.numPlanes;$/;"	r
numClippingPlanes	js/three.js	/^				numClippingPlanes: nClipPlanes,$/;"	r
numDirLights	js/three.js	/^				numDirLights: lights.directional.length,$/;"	r
numGlobalPlanes	js/three.js	/^			numGlobalPlanes = 0,$/;"	r
numGlobalPlanes	js/three.js	/^			numGlobalPlanes = planes.length;$/;"	r
numGlobalPlanes	js/three.js	/^			scope.numPlanes = numGlobalPlanes;$/;"	r
numHemiLights	js/three.js	/^				numHemiLights: lights.hemi.length,$/;"	r
numIntersection	js/three.js	/^				materialProperties.numIntersection = _clipping.numIntersection;$/;"	r
numIntersection	js/three.js	/^				this.numIntersection = clipIntersection ? this.numPlanes : 0;$/;"	r
numIntersection	js/three.js	/^			scope.numIntersection = 0;$/;"	r
numIntersection	js/three.js	/^		this.numIntersection = 0;$/;"	r
numMorphTargets	js/three.js	/^			var numMorphTargets = morphTargetSequence.length;$/;"	r
numPlanes	js/three.js	/^				materialProperties.numClippingPlanes = _clipping.numPlanes;$/;"	r
numPlanes	js/three.js	/^			scope.numPlanes = nPlanes;$/;"	r
numPlanes	js/three.js	/^			scope.numPlanes = numGlobalPlanes;$/;"	r
numPlanes	js/three.js	/^			var numPlanes = _clipping.numPlanes;$/;"	r
numPlanes	js/three.js	/^		this.numPlanes = 0;$/;"	r
numPlanes	js/three.min.js	/^Fa.numPlanes,d.numIntersection=Fa.numIntersection,c.clippingPlanes=Fa.uniform;d.fog=b;d.lightsHash=ua.state.hash;a.lights&&(c.ambientLightColor.value=ua.state.ambient,c.directionalLights.value=ua.state.directional,c.spotLights.value=ua.state.spot,c.rectAreaLights.value=ua.state.rectArea,c.pointLights.value=ua.state.point,c.hemisphereLights.value=ua.state.hemi,c.directionalShadowMap.value=ua.state.directionalShadowMap,c.directionalShadowMatrix.value=ua.state.directionalShadowMatrix,c.spotShadowMap.value=$/;"	r
numPointLights	js/three.js	/^				numPointLights: lights.point.length,$/;"	r
numRectAreaLights	js/three.js	/^				numRectAreaLights: lights.rectArea.length,$/;"	r
numSpotLights	js/three.js	/^				numSpotLights: lights.spot.length,$/;"	r
numSupportedMorphNormals	js/three.js	/^				material.numSupportedMorphNormals = 0;$/;"	r
numSupportedMorphTargets	js/three.js	/^				material.numSupportedMorphTargets = 0;$/;"	r
numberOfVertices	js/three.js	/^		var numberOfVertices = 0;$/;"	r
nv	js/three.js	/^				var nv = n;$/;"	r
nx	js/three.js	/^						array[ i + 0 ] = nx;$/;"	r
nx	js/three.js	/^						array[ i + 3 ] = nx;$/;"	r
nx	js/three.js	/^						array[ i + 6 ] = nx;$/;"	r
nx	js/three.js	/^						var nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) \/ 3;$/;"	r
ny	js/three.js	/^						array[ i + 1 ] = ny;$/;"	r
ny	js/three.js	/^						array[ i + 4 ] = ny;$/;"	r
ny	js/three.js	/^						array[ i + 7 ] = ny;$/;"	r
ny	js/three.js	/^						var ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) \/ 3;$/;"	r
nz	js/three.js	/^						array[ i + 2 ] = nz;$/;"	r
nz	js/three.js	/^						array[ i + 5 ] = nz;$/;"	r
nz	js/three.js	/^						array[ i + 8 ] = nz;$/;"	r
nz	js/three.js	/^						var nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) \/ 3;$/;"	r
o	js/three.js	/^				var o = objectOrClipArray;$/;"	r
o1	js/three.js	/^				o1 = i1 * stride,		o0 = o1 - stride,$/;"	r
oP	js/three.js	/^				oP = this._offsetPrev, 	oN = this._offsetNext,$/;"	r
oa	js/three.min.js	/^this.setValues(a)}function oa(a,b,c){if(1===c)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new P(a,b);w.call(this);this.type="Line";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new T({color:16777215*Math.random()})}function P(a,b){oa.call(this,a,b);this.type="LineSegments"}function rd(a,b){oa.call(this,a,b);this.type="LineLoop"}function Ba(a){Q.call(this);this.type="PointsMaterial";this.color=new H(16777215);$/;"	r
ob	js/three.min.js	/^a);this.gradientMap=a.gradientMap;return this};ob.prototype=Object.create(Q.prototype);ob.prototype.constructor=ob;ob.prototype.isMeshNormalMaterial=!0;ob.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;$/;"	r
obj	js/three.js	/^			var obj = new Object3D();$/;"	r
obj	js/three.js	/^	 * .set( gl, obj, prop )$/;"	r
obj	js/three.js	/^	 * .setOptional( gl, obj, prop )$/;"	r
objGeometry	js/three.js	/^			var objGeometry = this.object.geometry;$/;"	r
objGeometry	js/three.js	/^		var objGeometry = this.object.geometry;$/;"	r
objNorm	js/three.js	/^				var objNorm = objGeometry.attributes.normal;$/;"	r
objPos	js/three.js	/^				var objPos = objGeometry.attributes.position;$/;"	r
object	js/GLTFLoader.js	/^				objects[ key ] = object;$/;"	r
object	js/three.js	/^								object: this$/;"	r
object	js/three.js	/^							object = new Mesh( geometry, material );$/;"	r
object	js/three.js	/^							object = new SkinnedMesh( geometry, material );$/;"	r
object	js/three.js	/^							object: object$/;"	r
object	js/three.js	/^							object: this$/;"	r
object	js/three.js	/^						object = new AmbientLight( data.color, data.intensity );$/;"	r
object	js/three.js	/^						object = new DirectionalLight( data.color, data.intensity );$/;"	r
object	js/three.js	/^						object = new Group();$/;"	r
object	js/three.js	/^						object = new HemisphereLight( data.color, data.groundColor, data.intensity );$/;"	r
object	js/three.js	/^						object = new LOD();$/;"	r
object	js/three.js	/^						object = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );$/;"	r
object	js/three.js	/^						object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );$/;"	r
object	js/three.js	/^						object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );$/;"	r
object	js/three.js	/^						object = new Object3D();$/;"	r
object	js/three.js	/^						object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );$/;"	r
object	js/three.js	/^						object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );$/;"	r
object	js/three.js	/^						object = new PointLight( data.color, data.intensity, data.distance, data.decay );$/;"	r
object	js/three.js	/^						object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );$/;"	r
object	js/three.js	/^						object = new RectAreaLight( data.color, data.intensity, data.width, data.height );$/;"	r
object	js/three.js	/^						object = new Scene();$/;"	r
object	js/three.js	/^						object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );$/;"	r
object	js/three.js	/^						object = new Sprite( getMaterial( data.material ) );$/;"	r
object	js/three.js	/^					object: level.object.uuid,$/;"	r
object	js/three.js	/^					object: object$/;"	r
object	js/three.js	/^					object: object,$/;"	r
object	js/three.js	/^					object: this$/;"	r
object	js/three.js	/^					objects[ firstActiveIndex ] = object;$/;"	r
object	js/three.js	/^					objects[ lastCachedIndex ] = object;$/;"	r
object	js/three.js	/^				p_uniforms.setOptional( _gl, object, 'bindMatrix' );$/;"	r
object	js/three.js	/^				p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );$/;"	r
object	js/three.js	/^				renderItem.object = object;$/;"	r
object	js/three.js	/^				var object = arguments[ i ],$/;"	r
object	js/three.js	/^				var object = child.getObjectByProperty( name, value );$/;"	r
object	js/three.js	/^				var object = objects[ i ];$/;"	r
object	js/three.js	/^				var object = renderItem.object;$/;"	r
object	js/three.js	/^				var object = scope.parse( json, texturePath );$/;"	r
object	js/three.js	/^				var object = this;$/;"	r
object	js/three.js	/^				var object;$/;"	r
object	js/three.js	/^			\/\/ console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );$/;"	r
object	js/three.js	/^			levels.splice( l, 0, { distance: distance, object: object } );$/;"	r
object	js/three.js	/^			output.object = object;$/;"	r
object	js/three.js	/^			var object = this.parseObject( json.object, geometries, materials );$/;"	r
object	js/three.js	/^			var object = {};$/;"	r
object	js/three.js	/^		this.object = object;$/;"	r
object	js/three.js	/^		this.root = object;$/;"	r
object	js/three.js	/^	WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {$/;"	r
object3DId	js/three.js	/^	var object3DId = 0;$/;"	r
objectIndex	js/three.js	/^								objectIndex = i;$/;"	r
objectIndex	js/three.js	/^					objectIndex: matches[ 4 ],$/;"	r
objectIndex	js/three.js	/^				var objectIndex = parsedPath.objectIndex;$/;"	r
objectInfluences	js/three.js	/^			var objectInfluences = object.morphTargetInfluences;$/;"	r
objectName	js/three.js	/^						results.objectName = objectName;$/;"	r
objectName	js/three.js	/^					objectName: matches[ 3 ],$/;"	r
objectName	js/three.js	/^					var objectName = results.nodeName.substring( lastDot + 1 );$/;"	r
objectName	js/three.js	/^				objectName = parsedPath.objectName,$/;"	r
objectName	js/three.min.js	/^"$"),b=["material","materials","bones"];return function(c){var d=a.exec(c);if(!d)throw Error("PropertyBinding: Cannot parse trackName: "+c);var d={nodeName:d[2],objectName:d[3],objectIndex:d[4],propertyName:d[5],propertyIndex:d[6]},e=d.nodeName&&d.nodeName.lastIndexOf(".");if(void 0!==e&&-1!==e){var f=d.nodeName.substring(e+1);-1!==b.indexOf(f)&&(d.nodeName=d.nodeName.substring(0,e),d.objectName=f)}if(null===d.propertyName||0===d.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+$/;"	r
objectOrClipArray	js/three.js	/^				var o = objectOrClipArray;$/;"	r
objectOrClipArray	js/three.js	/^			var clipArray = objectOrClipArray;$/;"	r
objectRe	js/three.js	/^			var objectRe = \/(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?\/;$/;"	r
objects	js/GLTFLoader.js	/^				objects = {};$/;"	r
objects	js/GLTFLoader.js	/^		var objects = {};$/;"	r
objects	js/three.js	/^				objects = this._objects,$/;"	r
objects	js/three.js	/^			objects = new WebGLObjects( geometries, _infoRender );$/;"	r
objects	js/three.js	/^			objects: {$/;"	r
objects	js/three.js	/^			var objects = this._objects,$/;"	r
objects	js/three.js	/^		objects: {$/;"	r
objects	js/three.js	/^		var shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );$/;"	r
oc	js/three.min.js	/^a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new T({fog:!1});b=new C;b.addAttribute("position",new O(new Float32Array(15),3));this.line=new oa(b,a);this.add(this.line);this.update()}function oc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;a=new jb(b);a.rotateY(.5*Math.PI);this.material=new va({wireframe:!0,fog:!1});void 0===this.color&&(this.material.vertexColors=2);b=a.getAttribute("position");b=new Float32Array(3*$/;"	r
occlusionMap	js/three.js	/^				occlusionMap: gl.getUniformLocation( program, 'occlusionMap' ),$/;"	r
occlusionTexture	js/three.js	/^			occlusionTexture = gl.createTexture();$/;"	r
offset	js/GLTFLoader.js	/^							offset = uvScaleMap.offset;$/;"	r
offset	js/GLTFLoader.js	/^					var offset;$/;"	r
offset	js/three.js	/^							var offset = geometryAttribute.offset;$/;"	r
offset	js/three.js	/^						var offset = i * stride,$/;"	r
offset	js/three.js	/^					offset, zLength,$/;"	r
offset	js/three.js	/^					var offset = material.map.offset;$/;"	r
offset	js/three.js	/^					var offset = uvScaleMap.offset;$/;"	r
offset	js/three.js	/^				offset = 0;$/;"	r
offset	js/three.js	/^				offset = accuIndex * stride + stride,$/;"	r
offset	js/three.js	/^				offset = i1 * stride,$/;"	r
offset	js/three.js	/^				offset = index * stride;$/;"	r
offset	js/three.js	/^				offset = vlen * layer;$/;"	r
offset	js/three.js	/^				offset: [ this.offset.x, this.offset.y ],$/;"	r
offset	js/three.js	/^				this._mixBufferRegion( buffer, offset, 0, mix, stride );$/;"	r
offset	js/three.js	/^				this.texture.offset = value;$/;"	r
offset	js/three.js	/^				var offset = vlen * layer;$/;"	r
offset	js/three.js	/^			for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {$/;"	r
offset	js/three.js	/^			this.offset = 0;$/;"	r
offset	js/three.js	/^			var array = this.array, offset = 0;$/;"	r
offset	js/three.js	/^			var offset = this.boundingBox.getCenter().negate();$/;"	r
offset	js/three.js	/^		applyToBuffer: function ( buffer \/*, offset, length *\/ ) {$/;"	r
offset	js/three.js	/^		applyToVector3Array: function ( \/* array, offset, length *\/ ) {$/;"	r
offset	js/three.js	/^		offset: {$/;"	r
offset	js/three.js	/^		this.offset = 0;$/;"	r
offset	js/three.js	/^		this.offset = new Vector2( 0, 0 );$/;"	r
offset	js/three.js	/^		this.offset = offset;$/;"	r
offset	js/three.min.js	/^a}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=a}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=a}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");$/;"	r
offset	js/three.min.js	/^c.isLineBasicMaterial?(q.diffuse.value=c.color,q.opacity.value=c.opacity,c.isLineDashedMaterial&&(q.dashSize.value=c.dashSize,q.totalSize.value=c.dashSize+c.gapSize,q.scale.value=c.scale)):c.isPointsMaterial?(q.diffuse.value=c.color,q.opacity.value=c.opacity,q.size.value=c.size*P,q.scale.value=.5*ea,q.map.value=c.map,null!==c.map&&(!0===c.map.matrixAutoUpdate&&(b=c.map.offset,g=c.map.repeat,h=c.map.center,c.map.matrix.setUvTransform(b.x,b.y,g.x,g.y,c.map.rotation,h.x,h.y)),q.uvTransform.value.copy(c.map.matrix))):$/;"	r
offset0	js/three.js	/^				offset0 = offset1 - stride,$/;"	r
offset1	js/three.js	/^				offset1 = i1 * stride,$/;"	r
offsetHSL	js/three.js	/^		offsetHSL: function ( h, s, l ) {$/;"	r
offsetMatrix	js/three.js	/^			var offsetMatrix = new Matrix4();$/;"	r
offsetN	js/three.js	/^							offsetN = offset + stride;$/;"	r
offsetP	js/three.js	/^							offsetP = offset - stride,$/;"	r
offsetX	js/three.js	/^						offsetX += ret.offsetX;$/;"	r
offsetX	js/three.js	/^						offsetX = 0;$/;"	r
offsetX	js/three.js	/^					offsetX: 0,$/;"	r
offsetX	js/three.js	/^				var offsetX = 0, offsetY = 0;$/;"	r
offsetX	js/three.js	/^			this.view.offsetX = x;$/;"	r
offsetY	js/three.js	/^					offsetY: 0,$/;"	r
offsetY	js/three.js	/^			this.view.offsetY = y;$/;"	r
offsets	js/three.js	/^		offsets: {$/;"	r
offsets	js/three.min.js	/^this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(C.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});$/;"	r
ol	js/three.js	/^				for ( o = 0, ol = groups.length; o < ol; ++ o ) {$/;"	r
oldFogType	js/three.js	/^					oldFogType = 1;$/;"	r
oldFogType	js/three.js	/^					oldFogType = 2;$/;"	r
oldFogType	js/three.js	/^					oldFogType = fogType;$/;"	r
oldFogType	js/three.js	/^				oldFogType = 0;$/;"	r
oldFogType	js/three.js	/^			var oldFogType = 0;$/;"	r
oldTime	js/three.js	/^				this.oldTime = newTime;$/;"	r
oldTime	js/three.js	/^			this.oldTime = this.startTime;$/;"	r
oldTime	js/three.js	/^		this.oldTime = 0;$/;"	r
onAfterRender	js/three.js	/^		onAfterRender: function () {},$/;"	r
onAnimationFrame	js/three.js	/^			onAnimationFrame = callback;$/;"	r
onAnimationFrame	js/three.js	/^		var onAnimationFrame = null;$/;"	r
onBeforeCompile	js/three.js	/^		onBeforeCompile: function () {},$/;"	r
onBeforeRender	js/GLTFLoader.js	/^						child.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;$/;"	r
onBeforeRender	js/three.js	/^					boxMesh.onBeforeRender = function ( renderer, scene, camera ) {$/;"	r
onBeforeRender	js/three.js	/^		onBeforeRender: function () {},$/;"	r
onBeforeRender	js/three.min.js	/^var Nf=0;w.DefaultUp=new p(0,1,0);w.DefaultMatrixAutoUpdate=!0;Object.assign(w.prototype,ia.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(a){this.quaternion.premultiply(a);return this},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,$/;"	r
onChange	js/three.js	/^		onChange: function ( callback ) {$/;"	r
onChangeCallback	js/three.js	/^			this.onChangeCallback = callback;$/;"	r
onChangeCallback	js/three.js	/^		onChangeCallback: function () {}$/;"	r
onChangeCallback	js/three.min.js	/^a;return this},onChangeCallback:function(){}});Object.assign(p.prototype,{isVector3:!0,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;$/;"	r
onContextLost	js/three.js	/^			_canvas.addEventListener( 'webglcontextlost', onContextLost, false );$/;"	r
onContextLost	js/three.js	/^			_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );$/;"	r
onContextLost	js/three.js	/^		function onContextLost( event ) {$/;"	r
onContextRestore	js/three.js	/^			_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );$/;"	r
onContextRestore	js/three.js	/^			_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );$/;"	r
onContextRestore	js/three.js	/^		function onContextRestore( \/* event *\/ ) {$/;"	r
onEnded	js/three.js	/^		onEnded: function () {$/;"	r
onError	js/three.js	/^					onError: onError$/;"	r
onError	js/three.js	/^		this.onError = onError;$/;"	r
onGeometryDispose	js/three.js	/^		function onGeometryDispose( event ) {$/;"	r
onLoad	js/GLTFLoader.js	/^		load: function ( url, onLoad, onProgress, onError ) {$/;"	r
onLoad	js/three.js	/^					onLoad: onLoad,$/;"	r
onLoad	js/three.js	/^			var texture = loader.load( url, onLoad, undefined, onError );$/;"	r
onLoad	js/three.js	/^			var texture = loader.load( urls, onLoad, undefined, onError );$/;"	r
onLoad	js/three.js	/^		load: function ( url, onLoad, onProgress, onError ) {$/;"	r
onLoad	js/three.js	/^		load: function ( urls, onLoad, onProgress, onError ) {$/;"	r
onLoad	js/three.js	/^		this.onLoad = onLoad;$/;"	r
onLoadComplete	js/three.js	/^		this.onLoadComplete = function () {};$/;"	r
onLoadProgress	js/three.js	/^		this.onLoadProgress = function () {};$/;"	r
onLoadProgress	js/three.min.js	/^c)}function Hd(a,b,c,d){sb.call(this,a,b,c,d)}function tb(a,b,c,d){sb.apply(this,a,b,c,d)}function ra(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=R.generateUUID();0>this.duration&&this.resetDuration();this.optimize()}function Id(a){this.manager=void 0!==a?a:wa;this.textures={}}function ae(a){this.manager=void 0!==a?a:wa}function gc(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}}function be(a){"boolean"===typeof a&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),$/;"	r
onLoadStart	js/three.js	/^		this.onLoadStart = function () {};$/;"	r
onMaterialDispose	js/three.js	/^		function onMaterialDispose( event ) {$/;"	r
onProgress	js/GLTFLoader.js	/^			}, onProgress, onError );$/;"	r
onProgress	js/three.js	/^					onProgress: onProgress,$/;"	r
onProgress	js/three.js	/^				}, onProgress, onError );$/;"	r
onProgress	js/three.js	/^			}, onProgress, onError );$/;"	r
onProgress	js/three.js	/^		this.onProgress = onProgress;$/;"	r
onProgress	js/three.js	/^	function LoadingManager( onLoad, onProgress, onError ) {$/;"	r
onProgress	js/three.min.js	/^0),f;if(void 0!==$a[a])$a[a].push({onLoad:b,onProgress:c,onError:d});else{var g=a.match(\/^data:(.*?)(;base64)?,(.*)$\/);if(g){c=g[1];var h=!!g[2],g=g[3],g=window.decodeURIComponent(g);h&&(g=window.atob(g));try{var k=(this.responseType||"").toLowerCase();switch(k){case "arraybuffer":case "blob":for(var l=new Uint8Array(g.length),h=0;h<g.length;h++)l[h]=g.charCodeAt(h);var m="blob"===k?new Blob([l.buffer],{type:c}):l.buffer;break;case "document":m=(new DOMParser).parseFromString(g,c);break;case "json":m=$/;"	r
onProgress	js/three.min.js	/^JSON.parse(g);break;default:m=g}window.setTimeout(function(){b&&b(m);e.manager.itemEnd(a)},0)}catch(u){window.setTimeout(function(){d&&d(u);e.manager.itemEnd(a);e.manager.itemError(a)},0)}}else{$a[a]=[];$a[a].push({onLoad:b,onProgress:c,onError:d});var n=new XMLHttpRequest;n.open("GET",a,!0);n.addEventListener("load",function(b){var c=b.target.response;jd.add(a,c);var d=$a[a];delete $a[a];if(200===this.status){for(var f=0,g=d.length;f<g;f++){var h=d[f];if(h.onLoad)h.onLoad(c)}e.manager.itemEnd(a)}else if(0===$/;"	r
onQuaternionChange	js/three.js	/^		function onQuaternionChange() {$/;"	r
onRenderTargetDispose	js/three.js	/^		function onRenderTargetDispose( event ) {$/;"	r
onRotationChange	js/three.js	/^		function onRotationChange() {$/;"	r
onStart	js/three.js	/^		this.onStart = undefined;$/;"	r
onTextureDispose	js/three.js	/^		function onTextureDispose( event ) {$/;"	r
onUpdate	js/three.js	/^		onUpdate: {$/;"	r
onUpdate	js/three.js	/^		this.onUpdate = null;$/;"	r
onUpdate	js/three.min.js	/^Object.defineProperties(Jd.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this}}});Object.defineProperties(Q.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},$/;"	r
onUpload	js/three.js	/^		onUpload: function ( callback ) {$/;"	r
onUploadCallback	js/three.js	/^			this.onUploadCallback = callback;$/;"	r
onUploadCallback	js/three.js	/^		this.onUploadCallback = function () {};$/;"	r
onUploadCallback	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
onUploadCallback	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
onVRDisplayPresentChange	js/three.js	/^			window.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );$/;"	r
onVRDisplayPresentChange	js/three.js	/^		function onVRDisplayPresentChange() {$/;"	r
oneHoleMovements	js/three.js	/^				oneHoleMovements = holesMovements[ h ];$/;"	r
oneHoleMovements	js/three.js	/^			oneHoleMovements = [];$/;"	r
oneHoleMovements	js/three.js	/^			oneHoleMovements, verticesMovements = contourMovements.concat();$/;"	r
onended	js/three.js	/^			source.onended = this.onEnded.bind( this );$/;"	r
onlyShadow	js/three.js	/^		onlyShadow: {$/;"	r
opacity	js/GLTFLoader.js	/^					materialParams.opacity = array[ 3 ];$/;"	r
opacity	js/GLTFLoader.js	/^					opacity: params.opacity,$/;"	r
opacity	js/GLTFLoader.js	/^					params.opacity = array[ 3 ];$/;"	r
opacity	js/GLTFLoader.js	/^				materialParams.opacity = 1.0;$/;"	r
opacity	js/GLTFLoader.js	/^				params.opacity = 1.0;$/;"	r
opacity	js/GLTFLoader.js	/^				uniforms.opacity.value = material.opacity;$/;"	r
opacity	js/GLTFLoader.js	/^			materialParams.opacity = materialValues.diffuseFactor[ 3 ];$/;"	r
opacity	js/three.js	/^							json.opacity = value;$/;"	r
opacity	js/three.js	/^					m_uniforms.opacity.value = material.opacity;$/;"	r
opacity	js/three.js	/^					opacity: { value: 1.0 }$/;"	r
opacity	js/three.js	/^				opacity: gl.getUniformLocation( program, 'opacity' ),$/;"	r
opacity	js/three.js	/^				opacity: opacity,	\/\/ opacity$/;"	r
opacity	js/three.js	/^				opacity: { value: 1.0 }$/;"	r
opacity	js/three.js	/^			if ( json.opacity !== undefined ) material.opacity = json.opacity;$/;"	r
opacity	js/three.js	/^			if ( this.opacity < 1 ) data.opacity = this.opacity;$/;"	r
opacity	js/three.js	/^			opacity: { value: 1.0 },$/;"	r
opacity	js/three.js	/^			this.opacity = source.opacity;$/;"	r
opacity	js/three.js	/^			uniforms.opacity.value = material.opacity;$/;"	r
opacity	js/three.js	/^		this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );$/;"	r
opacity	js/three.js	/^		this.opacity = 1.0;$/;"	r
opacity	js/three.js	/^		this.opacity = 1;$/;"	r
opacity	js/three.js	/^		var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );$/;"	r
opacity	js/three.js	/^	var cube_frag = "uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n";$/;"	r
opacity	js/three.js	/^	var depth_frag = "#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n";$/;"	r
opacity	js/three.min.js	/^0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},toJSON:function(){return this.getHex()}});var E={common:{diffuse:{value:new H(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ta},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},$/;"	r
opacity	js/three.min.js	/^function gd(a,b,c){this.type="PlaneHelper";this.plane=a;this.size=void 0===b?1:b;a=void 0!==c?c:16776960;b=new C;b.addAttribute("position",new z([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));b.computeBoundingSphere();oa.call(this,b,new T({color:a}));b=new C;b.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3));b.computeBoundingSphere();this.add(new qa(b,new va({color:a,opacity:.2,transparent:!0,depthWrite:!1})))}function Bb(a,b,c,d,e,f){w.call(this);$/;"	r
opaque	js/three.js	/^			opaque: opaque,$/;"	r
opaque	js/three.js	/^			var opaqueObjects = currentRenderList.opaque;$/;"	r
opaque	js/three.js	/^		var opaque = [];$/;"	r
opaqueObjects	js/three.js	/^			var opaqueObjects = currentRenderList.opaque;$/;"	r
openEnded	js/three.js	/^								data.openEnded,$/;"	r
openEnded	js/three.js	/^			openEnded: openEnded,$/;"	r
openEnded	js/three.js	/^		openEnded = openEnded !== undefined ? openEnded : false;$/;"	r
optimize	js/three.js	/^		optimize: function () {$/;"	r
optimize	js/three.min.js	/^this,f,g);a=!1;break}if(null!==e&&e>g){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&S.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,f,d);a=!1;break}return a},optimize:function(){for(var a,b,c=this.times,d=this.values,e=this.getValueSize(),f=2302===this.getInterpolation(),g=1,h=c.length-1,k=1;k<h;++k){a=!1;var l=c[k];if(l!==c[k+1]&&(1!==k||$/;"	r
options	js/GLTFLoader.js	/^		this.options = options || {};$/;"	r
options	js/GLTFLoader.js	/^		var options = this.options;$/;"	r
options	js/three.js	/^			options: options$/;"	r
options	js/three.js	/^		options = options || {};$/;"	r
options	js/three.js	/^		var options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };$/;"	r
options	js/three.min.js	/^e);this.setIndex(f);this.addAttribute("position",new z(g,3));this.addAttribute("normal",new z(h,3));this.addAttribute("uv",new z(k,2))}function Za(a,b){L.call(this);this.type="ExtrudeGeometry";this.parameters={shapes:a,options:b};this.fromBufferGeometry(new Ga(a,b));this.mergeVertices()}function Ga(a,b){"undefined"!==typeof a&&(C.call(this),this.type="ExtrudeBufferGeometry",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeVertexNormals())}function Pc(a,b){L.call(this);this.type="TextGeometry";$/;"	r
order	js/three.js	/^				return this.setFromRotationMatrix( matrix, order, update );$/;"	r
order	js/three.js	/^				this.rotation.order = value;$/;"	r
order	js/three.js	/^				var order = AnimationUtils.getKeyframeOrder( times );$/;"	r
order	js/three.js	/^			order = order || this._order;$/;"	r
order	js/three.js	/^			return function setFromQuaternion( q, order, update ) {$/;"	r
order	js/three.js	/^			this._order = order;$/;"	r
order	js/three.js	/^		order: {$/;"	r
order	js/three.js	/^		setFromRotationMatrix: function ( m, order, update ) {$/;"	r
order	js/three.min.js	/^Xa.DefaultOrder="XYZ";Object.defineProperties(Xa.prototype,{x:{get:function(){return this._x},set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},order:{get:function(){return this._order},set:function(a){this._order=a;this.onChangeCallback()}}});Object.assign(Xa.prototype,{isEuler:!0,set:function(a,b,c,d){this._x=a;this._y=b;this._z=$/;"	r
order	js/three.min.js	/^return this.translateOnAxis(b,a)}});Object.defineProperties(w.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});$/;"	r
orientation	js/three.js	/^			var orientation = new Vector3();$/;"	r
origin	js/three.js	/^			var origin = this.origin;$/;"	r
origin	js/three.js	/^		this.origin = ( origin !== undefined ) ? origin : new Vector3();$/;"	r
origin	js/three.js	/^	function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {$/;"	r
origin	js/three.min.js	/^return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},intersectBox:function(a,b){var c=1\/this.direction.x;var d=1\/this.direction.y;var e=1\/this.direction.z,f=this.origin;if(0<=c){var g=(a.min.x-f.x)*c;c*=a.max.x-f.x}else g=(a.max.x-f.x)*c,c*=a.min.x-f.x;if(0<=d){var h=(a.min.y-f.y)*d;d*=a.max.y-f.y}else h=(a.max.y-f.y)*d,d*=a.min.y-f.y;if(g>d||h>c)return null;if(h>g||g!==g)g=h;if(d<c||c!==c)c=d;0<=e?(h=(a.min.z-f.z)*e,a=(a.max.z-f.z)*e):(h=(a.max.z-f.z)*e,a=(a.min.z-f.z)*e);if(g>a||h>c)return null;$/;"	r
originalValueOffset	js/three.js	/^				originalValueOffset = stride * 3;$/;"	r
originalValueOffset	js/three.js	/^				var originalValueOffset = stride * 3;$/;"	r
originalValueOffset	js/three.js	/^			var originalValueOffset = this.valueSize * 3;$/;"	r
other2toAngle	js/three.js	/^					var other2toAngle		= otherPtX * legToPtY - otherPtY * legToPtX;$/;"	r
otherPtX	js/three.js	/^				var otherPtX	= inOtherPt.x	- inVertex.x, otherPtY = inOtherPt.y	- inVertex.y;$/;"	r
outerRadius	js/three.js	/^								data.outerRadius,$/;"	r
outerRadius	js/three.js	/^			outerRadius: outerRadius,$/;"	r
outerRadius	js/three.js	/^		outerRadius = outerRadius || 1;$/;"	r
outerRadius	js/three.js	/^		this.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );$/;"	r
outerRadius	js/three.js	/^	function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {$/;"	r
outerRadius	js/three.js	/^	function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {$/;"	r
outerRadius	js/three.min.js	/^g),(l!==c-1||h<Math.PI)&&v.push(d,e,g);this.setIndex(v);this.addAttribute("position",new z(t,3));this.addAttribute("normal",new z(x,3));this.addAttribute("uv",new z(y,2))}function Rc(a,b,c,d,e,f){L.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new Xb(a,b,c,d,e,f));this.mergeVertices()}function Xb(a,b,c,d,e,f){C.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:a,$/;"	r
outerRadius	js/three.min.js	/^outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||.5;b=b||1;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=[],h=[],k=[],l=[],q=a,n=(b-a)\/d,u=new p,m=new D,v,t;for(v=0;v<=d;v++){for(t=0;t<=c;t++)a=e+t\/c*f,u.x=q*Math.cos(a),u.y=q*Math.sin(a),h.push(u.x,u.y,u.z),k.push(0,0,1),m.x=(u.x\/b+1)\/2,m.y=(u.y\/b+1)\/2,l.push(m.x,m.y);q+=n}for(v=0;v<d;v++)for(b=v*(c+1),t=0;t<c;t++)a=t+b,e=a+c+1,f=a+c+2,q=a+1,g.push(a,e,q),g.push(e,$/;"	r
outline	js/three.js	/^					var outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );$/;"	r
output	js/GLTFLoader.js	/^						var output = animation.parameters !== undefined ? animation.parameters[ sampler.output ] : sampler.output;$/;"	r
output	js/three.js	/^				meta.textures[ this.uuid ] = output;$/;"	r
output	js/three.js	/^				var output = Object( target );$/;"	r
output	js/three.js	/^			var output = {$/;"	r
output	js/three.js	/^			var output = {};$/;"	r
outputAccessor	js/GLTFLoader.js	/^						var outputAccessor = dependencies.accessors[ output ];$/;"	r
outputAnimations	js/three.js	/^					outputAnimations = outputAnimations.concat( morphAnimationClips );$/;"	r
outputAnimations	js/three.js	/^				if ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;$/;"	r
outputAnimations	js/three.js	/^				var outputAnimations = [];$/;"	r
outputEncoding	js/three.js	/^				outputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),$/;"	r
overdraw	js/three.js	/^			this.overdraw = source.overdraw;$/;"	r
overdraw	js/three.js	/^		this.overdraw = 0; \/\/ Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer$/;"	r
overrideMaterial	js/three.js	/^				var overrideMaterial = scene.overrideMaterial;$/;"	r
overrideMaterial	js/three.js	/^		this.overrideMaterial = null;$/;"	r
p	js/three.js	/^								data.p,$/;"	r
p	js/three.js	/^					this.b = hue2rgb( q, p, h - 1 \/ 3 );$/;"	r
p	js/three.js	/^					this.g = hue2rgb( q, p, h );$/;"	r
p	js/three.js	/^					this.r = hue2rgb( q, p, h + 1 \/ 3 );$/;"	r
p	js/three.js	/^					var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );$/;"	r
p	js/three.js	/^				p = ( t - t0 ) \/ ( t1 - t0 ),$/;"	r
p	js/three.js	/^				p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {$/;"	r
p	js/three.js	/^				p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {$/;"	r
p	js/three.js	/^				var p;$/;"	r
p	js/three.js	/^			calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );$/;"	r
p	js/three.js	/^			calculatePositionOnCurve( u, p, q, radius, P1 );$/;"	r
p	js/three.js	/^			var p = 1.0 \/ ( far - near );$/;"	r
p	js/three.js	/^			var p, sum = 0;$/;"	r
p	js/three.js	/^		function calculatePositionOnCurve( u, p, q, radius, position ) {$/;"	r
p	js/three.js	/^		p = p || 2;$/;"	r
p	js/three.js	/^		var p = ( l - ( this.closed ? 0 : 1 ) ) * t;$/;"	r
p	js/three.js	/^		var p = ( points.length - 1 ) * t;$/;"	r
p	js/three.min.js	/^b[z];for(q=0;q<C.length;q++)if(z=C[q],c(m,q)&&!d(w,z)&&!g(w,z)){l=q;k.splice(n,1);p=h.slice(0,m+1);z=h.slice(m);q=C.slice(l);var E=C.slice(0,l+1);h=p.concat(q).concat(E).concat(z);p=m;break}if(0<=l)break;a[D]=!0}}if(0<=l)break}}return h}(a,b);k=Ha.triangulate(l,!1);l=0;for(g=k.length;l<g;l++)for(b=k[l],a=0;3>a;a++)m=b[a].x+":"+b[a].y,m=h[m],void 0!==m&&(b[a]=m);return k.concat()},isClockWise:function(a){return 0>Ha.area(a)}};Za.prototype=Object.create(L.prototype);Za.prototype.constructor=Za;Ga.prototype=$/;"	r
p	js/three.min.js	/^function p(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0}function ta(){this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function da(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,"id",{value:kf++});this.uuid=R.generateUUID();this.name="";this.image=void 0!==a?a:da.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:da.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=void 0!==d?d:1001;this.magFilter=$/;"	r
p	js/three.min.js	/^p=(c-b)\/(d-b);c=p*p;d=c*p;b=-m*d+2*m*c-m*p;m=(1+m)*d+(-1.5-2*m)*c+(-.5+m)*p+1;p=(-1-n)*d+(1.5+n)*c+.5*p;n=n*d-n*c;for(c=0;c!==g;++c)e[c]=b*f[k+c]+m*f[h+c]+p*f[a+c]+n*f[l+c];return e}});Xc.prototype=Object.assign(Object.create(xa.prototype),{constructor:Xc,interpolate_:function(a,b,c,d){var e=this.resultBuffer,f=this.sampleValues,g=this.valueSize;a*=g;var h=a-g;b=(c-b)\/(d-b);c=1-b;for(d=0;d!==g;++d)e[d]=f[h+d]*c+f[a+d]*b;return e}});Dd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Dd,$/;"	r
p	js/three.min.js	/^this.program=p;this.vertexShader=k;this.fragmentShader=l;return this}function jg(a,b,c){function d(a,b){if(a)a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),c=a.texture.encoding);else var c=3E3;3E3===c&&b&&(c=3007);return c}var e=[],f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",$/;"	r
p	js/three.min.js	/^var p=k(v[0]),x=f.convert(b.format),B=f.convert(b.type);m(a.TEXTURE_CUBE_MAP,b,p);for(t=0;6>t;t++)if(q)for(var y,I=v[t].mipmaps,w=0,z=I.length;w<z;w++)y=I[w],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(x)?c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,w,x,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,w,x,y.width,y.height,$/;"	r
p0	js/three.js	/^				p0 = func( u, v, p0 );$/;"	r
p0	js/three.js	/^			p0 = points[ ( intPoint - 1 ) % l ];$/;"	r
p0	js/three.js	/^			p0 = tmp;$/;"	r
p0	js/three.js	/^		var p0 = new Vector3(), p1 = new Vector3();$/;"	r
p0	js/three.js	/^		var p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];$/;"	r
p0	js/three.js	/^		var p0, p1, p2, p3; \/\/ 4 points$/;"	r
p0	js/three.js	/^	function CatmullRom( t, p0, p1, p2, p3 ) {$/;"	r
p0	js/three.js	/^	function CubicBezier( t, p0, p1, p2, p3 ) {$/;"	r
p0	js/three.js	/^	function QuadraticBezier( t, p0, p1, p2 ) {$/;"	r
p1	js/three.js	/^					p1 = func( u + EPS, v, p1 );$/;"	r
p1	js/three.js	/^					p1 = func( u - EPS, v, p1 );$/;"	r
p1	js/three.js	/^					p1 = func( u, v + EPS, p1 );$/;"	r
p1	js/three.js	/^					p1 = func( u, v - EPS, p1 );$/;"	r
p1	js/three.js	/^				Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );$/;"	r
p1	js/three.js	/^			function uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {$/;"	r
p1	js/three.js	/^			var p1 = ( i \/ l ) * Math.PI * 2;$/;"	r
p1	js/three.js	/^			var p1 = new Vector3(),$/;"	r
p1	js/three.js	/^		p1 = points[ intPoint % l ];$/;"	r
p1	js/three.js	/^		set: function ( p0, p1, p2, p3, p4, p5 ) {$/;"	r
p1	js/three.js	/^		var p1 = points[ intPoint ];$/;"	r
p1	js/three.js	/^	function Frustum( p0, p1, p2, p3, p4, p5 ) {$/;"	r
p2	js/three.js	/^				p2 = new Vector3();$/;"	r
p2	js/three.js	/^			var p2 = ( j \/ l ) * Math.PI * 2;$/;"	r
p2	js/three.js	/^		p2 = points[ ( intPoint + 1 ) % l ];$/;"	r
p2	js/three.js	/^		var p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];$/;"	r
p3	js/three.js	/^			p3 = points[ ( intPoint + 2 ) % l ];$/;"	r
p3	js/three.js	/^			p3 = tmp;$/;"	r
p3	js/three.js	/^		var p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];$/;"	r
pA	js/three.js	/^				var pA = new Vector3(), pB = new Vector3(), pC = new Vector3();$/;"	r
pB	js/three.js	/^					intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );$/;"	r
pB	js/three.js	/^					intersect = ray.intersectTriangle( pC, pB, pA, true, point );$/;"	r
p_uniforms	js/three.js	/^				p_uniforms = program.getUniforms(),$/;"	r
pa	js/three.min.js	/^c)}function pa(a,b,c){this.path=b;this.parsedPath=c||pa.parseTrackName(b);this.node=pa.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function We(){this.uuid=R.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var d=this;this.stats={objects:{get total(){return d._objects.length},$/;"	r
packing	js/three.js	/^		packing: packing,$/;"	r
packing	js/three.js	/^	var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. \/ 255.;const float UnpackDownscale = 255. \/ 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale \/ vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. \/ 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) \/ ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) \/ (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) \/ ( ( far - near ) * invClipZ - far );\\n}\\n";$/;"	r
packing	js/three.min.js	/^packing:"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. \/ 255.;const float UnpackDownscale = 255. \/ 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale \/ vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. \/ 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) \/ ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) \/ (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) \/ ( ( far - near ) * invClipZ - far );\\n}\\n",$/;"	r
painterSortStable	js/three.js	/^		function painterSortStable( a, b ) {$/;"	r
painterSortStable	js/three.js	/^	function painterSortStable( a, b ) {$/;"	r
panner	js/three.js	/^		this.panner = this.context.createPanner();$/;"	r
parameterNames	js/three.js	/^		var parameterNames = [$/;"	r
parameterPositions	js/three.js	/^			var pp = this.parameterPositions,$/;"	r
parameterPositions	js/three.js	/^			var times = interpolant.parameterPositions,$/;"	r
parameterPositions	js/three.js	/^		Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );$/;"	r
parameterPositions	js/three.js	/^		this.parameterPositions = parameterPositions;$/;"	r
parameterPositions	js/three.min.js	/^f)}else{do g=f[d],void 0!==g&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}}}};Object.assign(xa.prototype,{evaluate:function(a){var b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];a:{b:{c:{d:if(!(a<d)){for(var f=c+2;;){if(void 0===d){if(a<e)break d;this._cachedIndex=c=b.length;return this.afterEnd_(c-1,a,e)}if(c===f)break;e=d;d=b[++c];if(a<d)break b}d=b.length;break c}if(a>=e)break a;else{f=b[1];a<f&&(c=2,e=f);for(f=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,$/;"	r
parameter_src	js/three.js	/^						uniforms_dst[ u ][ p ] = parameter_src;$/;"	r
parameter_src	js/three.js	/^					var parameter_src = uniforms_src[ u ][ p ];$/;"	r
parameters	js/three.js	/^				program = programCache.acquireProgram( material, materialProperties.shader, parameters, code );$/;"	r
parameters	js/three.js	/^				var parameters = this.parameters;$/;"	r
parameters	js/three.js	/^			 var parameters = this.parameters;$/;"	r
parameters	js/three.js	/^			parameters: parameters$/;"	r
parameters	js/three.js	/^			var parameters = programCache.getParameters($/;"	r
parameters	js/three.js	/^			var parameters = {$/;"	r
parameters	js/three.js	/^		parameters = parameters || {};$/;"	r
parameters	js/three.js	/^		this.parameters = {$/;"	r
parameters	js/three.js	/^		var customExtensions = generateExtensions( material.extensions, parameters, extensions );$/;"	r
parameters	js/three.js	/^	function generateExtensions( extensions, parameters, rendererExtensions ) {$/;"	r
parameters	js/three.min.js	/^(J*B-t)*d,z[b]=D*e,z[c]=I,l.push(z.x,z.y,z.z),z[a]=0,z[b]=0,z[c]=0<m?1:-1,q.push(z.x,z.y,z.z),n.push(J\/ya),n.push(1-w\/ja),f+=1}for(w=0;w<ja;w++)for(J=0;J<ya;J++)a=u+J+g*(w+1),b=u+(J+1)+g*(w+1),c=u+(J+1)+g*w,k.push(u+J+g*w,a,c),k.push(a,b,c),y+=6;h.addGroup(r,y,ma);r+=y;u+=f}C.call(this);this.type="BoxBufferGeometry";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};var h=this;a=a||1;b=b||1;c=c||1;d=Math.floor(d)||1;e=Math.floor(e)||1;f=Math.floor(f)||1;var k=$/;"	r
parameters	js/three.min.js	/^1;u<=b;u++)for(n=1;n<=d;n++){var a=(d+1)*u+(n-1),c=(d+1)*u+n,e=(d+1)*(u-1)+n;x.push((d+1)*(u-1)+(n-1),a,e);x.push(a,c,e)}})();this.setIndex(x);this.addAttribute("position",new z(m,3));this.addAttribute("normal",new z(v,3));this.addAttribute("uv",new z(t,2))}function Nc(a,b,c,d,e,f,g){L.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");$/;"	r
parameters	js/three.min.js	/^5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Lc(a,b){L.call(this);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))\/2,d=1\/c;sa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,$/;"	r
parameters	js/three.min.js	/^C=Math.sin(C);k.x=t*C;k.y=x*B;k.z=t*M;n.push(k.x,k.y,k.z);u.push(0,B,0);f.x=.5*M+.5;f.y=.5*C*B+.5;m.push(f.x,f.y);v++}for(e=0;e<d;e++)f=w+e,k=z+e,!0===c?q.push(k,k+1,f):q.push(k+1,k,f),r+=3;l.addGroup(y,r,!0===c?1:2);y+=r}C.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:1;b=void 0!==b?b:1;c=c||1;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:$/;"	r
parameters	js/three.min.js	/^[],l=[],q=[],n=[],u=0,r=0;g("z","y","x",-1,-1,c,b,a,f,e,0);g("z","y","x",1,-1,c,b,-a,f,e,1);g("x","z","y",1,1,a,c,b,d,f,2);g("x","z","y",1,-1,a,c,-b,d,f,3);g("x","y","z",1,-1,a,b,c,d,e,4);g("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.addAttribute("position",new z(l,3));this.addAttribute("normal",new z(q,3));this.addAttribute("uv",new z(n,2))}function zc(a,b,c,d){L.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new gb(a,$/;"	r
parameters	js/three.min.js	/^b,c,d));this.mergeVertices()}function gb(a,b,c,d){C.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a\/2,f=b\/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a\/c,l=b\/d,q=[],n=[],u=[],r=[];for(a=0;a<h;a++){var m=a*l-f;for(b=0;b<g;b++)n.push(b*k-e,-m,0),u.push(0,0,1),r.push(b\/c),r.push(1-a\/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,q.push(b+g*a,e,h),q.push(e,f,h);this.setIndex(q);this.addAttribute("position",$/;"	r
parameters	js/three.min.js	/^d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Mc(a,b,c,d,e,f){L.call(this);this.type="TubeGeometry";this.parameters={path:a,$/;"	r
parameters	js/three.min.js	/^e);this.setIndex(f);this.addAttribute("position",new z(g,3));this.addAttribute("normal",new z(h,3));this.addAttribute("uv",new z(k,2))}function Za(a,b){L.call(this);this.type="ExtrudeGeometry";this.parameters={shapes:a,options:b};this.fromBufferGeometry(new Ga(a,b));this.mergeVertices()}function Ga(a,b){"undefined"!==typeof a&&(C.call(this),this.type="ExtrudeBufferGeometry",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeVertexNormals())}function Pc(a,b){L.call(this);this.type="TextGeometry";$/;"	r
parameters	js/three.min.js	/^f,q);this.setIndex(g);this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(k,3));this.addAttribute("uv",new z(l,2))}function Sc(a,b,c,d){L.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new Yb(a,b,c,d));this.mergeVertices()}function Yb(a,b,c,d){C.call(this);this.type="LatheBufferGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=R.clamp(d,$/;"	r
parameters	js/three.min.js	/^function Qc(a,b,c,d,e,f,g){L.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new kb(a,b,c,d,e,f,g));this.mergeVertices()}function kb(a,b,c,d,e,f,g){C.call(this);this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==$/;"	r
parameters	js/three.min.js	/^function jb(a,b){sa.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Kc(a,b){L.call(this);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Rb(a,b));this.mergeVertices()}function Rb(a,b){var c=(1+Math.sqrt(5))\/2;sa.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,$/;"	r
parameters	js/three.min.js	/^g),(l!==c-1||h<Math.PI)&&v.push(d,e,g);this.setIndex(v);this.addAttribute("position",new z(t,3));this.addAttribute("normal",new z(x,3));this.addAttribute("uv",new z(y,2))}function Rc(a,b,c,d,e,f){L.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new Xb(a,b,c,d,e,f));this.mergeVertices()}function Xb(a,b,c,d,e,f){C.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:a,$/;"	r
parameters	js/three.min.js	/^h.push(a,b,e);this.setIndex(h);this.addAttribute("position",new z(k,3));this.addAttribute("normal",new z(l,3));this.addAttribute("uv",new z(q,2))}function Oc(a,b,c,d,e){L.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new Vb(a,b,c,d,e));this.mergeVertices()}function Vb(a,b,c,d,e){C.call(this);this.type="TorusBufferGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||$/;"	r
parameters	js/three.min.js	/^heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d){L.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new bc(a,b,c,d));this.mergeVertices()}function bc(a,b,c,d){C.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],k,l=new p,q=new D;f.push(0,$/;"	r
parameters	js/three.min.js	/^k.y,k.z);h.x=q.x+c*k.x;h.y=q.y+c*k.y;h.z=q.z+c*k.z;m.push(h.x,h.y,h.z)}}C.call(this);this.type="TubeBufferGeometry";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var g=a.computeFrenetFrames(b,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;var h=new p,k=new p,l=new D,q=new p,n,u,m=[],v=[],t=[],x=[];for(n=0;n<b;n++)f(n);f(!1===e?b:0);for(n=0;n<=b;n++)for(u=0;u<=d;u++)l.x=n\/b,l.y=u\/d,t.push(l.x,l.y);(function(){for(u=$/;"	r
parameters	js/three.min.js	/^l=0,d=k.count\/3;l<d;l++)for(c=0;3>c;c++)g=3*l+c,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z),g=3*l+(c+1)%3,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z)}this.addAttribute("position",new z(b,3))}function Gc(a,b,c){L.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){C.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=$/;"	r
parameters	js/three.min.js	/^new z(c,3))}function lb(a,b,c,d,e,f,g,h){L.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Ra(a,b,c,d,e,f,g,h));this.mergeVertices()}function Ra(a,b,c,d,e,f,g,h){function k(c){var e,f=new D,k=new p,r=0,t=!0===c?a:b,B=!0===c?1:-1;var w=v;for(e=1;e<=d;e++)n.push(0,x*B,0),u.push(0,B,0),m.push(.5,.5),v++;var z=v;for(e=0;e<=d;e++){var C=e\/d*h+g,M=Math.cos(C),$/;"	r
parameters	js/three.min.js	/^new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function Hc(a,b,c,d){L.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new sa(a,b,c,d));this.mergeVertices()}function sa(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){b*=3;c.x=a[b+0];c.y=a[b+1];c.z=a[b+2]}function g(a,b,c,d){0>d&&1===a.x&&(k[b]=a.x-1);0===c.x&&0===c.z&&(k[b]=d\/2\/Math.PI+.5)}C.call(this);this.type="PolyhedronBufferGeometry";$/;"	r
parameters	js/three.min.js	/^this.attributes.normal.array,e=new p,f=new p,g=new p,c=b*a.length*3,n=q=0;q<a.length;q++,n+=3)e.x=d[n+0],e.y=d[n+1],e.z=d[n+2],f.x=d[c+n+0],f.y=d[c+n+1],f.z=d[c+n+2],g.addVectors(e,f).normalize(),d[n+0]=d[c+n+0]=g.x,d[n+1]=d[c+n+1]=g.y,d[n+2]=d[c+n+2]=g.z}function Zb(a,b){L.call(this);this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new $b(a,$/;"	r
parameters	js/three.min.js	/^this.fromBufferGeometry(new Ub(a,b,c,d,e,f));this.mergeVertices()}function Ub(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c\/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}C.call(this);this.type="TorusKnotBufferGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],k=[],l=[],q=[],n,u=new p,m=new p,v=new p,t=new p,x=new p,y=new p,B=new p;for(n=0;n<=$/;"	r
parameters	js/three.min.js	/^this.normalizeNormals()}function Ic(a,b){L.call(this);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Qb(a,b));this.mergeVertices()}function Qb(a,b){sa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Jc(a,b){L.call(this);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new jb(a,b));this.mergeVertices()}$/;"	r
parameters	js/three.min.js	/^this.parameters={shapes:a,curveSegments:b};b=b||12;var d=[],e=[],f=[],g=[],h=0,k=0;if(!1===Array.isArray(a))c(a);else for(var l=0;l<a.length;l++)c(a[l]),this.addGroup(h,k,l),h+=k,k=0;this.setIndex(d);this.addAttribute("position",new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function ac(a,b){C.call(this);this.type="EdgesGeometry";this.parameters={thresholdAngle:b};var c=[];b=Math.cos(R.DEG2RAD*(void 0!==b?b:1));var d=[0,0],e={},f=["a","b","c"];if(a.isBufferGeometry){var g=$/;"	r
parameters	js/three.min.js	/^this.parameters={text:a,parameters:b};this.fromBufferGeometry(new Wb(a,b));this.mergeVertices()}function Wb(a,b){b=b||{};var c=b.font;if(!c||!c.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new L;a=c.generateShapes(a,b.size,b.curveSegments);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);Ga.call(this,a,b);this.type="TextBufferGeometry"}$/;"	r
parameters	js/three.min.js	/^this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;var h=[],k=[];(function(a){for(var c=new p,d=new p,g=new p,h=0;h<b.length;h+=3){f(b[h+0],c);f(b[h+1],d);f(b[h+2],g);var k,l,m=c,y=d,B=g,I=Math.pow(2,a),A=[];for(l=0;l<=I;l++){A[l]=[];var J=m.clone().lerp(B,l\/I),w=y.clone().lerp(B,l\/I),z=I-l;for(k=0;k<=z;k++)A[l][k]=0===k&&l===I?J:J.clone().lerp(w,k\/z)}for(l=0;l<I;l++)for(k=0;k<2*(I-l)-1;k++)m=Math.floor(k\/2),0===k%2?(e(A[l][m+1]),e(A[l+1][m]),e(A[l][m])):(e(A[l][m+1]),e(A[l+1][m+$/;"	r
parameters	js/three.min.js	/^y+=w})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(q);this.addAttribute("position",new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(m,2))}function Tc(a,b,c,d,e,f,g){lb.call(this,0,a,b,c,d,e,f,g);this.type="ConeGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Uc(a,b,c,d,e,f,g){Ra.call(this,0,a,b,c,d,e,f,g);this.type="ConeBufferGeometry";this.parameters={radius:a,height:b,radialSegments:c,$/;"	r
params	js/GLTFLoader.js	/^				var params = this.specularGlossinessParams;$/;"	r
params	js/GLTFLoader.js	/^		var params = cameraDef[ cameraDef.type ];$/;"	r
params	js/three.js	/^		this.params = {$/;"	r
params	js/three.min.js	/^c||1}function Ze(a,b,c,d){this.ray=new hb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function $e(a,b){return a.distance-b.distance}function oe(a,b,c,d){if(!1!==a.visible&&(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d<e;d++)oe(a[d],b,c,!0)}}function af(a){this.autoStart=$/;"	r
parent	js/three.js	/^				object.parent = null;$/;"	r
parent	js/three.js	/^				object.parent = this;$/;"	r
parent	js/three.js	/^			var parent = camera.parent;$/;"	r
parent	js/three.js	/^			var parent = this.parent;$/;"	r
parent	js/three.js	/^		detach: function ( child, parent, scene ) {$/;"	r
parent	js/three.js	/^		this.parent = null;$/;"	r
parentObject	js/GLTFLoader.js	/^		function buildNodeHierachy( nodeId, parentObject, allNodes ) {$/;"	r
pars	js/three.js	/^					var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };$/;"	r
parse	js/GLTFLoader.js	/^		parse: function ( data, path, onLoad, onError ) {$/;"	r
parse	js/GLTFLoader.js	/^	GLTFParser.prototype.parse = function ( onLoad, onError ) {$/;"	r
parse	js/three.js	/^		parse: ( function () {$/;"	r
parse	js/three.js	/^		parse: function ( json ) {$/;"	r
parse	js/three.js	/^		parse: function ( json, onLoad ) {$/;"	r
parse	js/three.min.js	/^a+" should be loaded with THREE.ObjectLoader instead.");return}if("scene"===d.toLowerCase()){console.error("THREE.JSONLoader: "+a+" should be loaded with THREE.SceneLoader instead.");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(){return function(a,b){void 0!==a.data&&(a=a.data);a.scale=void 0!==a.scale?1\/a.scale:1;var c=new L,d=a,e,f,g,h=d.faces;var k=d.vertices;var l=d.normals,m=d.colors;var n=d.scale;var u=0;if(void 0!==d.uvs){for(e=$/;"	r
parse	js/three.min.js	/^a.lightMap&&(d.lightMap=b(a.lightMap));void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(d.aoMap=b(a.aoMap));void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity);void 0!==a.gradientMap&&(d.gradientMap=b(a.gradientMap));return d}});Object.assign(ae.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},parse:function(a){var b=new C;var c=a.data.index;void 0!==c&&(c=new gf[c.type](c.array),$/;"	r
parse	js/three.min.js	/^null;try{f=JSON.parse(c)}catch(h){void 0!==d&&d(h);console.error("THREE:ObjectLoader: Can't parse "+a+".",h.message);return}c=f.metadata;void 0===c||void 0===c.type||"geometry"===c.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+a+". Use THREE.JSONLoader instead."):e.parse(f,b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==$/;"	r
parse	js/three.min.js	/^return c}});Object.assign(Te.prototype,{load:function(a,b,c,d){var e=this,f=new Ja(this.manager);f.setPath(this.path);f.load(a,function(a){try{var c=JSON.parse(a)}catch(k){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(a.substring(65,a.length-2))}a=e.parse(c);b&&b(a)},c,d)},parse:function(a){return new de(a)},setPath:function(a){this.path=a;return this}});var Md,ge={getContext:function(){void 0===Md&&(Md=new (window.AudioContext||$/;"	r
parseAnimation	js/three.js	/^		parseAnimation: function ( animation, bones ) {$/;"	r
parseAnimation	js/three.min.js	/^e[d],b,c));return a},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;var c=function(a,b,c,d,e){if(0!==c.length){var f=[],g=[];S.flattenJSON(c,f,g,d);0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.length||-1,g=a.fps||30;a=a.hierarchy||[];for(var h=0;h<a.length;h++){var k=a[h].keys;if(k&&0!==k.length)if(k[0].morphTargets){for(var f={},l=0;l<k.length;l++)if(k[l].morphTargets)for(var m=0;m<k[l].morphTargets.length;m++)f[k[l].morphTargets[m]]=$/;"	r
parseAnimations	js/three.js	/^			function parseAnimations( json, geometry ) {$/;"	r
parseAnimations	js/three.js	/^		parseAnimations: function ( json ) {$/;"	r
parseAnimations	js/three.min.js	/^b=0;for(var e=a.length;b<e;b++){var f=a[b];if("MultiMaterial"===f.type){for(var g=[],h=0;h<f.materials.length;h++)g.push(d.parse(f.materials[h]));c[f.uuid]=g}else c[f.uuid]=d.parse(f)}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=ra.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemEnd(a);d.manager.itemError(a)})}var d=this,e={};if(void 0!==$/;"	r
parseConstant	js/three.js	/^			function parseConstant( value, type ) {$/;"	r
parseGeometries	js/three.js	/^		parseGeometries: function ( json ) {$/;"	r
parseGeometries	js/three.min.js	/^b&&b(e)}),d=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);a.animations&&(e.animations=this.parseAnimations(a.animations));void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new be,d=new ae,e=0,f=a.length;e<f;e++){var g=a[e];switch(g.type){case "PlaneGeometry":case "PlaneBufferGeometry":var h=new Ca[g.type](g.width,g.height,g.widthSegments,g.heightSegments);break;case "BoxGeometry":case "BoxBufferGeometry":case "CubeGeometry":h=$/;"	r
parseImages	js/three.js	/^		parseImages: function ( json, onLoad ) {$/;"	r
parseImages	js/three.min.js	/^b=0;for(var e=a.length;b<e;b++){var f=a[b];if("MultiMaterial"===f.type){for(var g=[],h=0;h<f.materials.length;h++)g.push(d.parse(f.materials[h]));c[f.uuid]=g}else c[f.uuid]=d.parse(f)}}return c},parseAnimations:function(a){for(var b=[],c=0;c<a.length;c++){var d=ra.parse(a[c]);b.push(d)}return b},parseImages:function(a,b){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)},void 0,function(){d.manager.itemEnd(a);d.manager.itemError(a)})}var d=this,e={};if(void 0!==$/;"	r
parseIncludes	js/three.js	/^	function parseIncludes( string ) {$/;"	r
parseMaterials	js/three.js	/^		parseMaterials: function ( json, textures ) {$/;"	r
parseMaterials	js/three.min.js	/^g.segments,g.phiStart,g.phiLength);break;case "PolyhedronGeometry":case "PolyhedronBufferGeometry":h=new Ca[g.type](g.vertices,g.indices,g.radius,g.details);break;case "BufferGeometry":h=d.parse(g);break;case "Geometry":h=c.parse(g,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+g.type+'"');continue}h.uuid=g.uuid;void 0!==g.name&&(h.name=g.name);b[g.uuid]=h}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new Id;d.setTextures(b);$/;"	r
parseModel	js/three.js	/^			function parseModel( json, geometry ) {$/;"	r
parseMorphing	js/three.js	/^			function parseMorphing( json, geometry ) {$/;"	r
parseObject	js/three.js	/^			return function parseObject( data, geometries, materials ) {$/;"	r
parseObject	js/three.js	/^		parseObject: function () {$/;"	r
parseObject	js/three.min.js	/^(h.minFilter=c(g.minFilter,jf));void 0!==g.magFilter&&(h.magFilter=c(g.magFilter,jf));void 0!==g.anisotropy&&(h.anisotropy=g.anisotropy);void 0!==g.flipY&&(h.flipY=g.flipY);d[g.uuid]=h}return d},parseObject:function(){var a=new K;return function(b,c,d){function e(a){void 0===c[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a);return c[a]}function f(a){if(void 0!==a){if(Array.isArray(a)){for(var b=[],c=0,e=a.length;c<e;c++){var f=a[c];void 0===d[f]&&console.warn("THREE.ObjectLoader: Undefined material",$/;"	r
parseSkin	js/three.js	/^			function parseSkin( json, geometry ) {$/;"	r
parseTextures	js/three.js	/^		parseTextures: function ( json, images ) {$/;"	r
parseTextures	js/three.min.js	/^a&&0<a.length){b=new Yd(b);var f=new Wc(b);f.setCrossOrigin(this.crossOrigin);b=0;for(var g=a.length;b<g;b++){var h=a[b],k=\/^(\\\/\\\/)|([a-z]+:(\\\/\\\/)?)\/i.test(h.url)?h.url:d.texturePath+h.url;e[h.uuid]=c(k)}}return e},parseTextures:function(a,b){function c(a,b){if("number"===typeof a)return a;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a);return b[a]}var d={};if(void 0!==a)for(var e=0,f=a.length;e<f;e++){var g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',$/;"	r
parseTrackName	js/three.js	/^		parseTrackName: function () {$/;"	r
parseUniform	js/three.js	/^	function parseUniform( activeInfo, addr, container ) {$/;"	r
parsedPath	js/three.js	/^				parsedPath = this.parsedPath,$/;"	r
parsedPath	js/three.js	/^		this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );$/;"	r
parsedPath	js/three.js	/^		var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );$/;"	r
parsedPath	js/three.min.js	/^c)}function pa(a,b,c){this.path=b;this.parsedPath=c||pa.parseTrackName(b);this.node=pa.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function We(){this.uuid=R.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var a={};this._indicesByUUID=a;for(var b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var d=this;this.stats={objects:{get total(){return d._objects.length},$/;"	r
parsedPaths	js/three.js	/^					parsedPaths = this._parsedPaths,$/;"	r
parsedPaths	js/three.js	/^				parsedPaths = this._parsedPaths,$/;"	r
parser	js/GLTFLoader.js	/^			var parser = new GLTFParser( json, extensions, {$/;"	r
parser	js/GLTFLoader.js	/^		var parser = this;$/;"	r
parser	js/three.js	/^							var parser = new DOMParser();$/;"	r
parts	js/three.js	/^				var parts = morphTarget.name.match( pattern );$/;"	r
parts	js/three.js	/^			var parts = url.split( '\/' );$/;"	r
path	js/GLTFLoader.js	/^					scope.parse( data, path, onLoad, onError );$/;"	r
path	js/GLTFLoader.js	/^				path: path || this.path || '',$/;"	r
path	js/GLTFLoader.js	/^			this.path = value;$/;"	r
path	js/GLTFLoader.js	/^			var path = this.path !== undefined ? this.path : THREE.Loader.prototype.extractUrlBase( url );$/;"	r
path	js/GLTFLoader.js	/^		parse: function ( data, path, onLoad, onError ) {$/;"	r
path	js/three.js	/^					var path = \/^(\\\/\\\/)|([a-z]+:(\\\/\\\/)?)\/i.test( image.url ) ? image.url : scope.texturePath + image.url;$/;"	r
path	js/three.js	/^					var path = prototypeAction && prototypeAction.$/;"	r
path	js/three.js	/^				bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );$/;"	r
path	js/three.js	/^				path = info.name,$/;"	r
path	js/three.js	/^				return new PropertyBinding( root, path, parsedPath );$/;"	r
path	js/three.js	/^				return new PropertyBinding.Composite( root, path, parsedPath );$/;"	r
path	js/three.js	/^				return { offsetX: glyph.ha * scale, path: path };$/;"	r
path	js/three.js	/^				trackName = propBinding.path,$/;"	r
path	js/three.js	/^				var path = new ShapePath();$/;"	r
path	js/three.js	/^			path: path,$/;"	r
path	js/three.js	/^			this.path = value;$/;"	r
path	js/three.js	/^		create: function ( root, path, parsedPath ) {$/;"	r
path	js/three.js	/^		this.path = path;$/;"	r
path	js/three.js	/^		var path = activeInfo.name,$/;"	r
path	js/three.js	/^	function Composite( targetGroup, path, optionalParsedPath ) {$/;"	r
path	js/three.js	/^	function PropertyBinding( rootNode, path, parsedPath ) {$/;"	r
pathLength	js/three.js	/^			pathLength = path.length;$/;"	r
paths	js/three.js	/^				paths = this._paths,$/;"	r
paths	js/three.js	/^				var paths = [];$/;"	r
paths	js/three.js	/^				var paths = this._paths,$/;"	r
paths	js/three.js	/^			var paths = createPaths( text );$/;"	r
paths	js/three.js	/^			var paths = this._paths,$/;"	r
pattern	js/three.js	/^			var pattern = \/^([\\w-]*?)([\\d]+)$\/;$/;"	r
pattern	js/three.js	/^		var pattern = \/^[ \\t]*#include +<([\\w\\d.]+)>\/gm;$/;"	r
pattern	js/three.js	/^		var pattern = \/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}\/g;$/;"	r
pause	js/three.js	/^							\/\/ motion has halted, pause$/;"	r
pause	js/three.js	/^		pause: function () {$/;"	r
pause	js/three.min.js	/^else{var a=this.context.createBufferSource();a.buffer=this.buffer;a.loop=this.loop;a.onended=this.onEnded.bind(this);a.playbackRate.setValueAtTime(this.playbackRate,this.startTime);this.startTime=this.context.currentTime;a.start(this.startTime,this.offset);this.isPlaying=!0;this.source=a;return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-$/;"	r
paused	js/three.js	/^							this.paused = true;$/;"	r
paused	js/three.js	/^			this.paused = false;$/;"	r
paused	js/three.js	/^		this.paused = false;				\/\/ true -> zero effective time scale$/;"	r
pb	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.lights=this.fog=!1;this.setValues(a)}function pb(a){Q.call(this);this.type="MeshLambertMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=$/;"	r
pb	js/three.min.js	/^this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};pb.prototype=Object.create(Q.prototype);pb.prototype.constructor=pb;pb.prototype.isMeshLambertMaterial=!0;pb.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=$/;"	r
pbrMetallicRoughness	js/GLTFLoader.js	/^				var metallicRoughness = material.pbrMetallicRoughness;$/;"	r
pbrSpecularGlossiness	js/GLTFLoader.js	/^				var pbrSpecularGlossiness = material.extensions[ this.name ];$/;"	r
pc	js/three.min.js	/^linewidth:d}));this.matrixAutoUpdate=!1;this.update()}function pc(a,b,c){w.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;void 0===b&&(b=1);a=new C;a.addAttribute("position",new z([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));b=new T({fog:!1});this.lightPlane=new oa(a,b);this.add(this.lightPlane);a=new C;a.addAttribute("position",new z([0,0,0,0,0,1],3));this.targetLine=new oa(a,b);this.add(this.targetLine);this.update()}function ed(a){function b(a,$/;"	r
pd	js/three.min.js	/^this.boneInverses=[],a=0,b=this.bones.length;a<b;a++)this.boneInverses.push(new K)}function pd(){w.call(this);this.type="Bone"}function qd(a,b){qa.call(this,a,b);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new K;this.bindMatrixInverse=new K;a=this.initBones();a=new Dc(a);this.bind(a,this.matrixWorld);this.normalizeSkinWeights()}function T(a){Q.call(this);this.type="LineBasicMaterial";this.color=new H(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.lights=!1;$/;"	r
pe	js/three.min.js	/^void 0===d&&(d=16776960);void 0===c&&(c=1);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);void 0===Ld&&(Ld=new C,Ld.addAttribute("position",new z([0,0,0,0,1,0],3)),pe=new Ra(0,.5,1,5,1),pe.translate(0,-.5,0));this.position.copy(b);this.line=new oa(Ld,new T({color:d}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new qa(pe,new va({color:d}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f)}function hd(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,$/;"	r
pending	js/GLTFLoader.js	/^				var pending = [];$/;"	r
pending	js/GLTFLoader.js	/^			var pending = [];$/;"	r
pending	js/GLTFLoader.js	/^		var pending = [];$/;"	r
pending	js/three.js	/^					var pending = this.repetitions - loopCount;$/;"	r
penumbra	js/three.js	/^			if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;$/;"	r
penumbra	js/three.js	/^			this.penumbra = source.penumbra;$/;"	r
penumbra	js/three.js	/^		this.penumbra = ( penumbra !== undefined ) ? penumbra : 0;$/;"	r
penumbraCos	js/three.js	/^							penumbraCos: 0,$/;"	r
penumbraCos	js/three.js	/^					uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );$/;"	r
penumbraCos	js/three.js	/^				penumbraCos: {},$/;"	r
perpEdge	js/three.js	/^							var perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );$/;"	r
perpSeg1	js/three.js	/^				var perpSeg1	= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;$/;"	r
perpSeg2	js/three.js	/^						perpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;$/;"	r
perpSeg2	js/three.js	/^					var perpSeg2;$/;"	r
pf	js/three.min.js	/^b)}function pf(a,b){void 0===b.x?a.uniform4fv(this.addr,b):a.uniform4f(this.addr,b.x,b.y,b.z,b.w)}function qf(a,b){a.uniformMatrix2fv(this.addr,!1,b.elements||b)}function rf(a,b){void 0===b.elements?a.uniformMatrix3fv(this.addr,!1,b):(ze.set(b.elements),a.uniformMatrix3fv(this.addr,!1,ze))}function sf(a,b){void 0===b.elements?a.uniformMatrix4fv(this.addr,!1,b):(Ae.set(b.elements),a.uniformMatrix4fv(this.addr,!1,Ae))}function tf(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTexture2D(b||$/;"	r
pg	js/three.min.js	/^this.dispose=function(){window.removeEventListener("vrdisplaypresentchange",b)}}function pg(a){var b={};return{get:function(c){if(void 0!==b[c])return b[c];switch(c){case "WEBGL_depth_texture":var d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case "EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");$/;"	r
phi	js/three.js	/^				this.phi = 0;$/;"	r
phi	js/three.js	/^				this.phi = Math.acos( _Math.clamp( vec3.y \/ this.radius, - 1, 1 ) ); \/\/ polar angle$/;"	r
phi	js/three.js	/^			this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );$/;"	r
phi	js/three.js	/^			this.phi = other.phi;$/;"	r
phi	js/three.js	/^			this.phi = phi;$/;"	r
phi	js/three.js	/^			var phi = phiStart + i * inverseSegments * phiLength;$/;"	r
phi	js/three.js	/^		set: function ( radius, phi, theta ) {$/;"	r
phi	js/three.js	/^		this.phi = ( phi !== undefined ) ? phi : 0; \/\/ up \/ down towards top and bottom pole$/;"	r
phi	js/three.js	/^	function Spherical( radius, phi, theta ) {$/;"	r
phi	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(R.clamp(a.y\/this.radius,-1,1)));return this}});Object.assign(cf.prototype,{set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
phiLength	js/three.js	/^								data.phiLength$/;"	r
phiLength	js/three.js	/^								data.phiLength,$/;"	r
phiLength	js/three.js	/^			phiLength: phiLength$/;"	r
phiLength	js/three.js	/^			phiLength: phiLength,$/;"	r
phiLength	js/three.js	/^		phiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );$/;"	r
phiLength	js/three.js	/^		phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;$/;"	r
phiLength	js/three.js	/^		phiLength = phiLength || Math.PI * 2;$/;"	r
phiSegments	js/three.js	/^								data.phiSegments,$/;"	r
phiSegments	js/three.js	/^			phiSegments: phiSegments,$/;"	r
phiSegments	js/three.js	/^		phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;$/;"	r
phiStart	js/three.js	/^								data.phiStart,$/;"	r
phiStart	js/three.js	/^			phiStart: phiStart,$/;"	r
phiStart	js/three.js	/^		phiStart = phiStart !== undefined ? phiStart : 0;$/;"	r
phiStart	js/three.js	/^		phiStart = phiStart || 0;$/;"	r
phong	js/three.js	/^		phong: {$/;"	r
physical	js/three.js	/^	ShaderLib.physical = {$/;"	r
physical	js/three.min.js	/^fragmentShader:V.shadow_frag}};ib.physical={uniforms:Ea.merge([ib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:V.meshphysical_vert,fragmentShader:V.meshphysical_frag};Object.assign(kd.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new D;return function(b,c){c=a.copy(c).multiplyScalar(.5);$/;"	r
physicallyCorrectLights	js/three.js	/^				physicallyCorrectLights: renderer.physicallyCorrectLights,$/;"	r
physicallyCorrectLights	js/three.js	/^		this.physicallyCorrectLights = false;$/;"	r
pickingRay	js/three.js	/^		this.pickingRay = function () {$/;"	r
pingPong	js/three.js	/^				var pingPong = ( loop === LoopPingPong );$/;"	r
pixelRatio	js/three.js	/^			_pixelRatio = pixelRatio;$/;"	r
pl	js/three.js	/^			for ( var p = 0, pl = paths.length; p < pl; p ++ ) {$/;"	r
pl	js/three.js	/^			for ( var p = 0, pl = programs.length; p < pl; p ++ ) {$/;"	r
placeholder	js/three.js	/^		var placeholder = [];$/;"	r
plane	js/three.js	/^					var plane = planes[ i ];$/;"	r
plane	js/three.js	/^			plane = new Plane(),$/;"	r
plane	js/three.js	/^			var plane = new Plane();$/;"	r
plane	js/three.js	/^		plane: function ( optionalTarget ) {$/;"	r
plane	js/three.js	/^		this.plane = plane;$/;"	r
plane	js/three.min.js	/^function gd(a,b,c){this.type="PlaneHelper";this.plane=a;this.size=void 0===b?1:b;a=void 0!==c?c:16776960;b=new C;b.addAttribute("position",new z([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3));b.computeBoundingSphere();oa.call(this,b,new T({color:a}));b=new C;b.addAttribute("position",new z([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3));b.computeBoundingSphere();this.add(new qa(b,new va({color:a,opacity:.2,transparent:!0,depthWrite:!1})))}function Bb(a,b,c,d,e,f){w.call(this);$/;"	r
planeCamera	js/three.js	/^					planeCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );$/;"	r
planeCamera	js/three.js	/^		var planeCamera, planeMesh;$/;"	r
planeMesh	js/three.js	/^					planeMesh = new Mesh($/;"	r
planes	js/three.js	/^				var planes = this.planes;$/;"	r
planes	js/three.js	/^			var planes = _this.clippingPlanes,$/;"	r
planes	js/three.js	/^			var planes = this.planes;$/;"	r
planes	js/three.js	/^		this.planes = [$/;"	r
planes	js/three.min.js	/^new p;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}});Xa.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");$/;"	r
play	js/three.js	/^		play: function () {$/;"	r
playbackRate	js/three.js	/^			this.playbackRate = value;$/;"	r
playbackRate	js/three.js	/^		this.playbackRate = 1;$/;"	r
point	js/three.js	/^								point: interSegment.clone().applyMatrix4( this.matrixWorld ),$/;"	r
point	js/three.js	/^							point: interSegment.clone().applyMatrix4( this.matrixWorld ),$/;"	r
point	js/three.js	/^							point: intersectPoint.clone(),$/;"	r
point	js/three.js	/^					last = point;$/;"	r
point	js/three.js	/^					point: intersectPoint.clone(),$/;"	r
point	js/three.js	/^					point: intersectionPointWorld.clone(),$/;"	r
point	js/three.js	/^					var point = pts[ j ];$/;"	r
point	js/three.js	/^				uniforms.pointLights.value = lights.state.point;$/;"	r
point	js/three.js	/^				var point = points[ i ];$/;"	r
point	js/three.js	/^			point: [],$/;"	r
point	js/three.js	/^		var point = optionalTarget || new Vector2();$/;"	r
point	js/three.js	/^		var point = optionalTarget || new Vector3();$/;"	r
point	js/three.min.js	/^f.multiplyScalar(t.y);g.multiplyScalar(t.z);e.add(f).add(g);return e.clone()}function b(a,b,c,d,e,f,g,h){if(null===(1===b.side?d.intersectTriangle(g,f,e,!0,h):d.intersectTriangle(e,f,g,2!==b.side,h)))return null;y.copy(h);y.applyMatrix4(a.matrixWorld);b=c.ray.origin.distanceTo(y);return b<c.near||b>c.far?null:{distance:b,point:y.clone(),object:a}}function c(c,d,e,f,l,n,q,u){g.fromBufferAttribute(f,n);h.fromBufferAttribute(f,q);k.fromBufferAttribute(f,u);if(c=b(c,c.material,d,e,g,h,k,x))l&&(m.fromBufferAttribute(l,$/;"	r
point	js/three.min.js	/^if(null!==m)for(var v=m.array,g=0,t=v.length-1;g<t;g+=n)m=v[g+1],k.fromArray(r,3*v[g]),l.fromArray(r,3*m),m=b.distanceSqToSegment(k,l,q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}));else for(g=0,t=r.length\/3-1;g<t;g+=n)k.fromArray(r,3*g),l.fromArray(r,3*g+3),m=b.distanceSqToSegment(k,l,q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),$/;"	r
point	js/three.min.js	/^m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}else if(g.isGeometry)for(k=g.vertices,l=k.length,g=0;g<l-1;g+=n)m=b.distanceSqToSegment(k[g],k[g+1],q,h),m>f||(q.applyMatrix4(this.matrixWorld),m=d.ray.origin.distanceTo(q),m<d.near||m>d.far||e.push({distance:m,point:h.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this}))}}}(),clone:function(){return(new this.constructor(this.geometry,$/;"	r
pointLength	js/three.js	/^			state.point.length = pointLength;$/;"	r
pointLength	js/three.js	/^			var pointLength = 0;$/;"	r
pointLights	js/three.js	/^			pointLights: { value: [], properties: {$/;"	r
pointLights	js/three.min.js	/^pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new H(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new ta}}},$/;"	r
pointMap	js/three.js	/^			pointMap = this.pointMap;$/;"	r
pointMap	js/three.js	/^		this.pointMap = pointMap;$/;"	r
pointMap	js/three.js	/^		var pointMap = {};$/;"	r
pointShadowMap	js/three.js	/^				uniforms.pointShadowMap.value = lights.state.pointShadowMap;$/;"	r
pointShadowMap	js/three.js	/^			pointShadowMap: [],$/;"	r
pointShadowMap	js/three.js	/^			pointShadowMap: { value: [] },$/;"	r
pointShadowMatrix	js/three.js	/^				uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;$/;"	r
pointShadowMatrix	js/three.js	/^			pointShadowMatrix: [],$/;"	r
pointShadowMatrix	js/three.js	/^			pointShadowMatrix: { value: [] },$/;"	r
point_in_segment_2D_colin	js/three.js	/^			function point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {$/;"	r
points	js/three.js	/^								data.points,$/;"	r
points	js/three.js	/^				UniformsLib.points,$/;"	r
points	js/three.js	/^				points: 0$/;"	r
points	js/three.js	/^			_infoRender.points = 0;$/;"	r
points	js/three.js	/^			points: points,$/;"	r
points	js/three.js	/^			var points = [$/;"	r
points	js/three.js	/^			var points = [], last;$/;"	r
points	js/three.js	/^			var points = [];$/;"	r
points	js/three.js	/^			var points = pointMap[ point ];$/;"	r
points	js/three.js	/^			var points = shape.extractPoints( curveSegments );$/;"	r
points	js/three.js	/^		points: {$/;"	r
points	js/three.js	/^		this.points = ( points === undefined ) ? [] : points;$/;"	r
points	js/three.js	/^		this.points = points || [];$/;"	r
points	js/three.js	/^		var points = this.points;$/;"	r
points_frag	js/three.js	/^		points_frag: points_frag,$/;"	r
points_frag	js/three.js	/^	var points_frag = "uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
points_frag	js/three.min.js	/^points_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",$/;"	r
points_vert	js/three.js	/^		points_vert: points_vert,$/;"	r
points_vert	js/three.js	/^	var points_vert = "uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale \/ - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
points_vert	js/three.min.js	/^points_vert:"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale \/ - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
polyLen	js/three.js	/^				var polyLen = inPolygon.length;$/;"	r
polygonOffset	js/three.js	/^			this.polygonOffset = source.polygonOffset;$/;"	r
polygonOffset	js/three.js	/^		this.polygonOffset = false;$/;"	r
polygonOffset	js/three.min.js	/^a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.dithering=a.dithering;this.alphaTest=a.alphaTest;this.premultipliedAlpha=a.premultipliedAlpha;this.overdraw=a.overdraw;this.visible=a.visible;this.userData=JSON.parse(JSON.stringify(a.userData));this.clipShadows=a.clipShadows;this.clipIntersection=a.clipIntersection;a=a.clippingPlanes;var b=null;if(null!==a)for(var c=a.length,b=Array(c),d=0;d!==c;++d)b[d]=$/;"	r
polygonOffsetFactor	js/three.js	/^			this.polygonOffsetFactor = source.polygonOffsetFactor;$/;"	r
polygonOffsetFactor	js/three.js	/^		this.polygonOffsetFactor = 0;$/;"	r
polygonOffsetUnits	js/three.js	/^			this.polygonOffsetUnits = source.polygonOffsetUnits;$/;"	r
polygonOffsetUnits	js/three.js	/^		this.polygonOffsetUnits = 0;$/;"	r
pose	js/three.js	/^			var pose = frameData.pose;$/;"	r
pose	js/three.js	/^		pose: function () {$/;"	r
pose	js/three.min.js	/^[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a}});Object.assign(Dc.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new K;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}},pose:function(){var a,b;var c=0;for(b=this.bones.length;c<b;c++)(a=this.bones[c])&&a.matrixWorld.getInverse(this.boneInverses[c]);c=0;for(b=this.bones.length;c<$/;"	r
position	js/GLTFLoader.js	/^				var position = geometry.attributes.position;$/;"	r
position	js/GLTFLoader.js	/^		morphAttributes.position = [];$/;"	r
position	js/three.js	/^							position: new Vector3(),$/;"	r
position	js/three.js	/^						var attribute = geometry.attributes.position;$/;"	r
position	js/three.js	/^					'	vec2 pos = position;',$/;"	r
position	js/three.js	/^					var position = geometry.attributes.position;$/;"	r
position	js/three.js	/^				attribute = this.attributes.position;$/;"	r
position	js/three.js	/^				position = geometry.attributes.position;$/;"	r
position	js/three.js	/^				position: gl.getAttribLocation( program, 'position' ),$/;"	r
position	js/three.js	/^				position: {},$/;"	r
position	js/three.js	/^				this.morphTargets.position = morphTargetsPosition;$/;"	r
position	js/three.js	/^				var objPos = objGeometry.attributes.position;$/;"	r
position	js/three.js	/^				var position = geometry.getAttribute( 'position' );$/;"	r
position	js/three.js	/^				var position = new Vector3();$/;"	r
position	js/three.js	/^				var position = this.attributes.position;$/;"	r
position	js/three.js	/^			function setBit( value, position, enabled ) {$/;"	r
position	js/three.js	/^			position: verticesArray,$/;"	r
position	js/three.js	/^			position: {$/;"	r
position	js/three.js	/^			var position = [];$/;"	r
position	js/three.js	/^			var position = geometry.attributes.position;$/;"	r
position	js/three.js	/^			var position = geometry.getAttribute( 'position' );$/;"	r
position	js/three.js	/^			var position = new Vector3();$/;"	r
position	js/three.js	/^			var position = this.attributes.position;$/;"	r
position	js/three.js	/^			var position = this.geometry.attributes.position;$/;"	r
position	js/three.js	/^			var position, indices, groups;$/;"	r
position	js/three.js	/^		var position = geometry.getAttribute( 'position' );$/;"	r
position	js/three.js	/^		var position = new Vector3();$/;"	r
position	js/three.js	/^		var position = this.line.geometry.attributes.position;$/;"	r
position	js/three.js	/^		var verticesArray = arrays.position;$/;"	r
position	js/three.min.js	/^!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),c.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),c.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=$/;"	r
position	js/three.min.js	/^4),this.addAttribute("skinIndex",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new z(4*a.skinWeights.length,4),this.addAttribute("skinWeight",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Na);var a=this.attributes.position;void 0!==a?this.boundingBox.setFromBufferAttribute(a):$/;"	r
position	js/three.min.js	/^e.applyMatrix4(a.matrixWorld),b.expandByPoint(e);else if(f.isBufferGeometry&&(f=f.attributes.position,void 0!==f))for(c=0,d=f.count;c<d;c++)e.fromBufferAttribute(f,c).applyMatrix4(a.matrixWorld),b.expandByPoint(e)}var b,c,d,e=new p;return function(c){b=this;c.updateMatrixWorld(!0);c.traverse(a);return this}}(),containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=$/;"	r
position	js/three.min.js	/^e.copy(u.ray).applyMatrix4(d),null===t.boundingBox||!1!==e.intersectsBox(t.boundingBox)))){var w;if(t.isBufferGeometry){var y=t.index,I=t.attributes.position,B=t.attributes.uv,z;if(null!==y){var D=0;for(z=y.count;D<z;D+=3){t=y.getX(D);var C=y.getX(D+1);var E=y.getX(D+2);if(w=c(this,u,e,I,B,t,C,E))w.faceIndex=Math.floor(D\/3),p.push(w)}}else if(void 0!==I)for(D=0,z=I.count;D<z;D+=3)if(t=D,C=D+1,E=D+2,w=c(this,u,e,I,B,t,C,E))w.index=t,p.push(w)}else if(t.isGeometry){var B=Array.isArray(y);D=t.vertices;$/;"	r
position	js/three.min.js	/^else{var k=e.attributes.position;k.isInterleavedBufferAttribute?(g=k.data.count,h.drawArraysInstancedANGLE(d,0,g,e.maxInstancedCount)):h.drawArraysInstancedANGLE(d,f,g,e.maxInstancedCount);c.calls++;c.vertices+=g*e.maxInstancedCount;d===a.TRIANGLES?c.faces+=e.maxInstancedCount*g\/3:d===a.POINTS&&(c.points+=e.maxInstancedCount*g)}}}function Zf(a,b,c){function d(a){a=a.target;var g=e[a.id];null!==g.index&&b.remove(g.index);for(var k in g.attributes)b.remove(g.attributes[k]);a.removeEventListener("dispose",$/;"	r
position	js/three.min.js	/^new p;if(null!==a.index){k=a.attributes.position;q=a.index;var r=a.groups;0===r.length&&(r=[{start:0,count:q.count,materialIndex:0}]);a=0;for(e=r.length;a<e;++a)for(l=r[a],c=l.start,d=l.count,l=c,d=c+d;l<d;l+=3)for(c=0;3>c;c++)n=q.getX(l+c),u=q.getX(l+(c+1)%3),f[0]=Math.min(n,u),f[1]=Math.max(n,u),n=f[0]+","+f[1],void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]});for(n in g)l=g[n],h.fromBufferAttribute(k,l.index1),b.push(h.x,h.y,h.z),h.fromBufferAttribute(k,l.index2),b.push(h.x,h.y,h.z)}else for(k=a.attributes.position,$/;"	r
position	js/three.min.js	/^this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min\/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var a=new Na,b=new p;return function(){null===this.boundingSphere&&(this.boundingSphere=new Da);var c=this.attributes.position;if(c){var d=this.boundingSphere.center;a.setFromBufferAttribute(c);$/;"	r
position2	js/three.js	/^			position2 = new Vector3();$/;"	r
positionAttribute	js/GLTFLoader.js	/^				positionAttribute = dependencies.accessors[ target.POSITION ].clone();$/;"	r
positionAttribute	js/GLTFLoader.js	/^				positionAttribute = geometry.attributes.position.clone();$/;"	r
positionAttribute	js/GLTFLoader.js	/^			var positionAttribute, normalAttribute;$/;"	r
positionAttribute	js/three.js	/^		var positionAttribute = this.getAttribute( "position" );$/;"	r
positionScreen	js/three.js	/^		this.positionScreen = new Vector3();$/;"	r
positions	js/three.js	/^					var positions = attributes.position.array;$/;"	r
positions	js/three.js	/^				var positions = attributes.position.array;$/;"	r
positions	js/three.js	/^				var positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );$/;"	r
positions	js/three.js	/^			\/\/ compute the local matrices, positions, rotations and scales$/;"	r
positions	js/three.js	/^			var positions = attributes.position.array;$/;"	r
positions	js/three.js	/^			var positions = new Float32Array( geometry.vertices.length * 3 );$/;"	r
positions	js/three.js	/^		var positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];$/;"	r
positions	js/three.js	/^		var positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];$/;"	r
positions	js/three.js	/^		var positions = [$/;"	r
positions	js/three.js	/^		var positions = new Float32Array( 8 * 3 );$/;"	r
positions	js/three.js	/^		var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );$/;"	r
positions2	js/three.js	/^		var positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];$/;"	r
pow	js/three.js	/^			var pow = this.curveType === 'chordal' ? 0.5 : 0.25;$/;"	r
pp	js/three.js	/^				pp = p * p,$/;"	r
pp	js/three.js	/^			var pp = this.parameterPositions,$/;"	r
ppp	js/three.js	/^				ppp = pp * p;$/;"	r
precision	js/three.js	/^					console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );$/;"	r
precision	js/three.js	/^				precision = 'mediump';$/;"	r
precision	js/three.js	/^				precision = capabilities.getMaxPrecision( material.precision );$/;"	r
precision	js/three.js	/^				precision: precision,$/;"	r
precision	js/three.js	/^				var precision = raycaster.linePrecision;$/;"	r
precision	js/three.js	/^			console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );$/;"	r
precision	js/three.js	/^			precision = maxPrecision;$/;"	r
precision	js/three.js	/^			precision: precision,$/;"	r
precision	js/three.js	/^			this.precision = source.precision;$/;"	r
precision	js/three.js	/^			var precision = Math.pow( 10, precisionPoints );$/;"	r
precision	js/three.js	/^			var precision = capabilities.precision;$/;"	r
precision	js/three.js	/^		this.precision = null; \/\/ override the renderer's default precision for this material$/;"	r
precision	js/three.js	/^		var precision = parameters.precision !== undefined ? parameters.precision : 'highp';$/;"	r
precision	js/three.min.js	/^var m=a.getRenderTarget();return{shaderID:h,precision:k,supportsVertexTextures:c.vertexTextures,outputEncoding:d(m?m.texture:null,a.gammaOutput),map:!!b.map,mapEncoding:d(b.map,a.gammaInput),envMap:!!b.envMap,envMapMode:b.envMap&&b.envMap.mapping,envMapEncoding:d(b.envMap,a.gammaInput),envMapCubeUV:!!b.envMap&&(306===b.envMap.mapping||307===b.envMap.mapping),lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:d(b.emissiveMap,a.gammaInput),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,$/;"	r
precisionPoints	js/three.js	/^			var precisionPoints = 4; \/\/ number of decimal points, e.g. 4 for epsilon of 0.0001$/;"	r
precisionSq	js/three.js	/^				var precisionSq = precision * precision;$/;"	r
prefix	js/three.js	/^					prefix: prefixFragment$/;"	r
prefix	js/three.js	/^					prefix: prefixVertex$/;"	r
prefix	js/three.js	/^			var prefix = 'precision ' + capabilities.precision + ' float;\\n';$/;"	r
prefixFragment	js/three.js	/^			prefixFragment = [$/;"	r
prefixVertex	js/three.js	/^			prefixVertex = [$/;"	r
prefixVertex	js/three.js	/^		var prefixVertex, prefixFragment;$/;"	r
premultipliedAlpha	js/three.js	/^				premultipliedAlpha: _premultipliedAlpha,$/;"	r
premultipliedAlpha	js/three.js	/^				premultipliedAlpha: material.premultipliedAlpha,$/;"	r
premultipliedAlpha	js/three.js	/^			currentPremultipledAlpha = premultipliedAlpha;$/;"	r
premultipliedAlpha	js/three.js	/^			if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;$/;"	r
premultipliedAlpha	js/three.js	/^			this.premultipliedAlpha = source.premultipliedAlpha;$/;"	r
premultipliedAlpha	js/three.js	/^		this.premultipliedAlpha = false;$/;"	r
premultiplied_alpha_fragment	js/three.js	/^		premultiplied_alpha_fragment: premultiplied_alpha_fragment,$/;"	r
premultiplied_alpha_fragment	js/three.js	/^	var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n";$/;"	r
premultiply	js/three.js	/^		premultiply: function ( m ) {$/;"	r
premultiply	js/three.js	/^		premultiply: function ( q ) {$/;"	r
premultiply	js/three.min.js	/^a)},premultiply:function(a){return this.multiplyMatrices(a,this)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements;b=this.elements;a=c[0];var e=c[3],f=c[6],g=c[1],h=c[4],k=c[7],l=c[2],q=c[5],c=c[8],n=d[0],m=d[3],r=d[6],p=d[1],t=d[4],x=d[7],y=d[2],B=d[5],d=d[8];b[0]=a*n+e*p+f*y;b[3]=a*m+e*t+f*B;b[6]=a*r+e*x+f*d;b[1]=g*n+h*p+k*y;b[4]=g*m+h*t+k*B;b[7]=g*r+h*x+k*d;b[2]=l*n+q*p+c*y;b[5]=l*m+q*t+c*B;b[8]=l*r+q*x+c*d;return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;$/;"	r
premultiplyAlpha	js/three.js	/^			this.premultiplyAlpha = source.premultiplyAlpha;$/;"	r
premultiplyAlpha	js/three.js	/^		this.premultiplyAlpha = false;$/;"	r
preserveDrawingBuffer	js/three.js	/^				preserveDrawingBuffer: _preserveDrawingBuffer$/;"	r
prevHoleIdx	js/three.js	/^					var prevHoleIdx = inHoleIdx - 1;$/;"	r
prevIndex	js/three.js	/^				prevIndex = action._cacheIndex,$/;"	r
prevIndex	js/three.js	/^				prevIndex = binding._cacheIndex,$/;"	r
prevIndex	js/three.js	/^				prevIndex = interpolant.__cacheIndex,$/;"	r
prevIndex	js/three.js	/^			firstInactiveAction._cacheIndex = prevIndex;$/;"	r
prevIndex	js/three.js	/^			firstInactiveBinding._cacheIndex = prevIndex;$/;"	r
prevIndex	js/three.js	/^			lastActiveAction._cacheIndex = prevIndex;$/;"	r
prevIndex	js/three.js	/^			lastActiveBinding._cacheIndex = prevIndex;$/;"	r
prevIndex	js/three.js	/^			lastActiveInterpolant.__cacheIndex = prevIndex;$/;"	r
prevShapeIdx	js/three.js	/^					var prevShapeIdx = inShapeIdx - 1;$/;"	r
prevTime	js/three.js	/^				prevTime = currTime;$/;"	r
prevTime	js/three.js	/^			var prevTime = null;$/;"	r
primitive	js/GLTFLoader.js	/^						var primitive = primitives[ i ];$/;"	r
primitives	js/GLTFLoader.js	/^				var primitives = meshDef.primitives || [];$/;"	r
progUniforms	js/three.js	/^			var progUniforms = materialProperties.program.getUniforms(),$/;"	r
program	js/three.js	/^					program = programInfo;$/;"	r
program	js/three.js	/^					program: material.program,$/;"	r
program	js/three.js	/^				_this.renderBufferImmediate( object, program, material );$/;"	r
program	js/three.js	/^				cachedUniforms = new WebGLUniforms( gl, program, renderer );$/;"	r
program	js/three.js	/^				currentProgram = program;$/;"	r
program	js/three.js	/^				material.program = program;$/;"	r
program	js/three.js	/^				materialProperties.program = program;$/;"	r
program	js/three.js	/^				program = new WebGLProgram( renderer, extensions, code, material, shader, parameters );$/;"	r
program	js/three.js	/^				program = programCache.acquireProgram( material, materialProperties.shader, parameters, code );$/;"	r
program	js/three.js	/^				renderItem.program = material.program;$/;"	r
program	js/three.js	/^				renderObjectImmediate( object, program, material );$/;"	r
program	js/three.js	/^				setupVertexAttributes( material, program, geometry );$/;"	r
program	js/three.js	/^				var program = setProgram( camera, scene.fog, material, object );$/;"	r
program	js/three.js	/^			material.program = undefined;$/;"	r
program	js/three.js	/^			program = createProgram( shader );$/;"	r
program	js/three.js	/^			program = createProgram();$/;"	r
program	js/three.js	/^			this.program = undefined;$/;"	r
program	js/three.js	/^			var program = gl.createProgram();$/;"	r
program	js/three.js	/^			var program = materialProperties.program,$/;"	r
program	js/three.js	/^			var program = materialProperties.program;$/;"	r
program	js/three.js	/^			var program = setProgram( camera, fog, material, object );$/;"	r
program	js/three.js	/^			var program;$/;"	r
program	js/three.js	/^		function renderObjectImmediate( object, program, material ) {$/;"	r
program	js/three.js	/^		function setupVertexAttributes( material, program, geometry, startIndex ) {$/;"	r
program	js/three.js	/^		this.program = program;$/;"	r
program	js/three.js	/^		this.renderBufferImmediate = function ( object, program, material ) {$/;"	r
program	js/three.js	/^		var program = gl.createProgram();$/;"	r
program	js/three.js	/^		var program, attributes, uniforms;$/;"	r
program	js/three.js	/^	 * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.$/;"	r
program	js/three.js	/^	function WebGLUniforms( gl, program, renderer ) {$/;"	r
program	js/three.min.js	/^this.program=p;this.vertexShader=k;this.fragmentShader=l;return this}function jg(a,b,c){function d(a,b){if(a)a.isTexture?c=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),c=a.texture.encoding);else var c=3E3;3E3===c&&b&&(c=3007);return c}var e=[],f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",$/;"	r
programAttribute	js/three.js	/^				var programAttribute = programAttributes[ name ];$/;"	r
programAttributes	js/three.js	/^			var programAttributes = program.getAttributes();$/;"	r
programCache	js/three.js	/^			programCache = new WebGLPrograms( _this, extensions, capabilities );$/;"	r
programCache	js/three.js	/^		var programCache, renderLists;$/;"	r
programChange	js/three.js	/^				programChange = false;$/;"	r
programChange	js/three.js	/^			var programChange = true;$/;"	r
programIdCount	js/three.js	/^	var programIdCount = 0;$/;"	r
programInfo	js/three.js	/^					program = programInfo;$/;"	r
programInfo	js/three.js	/^				var programInfo = programs[ p ];$/;"	r
programInfo	js/three.js	/^			var programInfo = properties.get( material ).program;$/;"	r
programLog	js/three.js	/^				programLog: programLog,$/;"	r
programLog	js/three.js	/^			console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );$/;"	r
programLog	js/three.js	/^		var programLog = gl.getProgramInfoLog( program );$/;"	r
programs	js/three.js	/^			_this.info.programs = programCache.programs;$/;"	r
programs	js/three.js	/^			programs: null$/;"	r
programs	js/three.js	/^		this.programs = programs;$/;"	r
programs	js/three.js	/^		var programs = [];$/;"	r
programs	js/three.min.js	/^F,aa,S,X);M.info.programs=oa.programs;M.context=F;M.capabilities=X;M.extensions=ha;M.properties=Y;M.renderLists=sa;M.state=aa}function c(a){a.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");H=!0}function d(){console.log("THREE.WebGLRenderer: Context Restored.");H=!1;b()}function e(a){a=a.target;a.removeEventListener("dispose",e);f(a);Y.remove(a)}function f(a){var b=Y.get(a).program;a.program=void 0;void 0!==b&&oa.releaseProgram(b)}function g(a,b,c){a.render(function(a){M.renderBufferImmediate(a,$/;"	r
project	js/three.js	/^			return function project( camera ) {$/;"	r
project	js/three.js	/^		project: function () {$/;"	r
projectObject	js/three.js	/^		function projectObject( object, camera, sortObjects ) {$/;"	r
projectOnPlane	js/three.js	/^			return function projectOnPlane( planeNormal ) {$/;"	r
projectOnPlane	js/three.js	/^		projectOnPlane: function () {$/;"	r
projectOnPlane	js/three.min.js	/^a.dot(this)\/a.lengthSq();return this.copy(a).multiplyScalar(b)},projectOnPlane:function(){var a=new p;return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a=new p;return function(b){return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)\/Math.sqrt(this.lengthSq()*a.lengthSq());return Math.acos(R.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-$/;"	r
projectOnVector	js/three.js	/^		projectOnVector: function ( vector ) {$/;"	r
projectPlanes	js/three.js	/^		function projectPlanes( planes, camera, dstOffset, skipTransform ) {$/;"	r
projectPoint	js/three.js	/^		projectPoint: function ( point, optionalTarget ) {$/;"	r
projectVector	js/three.js	/^		this.projectVector = function ( vector, camera ) {$/;"	r
projectVector	js/three.min.js	/^m.Projector=function(){console.error("THREE.Projector has been moved to \/examples\/js\/renderers\/Projector.js.");this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};m.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to \/examples\/js\/renderers\/CanvasRenderer.js");$/;"	r
project_vertex	js/three.js	/^		project_vertex: project_vertex,$/;"	r
project_vertex	js/three.js	/^	var project_vertex = "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n";$/;"	r
projectedPoint	js/three.js	/^			var projectedPoint = new Vector3();$/;"	r
projectionMatrix	js/three.js	/^					var projectionMatrix = camera.projectionMatrix.clone();$/;"	r
projectionMatrix	js/three.js	/^				projectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),$/;"	r
projectionMatrix	js/three.js	/^		this.projectionMatrix = new Matrix4();$/;"	r
propBinding	js/three.js	/^				propBinding = binding.binding,$/;"	r
properties	js/three.js	/^			_this.properties = properties;$/;"	r
properties	js/three.js	/^			properties = new WebGLProperties();$/;"	r
properties	js/three.js	/^			properties = {};$/;"	r
properties	js/three.js	/^		var properties = {};$/;"	r
properties	js/three.js	/^		var properties, textures, attributes, geometries, objects, lights;$/;"	r
propertyIndex	js/three.js	/^								propertyIndex = i;$/;"	r
propertyIndex	js/three.js	/^					propertyIndex: matches[ 6 ]$/;"	r
propertyIndex	js/three.js	/^				propertyIndex = parsedPath.propertyIndex;$/;"	r
propertyIndex	js/three.js	/^				this.propertyIndex = propertyIndex;$/;"	r
propertyMixers	js/three.js	/^				var propertyMixers = this._propertyBindings;$/;"	r
propertyName	js/three.js	/^					propertyName: matches[ 5 ], \/\/ required$/;"	r
propertyName	js/three.js	/^				propertyName = parsedPath.propertyName,$/;"	r
propertyName	js/three.js	/^				this.propertyName = propertyName;$/;"	r
propertyRe	js/three.js	/^			var propertyRe = \/\\.([\\w-]+)(?:\\[(.+)\\])?\/;$/;"	r
prototype	js/GLTFLoader.js	/^	GLTFLoader.prototype = {$/;"	r
prototype	js/three.js	/^		construct.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {$/;"	r
prototype	js/three.js	/^	ArcCurve.prototype = Object.create( EllipseCurve.prototype );$/;"	r
prototype	js/three.js	/^	ArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {$/;"	r
prototype	js/three.js	/^	ArrowHelper.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	AxesHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	BooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {$/;"	r
prototype	js/three.js	/^	Box3Helper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	BoxGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	BoxHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	Camera.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	CameraHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	CanvasTexture.prototype = Object.create( Texture.prototype );$/;"	r
prototype	js/three.js	/^	CatmullRomCurve3.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	CircleGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	ClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );$/;"	r
prototype	js/three.js	/^	ColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {$/;"	r
prototype	js/three.js	/^	CompressedTexture.prototype = Object.create( Texture.prototype );$/;"	r
prototype	js/three.js	/^	ConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );$/;"	r
prototype	js/three.js	/^	CubeCamera.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	CubeTexture.prototype = Object.create( Texture.prototype );$/;"	r
prototype	js/three.js	/^	CubicBezierCurve.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	CubicBezierCurve3.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	CubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {$/;"	r
prototype	js/three.js	/^	CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {$/;"	r
prototype	js/three.js	/^	CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	CylinderGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	DataTexture.prototype = Object.create( Texture.prototype );$/;"	r
prototype	js/three.js	/^	DepthTexture.prototype = Object.create( Texture.prototype );$/;"	r
prototype	js/three.js	/^	DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {$/;"	r
prototype	js/three.js	/^	DirectionalLightHelper.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {$/;"	r
prototype	js/three.js	/^	DiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {$/;"	r
prototype	js/three.js	/^	DodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	DodecahedronGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	EllipseCurve.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	ExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	ExtrudeGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	Float32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	Float64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	GridHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	Group.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {$/;"	r
prototype	js/three.js	/^	HemisphereLightHelper.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	IcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	IcosahedronGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	ImmediateRenderObject.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	InstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {$/;"	r
prototype	js/three.js	/^	InstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {$/;"	r
prototype	js/three.js	/^	InstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {$/;"	r
prototype	js/three.js	/^	Int16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	Int32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	Int8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	KeyframeTrack.prototype = KeyframeTrackPrototype;$/;"	r
prototype	js/three.js	/^	LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	LatheGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	LensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	Light.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	Line.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	LineBasicMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	LineCurve.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	LineCurve3.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	LineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );$/;"	r
prototype	js/three.js	/^	LineLoop.prototype = Object.assign( Object.create( Line.prototype ), {$/;"	r
prototype	js/three.js	/^	LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {$/;"	r
prototype	js/three.js	/^	LinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {$/;"	r
prototype	js/three.js	/^	Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	MeshBasicMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshDepthMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshDistanceMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshLambertMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshNormalMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshPhongMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );$/;"	r
prototype	js/three.js	/^	MeshStandardMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	MeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );$/;"	r
prototype	js/three.js	/^	NumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {$/;"	r
prototype	js/three.js	/^	OctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	OctahedronGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {$/;"	r
prototype	js/three.js	/^	ParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	ParametricGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	Path.prototype = PathPrototype;$/;"	r
prototype	js/three.js	/^	PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {$/;"	r
prototype	js/three.js	/^	PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	PlaneGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	PlaneHelper.prototype = Object.create( Line.prototype );$/;"	r
prototype	js/three.js	/^	PointLight.prototype = Object.assign( Object.create( Light.prototype ), {$/;"	r
prototype	js/three.js	/^	PointLightHelper.prototype = Object.create( Mesh.prototype );$/;"	r
prototype	js/three.js	/^	Points.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	PointsMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	PolarGridHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	PolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	PolyhedronGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {$/;"	r
prototype	js/three.js	/^	QuadraticBezierCurve.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	QuadraticBezierCurve3.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	QuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {$/;"	r
prototype	js/three.js	/^	QuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {$/;"	r
prototype	js/three.js	/^	RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );$/;"	r
prototype	js/three.js	/^	RectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {$/;"	r
prototype	js/three.js	/^	RectAreaLightHelper.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	RingGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	Scene.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	ShaderMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	ShadowMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	Shape.prototype = Object.assign( Object.create( PathPrototype ), {$/;"	r
prototype	js/three.js	/^	ShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	ShapeGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	SkeletonHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {$/;"	r
prototype	js/three.js	/^	SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	SphereGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	Spline.prototype = Object.create( CatmullRomCurve3.prototype );$/;"	r
prototype	js/three.js	/^	SplineCurve.prototype = Object.create( Curve.prototype );$/;"	r
prototype	js/three.js	/^	SplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );$/;"	r
prototype	js/three.js	/^	SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {$/;"	r
prototype	js/three.js	/^	SpotLightHelper.prototype = Object.create( Object3D.prototype );$/;"	r
prototype	js/three.js	/^	SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {$/;"	r
prototype	js/three.js	/^	Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {$/;"	r
prototype	js/three.js	/^	SpriteMaterial.prototype = Object.create( Material.prototype );$/;"	r
prototype	js/three.js	/^	StringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {$/;"	r
prototype	js/three.js	/^	TetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	TetrahedronGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	TextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	TextGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	TorusGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	TorusKnotGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	TubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.js	/^	TubeGeometry.prototype = Object.create( Geometry.prototype );$/;"	r
prototype	js/three.js	/^	Uint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	Uint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	Uint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	Uint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );$/;"	r
prototype	js/three.js	/^	VectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {$/;"	r
prototype	js/three.js	/^	VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );$/;"	r
prototype	js/three.js	/^	VideoTexture.prototype = Object.create( Texture.prototype );$/;"	r
prototype	js/three.js	/^	WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );$/;"	r
prototype	js/three.js	/^	WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );$/;"	r
prototype	js/three.min.js	/^!1):this.loop},setLoop:function(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(a){this.gain.gain.value=a;return this}});he.prototype=Object.assign(Object.create(ic.prototype),{constructor:he,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=$/;"	r
prototype	js/three.min.js	/^$c.prototype=Object.create(w.prototype);$c.prototype.constructor=$c;fe.prototype=Object.assign(Object.create(w.prototype),{constructor:fe,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(a){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):$/;"	r
prototype	js/three.min.js	/^.5,te.initCatmullRom(f.x,g.x,h.x,c.x,d),ue.initCatmullRom(f.y,g.y,h.y,c.y,d),ve.initCatmullRom(f.z,g.z,h.z,c.z,d));b.set(te.calc(a),ue.calc(a),ve.calc(a));return b};qc.prototype=Object.create(ca.prototype);qc.prototype.constructor=qc;qc.prototype.isCubicBezierCurve3=!0;qc.prototype.getPoint=function(a,b){b=b||new p;var c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(vb(a,c.x,d.x,e.x,f.x),vb(a,c.y,d.y,e.y,f.y),vb(a,c.z,d.z,e.z,f.z));return b};rc.prototype=Object.create(ca.prototype);rc.prototype.constructor=$/;"	r
prototype	js/three.min.js	/^0,1,-1);b.getAttribute("position").needsUpdate=!0}}();Ab.prototype=Object.create(P.prototype);Ab.prototype.constructor=Ab;Ab.prototype.update=function(){var a=new Na;return function(b){void 0!==b&&console.warn("THREE.BoxHelper: .update() has no longer arguments.");void 0!==this.object&&a.setFromObject(this.object);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=$/;"	r
prototype	js/three.min.js	/^1:a+2];b.set(Se(d,e.x,f.x,g.x,c.x),Se(d,e.y,f.y,g.y,c.y));return b};xb.prototype=Object.create(ca.prototype);xb.prototype.constructor=xb;xb.prototype.isCubicBezierCurve=!0;xb.prototype.getPoint=function(a,b){b=b||new D;var c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(vb(a,c.x,d.x,e.x,f.x),vb(a,c.y,d.y,e.y,f.y));return b};yb.prototype=Object.create(ca.prototype);yb.prototype.constructor=yb;yb.prototype.isQuadraticBezierCurve=!0;yb.prototype.getPoint=function(a,b){b=b||new D;var c=this.v0,d=this.v1,$/;"	r
prototype	js/three.min.js	/^Ec.prototype=Object.assign(Object.create(w.prototype),{constructor:Ec});sd.prototype=Object.create(da.prototype);sd.prototype.constructor=sd;Nb.prototype=Object.create(da.prototype);Nb.prototype.constructor=Nb;Nb.prototype.isCompressedTexture=!0;Fc.prototype=Object.create(da.prototype);Fc.prototype.constructor=Fc;Fc.prototype.isDepthTexture=!0;Ob.prototype=Object.create(C.prototype);Ob.prototype.constructor=Ob;Gc.prototype=Object.create(L.prototype);Gc.prototype.constructor=Gc;Pb.prototype=Object.create(C.prototype);$/;"	r
prototype	js/three.min.js	/^Fd.prototype=Object.assign(Object.create(ab),{constructor:Fd,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Gd.prototype=Object.assign(Object.create(ab),{constructor:Gd,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Hd.prototype=Object.assign(Object.create(ab),{constructor:Hd,ValueTypeName:"color"});$/;"	r
prototype	js/three.min.js	/^Kc;Rb.prototype=Object.create(sa.prototype);Rb.prototype.constructor=Rb;Lc.prototype=Object.create(L.prototype);Lc.prototype.constructor=Lc;Sb.prototype=Object.create(sa.prototype);Sb.prototype.constructor=Sb;Mc.prototype=Object.create(L.prototype);Mc.prototype.constructor=Mc;Tb.prototype=Object.create(C.prototype);Tb.prototype.constructor=Tb;Nc.prototype=Object.create(L.prototype);Nc.prototype.constructor=Nc;Ub.prototype=Object.create(C.prototype);Ub.prototype.constructor=Ub;Oc.prototype=Object.create(L.prototype);$/;"	r
prototype	js/three.min.js	/^Object.create(la.prototype);ff.prototype=Object.create(la.prototype);re.prototype=Object.create(la.prototype);Object.assign(re.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});cd.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};$/;"	r
prototype	js/three.min.js	/^Pc;Wb.prototype=Object.create(Ga.prototype);Wb.prototype.constructor=Wb;Qc.prototype=Object.create(L.prototype);Qc.prototype.constructor=Qc;kb.prototype=Object.create(C.prototype);kb.prototype.constructor=kb;Rc.prototype=Object.create(L.prototype);Rc.prototype.constructor=Rc;Xb.prototype=Object.create(C.prototype);Xb.prototype.constructor=Xb;Sc.prototype=Object.create(L.prototype);Sc.prototype.constructor=Sc;Yb.prototype=Object.create(C.prototype);Yb.prototype.constructor=Yb;Zb.prototype=Object.create(L.prototype);$/;"	r
prototype	js/three.min.js	/^Vc;bc.prototype=Object.create(C.prototype);bc.prototype.constructor=bc;var Ca=Object.freeze({WireframeGeometry:Ob,ParametricGeometry:Gc,ParametricBufferGeometry:Pb,TetrahedronGeometry:Ic,TetrahedronBufferGeometry:Qb,OctahedronGeometry:Jc,OctahedronBufferGeometry:jb,IcosahedronGeometry:Kc,IcosahedronBufferGeometry:Rb,DodecahedronGeometry:Lc,DodecahedronBufferGeometry:Sb,PolyhedronGeometry:Hc,PolyhedronBufferGeometry:sa,TubeGeometry:Mc,TubeBufferGeometry:Tb,TorusKnotGeometry:Nc,TorusKnotBufferGeometry:Ub,$/;"	r
prototype	js/three.min.js	/^a))};gd.prototype=Object.create(oa.prototype);gd.prototype.constructor=gd;gd.prototype.updateMatrixWorld=function(a){var b=-this.plane.constant;1E-8>Math.abs(b)&&(b=1E-8);this.scale.set(.5*this.size,.5*this.size,b);this.lookAt(this.plane.normal);w.prototype.updateMatrixWorld.call(this,a)};var Ld,pe;Bb.prototype=Object.create(w.prototype);Bb.prototype.constructor=Bb;Bb.prototype.setDirection=function(){var a=new p,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,$/;"	r
prototype	js/three.min.js	/^a.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});vd.prototype=Object.assign(Object.create(rb.prototype),{constructor:vd,isSpotLightShadow:!0,update:function(a){var b=this.camera,c=2*R.RAD2DEG*a.angle,d=this.mapSize.width\/this.mapSize.height;a=a.distance||b.far;if(c!==b.fov||d!==b.aspect||a!==b.far)b.fov=c,b.aspect=d,b.far=a,b.updateProjectionMatrix()}});wd.prototype=Object.assign(Object.create(fa.prototype),{constructor:wd,isSpotLight:!0,copy:function(a){fa.prototype.copy.call(this,$/;"	r
prototype	js/three.min.js	/^a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0}}();pc.prototype=Object.create(w.prototype);pc.prototype.constructor=pc;pc.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};pc.prototype.update=function(){var a=new p,b=new p,c=new p;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,$/;"	r
prototype	js/three.min.js	/^cc.prototype=Object.create(Q.prototype);cc.prototype.constructor=cc;cc.prototype.isShadowMaterial=!0;dc.prototype=Object.create(Aa.prototype);dc.prototype.constructor=dc;dc.prototype.isRawShaderMaterial=!0;La.prototype=Object.create(Q.prototype);La.prototype.constructor=La;La.prototype.isMeshStandardMaterial=!0;La.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.defines={STANDARD:""};this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=$/;"	r
prototype	js/three.min.js	/^d.y,d.z,f.x,f.y,f.z))}}()});ic.prototype=Object.assign(Object.create(w.prototype),{constructor:ic,getOutput:function(){return this.gain},setNodeSource:function(a){this.hasPlaybackControl=!1;this.sourceType="audioNode";this.source=a;this.connect();return this},setBuffer:function(a){this.buffer=a;this.sourceType="buffer";this.autoplay&&this.play();return this},play:function(){if(!0===this.isPlaying)console.warn("THREE.Audio: Audio is already playing.");else if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");$/;"	r
prototype	js/three.min.js	/^d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(a){this.onUploadCallback=a;return this}});me.prototype=Object.assign(Object.create(jc.prototype),{constructor:me,isInstancedInterleavedBuffer:!0,copy:function(a){jc.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this}});ne.prototype=Object.assign(Object.create(O.prototype),{constructor:ne,isInstancedBufferAttribute:!0,$/;"	r
prototype	js/three.min.js	/^for(a=0;a<b;a++){var e=this.lensFlares[a];e.x=this.positionScreen.x+c*e.distance;e.y=this.positionScreen.y+d*e.distance;e.wantedRotation=e.x*Math.PI*.25;e.rotation+=.25*(e.wantedRotation-e.rotation)}}});Ya.prototype=Object.create(Q.prototype);Ya.prototype.constructor=Ya;Ya.prototype.isSpriteMaterial=!0;Ya.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;return this};Bc.prototype=Object.assign(Object.create(w.prototype),{constructor:Bc,$/;"	r
prototype	js/three.min.js	/^function(){var c=0<a.search(\/\\.(jpg|jpeg)$\/)||0===a.search(\/^data\\:image\\\/jpeg\/);f.format=c?1022:1023;f.needsUpdate=!0;void 0!==b&&b(f)},c,d);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});fa.prototype=Object.assign(Object.create(w.prototype),{constructor:fa,isLight:!0,copy:function(a){w.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=w.prototype.toJSON.call(this,$/;"	r
prototype	js/three.min.js	/^id.prototype=Object.create(Sa.prototype);id.prototype.constructor=id;id.prototype.isArcCurve=!0;ca.create=function(a,b){console.log("THREE.Curve.create() has been deprecated");a.prototype=Object.create(ca.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};Object.assign(hc.prototype,{createPointsGeometry:function(a){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");a=this.getPoints(a);return this.createGeometry(a)},$/;"	r
prototype	js/three.min.js	/^oa.prototype=Object.assign(Object.create(w.prototype),{constructor:oa,isLine:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new p,l=new p,h=new p,q=new p,n=this&&this.isLineSegments?2:1;if(g.isBufferGeometry){var m=g.index;var r=g.attributes.position.array;$/;"	r
prototype	js/three.min.js	/^tb.prototype=ab;ab.constructor=tb;Object.assign(tb,{parse:function(a){if(void 0===a.type)throw Error("track type undefined, can not parse");var b=tb._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];S.flattenJSON(a.keys,c,d,"value");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:S.convertArray(a.times,Array),values:S.convertArray(a.values,$/;"	r
prototype	js/three.min.js	/^this.boneInverses)}});pd.prototype=Object.assign(Object.create(w.prototype),{constructor:pd,isBone:!0});qd.prototype=Object.assign(Object.create(qa.prototype),{constructor:qd,isSkinnedMesh:!0,initBones:function(){var a=[],b;if(this.geometry&&void 0!==this.geometry.bones){var c=0;for(b=this.geometry.bones.length;c<b;c++){var d=this.geometry.bones[c];var e=new pd;a.push(e);e.name=d.name;e.position.fromArray(d.pos);e.quaternion.fromArray(d.rotq);void 0!==d.scl&&e.scale.fromArray(d.scl)}c=0;for(b=this.geometry.bones.length;c<$/;"	r
prototype	js/three.min.js	/^this.itemSize)).copy(this)}});tc.prototype=Object.create(O.prototype);tc.prototype.constructor=tc;uc.prototype=Object.create(O.prototype);uc.prototype.constructor=uc;vc.prototype=Object.create(O.prototype);vc.prototype.constructor=vc;wc.prototype=Object.create(O.prototype);wc.prototype.constructor=wc;db.prototype=Object.create(O.prototype);db.prototype.constructor=db;xc.prototype=Object.create(O.prototype);xc.prototype.constructor=xc;eb.prototype=Object.create(O.prototype);eb.prototype.constructor=$/;"	r
prototype	js/three.min.js	/^this.material)).copy(this)}});P.prototype=Object.assign(Object.create(oa.prototype),{constructor:P,isLineSegments:!0});rd.prototype=Object.assign(Object.create(oa.prototype),{constructor:rd,isLineLoop:!0});Ba.prototype=Object.create(Q.prototype);Ba.prototype.constructor=Ba;Ba.prototype.isPointsMaterial=!0;Ba.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;return this};Mb.prototype=Object.assign(Object.create(w.prototype),$/;"	r
prototype	js/three.min.js	/^this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});sc.prototype=Object.create(da.prototype);sc.prototype.constructor=sc;var Lf=0;Object.assign(Q.prototype,ia.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+$/;"	r
prototype	js/three.min.js	/^this.projectionMatrix.copy(a.projectionMatrix);return this},getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}(),updateMatrixWorld:function(a){w.prototype.updateMatrixWorld.call(this,a);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});Gb.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Gb,isOrthographicCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,$/;"	r
prototype	js/three.min.js	/^zc;gb.prototype=Object.create(C.prototype);gb.prototype.constructor=gb;va.prototype=Object.create(Q.prototype);va.prototype.constructor=va;va.prototype.isMeshBasicMaterial=!0;va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=$/;"	r
prototypeAction	js/three.js	/^				prototypeAction = actionsForClip.knownActions[ 0 ];$/;"	r
prototypeAction	js/three.js	/^				prototypeAction = null;$/;"	r
pt1	js/three.js	/^			var pt1 = this.getPoint( t1 );$/;"	r
pt2	js/three.js	/^			var pt2 = this.getPoint( t2 );$/;"	r
ptNextShift_x	js/three.js	/^				var ptNextShift_x = ( inNext.x - v_next_y \/ v_next_len );$/;"	r
ptNextShift_y	js/three.js	/^				var ptNextShift_y = ( inNext.y + v_next_x \/ v_next_len );$/;"	r
ptPrevShift_x	js/three.js	/^				var ptPrevShift_x = ( inPrev.x - v_prev_y \/ v_prev_len );$/;"	r
ptPrevShift_y	js/three.js	/^				var ptPrevShift_y = ( inPrev.y + v_prev_x \/ v_prev_len );$/;"	r
pts	js/three.js	/^				var pts = [];$/;"	r
pts	js/three.js	/^				var pts = curve.getPoints( resolution );$/;"	r
pts	js/three.js	/^			var pts = this.getPoints( divisions );$/;"	r
pts	js/three.js	/^			var pts = this.getSpacedPoints( divisions );$/;"	r
pu	js/three.js	/^		var pu = new Vector3(), pv = new Vector3();$/;"	r
push	js/three.js	/^			push: push,$/;"	r
push	js/three.js	/^		function push( object, geometry, material, z, group ) {$/;"	r
pushVertex	js/three.js	/^		function pushVertex( vertex ) {$/;"	r
pvr	js/three.js	/^	 * Abstract Base class to block based textures loader (dds, pvr, ...)$/;"	r
px	js/three.js	/^					px = contour[ verts[ p ] ].x;$/;"	r
px	js/three.js	/^	var px = new CubicPoly();$/;"	r
py	js/three.js	/^					py = contour[ verts[ p ] ].y;$/;"	r
py	js/three.js	/^	var py = new CubicPoly();$/;"	r
pz	js/three.js	/^	var pz = new CubicPoly();$/;"	r
q	js/three.js	/^								data.q$/;"	r
q	js/three.js	/^					var q = ( 2 * l ) - p;$/;"	r
q	js/three.js	/^				for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {$/;"	r
q	js/three.js	/^			for ( var p = n - 1, q = 0; q < n; p = q ++ ) {$/;"	r
q	js/three.js	/^			function hue2rgb( p, q, t ) {$/;"	r
q	js/three.js	/^			var q = new Quaternion();$/;"	r
q	js/three.js	/^		q = q || 3;$/;"	r
q	js/three.min.js	/^!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var q=[],n=[],u=[],m=[],v=0,t=[],x=c\/2,y=0;(function(){var f,k,r=new p,J=new p,w=0,z=(b-a)\/c;for(k=0;k<=e;k++){var D=[],C=k\/e,E=C*(b-a)+a;for(f=0;f<=d;f++){var H=f\/d,M=H*h+g,L=Math.sin(M),M=Math.cos(M);J.x=E*L;J.y=-C*c+x;J.z=E*M;n.push(J.x,J.y,J.z);r.set(L,z,M).normalize();u.push(r.x,r.y,r.z);m.push(H,1-C);D.push(v++)}t.push(D)}for(f=0;f<d;f++)for(k=0;k<e;k++)r=t[k+1][f],J=t[k+1][f+1],z=t[k][f+1],q.push(t[k][f],r,z),q.push(r,J,z),w+=6;l.addGroup(y,w,0);$/;"	r
q	js/three.min.js	/^"color");q=b.getUniformLocation(B,"scale");n=b.getUniformLocation(B,"rotation");u=b.getUniformLocation(B,"screenPosition")}c.useProgram(B);c.initAttributes();c.enableAttribute(r);c.enableAttribute(m);c.disableUnusedAttributes();b.uniform1i(h,0);b.uniform1i(g,1);b.bindBuffer(b.ARRAY_BUFFER,t);b.vertexAttribPointer(r,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(m,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,x);c.disable(b.CULL_FACE);c.buffers.depth.setMask(!1);z=0;for(w=a.length;z<w;z++)if(M=$/;"	r
q	js/three.min.js	/^b,c,d));this.mergeVertices()}function gb(a,b,c,d){C.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a\/2,f=b\/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a\/c,l=b\/d,q=[],n=[],u=[],r=[];for(a=0;a<h;a++){var m=a*l-f;for(b=0;b<g;b++)n.push(b*k-e,-m,0),u.push(0,0,1),r.push(b\/c),r.push(1-a\/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,q.push(b+g*a,e,h),q.push(e,f,h);this.setIndex(q);this.addAttribute("position",$/;"	r
q	js/three.min.js	/^c.isShadowMaterial&&(q.color.value=c.color,q.opacity.value=c.opacity),void 0!==q.ltcMat&&(q.ltcMat.value=E.LTC_MAT_TEXTURE),void 0!==q.ltcMag&&(q.ltcMag.value=E.LTC_MAG_TEXTURE),cb.upload(F,e.uniformsList,q,M));k.setValue(F,"modelViewMatrix",d.modelViewMatrix);k.setValue(F,"normalMatrix",d.normalMatrix);k.setValue(F,"modelMatrix",d.matrixWorld);return l}function r(a,b){a.opacity.value=b.opacity;b.color&&(a.diffuse.value=b.color);b.emissive&&a.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity);$/;"	r
q	js/three.min.js	/^c;for(var n=c.cameras,u=0,r=n.length;u<r;u++){var m=n[u];if(h.layers.test(m.layers)){var v=m.bounds;aa.viewport(Q.set(v.x*W,v.y*ea,v.z*W,v.w*ea).multiplyScalar(P));q(h,b,m,l,k,g)}}}else Z=null,q(h,b,c,l,k,g)}}function q(a,b,c,d,e,f){a.onBeforeRender(M,b,c,d,e,f);a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld);a.normalMatrix.getNormalMatrix(a.modelViewMatrix);if(a.isImmediateRenderObject){aa.setMaterial(e);var h=u(c,b.fog,e,a);L="";g(a,h,e)}else M.renderBufferDirect(c,b.fog,$/;"	r
q	js/three.min.js	/^d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=f+g,k,l,q=0,n=[],u=new p,m=new p,v=[],t=[],x=[],y=[];for(l=0;l<=c;l++){var B=[],I=l\/c;for(k=0;k<=b;k++){var A=k\/b;u.x=-a*Math.cos(d+A*e)*Math.sin(f+I*g);u.y=a*Math.cos(f+I*g);u.z=a*Math.sin(d+A*e)*Math.sin(f+I*g);t.push(u.x,u.y,u.z);m.set(u.x,u.y,u.z).normalize();x.push(m.x,m.y,m.z);y.push(A,1-I);B.push(q++)}n.push(B)}for(l=0;l<c;l++)for(k=0;k<b;k++)a=n[l][k+1],d=n[l][k],e=n[l+1][k],g=n[l+1][k+1],(0!==l||0<f)&&v.push(a,d,$/;"	r
q	js/three.min.js	/^else{void 0===h&&(h=0);aa.initAttributes();var q=c.attributes,g=g.getAttributes(),r=d.defaultAttributeValues;for(J in g){var m=g[J];if(0<=m){var v=q[J];if(void 0!==v){var p=v.normalized,t=v.itemSize,x=pa.get(v);if(void 0!==x){var B=x.buffer,y=x.type,x=x.bytesPerElement;if(v.isInterleavedBufferAttribute){var A=v.data,I=A.stride,v=v.offset;A&&A.isInstancedInterleavedBuffer?(aa.enableAttributeAndDivisor(m,A.meshPerAttribute),void 0===c.maxInstancedCount&&(c.maxInstancedCount=A.meshPerAttribute*A.count)):$/;"	r
q	js/three.min.js	/^function(b,q){var u=d.get(b);if(6===b.image.length)if(0<b.version&&u.__version!==b.version){u.__image__webglTextureCube||(b.addEventListener("dispose",n),u.__image__webglTextureCube=a.createTexture(),g.textures++);c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_CUBE_MAP,u.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);q=b&&b.isCompressedTexture;for(var r=b.image[0]&&b.image[0].isDataTexture,v=[],t=0;6>t;t++)v[t]=q||r?r?b.image[t].image:b.image[t]:h(b.image[t],e.maxCubemapSize);$/;"	r
q	js/three.min.js	/^h.length;for(Od.lastIndex=0;;){var l=Od.exec(h),q=Od.lastIndex,n=l[1],u=l[3];"]"===l[2]&&(n|=0);if(void 0===u||"["===u&&q+2===k){h=g;e=void 0===u?new Hf(n,e,f):new If(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else u=g.map[n],void 0===u&&(u=new Ge(n),n=g,g=u,n.seq.push(g),n.map[g.id]=g),g=u}}}function H(a,b,c){return void 0===b&&void 0===c?this.set(a):this.setRGB(a,b,c)}function kd(a,b){this.min=void 0!==a?a:new D(Infinity,Infinity);this.max=void 0!==b?b:new D(-Infinity,-Infinity)}function Jf(a,b,c,$/;"	r
q	js/three.min.js	/^new L;g.fromBufferGeometry(a)}else g=a.clone();g.mergeVertices();g.computeFaceNormals();a=g.vertices;g=g.faces;for(var h=0,k=g.length;h<k;h++)for(var l=g[h],q=0;3>q;q++){var n=l[f[q]];var u=l[f[(q+1)%3]];d[0]=Math.min(n,u);d[1]=Math.max(n,u);n=d[0]+","+d[1];void 0===e[n]?e[n]={index1:d[0],index2:d[1],face1:h,face2:void 0}:e[n].face2=h}for(n in e)if(d=e[n],void 0===d.face2||g[d.face1].normal.dot(g[d.face2].normal)<=b)f=a[d.index1],c.push(f.x,f.y,f.z),f=a[d.index2],c.push(f.x,f.y,f.z);this.addAttribute("position",$/;"	r
q	js/three.min.js	/^new p;if(null!==a.index){k=a.attributes.position;q=a.index;var r=a.groups;0===r.length&&(r=[{start:0,count:q.count,materialIndex:0}]);a=0;for(e=r.length;a<e;++a)for(l=r[a],c=l.start,d=l.count,l=c,d=c+d;l<d;l+=3)for(c=0;3>c;c++)n=q.getX(l+c),u=q.getX(l+(c+1)%3),f[0]=Math.min(n,u),f[1]=Math.max(n,u),n=f[0]+","+f[1],void 0===g[n]&&(g[n]={index1:f[0],index2:f[1]});for(n in g)l=g[n],h.fromBufferAttribute(k,l.index1),b.push(h.x,h.y,h.z),h.fromBufferAttribute(k,l.index2),b.push(h.x,h.y,h.z)}else for(k=a.attributes.position,$/;"	r
q	js/three.min.js	/^this.attributes.normal.array,e=new p,f=new p,g=new p,c=b*a.length*3,n=q=0;q<a.length;q++,n+=3)e.x=d[n+0],e.y=d[n+1],e.z=d[n+2],f.x=d[c+n+0],f.y=d[c+n+1],f.z=d[c+n+2],g.addVectors(e,f).normalize(),d[n+0]=d[c+n+0]=g.x,d[n+1]=d[c+n+1]=g.y,d[n+2]=d[c+n+2]=g.z}function Zb(a,b){L.call(this);this.type="ShapeGeometry";"object"===typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new $b(a,$/;"	r
q1	js/three.js	/^			var q1 = new Quaternion();$/;"	r
qa	js/three.min.js	/^b?b:new p;this.c=void 0!==c?c:new p}function qa(a,b){w.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new va({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Qf(a,b,c,d){function e(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d)}var f=new H(0),g=0,h,k,l;return{getClearColor:function(){return f},setClearColor:function(a,b){f.set(a);g=void 0!==b?b:1;e(f,g)},getClearAlpha:function(){return g},setClearAlpha:function(a){g=a;e(f,$/;"	r
qax	js/three.js	/^			var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;$/;"	r
qb	js/three.js	/^		slerp: function ( qa, qb, qm, t ) {$/;"	r
qb	js/three.min.js	/^1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function qb(a){T.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}function Yd(a,b,c){var d=this,e=!1,f=0,g=0,h=void 0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,$/;"	r
qb	js/three.min.js	/^qb;qb.prototype.isLineDashedMaterial=!0;qb.prototype.copy=function(a){T.prototype.copy.call(this,a);this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;return this};var tg=Object.freeze({ShadowMaterial:cc,SpriteMaterial:Ya,RawShaderMaterial:dc,ShaderMaterial:Aa,PointsMaterial:Ba,MeshPhysicalMaterial:mb,MeshStandardMaterial:La,MeshPhongMaterial:Ia,MeshToonMaterial:nb,MeshNormalMaterial:ob,MeshLambertMaterial:pb,MeshDepthMaterial:Va,MeshDistanceMaterial:Wa,MeshBasicMaterial:va,LineDashedMaterial:qb,$/;"	r
qbx	js/three.js	/^			var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;$/;"	r
qc	js/three.min.js	/^.5,te.initCatmullRom(f.x,g.x,h.x,c.x,d),ue.initCatmullRom(f.y,g.y,h.y,c.y,d),ve.initCatmullRom(f.z,g.z,h.z,c.z,d));b.set(te.calc(a),ue.calc(a),ve.calc(a));return b};qc.prototype=Object.create(ca.prototype);qc.prototype.constructor=qc;qc.prototype.isCubicBezierCurve3=!0;qc.prototype.getPoint=function(a,b){b=b||new p;var c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(vb(a,c.x,d.x,e.x,f.x),vb(a,c.y,d.y,e.y,f.y),vb(a,c.z,d.z,e.z,f.z));return b};rc.prototype=Object.create(ca.prototype);rc.prototype.constructor=$/;"	r
qe	js/three.min.js	/^0,0,0,0,a];a=new C;a.addAttribute("position",new z(b,3));a.addAttribute("color",new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new T({vertexColors:2});P.call(this,a,b)}function qe(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,k){e=k*(g-e);h=k*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,k,l,q){e=((f-e)\/k-(g-e)\/(k+l)+(g-f)\/l)*l;h=((g-f)\/l-(h-f)\/(l+q)+(h-g)\/q)*l;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+$/;"	r
qg	js/three.min.js	/^c+" extension not supported.");return b[c]=d}}}function qg(){function a(){l.value!==d&&(l.value=d,l.needsUpdate=0<e);c.numPlanes=e;c.numIntersection=0}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=l.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;k.getNormalMatrix(b);if(null===g||g.length<e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,k),h.normal.toArray(g,d),g[d+3]=h.constant}l.value=g;l.needsUpdate=!0}c.numPlanes=f;return g}var c=this,d=null,$/;"	r
quOverP	js/three.js	/^			var quOverP = q \/ p * u;$/;"	r
quadraticAttenuation	js/GLTFLoader.js	/^					lightNode.decay = light.quadraticAttenuation;$/;"	r
quadraticCurveTo	js/three.js	/^		quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {$/;"	r
quaternion	js/three.js	/^				this.matrixWorld.decompose( position, quaternion, result );$/;"	r
quaternion	js/three.js	/^				this.matrixWorld.decompose( position, quaternion, scale );$/;"	r
quaternion	js/three.js	/^			quaternion: {$/;"	r
quaternion	js/three.js	/^			return function decompose( position, quaternion, scale ) {$/;"	r
quaternion	js/three.js	/^			var quaternion = new Quaternion();$/;"	r
quaternion	js/three.js	/^		compose: function ( position, quaternion, scale ) {$/;"	r
quaternion	js/three.js	/^		var quaternion = new Quaternion();$/;"	r
quaternion	js/three.min.js	/^this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},toJSON:function(a){function b(b,c){void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a));return c.uuid}function c(a){var b=$/;"	r
qx	js/three.js	/^			var qx = q.x, qy = q.y, qz = q.z, qw = q.w;$/;"	r
r	js/three.js	/^							this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) \/ 100;$/;"	r
r	js/three.js	/^							this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) \/ 255;$/;"	r
r	js/three.js	/^						r = rnd & 0xf;$/;"	r
r	js/three.js	/^					r = 0;$/;"	r
r	js/three.js	/^					this.r = hue2rgb( q, p, h + 1 \/ 3 );$/;"	r
r	js/three.js	/^					this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) \/ 255;$/;"	r
r	js/three.js	/^					this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) \/ 255;$/;"	r
r	js/three.js	/^					this.r = this.g = this.b = l;$/;"	r
r	js/three.js	/^				array[ offset ++ ] = color.r;$/;"	r
r	js/three.js	/^				r = vFrom.dot( vTo ) + 1;$/;"	r
r	js/three.js	/^				this._w = r;$/;"	r
r	js/three.js	/^			 r, - t, 0, r, t, 0,$/;"	r
r	js/three.js	/^			arrayCacheF32[ n ] = r;$/;"	r
r	js/three.js	/^			arrayCacheI32[ n ] = r;$/;"	r
r	js/three.js	/^			array[ offset ] = this.r;$/;"	r
r	js/three.js	/^			r = arrayCacheF32[ n ];$/;"	r
r	js/three.js	/^			r = new Float32Array( n );$/;"	r
r	js/three.js	/^			r = new Int32Array( n );$/;"	r
r	js/three.js	/^			r = radius - ( radius \/ circles * i );$/;"	r
r	js/three.js	/^			state.ambient[ 0 ] = r;$/;"	r
r	js/three.js	/^			this.r *= color.r;$/;"	r
r	js/three.js	/^			this.r += color.r;$/;"	r
r	js/three.js	/^			this.r = ( hex >> 16 & 255 ) \/ 255;$/;"	r
r	js/three.js	/^			this.r = Math.max( 0, this.r - color.r );$/;"	r
r	js/three.js	/^			this.r = Math.pow( color.r, gammaFactor );$/;"	r
r	js/three.js	/^			this.r = Math.pow( color.r, safeInverse );$/;"	r
r	js/three.js	/^			this.r = Math.sqrt( this.r );$/;"	r
r	js/three.js	/^			this.r = array[ offset ];$/;"	r
r	js/three.js	/^			this.r = color.r;$/;"	r
r	js/three.js	/^			this.r = color1.r + color2.r;$/;"	r
r	js/three.js	/^			this.r = r * r;$/;"	r
r	js/three.js	/^			this.r = r;$/;"	r
r	js/three.js	/^			this.r = scalar;$/;"	r
r	js/three.js	/^			var r = 0, g = 0, b = 0;$/;"	r
r	js/three.js	/^			var r = this.r, g = this.g, b = this.b;$/;"	r
r	js/three.js	/^			var r;$/;"	r
r	js/three.js	/^		var r = 1 \/ t;$/;"	r
r	js/three.js	/^		var r = [];$/;"	r
r	js/three.js	/^		var r = arrayCacheI32[ n ];$/;"	r
r	js/three.js	/^	var specularmap_fragment = "float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif";$/;"	r
r	js/three.min.js	/^-1;for(var n in f){for(var p=[],r=[],m=0;m!==k[l].morphTargets.length;++m){var v=k[l];p.push(v.time);r.push(v.morphTarget===n?1:0)}d.push(new fc(".morphTargetInfluence["+n+"]",p,r))}f=f.length*(g||1)}else l=".bones["+b[h].name+"]",c(ec,l+".position",k,"pos",d),c(Yc,l+".quaternion",k,"rot",d),c(ec,l+".scale",k,"scl",d)}return 0===d.length?null:new ra(e,f,d)}});Object.assign(ra.prototype,{resetDuration:function(){for(var a=0,b=0,c=this.tracks.length;b!==c;++b)var d=this.tracks[b],a=Math.max(a,d.times[d.times.length-$/;"	r
r	js/three.min.js	/^0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},toJSON:function(){return this.getHex()}});var E={common:{diffuse:{value:new H(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ta},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},$/;"	r
r	js/three.min.js	/^0;e<d.uvs.length;e++)d.uvs[e].length&&u++;for(e=0;e<u;e++)c.faceVertexUvs[e]=[]}var r=0;for(g=k.length;r<g;)e=new p,e.x=k[r++]*n,e.y=k[r++]*n,e.z=k[r++]*n,c.vertices.push(e);r=0;for(g=h.length;r<g;){k=h[r++];var v=k&1;var t=k&2;e=k&8;var x=k&16;var y=k&32;n=k&64;k&=128;if(v){v=new Oa;v.a=h[r];v.b=h[r+1];v.c=h[r+3];var w=new Oa;w.a=h[r+1];w.b=h[r+2];w.c=h[r+3];r+=4;t&&(t=h[r++],v.materialIndex=t,w.materialIndex=t);t=c.faces.length;if(e)for(e=0;e<u;e++){var z=d.uvs[e];c.faceVertexUvs[e][t]=[];c.faceVertexUvs[e][t+$/;"	r
r	js/three.min.js	/^a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)):c.depthBuffer&&c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b)):a.renderbufferStorage(a.RENDERBUFFER,a.RGBA4,c.width,c.height);a.bindRenderbuffer(a.RENDERBUFFER,null)}var y="undefined"!==typeof WebGL2RenderingContext&&a instanceof window.WebGL2RenderingContext;this.setTexture2D=r;this.setTextureCube=$/;"	r
r	js/three.min.js	/^c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer);d.remove(b.texture);d.remove(b)}g.textures--}function r(b,q){var u=d.get(b);if(0<b.version&&u.__version!==b.version){var r=b.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",b);else if(!1===r.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",b);else{void 0===u.__webglInit&&(u.__webglInit=!0,b.addEventListener("dispose",n),u.__webglTexture=$/;"	r
r	js/three.min.js	/^c.faces.push(v)}}d=a;r=void 0!==d.influencesPerVertex?d.influencesPerVertex:2;if(d.skinWeights)for(g=0,h=d.skinWeights.length;g<h;g+=r)c.skinWeights.push(new ba(d.skinWeights[g],1<r?d.skinWeights[g+1]:0,2<r?d.skinWeights[g+2]:0,3<r?d.skinWeights[g+3]:0));if(d.skinIndices)for(g=0,h=d.skinIndices.length;g<h;g+=r)c.skinIndices.push(new ba(d.skinIndices[g],1<r?d.skinIndices[g+1]:0,2<r?d.skinIndices[g+2]:0,3<r?d.skinIndices[g+3]:0));c.bones=d.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||$/;"	r
r	js/three.min.js	/^c.isShadowMaterial&&(q.color.value=c.color,q.opacity.value=c.opacity),void 0!==q.ltcMat&&(q.ltcMat.value=E.LTC_MAT_TEXTURE),void 0!==q.ltcMag&&(q.ltcMag.value=E.LTC_MAG_TEXTURE),cb.upload(F,e.uniformsList,q,M));k.setValue(F,"modelViewMatrix",d.modelViewMatrix);k.setValue(F,"normalMatrix",d.normalMatrix);k.setValue(F,"modelMatrix",d.matrixWorld);return l}function r(a,b){a.opacity.value=b.opacity;b.color&&(a.diffuse.value=b.color);b.emissive&&a.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity);$/;"	r
r	js/three.min.js	/^d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var q=e[f+1],n=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==q||l!==n){f=1-g;var m=h*d+k*q+l*n+c*e,r=0<=m?1:-1,p=1-m*m;p>Number.EPSILON&&(p=Math.sqrt(p),m=Math.atan2(p,m*r),f=Math.sin(f*m)\/p,g=Math.sin(g*m)\/p);r*=g;h=h*f+d*r;k=k*f+q*r;l=l*f+n*r;c=c*f+e*r;f===1-g&&(g=1\/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;a[b+3]=c}});Object.defineProperties(X.prototype,{x:{get:function(){return this._x},$/;"	r
r	js/three.min.js	/^k(g[2]);k(g[3])}}}function f(a,b,c){r.push(a);r.push(b);r.push(c)}function g(a,b,c){h(a);h(b);h(c);a=m.length\/3;a=E.generateTopUV(R,m,a-3,a-2,a-1);k(a[0]);k(a[1]);k(a[2])}function h(a){n.push(m.length\/3);m.push(r[3*a+0]);m.push(r[3*a+1]);m.push(r[3*a+2])}function k(a){u.push(a.x);u.push(a.y)}var l=b.arrays?b.arrays:this.getArrays(),m=l.position,n=l.index,u=l.uv,r=[],l=void 0!==b.amount?b.amount:100,v=void 0!==b.bevelThickness?b.bevelThickness:6,t=void 0!==b.bevelSize?b.bevelSize:v-2,x=void 0!==b.bevelSegments?$/;"	r
r	js/three.min.js	/^new z(c,3))}function lb(a,b,c,d,e,f,g,h){L.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Ra(a,b,c,d,e,f,g,h));this.mergeVertices()}function Ra(a,b,c,d,e,f,g,h){function k(c){var e,f=new D,k=new p,r=0,t=!0===c?a:b,B=!0===c?1:-1;var w=v;for(e=1;e<=d;e++)n.push(0,x*B,0),u.push(0,B,0),m.push(.5,.5),v++;var z=v;for(e=0;e<=d;e++){var C=e\/d*h+g,M=Math.cos(C),$/;"	r
r	js/three.min.js	/^null,n,l,c,null))}c=c.children;n=0;for(u=c.length;n<u;n++)e(c[n],g,h,k)}}var f=new ld,g=new K,h=new D,k=new D(c,c),l=new p,q=new p,n=Array(4),u=Array(4),r={},m=[new p(1,0,0),new p(-1,0,0),new p(0,0,1),new p(0,0,-1),new p(0,1,0),new p(0,-1,0)],t=[new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,1,0),new p(0,0,1),new p(0,0,-1)],x=[new ba,new ba,new ba,new ba,new ba,new ba];for(c=0;4!==c;++c){var y=0!==(c&1),B=0!==(c&2),I=new Va({depthPacking:3201,morphTargets:y,skinning:B});n[c]=I;y=new Wa({morphTargets:y,$/;"	r
r	js/three.min.js	/^r;a++){var p=g[a].clone();void 0!==b&&p.applyMatrix4(b);f.push(p)}a=0;for(r=m.length;a<r;a++)n.push(m[a].clone());a=0;for(r=k.length;a<r;a++){var g=k[a],t=g.vertexNormals,m=g.vertexColors,n=new Oa(g.a+e,g.b+e,g.c+e);n.normal.copy(g.normal);void 0!==d&&n.normal.applyMatrix3(d).normalize();b=0;for(f=t.length;b<f;b++)p=t[b].clone(),void 0!==d&&p.applyMatrix3(d).normalize(),n.vertexNormals.push(p);n.color.copy(g.color);b=0;for(f=m.length;b<f;b++)p=m[b],n.vertexColors.push(p.clone());n.materialIndex=g.materialIndex+$/;"	r
r	js/three.min.js	/^r=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),m=0<h,t=!!b.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==e)return e;var c=b.get("EXT_texture_filter_anisotropic");return e=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:d,precision:f,logarithmicDepthBuffer:c,maxTextures:g,maxVertexTextures:h,maxTextureSize:k,maxCubemapSize:l,maxAttributes:q,maxVertexUniforms:n,maxVaryings:u,maxFragmentUniforms:r,vertexTextures:m,floatFragmentTextures:t,floatVertexTextures:m&&$/;"	r
r	js/three.min.js	/^specularmap_fragment:"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n",tonemapping_pars_fragment:"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color \/ ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) \/ ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 \/ 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) \/ Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) \/ ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n",$/;"	r
r	js/three.min.js	/^this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)\/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k\/(e+f):$/;"	r
r1	js/three.js	/^	var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 \/ cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) \/ exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 \/ powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz \/ abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n";$/;"	r
r1	js/three.min.js	/^cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 \/ cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) \/ exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 \/ powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz \/ abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n",$/;"	r
ra	js/three.min.js	/^ha.get("OES_texture_half_float_linear");ha.get("OES_standard_derivatives");ha.get("OES_element_index_uint");ha.get("ANGLE_instanced_arrays");ra=new Pe(F,ha);X=new ng(F,ha,a);aa=new mg(F,ha,ra);aa.scissor(V.copy(da).multiplyScalar(P));aa.viewport(Q.copy(ca).multiplyScalar(P));Y=new lg;S=new kg(F,ha,aa,Y,X,ra,Vd);pa=new Mf(F);qa=new Zf(F,pa,Vd);ta=new bg(qa,Qa);va=new Wf(F);oa=new jg(M,ha,X);ua=new ag;sa=new Uf;ia=new Qf(M,aa,qa,J);wa=new Yf(F,ha,Qa);xa=new Xf(F,ha,Qa);za=new Jf(M,F,aa,S,X);Aa=new Kf(M,$/;"	r
radToDeg	js/three.js	/^		radToDeg: function ( radians ) {$/;"	r
radialSegments	js/three.js	/^								data.radialSegments,$/;"	r
radialSegments	js/three.js	/^			radialSegments: radialSegments,$/;"	r
radialSegments	js/three.js	/^		radialSegments = Math.floor( radialSegments ) || 8;$/;"	r
radialSegments	js/three.js	/^		radialSegments = radialSegments || 8;$/;"	r
radials	js/three.js	/^		radials = radials || 16;$/;"	r
radials	js/three.js	/^	function PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {$/;"	r
radians	js/three.js	/^				radians = Math.acos( dir.y );$/;"	r
radians	js/three.js	/^		var radians;$/;"	r
radius	js/three.js	/^								data.radius,$/;"	r
radius	js/three.js	/^						uniforms.shadowRadius = shadow.radius;$/;"	r
radius	js/three.js	/^					if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;$/;"	r
radius	js/three.js	/^					radius: boundingSphere.radius$/;"	r
radius	js/three.js	/^					this.boundingSphere.radius = Math.sqrt( maxRadiusSq );$/;"	r
radius	js/three.js	/^				result.radius = this.getSize( v1 ).length() * 0.5;$/;"	r
radius	js/three.js	/^				sphere.radius = 0.7071067811865476;$/;"	r
radius	js/three.js	/^				this.radius = Math.sqrt( maxRadiusSq );$/;"	r
radius	js/three.js	/^				var radius = v * ( radiusBottom - radiusTop ) + radiusTop;$/;"	r
radius	js/three.js	/^			_sphere.radius = 0.7071067811865476;$/;"	r
radius	js/three.js	/^			if ( this.radius !== 1 ) object.radius = this.radius;$/;"	r
radius	js/three.js	/^			radius: radius,$/;"	r
radius	js/three.js	/^			return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;$/;"	r
radius	js/three.js	/^			return this.distanceToPoint( sphere.center ) <= sphere.radius;$/;"	r
radius	js/three.js	/^			this.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );$/;"	r
radius	js/three.js	/^			this.radius = other.radius;$/;"	r
radius	js/three.js	/^			this.radius = radius;$/;"	r
radius	js/three.js	/^			this.radius = source.radius;$/;"	r
radius	js/three.js	/^			this.radius = sphere.radius;$/;"	r
radius	js/three.js	/^			this.radius = this.radius * matrix.getMaxScaleOnAxis();$/;"	r
radius	js/three.js	/^			this.radius = vec3.length();$/;"	r
radius	js/three.js	/^			var radius = ( top === true ) ? radiusTop : radiusBottom;$/;"	r
radius	js/three.js	/^			var radius = this.boundingSphere.radius;$/;"	r
radius	js/three.js	/^		radius = radius || 10;$/;"	r
radius	js/three.js	/^		radius = radius || 1;$/;"	r
radius	js/three.js	/^		this.radius = ( radius !== undefined ) ? radius : 0;$/;"	r
radius	js/three.js	/^		this.radius = ( radius !== undefined ) ? radius : 1.0; \/\/ distance from the origin to a point in the x-z plane$/;"	r
radius	js/three.js	/^		this.radius = ( radius !== undefined ) ? radius : 1.0;$/;"	r
radius	js/three.js	/^		this.radius = 1;$/;"	r
radius	js/three.js	/^		var radius = innerRadius;$/;"	r
radius	js/three.min.js	/^a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});Object.assign(Da.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new Na;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).getCenter(d);for(var e=c=0,f=b.length;e<f;e++)c=Math.max(c,$/;"	r
radius	js/three.min.js	/^d.distanceToSquared(b[e]));this.radius=Math.sqrt(c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=$/;"	r
radius	js/three.min.js	/^radius:c.radius});return a},clone:function(){return(new C).copy(this)},copy:function(a){var b;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var c=a.index;null!==c&&this.setIndex(c.clone());c=a.attributes;for(g in c)this.addAttribute(g,c[g].clone());var d=a.morphAttributes;for(g in d){var e=[],f=d[g];c=0;for(b=f.length;c<b;c++)e.push(f[c].clone());this.morphAttributes[g]=e}var g=a.groups;c=0;for(b=g.length;c<b;c++)d=$/;"	r
radius2	js/three.js	/^				var radius2 = sphere.radius * sphere.radius;$/;"	r
radiusBottom	js/three.js	/^								data.radiusBottom,$/;"	r
radiusBottom	js/three.js	/^			radiusBottom: radiusBottom,$/;"	r
radiusBottom	js/three.js	/^		radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;$/;"	r
radiusBottom	js/three.js	/^		this.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );$/;"	r
radiusBottom	js/three.js	/^	function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
radiusBottom	js/three.js	/^	function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {$/;"	r
radiusBottom	js/three.min.js	/^C=Math.sin(C);k.x=t*C;k.y=x*B;k.z=t*M;n.push(k.x,k.y,k.z);u.push(0,B,0);f.x=.5*M+.5;f.y=.5*C*B+.5;m.push(f.x,f.y);v++}for(e=0;e<d;e++)f=w+e,k=z+e,!0===c?q.push(k,k+1,f):q.push(k+1,k,f),r+=3;l.addGroup(y,r,!0===c?1:2);y+=r}C.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};var l=this;a=void 0!==a?a:1;b=void 0!==b?b:1;c=c||1;d=Math.floor(d)||8;e=Math.floor(e)||1;f=void 0!==f?f:$/;"	r
radiusBottom	js/three.min.js	/^new z(c,3))}function lb(a,b,c,d,e,f,g,h){L.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Ra(a,b,c,d,e,f,g,h));this.mergeVertices()}function Ra(a,b,c,d,e,f,g,h){function k(c){var e,f=new D,k=new p,r=0,t=!0===c?a:b,B=!0===c?1:-1;var w=v;for(e=1;e<=d;e++)n.push(0,x*B,0),u.push(0,B,0),m.push(.5,.5),v++;var z=v;for(e=0;e<=d;e++){var C=e\/d*h+g,M=Math.cos(C),$/;"	r
radiusStep	js/three.js	/^			radius += radiusStep;$/;"	r
radiusStep	js/three.js	/^		var radiusStep = ( ( outerRadius - innerRadius ) \/ phiSegments );$/;"	r
radiusSum	js/three.js	/^			var radiusSum = this.radius + sphere.radius;$/;"	r
radiusTop	js/three.js	/^								data.radiusTop,$/;"	r
radiusTop	js/three.js	/^			radiusTop: radiusTop,$/;"	r
radiusTop	js/three.js	/^		radiusTop = radiusTop !== undefined ? radiusTop : 1;$/;"	r
randFloat	js/three.js	/^		randFloat: function ( low, high ) {$/;"	r
randFloatSpread	js/three.js	/^		randFloatSpread: function ( range ) {$/;"	r
randInt	js/three.js	/^		randInt: function ( low, high ) {$/;"	r
randInt	js/three.min.js	/^b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)\/(c-b);return a*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(a){return a*R.DEG2RAD},radToDeg:function(a){return a*R.RAD2DEG},isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},ceilPowerOfTwo:function(a){return Math.pow(2,Math.ceil(Math.log(a)\/Math.LN2))},floorPowerOfTwo:function(a){return Math.pow(2,$/;"	r
random16	js/three.js	/^		random16: function () {$/;"	r
rangeCount	js/three.js	/^			var rangeCount = geometry.drawRange.count * rangeFactor;$/;"	r
rangeFactor	js/three.js	/^				rangeFactor = 2;$/;"	r
rangeFactor	js/three.js	/^			var rangeFactor = 1;$/;"	r
rangeMax	js/three.min.js	/^memory:Vd,programs:null};try{y={alpha:y,depth:B,stencil:I,antialias:A,premultipliedAlpha:J,preserveDrawingBuffer:w};var F=x||t.getContext("webgl",y)||t.getContext("experimental-webgl",y);if(null===F){if(null!==t.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context.";}void 0===F.getShaderPrecisionFormat&&(F.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});t.addEventListener("webglcontextlost",c,!1);$/;"	r
rangeStart	js/three.js	/^			var rangeStart = geometry.drawRange.start * rangeFactor;$/;"	r
ratioA	js/three.js	/^			var ratioA = Math.sin( ( 1 - t ) * halfTheta ) \/ sinHalfTheta,$/;"	r
ratioB	js/three.js	/^				ratioB = Math.sin( t * halfTheta ) \/ sinHalfTheta;$/;"	r
ray	js/three.js	/^			var ray = new Ray();$/;"	r
ray	js/three.js	/^		this.ray = new Ray( origin, direction );$/;"	r
rayPointDistanceSq	js/three.js	/^					var rayPointDistanceSq = ray.distanceSqToPoint( point );$/;"	r
raycast	js/three.js	/^			return function raycast( raycaster, intersects ) {$/;"	r
raycast	js/three.js	/^		raycast: ( function () {$/;"	r
raycast	js/three.js	/^		raycast: function () {},$/;"	r
raycast	js/three.min.js	/^c)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,b=c.length;a<b;a++){var d=c[a].name||String(a);this.morphTargetInfluences.push(0);this.morphTargetDictionary[d]=a}}}else if(c=a.morphTargets,void 0!==c&&0<c.length)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},a=0,b=c.length;a<b;a++)d=c[a].name||String(a),this.morphTargetInfluences.push(0),this.morphTargetDictionary[d]=a},raycast:function(){function a(a,b,c,d,e,f,g){Pa.barycoordFromPoint(a,b,c,d,t);e.multiplyScalar(t.x);$/;"	r
raycast	js/three.min.js	/^getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,$/;"	r
raycast	js/three.min.js	/^isSprite:!0,raycast:function(){var a=new p,b=new p,c=new p;return function(d,e){b.setFromMatrixPosition(this.matrixWorld);d.ray.closestPointToPoint(b,a);c.setFromMatrixScale(this.matrixWorld);var f=c.x*c.y\/4;b.distanceToSquared(a)>f||(f=d.ray.origin.distanceTo(a),f<d.near||f>d.far||e.push({distance:f,point:a.clone(),face:null,object:this}))}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}});Cc.prototype=Object.assign(Object.create(w.prototype),{constructor:Cc,copy:function(a){w.prototype.copy.call(this,$/;"	r
raycast	js/three.min.js	/^oa.prototype=Object.assign(Object.create(w.prototype),{constructor:oa,isLine:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){var f=d.linePrecision,f=f*f,g=this.geometry,h=this.matrixWorld;null===g.boundingSphere&&g.computeBoundingSphere();c.copy(g.boundingSphere);c.applyMatrix4(h);if(!1!==d.ray.intersectsSphere(c)){a.getInverse(h);b.copy(d.ray).applyMatrix4(a);var k=new p,l=new p,h=new p,q=new p,n=this&&this.isLineSegments?2:1;if(g.isBufferGeometry){var m=g.index;var r=g.attributes.position.array;$/;"	r
raycast	js/three.min.js	/^{constructor:Mb,isPoints:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<m){a=b.closestPointToPoint(a);a.applyMatrix4(k);var h=d.ray.origin.distanceTo(a);h<d.near||h>d.far||e.push({distance:h,distanceToRay:Math.sqrt(f),point:a.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);$/;"	r
raycaster	js/three.js	/^							intersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );$/;"	r
raycaster	js/three.js	/^				intersectObject( children[ i ], raycaster, intersects, true );$/;"	r
raycaster	js/three.js	/^				var intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );$/;"	r
raycaster	js/three.js	/^			function checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {$/;"	r
raycaster	js/three.js	/^	function intersectObject( object, raycaster, intersects, recursive ) {$/;"	r
rc	js/three.min.js	/^rc;rc.prototype.isQuadraticBezierCurve3=!0;rc.prototype.getPoint=function(a,b){b=b||new p;var c=this.v0,d=this.v1,e=this.v2;b.set(ub(a,c.x,d.x,e.x),ub(a,c.y,d.y,e.y),ub(a,c.z,d.z,e.z));return b};Cb.prototype=Object.create(ca.prototype);Cb.prototype.constructor=Cb;Cb.prototype.isLineCurve3=!0;Cb.prototype.getPoint=function(a,b){b=b||new p;1===a?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(a).add(this.v1));return b};Cb.prototype.getPointAt=function(a,b){return this.getPoint(a,b)};$/;"	r
readOffset	js/three.js	/^						var readOffset = i * stride,$/;"	r
readRenderTargetPixels	js/three.js	/^		this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {$/;"	r
readRenderTargetPixels	js/three.min.js	/^a.isWebGLRenderTargetCube&&(b=b[a.activeCubeFace],c=!0),Q.copy(a.viewport),V.copy(a.scissor),T=a.scissorTest):(Q.copy(ca).multiplyScalar(P),V.copy(da).multiplyScalar(P),T=Oe);N!==b&&(F.bindFramebuffer(F.FRAMEBUFFER,b),N=b);aa.viewport(Q);aa.scissor(V);aa.setScissorTest(T);c&&(c=Y.get(a.texture),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,F.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,c.__webglTexture,a.activeMipMapLevel))};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(a&&a.isWebGLRenderTarget){var g=$/;"	r
recast	js/three.js	/^			return function recast( t ) {$/;"	r
recast	js/three.js	/^		recast: function () {$/;"	r
receiveShadow	js/three.js	/^				if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;$/;"	r
receiveShadow	js/three.js	/^			this.receiveShadow = source.receiveShadow;$/;"	r
receiveShadow	js/three.js	/^		this.receiveShadow = false;$/;"	r
receiveShadow	js/three.js	/^		this.receiveShadow = undefined;$/;"	r
rectArea	js/three.js	/^				uniforms.rectAreaLights.value = lights.state.rectArea;$/;"	r
rectArea	js/three.js	/^			rectArea: [],$/;"	r
rectAreaLength	js/three.js	/^			state.rectArea.length = rectAreaLength;$/;"	r
rectAreaLength	js/three.js	/^			var rectAreaLength = 0;$/;"	r
rectAreaLights	js/three.js	/^			rectAreaLights: { value: [], properties: {$/;"	r
refDistance	js/three.js	/^			this.panner.refDistance = value;$/;"	r
referenceCount	js/three.js	/^		this.referenceCount = 0;$/;"	r
referencePoint	js/three.js	/^				var referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );$/;"	r
referencePosition	js/three.js	/^					referencePosition: { value: new Vector3() },$/;"	r
referencePosition	js/three.js	/^		this.referencePosition = new Vector3();$/;"	r
reflect	js/three.js	/^			return function reflect( normal ) {$/;"	r
reflect	js/three.js	/^		reflect: function () {$/;"	r
reflectivity	js/three.js	/^				data.reflectivity = this.reflectivity; \/\/ Scale behind envMap$/;"	r
reflectivity	js/three.js	/^				uniforms.reflectivity.value = material.reflectivity;$/;"	r
reflectivity	js/three.js	/^			if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;$/;"	r
reflectivity	js/three.js	/^			reflectivity: { value: 1.0 },$/;"	r
reflectivity	js/three.js	/^		this.reflectivity = 0.5; \/\/ maps to F0 = 0.04$/;"	r
reflectivity	js/three.js	/^		this.reflectivity = 1;$/;"	r
reflectivity	js/three.js	/^		this.reflectivity = source.reflectivity;$/;"	r
reflectivity	js/three.min.js	/^a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};nb.prototype=Object.create(Ia.prototype);nb.prototype.constructor=nb;nb.prototype.isMeshToonMaterial=!0;nb.prototype.copy=function(a){Ia.prototype.copy.call(this,$/;"	r
refractionRatio	js/GLTFLoader.js	/^				material.refractionRatio = 0.98;$/;"	r
refractionRatio	js/GLTFLoader.js	/^				uniforms.refractionRatio.value = material.refractionRatio;$/;"	r
refractionRatio	js/three.js	/^				uniforms.refractionRatio.value = material.refractionRatio;$/;"	r
refractionRatio	js/three.js	/^			refractionRatio: { value: 0.98 }$/;"	r
refractionRatio	js/three.js	/^		this.refractionRatio = 0.98;$/;"	r
refractionRatio	js/three.js	/^		this.refractionRatio = source.refractionRatio;$/;"	r
refractionRatio	js/three.min.js	/^a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};Aa.prototype=Object.create(Q.prototype);Aa.prototype.constructor=Aa;Aa.prototype.isShaderMaterial=!0;Aa.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;$/;"	r
refreshLights	js/three.js	/^					refreshLights = true;		\/\/ remains set until update done$/;"	r
refreshLights	js/three.js	/^				refreshLights = true;$/;"	r
refreshLights	js/three.js	/^			var refreshLights = false;$/;"	r
refreshMaterial	js/three.js	/^					refreshMaterial = true;		\/\/ set to true on material change$/;"	r
refreshMaterial	js/three.js	/^				refreshMaterial = true;$/;"	r
refreshMaterial	js/three.js	/^			var refreshMaterial = false;$/;"	r
refreshProgram	js/three.js	/^				refreshProgram = true;$/;"	r
refreshProgram	js/three.js	/^			var refreshProgram = false;$/;"	r
refreshUniforms	js/GLTFLoader.js	/^			refreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {$/;"	r
refreshUniformsCommon	js/three.js	/^		function refreshUniformsCommon( uniforms, material ) {$/;"	r
refreshUniformsDash	js/three.js	/^		function refreshUniformsDash( uniforms, material ) {$/;"	r
refreshUniformsDepth	js/three.js	/^		function refreshUniformsDepth( uniforms, material ) {$/;"	r
refreshUniformsDistance	js/three.js	/^		function refreshUniformsDistance( uniforms, material ) {$/;"	r
refreshUniformsFog	js/three.js	/^		function refreshUniformsFog( uniforms, fog ) {$/;"	r
refreshUniformsLambert	js/three.js	/^		function refreshUniformsLambert( uniforms, material ) {$/;"	r
refreshUniformsLine	js/three.js	/^		function refreshUniformsLine( uniforms, material ) {$/;"	r
refreshUniformsNormal	js/three.js	/^		function refreshUniformsNormal( uniforms, material ) {$/;"	r
refreshUniformsPhong	js/three.js	/^		function refreshUniformsPhong( uniforms, material ) {$/;"	r
refreshUniformsPhysical	js/three.js	/^		function refreshUniformsPhysical( uniforms, material ) {$/;"	r
refreshUniformsPoints	js/three.js	/^		function refreshUniformsPoints( uniforms, material ) {$/;"	r
refreshUniformsStandard	js/three.js	/^		function refreshUniformsStandard( uniforms, material ) {$/;"	r
refreshUniformsToon	js/three.js	/^		function refreshUniformsToon( uniforms, material ) {$/;"	r
regex	js/three.js	/^				var regex = handlers[ i ];$/;"	r
releaseMaterialProgramReference	js/three.js	/^		function releaseMaterialProgramReference( material ) {$/;"	r
releaseProgram	js/three.js	/^		this.releaseProgram = function ( program ) {$/;"	r
releaseProgram	js/three.min.js	/^k;l++){var q=e[l];if(q.code===g){h=q;++h.usedTimes;break}}void 0===h&&(h=new hg(a,b,g,c,d,f),e.push(h));return h};this.releaseProgram=function(a){if(0===--a.usedTimes){var b=e.indexOf(a);e[b]=e[e.length-1];e.pop();a.destroy()}};this.programs=e}function kg(a,b,c,d,e,f,g){function h(a,b){if(a.width>b||a.height>b){b\/=Math.max(a.width,a.height);var c=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml","canvas");c.width=Math.floor(a.width*b);c.height=Math.floor(a.height*b);c.getContext("2d").drawImage(a,$/;"	r
remove	js/GLTFLoader.js	/^			remove: function ( key ) {$/;"	r
remove	js/three.js	/^			remove: remove,$/;"	r
remove	js/three.js	/^		function remove( attribute ) {$/;"	r
remove	js/three.js	/^		function remove( object ) {$/;"	r
remove	js/three.js	/^		remove: function ( key ) {$/;"	r
remove	js/three.js	/^		remove: function ( object ) {$/;"	r
remove	js/three.js	/^		remove: function () {$/;"	r
remove	js/three.min.js	/^(a=a.data);return b[a.uuid]},remove:function(c){c.isInterleavedBufferAttribute&&(c=c.data);var d=b[c.uuid];d&&(a.deleteBuffer(d.buffer),delete b[c.uuid])},update:function(c,d){c.isInterleavedBufferAttribute&&(c=c.data);var e=b[c.uuid];if(void 0===e){var e=c.uuid,f=c.array,g=c.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW,h=a.createBuffer();a.bindBuffer(d,h);a.bufferData(d,f,g);c.onUploadCallback();d=a.FLOAT;f instanceof Float32Array?d=a.FLOAT:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):$/;"	r
remove	js/three.min.js	/^b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=function(b){var e=b.texture,f=k(b);l(e,f)&&(b=b.isWebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}}function lg(){var a={};return{get:function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c},remove:function(b){delete a[b.uuid]},clear:function(){a={}}}}function mg(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();$/;"	r
remove	js/three.min.js	/^w}}else void 0!==a[p]&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){for(var a=this._objects,b=this.nCachedObjects_,c=this._indicesByUUID,d=this._bindings,e=d.length,f=0,g=arguments.length;f!==g;++f){var h=arguments[f],k=h.uuid,l=c[k];if(void 0!==l&&l>=b){var m=b++,n=a[m];c[n.uuid]=l;a[l]=n;c[k]=m;a[m]=h;h=0;for(k=e;h!==k;++h){var n=d[h],p=$/;"	r
removeAll	js/GLTFLoader.js	/^			removeAll: function () {$/;"	r
removeAttribute	js/three.js	/^		removeAttribute: function ( name ) {$/;"	r
removeAttribute	js/three.min.js	/^removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=b},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToBufferAttribute(b),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new ta).getNormalMatrix(a).applyToBufferAttribute(b),b.needsUpdate=!0);null!==$/;"	r
removeDupEndPts	js/three.js	/^			function removeDupEndPts( points ) {$/;"	r
removeEventListener	js/three.js	/^		removeEventListener: function ( type, listener ) {$/;"	r
removeEventListener	js/three.min.js	/^var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)},removeEventListener:function(a,b){void 0!==this._listeners&&(a=this._listeners[a],void 0!==a&&(b=a.indexOf(b),-1!==b&&a.splice(b,1)))},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var b=b.slice(0),c=0,d=b.length;c<d;c++)b[c].call(this,a)}}}});var R={DEG2RAD:Math.PI\/180,RAD2DEG:180\/Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),$/;"	r
removeFilter	js/three.js	/^		removeFilter: function ( ) {$/;"	r
removeHoles	js/three.js	/^			function removeHoles( contour, holes ) {$/;"	r
remove_empty_map	js/three.js	/^			remove_empty_map: {$/;"	r
render	js/three.js	/^			render: _infoRender,$/;"	r
render	js/three.js	/^			render: render$/;"	r
render	js/three.js	/^		function render( renderList, scene, camera, forceClear ) {$/;"	r
render	js/three.js	/^		function render( start, count ) {$/;"	r
render	js/three.js	/^		this.render = function ( \/* renderCallback *\/ ) {};$/;"	r
render	js/three.js	/^		this.render = function ( flares, scene, camera, viewport ) {$/;"	r
render	js/three.js	/^		this.render = function ( lights, scene, camera ) {$/;"	r
render	js/three.js	/^		this.render = function ( scene, camera, renderTarget, forceClear ) {$/;"	r
render	js/three.js	/^		this.render = function ( sprites, scene, camera ) {$/;"	r
render	js/three.js	/^		this.render = function () {};$/;"	r
render	js/three.js	/^		this.render = render;$/;"	r
render	js/three.min.js	/^c.reset()}}}function sc(a,b,c,d,e,f,g,h,k){da.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0}function Kf(a,b,c,d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A,J;function ya(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var ja,ma,ga,He,Ua=new p,M=new X,z=new p;this.render=function(v,p,U){if(0!==v.length){if(void 0===ga){var N=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),na=new Uint16Array([0,1,2,0,2,3]);ja=b.createBuffer();ma=b.createBuffer();$/;"	r
render	js/three.min.js	/^d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A;this.render=function(a,v,ja,ma){if(0!==a.length){v=new p;var J=ma.w\/ma.z,ya=.5*ma.z,Ua=.5*ma.w,M=16\/ma.w,na=new D(M*J,M),ka=new p(1,1,0),N=new D(1,1),U=new kd;U.min.set(ma.x,ma.y);U.max.set(ma.x+(ma.z-16),ma.y+(ma.w-16));if(void 0===B){var M=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),z=new Uint16Array([0,1,2,0,2,3]);t=b.createBuffer();x=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,t);b.bufferData(b.ARRAY_BUFFER,M,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,$/;"	r
render	js/three.min.js	/^g)},render:function(b,d,u,r){d=d.background;null===d?e(f,g):d&&d.isColor&&(e(d,1),r=!0);(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil);d&&d.isCubeTexture?(void 0===l&&(l=new qa(new fb(1,1,1),new Aa({uniforms:ib.cube.uniforms,vertexShader:ib.cube.vertexShader,fragmentShader:ib.cube.fragmentShader,side:1,depthTest:!0,depthWrite:!1,fog:!1})),l.geometry.removeAttribute("normal"),l.geometry.removeAttribute("uv"),l.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},$/;"	r
render	js/three.min.js	/^skinning:B});u[c]=y}var A=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,c,d){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==b.length){var n=a.state;n.disable(a.context.BLEND);n.buffers.color.setClear(1,1,1,1);n.buffers.depth.setTest(!0);n.setScissorTest(!1);for(var u,r=0,B=b.length;r<B;r++){var v=b[r];u=v.shadow;var I=v&&v.isPointLight;if(void 0===u)console.warn("THREE.WebGLShadowMap:",$/;"	r
render	js/three.min.js	/^void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function bf(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this}function cf(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function ad(a){w.call(this);this.material=a;this.render=function(){}}function bd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?$/;"	r
renderBufferDirect	js/three.js	/^		this.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {$/;"	r
renderBufferDirect	js/three.min.js	/^3,F.FLOAT,!1,0,0));aa.disableUnusedAttributes();F.drawArrays(F.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){aa.setMaterial(d);var g=u(a,b,d,e);a=c.id+"_"+g.id+"_"+(!0===d.wireframe);var h=!1;a!==L&&(L=a,h=!0);e.morphTargetInfluences&&(va.update(e,c,d,g),h=!0);var l=c.index,k=c.attributes.position;b=1;!0===d.wireframe&&(l=qa.getWireframeAttribute(c),b=2);a=wa;if(null!==l){var n=pa.get(l);a=xa;a.setIndex(n)}if(h){h=void 0;if(c&&c.isInstancedBufferGeometry&&null===ha.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
renderBufferImmediate	js/three.js	/^		this.renderBufferImmediate = function ( object, program, material ) {$/;"	r
renderDepth	js/three.js	/^		renderDepth: function () {$/;"	r
renderDepth	js/three.min.js	/^L.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")};Object.assign(w.prototype,{getChildByName:function(a){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(a,b){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");$/;"	r
renderHeight	js/three.js	/^				renderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );$/;"	r
renderHeight	js/three.js	/^				var renderHeight = eyeParameters.renderHeight;$/;"	r
renderInstances	js/three.js	/^		function renderInstances( geometry, start, count ) {$/;"	r
renderInstances	js/three.js	/^		this.renderInstances = renderInstances;$/;"	r
renderItem	js/three.js	/^				renderItem = {$/;"	r
renderItem	js/three.js	/^				renderItems[ renderItemsIndex ] = renderItem;$/;"	r
renderItem	js/three.js	/^				var renderItem = renderList[ i ];$/;"	r
renderItem	js/three.js	/^			var renderItem = renderItems[ renderItemsIndex ];$/;"	r
renderItems	js/three.js	/^		var renderItems = [];$/;"	r
renderItemsIndex	js/three.js	/^			renderItemsIndex = 0;$/;"	r
renderItemsIndex	js/three.js	/^		var renderItemsIndex = 0;$/;"	r
renderLists	js/three.js	/^			_this.renderLists = renderLists;$/;"	r
renderLists	js/three.js	/^			renderLists = new WebGLRenderLists();$/;"	r
renderObject	js/three.js	/^		function renderObject( object, camera, shadowCamera, isPointLight ) {$/;"	r
renderObject	js/three.js	/^		function renderObject( object, scene, camera, geometry, material, group ) {$/;"	r
renderObjectImmediate	js/three.js	/^		function renderObjectImmediate( object, program, material ) {$/;"	r
renderObjects	js/three.js	/^		function renderObjects( renderList, scene, camera, overrideMaterial ) {$/;"	r
renderOrder	js/three.js	/^					renderOrder: object.renderOrder,$/;"	r
renderOrder	js/three.js	/^				renderItem.renderOrder = object.renderOrder;$/;"	r
renderOrder	js/three.js	/^			this.renderOrder = source.renderOrder;$/;"	r
renderOrder	js/three.js	/^		this.renderOrder = 0;$/;"	r
renderReverseSided	js/three.js	/^				this.renderReverseSided = value;$/;"	r
renderReverseSided	js/three.js	/^		this.renderReverseSided = true;$/;"	r
renderSingleSided	js/three.js	/^		this.renderSingleSided = true;$/;"	r
renderTarget	js/three.js	/^					setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );$/;"	r
renderTarget	js/three.js	/^				renderTarget = null;$/;"	r
renderTarget	js/three.js	/^				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );$/;"	r
renderTarget	js/three.js	/^			_currentRenderTarget = renderTarget;$/;"	r
renderTarget	js/three.js	/^			var renderTarget = event.target;$/;"	r
renderTarget	js/three.js	/^			var renderTarget = this.renderTarget;$/;"	r
renderTarget	js/three.js	/^		function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {$/;"	r
renderTarget	js/three.js	/^		this.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );$/;"	r
renderTargetProperties	js/three.js	/^			var renderTargetProperties = properties.get( renderTarget );$/;"	r
renderType	js/three.js	/^				renderType: gl.getUniformLocation( program, 'renderType' ),$/;"	r
renderWidth	js/three.js	/^				var renderWidth = eyeParameters.renderWidth;$/;"	r
renderer	js/three.js	/^				renderer = indexedBufferRenderer;$/;"	r
renderer	js/three.js	/^			var renderer = bufferRenderer;$/;"	r
renderer	js/three.js	/^		this.renderer = renderer;$/;"	r
renderer	script.js	/^var renderer = new THREE.WebGLRenderer();$/;"	r
renderingShadows	js/three.js	/^			renderingShadows = false,$/;"	r
renderingShadows	js/three.js	/^			renderingShadows = false;$/;"	r
renderingShadows	js/three.js	/^			renderingShadows = true;$/;"	r
reorder	js/three.js	/^			return function reorder( newOrder ) {$/;"	r
reorder	js/three.js	/^		reorder: function () {$/;"	r
reparametrizeByArcLength	js/three.js	/^		reparametrizeByArcLength: function ( \/* samplingCoef *\/ ) {$/;"	r
repeat	js/GLTFLoader.js	/^							repeat = uvScaleMap.repeat;$/;"	r
repeat	js/GLTFLoader.js	/^					var repeat;$/;"	r
repeat	js/three.js	/^					var repeat = material.map.repeat;$/;"	r
repeat	js/three.js	/^					var repeat = uvScaleMap.repeat;$/;"	r
repeat	js/three.js	/^				function loadTexture( path, repeat, offset, wrap, anisotropy ) {$/;"	r
repeat	js/three.js	/^				repeat: [ this.repeat.x, this.repeat.y ],$/;"	r
repeat	js/three.js	/^				this.texture.repeat = value;$/;"	r
repeat	js/three.js	/^		repeat: {$/;"	r
repeat	js/three.js	/^		this.repeat = new Vector2( 1, 1 );$/;"	r
repeat	js/three.min.js	/^return this},toJSON:function(a){var b=void 0===a||"string"===typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];var c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};$/;"	r
repetitions	js/three.js	/^			this.repetitions = repetitions;$/;"	r
repetitions	js/three.js	/^		this.repetitions = Infinity; 		\/\/ no. of repetitions when looping$/;"	r
repetitions	js/three.min.js	/^isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(a){this._startTime=a;return this},setLoop:function(a,b){this.loop=a;this.repetitions=b;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(a,b,c){a.fadeOut(b);$/;"	r
replace	js/three.js	/^			var replace = ShaderChunk[ include ];$/;"	r
replace	js/three.js	/^		function replace( match, include ) {$/;"	r
replace	js/three.js	/^		function replace( match, start, end, snippet ) {$/;"	r
replaceLightNums	js/three.js	/^	function replaceLightNums( string, parameters ) {$/;"	r
request	js/three.js	/^				var request = new XMLHttpRequest();$/;"	r
requestHeader	js/three.js	/^			this.requestHeader = value;$/;"	r
reset	js/three.js	/^				reset: function () {$/;"	r
reset	js/three.js	/^			reset: reset$/;"	r
reset	js/three.js	/^		function reset() {$/;"	r
reset	js/three.js	/^		reset: function () {$/;"	r
reset	js/three.min.js	/^reset:function(){for(var b=0;b<p.length;b++)1===p[b]&&(a.disableVertexAttribArray(b),p[b]=0);B={};R=I=null;O={};H=C=J=A=null;n.reset();u.reset();r.reset()}}}function ng(a,b,c){function d(b){if("highp"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return"highp";b="mediump"}return"mediump"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,$/;"	r
resetDuration	js/three.js	/^		resetDuration: function () {$/;"	r
resetGLState	js/three.js	/^		resetGLState: function () {$/;"	r
resetGlobalState	js/three.js	/^		function resetGlobalState() {$/;"	r
resolution	js/three.js	/^				var resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2$/;"	r
resolve	js/GLTFLoader.js	/^				loader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );$/;"	r
resolve	js/GLTFLoader.js	/^			loader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {$/;"	r
resolveURL	js/GLTFLoader.js	/^	function resolveURL( url, path ) {$/;"	r
resolveURL	js/three.js	/^		this.resolveURL = function ( url ) {$/;"	r
resolvedProperty	js/three.js	/^					var dest = this.resolvedProperty;$/;"	r
resolvedProperty	js/three.js	/^				this.resolvedProperty = nodeProperty;$/;"	r
resolvedProperty	js/three.js	/^				var source = this.resolvedProperty;$/;"	r
resolvedProperty	js/three.min.js	/^_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=$/;"	r
resolvedProperty	js/three.min.js	/^a[b]},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.needsUpdate=!0},function(a,b){this.targetObject[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){for(var c=this.resolvedProperty,d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=$/;"	r
resolvedProperty	js/three.min.js	/^e){e=c;break}}else{if(!a.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(c=0;c<this.node.geometry.morphTargets.length;c++)if(a.geometry.morphTargets[c].name===e){e=c;break}}}c=this.BindingType.ArrayElement;this.resolvedProperty=f;this.propertyIndex=e}else void 0!==f.fromArray&&void 0!==f.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=f):Array.isArray(f)?(c=this.BindingType.EntireArray,$/;"	r
resolvedProperty	js/three.min.js	/^this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(pa.prototype,{_getValue_unbound:pa.prototype.getValue,_setValue_unbound:pa.prototype.setValue});Object.assign(We.prototype,$/;"	r
response	js/three.js	/^								response = new Blob( [ view.buffer ], { type: mimeType } );$/;"	r
response	js/three.js	/^								response = view.buffer;$/;"	r
response	js/three.js	/^							response = JSON.parse( data );$/;"	r
response	js/three.js	/^							response = data;$/;"	r
response	js/three.js	/^							response = parser.parseFromString( data, mimeType );$/;"	r
response	js/three.js	/^					var response = event.target.response;$/;"	r
response	js/three.js	/^					var response;$/;"	r
responseType	js/three.js	/^					var responseType = ( this.responseType || '' ).toLowerCase();$/;"	r
responseType	js/three.js	/^				if ( this.responseType !== undefined ) request.responseType = this.responseType;$/;"	r
responseType	js/three.js	/^			this.responseType = value;$/;"	r
restore	js/three.js	/^					restore = true;$/;"	r
restore	js/three.js	/^				var restore = false;$/;"	r
restoreOriginalState	js/three.js	/^		restoreOriginalState: function () {$/;"	r
restoreOriginalState	js/three.min.js	/^this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);break}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=$/;"	r
result	js/three.js	/^						var result = searchNodeSubtree( childNode.children );$/;"	r
result	js/three.js	/^				result = cachedMaterial;$/;"	r
result	js/three.js	/^				result = customMaterial;$/;"	r
result	js/three.js	/^				result = materialVariants[ variantIndex ];$/;"	r
result	js/three.js	/^				this.matrixWorld.decompose( position, result, scale );$/;"	r
result	js/three.js	/^				var result = Triangle.barycoordFromPoint( point, a, b, c, v1 );$/;"	r
result	js/three.js	/^				var result = [],$/;"	r
result	js/three.js	/^				var result = optionalTarget || new Euler();$/;"	r
result	js/three.js	/^				var result = optionalTarget || new Quaternion();$/;"	r
result	js/three.js	/^				var result = optionalTarget || new Sphere();$/;"	r
result	js/three.js	/^				var result = optionalTarget || new Vector3();$/;"	r
result	js/three.js	/^			var result = new Array( n );$/;"	r
result	js/three.js	/^			var result = new values.constructor( nValues );$/;"	r
result	js/three.js	/^			var result = null;$/;"	r
result	js/three.js	/^			var result = optionalTarget || new Plane();$/;"	r
result	js/three.js	/^			var result = optionalTarget || new Vector2();$/;"	r
result	js/three.js	/^			var result = optionalTarget || new Vector3();$/;"	r
result	js/three.js	/^			var result = this.resultBuffer,$/;"	r
resultBuffer	js/three.js	/^			resultBuffer : new sampleValues.constructor( sampleSize );$/;"	r
resultBuffer	js/three.js	/^			var result = this.resultBuffer,$/;"	r
resultBuffer	js/three.js	/^		this.resultBuffer = resultBuffer !== undefined ?$/;"	r
resultLengthSq	js/three.js	/^				var resultLengthSq = result.lengthSq();$/;"	r
results	js/GLTFLoader.js	/^			results = [];$/;"	r
results	js/GLTFLoader.js	/^			results = {};$/;"	r
results	js/GLTFLoader.js	/^		var results;$/;"	r
results	js/three.js	/^				var results = {$/;"	r
ret	js/three.js	/^						var ret = createPath( char, scale, offsetX, offsetY );$/;"	r
return	js/GLTFLoader.js	/^				return;$/;"	r
return	js/GLTFLoader.js	/^			return;$/;"	r
return	js/three.js	/^							return;$/;"	r
return	js/three.js	/^						return;$/;"	r
return	js/three.js	/^					return; \/\/ yet to come \/ don't decide when delta = 0$/;"	r
return	js/three.js	/^					return;$/;"	r
return	js/three.js	/^				return;$/;"	r
return	js/three.js	/^			return;$/;"	r
reverse	js/three.js	/^		var reverse = ! ShapeUtils.isClockWise( vertices );$/;"	r
reversePainterSortStable	js/three.js	/^	function reversePainterSortStable( a, b ) {$/;"	r
rgb	js/GLTFLoader.js	/^					'	specularFactor *= texelSpecular.rgb;',$/;"	r
rgb	js/GLTFLoader.js	/^					'material.diffuseColor = diffuseColor.rgb;',$/;"	r
rgb	js/GLTFLoader.js	/^					'material.specularColor = specularFactor.rgb;',$/;"	r
rgb	js/three.js	/^	var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n";$/;"	r
rgb	js/three.js	/^	var lights_phong_fragment = "BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n";$/;"	r
rgb	js/three.js	/^	var linedashed_frag = "uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
rgb	js/three.js	/^	var meshbasic_frag = "uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
rgb	js/three.js	/^	var points_frag = "uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
rgb	js/three.min.js	/^emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n",encodings_pars_fragment:"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 \/ gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb \/ exp2( fExp ), ( fExp + 128.0 ) \/ 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB \/ maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) \/ 255.0;\\n\\treturn vec4( value.rgb \/ ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange \/ 255.0 ) \/ value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange \/ maxRGB, 1.0 );\\n\\tD            = min( floor( D ) \/ 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 \/ maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy \/ Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))\/255.0)\/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) \/ 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y \/ value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n",$/;"	r
rgb	js/three.min.js	/^lights_phong_fragment:"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n",$/;"	r
rgb	js/three.min.js	/^linedashed_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",$/;"	r
rgb	js/three.min.js	/^meshbasic_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",$/;"	r
rgb	js/three.min.js	/^points_frag:"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",$/;"	r
right	js/three.js	/^							right = i1;$/;"	r
right	js/three.js	/^							right = mid;$/;"	r
right	js/three.js	/^							right = pp.length;$/;"	r
right	js/three.js	/^					var right;$/;"	r
right	js/three.js	/^				right = left + scaleW * ( this.view.width \/ zoomW );$/;"	r
right	js/three.js	/^				this.shadow.camera.right = value;$/;"	r
right	js/three.js	/^			console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );$/;"	r
right	js/three.js	/^			data.object.right = this.right;$/;"	r
right	js/three.js	/^			return this.makePerspective( left, right, top, bottom, near, far );$/;"	r
right	js/three.js	/^			this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );$/;"	r
right	js/three.js	/^			this.right = source.right;$/;"	r
right	js/three.js	/^			var right = cx + dx;$/;"	r
right	js/three.js	/^		makeFrustum: function ( left, right, bottom, top, near, far ) {$/;"	r
right	js/three.js	/^		makeOrthographic: function ( left, right, top, bottom, near, far ) {$/;"	r
right	js/three.js	/^		makePerspective: function ( left, right, top, bottom, near, far ) {$/;"	r
right	js/three.js	/^		this.right = right;$/;"	r
right	js/three.js	/^	function OrthographicCamera( left, right, top, bottom, near, far ) {$/;"	r
rnd	js/three.js	/^						rnd = rnd >> 4;$/;"	r
rnd	js/three.js	/^			var rnd = 0, r;$/;"	r
rolloffFactor	js/three.js	/^			this.panner.rolloffFactor = value;$/;"	r
root	js/three.js	/^			var root = action._localRoot || this._root,$/;"	r
root	js/three.js	/^			var root = optionalRoot || this._root,$/;"	r
root	js/three.js	/^		this._root = root;$/;"	r
root	js/three.js	/^		this.root = object;$/;"	r
rootNode	js/three.js	/^		this.rootNode = rootNode;$/;"	r
rootUuid	js/three.js	/^							this._addInactiveBinding( binding, rootUuid, trackName );$/;"	r
rootUuid	js/three.js	/^					this._addInactiveBinding( binding, rootUuid, trackName );$/;"	r
rootUuid	js/three.js	/^					var rootUuid = ( action._localRoot || this._root ).uuid,$/;"	r
rootUuid	js/three.js	/^				rootUuid = ( action._localRoot || this._root ).uuid;$/;"	r
rootUuid	js/three.js	/^				rootUuid = propBinding.rootNode.uuid,$/;"	r
rootUuid	js/three.js	/^				rootUuid = root.uuid,$/;"	r
rootUuid	js/three.js	/^			var rootUuid = root.uuid,$/;"	r
rootUuid	js/three.js	/^		_addInactiveBinding: function ( binding, rootUuid, trackName ) {$/;"	r
rotate	js/three.js	/^		rotate: function ( theta ) {$/;"	r
rotateAround	js/three.js	/^		rotateAround: function ( center, angle ) {$/;"	r
rotateAround	js/three.min.js	/^return this},rotateAround:function(a,b){var c=Math.cos(b);b=Math.sin(b);var d=this.x-a.x,e=this.y-a.y;this.x=d*c-e*b+a.x;this.y=d*b+e*c+a.y;return this}});Object.assign(K.prototype,{isMatrix4:!0,set:function(a,b,c,d,e,f,g,h,k,l,q,n,u,m,p,t){var r=this.elements;r[0]=a;r[4]=b;r[8]=c;r[12]=d;r[1]=e;r[5]=f;r[9]=g;r[13]=h;r[2]=k;r[6]=l;r[10]=q;r[14]=n;r[3]=u;r[7]=m;r[11]=p;r[15]=t;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new K).fromArray(this.elements)},$/;"	r
rotateAxis	js/three.js	/^		rotateAxis: function ( v ) {$/;"	r
rotateByAxis	js/three.js	/^		rotateByAxis: function () {$/;"	r
rotateOnAxis	js/three.js	/^			return function rotateOnAxis( axis, angle ) {$/;"	r
rotateOnAxis	js/three.js	/^		rotateOnAxis: function () {$/;"	r
rotateOnWorldAxis	js/three.js	/^			return function rotateOnWorldAxis( axis, angle ) {$/;"	r
rotateOnWorldAxis	js/three.js	/^		rotateOnWorldAxis: function () {$/;"	r
rotateX	js/three.js	/^			return function rotateX( angle ) {$/;"	r
rotateX	js/three.js	/^		rotateX: function () {$/;"	r
rotateX	js/three.min.js	/^c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,f=a.vertexNormals.length;e<f;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=this.verticesNeedUpdate=!0;return this},rotateX:function(){var a=new K;return function(b){a.makeRotationX(b);this.applyMatrix(a);$/;"	r
rotateX	js/three.min.js	/^rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(a){console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.");return this.applyToBufferAttribute(a)},$/;"	r
rotateX	js/three.min.js	/^this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},rotateX:function(){var a=new K;return function(b){a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a=new K;return function(b){a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a=new K;return function(b){a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a=new K;return function(b,c,d){a.makeTranslation(b,$/;"	r
rotateY	js/three.js	/^			return function rotateY( angle ) {$/;"	r
rotateY	js/three.js	/^		rotateY: function () {$/;"	r
rotateY	js/three.min.js	/^return this}}(),rotateY:function(){var a=new K;return function(b){a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a=new K;return function(b){a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a=new K;return function(b,c,d){a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a=new K;return function(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a=new w;return function(b){a.lookAt(b);$/;"	r
rotateZ	js/three.js	/^			return function rotateZ( angle ) {$/;"	r
rotateZ	js/three.js	/^		rotateZ: function () {$/;"	r
rotateZ	js/three.min.js	/^new p(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new p(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new p;return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translateX:function(){var a=new p(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new p(0,1,0);return function(b){return this.translateOnAxis(a,$/;"	r
rotatedPosition	js/three.js	/^				'	mvPosition.xy += rotatedPosition;',$/;"	r
rotation	js/GLTFLoader.js	/^							uvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );$/;"	r
rotation	js/GLTFLoader.js	/^							var rotation = uvScaleMap.rotation;$/;"	r
rotation	js/GLTFLoader.js	/^		rotation: 'quaternion',$/;"	r
rotation	js/three.js	/^					if ( data.rotation !== undefined ) texture.rotation = data.rotation;$/;"	r
rotation	js/three.js	/^					material.map.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );$/;"	r
rotation	js/three.js	/^					uvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );$/;"	r
rotation	js/three.js	/^					var rotation = material.map.rotation;$/;"	r
rotation	js/three.js	/^					var rotation = uvScaleMap.rotation;$/;"	r
rotation	js/three.js	/^				rotation: 0, 		\/\/ rotation$/;"	r
rotation	js/three.js	/^				rotation: gl.getUniformLocation( program, 'rotation' ),$/;"	r
rotation	js/three.js	/^				rotation: this.rotation,$/;"	r
rotation	js/three.js	/^			if ( json.rotation !== undefined ) material.rotation = json.rotation;$/;"	r
rotation	js/three.js	/^			if ( this.rotation !== 0 ) data.rotation = this.rotation;$/;"	r
rotation	js/three.js	/^			rotation: {$/;"	r
rotation	js/three.js	/^			this.rotation = source.rotation;$/;"	r
rotation	js/three.js	/^		this.rotation = 0;$/;"	r
rotation	js/three.js	/^		this.rotation = source.rotation;$/;"	r
rotation	js/three.js	/^		var rotation = new Euler();$/;"	r
rotation	js/three.min.js	/^!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new K},normalMatrix:{value:new ta}});this.matrix=new K;this.matrixWorld=new K;this.matrixAutoUpdate=w.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new Pd;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=$/;"	r
rotation	js/three.min.js	/^this.color=new H(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)}function Bc(a){w.call(this);this.type="Sprite";this.material=void 0!==a?a:new Ya}function Cc(){w.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Dc(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),$/;"	r
rotation	js/three.min.js	/^void 0!==e?e:1006;this.minFilter=void 0!==f?f:1008;this.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:1023;this.type=void 0!==h?h:1009;this.offset=new D(0,0);this.repeat=new D(1,1);this.center=new D(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new ta;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==l?l:3E3;this.version=0;this.onUpdate=null}function ba(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function Db(a,$/;"	r
roughness	js/GLTFLoader.js	/^				materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;$/;"	r
roughness	js/GLTFLoader.js	/^			roughness: 1,$/;"	r
roughness	js/three.js	/^					roughness: { value: 0.5 },$/;"	r
roughness	js/three.js	/^			if ( json.roughness !== undefined ) material.roughness = json.roughness;$/;"	r
roughness	js/three.js	/^			if ( this.roughness !== undefined ) data.roughness = this.roughness;$/;"	r
roughness	js/three.js	/^			uniforms.roughness.value = material.roughness;$/;"	r
roughness	js/three.js	/^		this.roughness = 0.5;$/;"	r
roughness	js/three.js	/^		this.roughness = source.roughness;$/;"	r
roughness	js/three.js	/^	var roughnessmap_fragment = "float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n";$/;"	r
roughness	js/three.min.js	/^roughnessmap_fragment:"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) \/ size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz \/= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 \/ max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) \/ ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",$/;"	r
roughnessMap	js/three.js	/^							json.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );$/;"	r
roughnessMap	js/three.js	/^				roughnessMap: !! material.roughnessMap,$/;"	r
roughnessMap	js/three.js	/^				uniforms.roughnessMap.value = material.roughnessMap;$/;"	r
roughnessMap	js/three.js	/^				uvScaleMap = material.roughnessMap;$/;"	r
roughnessMap	js/three.js	/^			roughnessMap: { value: null }$/;"	r
roughnessMap	js/three.js	/^		this.roughnessMap = null;$/;"	r
roughnessMap	js/three.js	/^		this.roughnessMap = source.roughnessMap;$/;"	r
roughnessmap	js/three.js	/^				UniformsLib.roughnessmap,$/;"	r
roughnessmap	js/three.js	/^		roughnessmap: {$/;"	r
roughnessmap_fragment	js/three.js	/^		roughnessmap_fragment: roughnessmap_fragment,$/;"	r
roughnessmap_fragment	js/three.js	/^	var roughnessmap_fragment = "float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n";$/;"	r
roughnessmap_pars_fragment	js/three.js	/^		roughnessmap_pars_fragment: roughnessmap_pars_fragment,$/;"	r
roughnessmap_pars_fragment	js/three.js	/^	var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif";$/;"	r
roughnessmap_pars_fragment	js/three.min.js	/^roughnessmap_fragment:"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) \/ size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz \/= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 \/ max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) \/ ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",$/;"	r
round	js/three.js	/^		round: function () {$/;"	r
round	js/three.min.js	/^this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},$/;"	r
round	js/three.min.js	/^this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+$/;"	r
roundToZero	js/three.js	/^		roundToZero: function () {$/;"	r
rows	js/three.js	/^				var rows = cols - i;$/;"	r
royalblue	js/three.min.js	/^royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(H.prototype,{isColor:!0,r:1,g:1,b:1,set:function(a){a&&$/;"	r
runnable	js/three.js	/^				runnable: runnable,$/;"	r
runnable	js/three.js	/^			runnable = false;$/;"	r
runnable	js/three.js	/^		var runnable = true;$/;"	r
running	js/three.js	/^			this.running = false;$/;"	r
running	js/three.js	/^			this.running = true;$/;"	r
running	js/three.js	/^		this.running = false;$/;"	r
running	js/three.min.js	/^0;this.running=!0},stop:function(){this.getElapsedTime();this.autoStart=this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var b=("undefined"===typeof performance?Date:performance).now(),a=(b-this.oldTime)\/1E3;this.oldTime=b;this.elapsedTime+=a}return a}});Object.assign(bf.prototype,{set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
s	js/GLTFLoader.js	/^		var s = '';$/;"	r
s	js/three.js	/^							return this.setHSL( h, s, l );$/;"	r
s	js/three.js	/^							var s = parseInt( color[ 2 ], 10 ) \/ 100;$/;"	r
s	js/three.js	/^					s = Math.sin( s * len ) \/ sin;$/;"	r
s	js/three.js	/^				\/\/ h,s,l ranges are in 0.0 - 1.0$/;"	r
s	js/three.js	/^				s = 0.5 \/ Math.sqrt( trace + 1.0 );$/;"	r
s	js/three.js	/^				s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );$/;"	r
s	js/three.js	/^				s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );$/;"	r
s	js/three.js	/^				s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );$/;"	r
s	js/three.js	/^				s = _Math.clamp( s, 0, 1 );$/;"	r
s	js/three.js	/^				s, 0, 0, - s * center.x,$/;"	r
s	js/three.js	/^				s, c, 0, 0,$/;"	r
s	js/three.js	/^				s;$/;"	r
s	js/three.js	/^				var s = 0,$/;"	r
s	js/three.js	/^				var s = 1 - t,$/;"	r
s	js/three.js	/^			\/\/ h,s,l ranges are in 0.0 - 1.0$/;"	r
s	js/three.js	/^			hsl.s = saturation;$/;"	r
s	js/three.js	/^			return function setHSL( h, s, l ) {$/;"	r
s	js/three.js	/^			te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;$/;"	r
s	js/three.js	/^			te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;$/;"	r
s	js/three.js	/^			te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;$/;"	r
s	js/three.js	/^			te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;$/;"	r
s	js/three.js	/^			te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;$/;"	r
s	js/three.js	/^			te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;$/;"	r
s	js/three.js	/^			te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;$/;"	r
s	js/three.js	/^			this.b *= s;$/;"	r
s	js/three.js	/^			this.b += s;$/;"	r
s	js/three.js	/^			this.g *= s;$/;"	r
s	js/three.js	/^			this.g += s;$/;"	r
s	js/three.js	/^			this.r *= s;$/;"	r
s	js/three.js	/^			this.r += s;$/;"	r
s	js/three.js	/^			this.w += s;$/;"	r
s	js/three.js	/^			this.w -= s;$/;"	r
s	js/three.js	/^			this.x += s;$/;"	r
s	js/three.js	/^			this.x -= s;$/;"	r
s	js/three.js	/^			this.y += s;$/;"	r
s	js/three.js	/^			this.y -= s;$/;"	r
s	js/three.js	/^			this.z += s;$/;"	r
s	js/three.js	/^			this.z -= s;$/;"	r
s	js/three.js	/^			var s = 1 - t;$/;"	r
s	js/three.js	/^			var s = Math.sin( angle );$/;"	r
s	js/three.js	/^			var s = Math.sin( rotation );$/;"	r
s	js/three.js	/^			var s = Math.sin( theta );$/;"	r
s	js/three.js	/^			var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +$/;"	r
s	js/three.js	/^			var s = Math.sqrt( 1 - q.w * q.w );$/;"	r
s	js/three.js	/^			var s = radius === 0 ? 1 : 1.0 \/ radius;$/;"	r
s	js/three.js	/^		offsetHSL: function ( h, s, l ) {$/;"	r
s	js/three.js	/^		var s;$/;"	r
s0	js/three.js	/^								s0 = Math.max( 0, - ( a01 * s1 + b0 ) );$/;"	r
s0	js/three.js	/^							s0 = 0;$/;"	r
s0	js/three.js	/^							s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );$/;"	r
s0	js/three.js	/^							s0 = Math.max( 0, - ( a01 * s1 + b0 ) );$/;"	r
s0	js/three.js	/^							s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );$/;"	r
s0	js/three.js	/^					s0 = Math.max( 0, - ( a01 * s1 + b0 ) );$/;"	r
s0	js/three.js	/^					s0 = a01 * b1 - b0;$/;"	r
s0	js/three.js	/^				var s0, s1, sqrDist, extDet;$/;"	r
s0	js/three.js	/^			var s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;$/;"	r
s1	js/three.js	/^								s1 = segExtent;$/;"	r
s1	js/three.js	/^							s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );$/;"	r
s1	js/three.js	/^							s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );$/;"	r
s1	js/three.js	/^							s1 = - segExtent;$/;"	r
s1	js/three.js	/^							s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );$/;"	r
s1	js/three.js	/^					s1 = ( a01 > 0 ) ? - segExtent : segExtent;$/;"	r
s1	js/three.js	/^					s1 = a01 * b0 - b1;$/;"	r
s1	js/three.js	/^			var s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;$/;"	r
s1	js/three.js	/^			var s1 = sin( x \/ 2 );$/;"	r
s2	js/three.js	/^			var s2 = sin( y \/ 2 );$/;"	r
s3	js/three.js	/^			var s3 = sin( z \/ 2 );$/;"	r
sIdx	js/three.js	/^					var sIdx, nextIdx, intersection;$/;"	r
sLen	js/three.js	/^				for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {$/;"	r
sN	js/three.js	/^			var sN = wN * ppp - wN * pp;$/;"	r
sP	js/three.js	/^			var sP = - wP * ppp + 2 * wP * pp - wP * p;$/;"	r
sRGBEncoding	js/GLTFLoader.js	/^				if ( _material.emissiveMap ) _material.emissiveMap.encoding = THREE.sRGBEncoding;$/;"	r
sRGBEncoding	js/GLTFLoader.js	/^				if ( _material.map ) _material.map.encoding = THREE.sRGBEncoding;$/;"	r
sRGBEncoding	js/three.js	/^	exports.sRGBEncoding = sRGBEncoding;$/;"	r
sRGBEncoding	js/three.js	/^	var sRGBEncoding = 3001;$/;"	r
safeInverse	js/three.js	/^			var safeInverse = ( gammaFactor > 0 ) ? ( 1.0 \/ gammaFactor ) : 1.0;$/;"	r
samePoints	js/three.js	/^		var samePoints = Math.abs( deltaAngle ) < Number.EPSILON;$/;"	r
sampleSize	js/three.js	/^		this.valueSize = sampleSize;$/;"	r
sampleValues	js/three.js	/^				values = interpolant.sampleValues;$/;"	r
sampleValues	js/three.js	/^				values = this.sampleValues,$/;"	r
sampleValues	js/three.js	/^		this.sampleValues = sampleValues;$/;"	r
sampleValues	js/three.js	/^	function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
sampleValues	js/three.js	/^	function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
sampleValues	js/three.js	/^	function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
sampleValues	js/three.js	/^	function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
sampleValues	js/three.js	/^	function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {$/;"	r
sampler	js/GLTFLoader.js	/^					var sampler = animation.samplers[ channel.sampler ];$/;"	r
sampler	js/GLTFLoader.js	/^			var sampler = samplers[ textureDef.sampler ] || {};$/;"	r
samplers	js/GLTFLoader.js	/^			var samplers = json.samplers || {};$/;"	r
sanitizeNodeName	js/three.js	/^		sanitizeNodeName: function ( name ) {$/;"	r
saturation	js/three.js	/^				saturation = 0;$/;"	r
saturation	js/three.js	/^				saturation = lightness <= 0.5 ? delta \/ ( max + min ) : delta \/ ( 2 - max - min );$/;"	r
saturation	js/three.js	/^			hsl.s = saturation;$/;"	r
saveOriginalState	js/three.js	/^		saveOriginalState: function () {$/;"	r
saveOriginalState	js/three.min.js	/^this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);break}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=$/;"	r
sc	js/three.min.js	/^c.reset()}}}function sc(a,b,c,d,e,f,g,h,k){da.call(this,a,b,c,d,e,f,g,h,k);this.needsUpdate=!0}function Kf(a,b,c,d,e){var f,g,h,k,l,q,n,u,r,m,t,x,y,B,I,A,J;function ya(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:b.id-a.id}var ja,ma,ga,He,Ua=new p,M=new X,z=new p;this.render=function(v,p,U){if(0!==v.length){if(void 0===ga){var N=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),na=new Uint16Array([0,1,2,0,2,3]);ja=b.createBuffer();ma=b.createBuffer();$/;"	r
sc	js/three.min.js	/^sc;m.DepthTexture=Fc;m.Texture=da;m.CompressedTextureLoader=Qe;m.DataTextureLoader=Zd;m.CubeTextureLoader=$d;m.TextureLoader=td;m.ObjectLoader=Re;m.MaterialLoader=Id;m.BufferGeometryLoader=ae;m.DefaultLoadingManager=wa;m.LoadingManager=Yd;m.JSONLoader=be;m.ImageLoader=Wc;m.FontLoader=Te;m.FileLoader=Ja;m.Loader=gc;m.Cache=jd;m.AudioLoader=ee;m.SpotLightShadow=vd;m.SpotLight=wd;m.PointLight=xd;m.RectAreaLight=Bd;m.HemisphereLight=ud;m.DirectionalLightShadow=yd;m.DirectionalLight=zd;m.AmbientLight=$/;"	r
sc	js/three.min.js	/^this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});sc.prototype=Object.create(da.prototype);sc.prototype.constructor=sc;var Lf=0;Object.assign(Q.prototype,ia.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+$/;"	r
scalar	js/three.js	/^			this.b = scalar;$/;"	r
scalar	js/three.js	/^			this.g = scalar;$/;"	r
scalar	js/three.js	/^			this.r = scalar;$/;"	r
scalar	js/three.js	/^			this.w *= scalar;$/;"	r
scalar	js/three.js	/^			this.w = scalar;$/;"	r
scalar	js/three.js	/^			this.x *= scalar;$/;"	r
scalar	js/three.js	/^			this.x = scalar;$/;"	r
scalar	js/three.js	/^			this.y *= scalar;$/;"	r
scalar	js/three.js	/^			this.y = scalar;$/;"	r
scalar	js/three.js	/^			this.z *= scalar;$/;"	r
scalar	js/three.js	/^			this.z = scalar;$/;"	r
scalar	js/three.js	/^			var scalar = vector.dot( this ) \/ vector.lengthSq();$/;"	r
scale	js/GLTFLoader.js	/^		scale: 'scale',$/;"	r
scale	js/three.js	/^						var ret = createPath( char, scale, offsetX, offsetY );$/;"	r
scale	js/three.js	/^					json.scale = 1.0 \/ json.scale;$/;"	r
scale	js/three.js	/^					json.scale = 1.0;$/;"	r
scale	js/three.js	/^					scale = 1.0 \/ sw.manhattanLength();$/;"	r
scale	js/three.js	/^					scale = 1.0 \/ vec.manhattanLength();$/;"	r
scale	js/three.js	/^					scale = json.scale,$/;"	r
scale	js/three.js	/^					scale: { value: 1 },$/;"	r
scale	js/three.js	/^				scale = new Vector2( size * invAspect, size );$/;"	r
scale	js/three.js	/^				scale: 1, 		\/\/ scale$/;"	r
scale	js/three.js	/^				scale: gl.getUniformLocation( program, 'scale' ),$/;"	r
scale	js/three.js	/^				var scale = json.scale;$/;"	r
scale	js/three.js	/^				var scale = maxSize \/ Math.max( image.width, image.height );$/;"	r
scale	js/three.js	/^				var scale = size \/ data.resolution;$/;"	r
scale	js/three.js	/^			function createPath( c, scale, offsetX, offsetY ) {$/;"	r
scale	js/three.js	/^			if ( json.scale !== undefined ) material.scale = json.scale;$/;"	r
scale	js/three.js	/^			if ( this.scale !== undefined ) data.scale = this.scale;$/;"	r
scale	js/three.js	/^			return function scale( x, y, z ) {$/;"	r
scale	js/three.js	/^			scale: { value: 1.0 },$/;"	r
scale	js/three.js	/^			scale: {$/;"	r
scale	js/three.js	/^			uniforms.scale.value = material.scale;$/;"	r
scale	js/three.js	/^			var scale = [];$/;"	r
scale	js/three.js	/^			var scale = new Vector3();$/;"	r
scale	js/three.js	/^			var scale, i;$/;"	r
scale	js/three.js	/^		scale: function ( sx, sy ) {$/;"	r
scale	js/three.js	/^		scale: function ( timeScale ) {$/;"	r
scale	js/three.js	/^		scale: function ( v ) {$/;"	r
scale	js/three.js	/^		scale: function () {$/;"	r
scale	js/three.js	/^		this.scale = 1;$/;"	r
scale	js/three.js	/^		this.scale = source.scale;$/;"	r
scale	js/three.js	/^		var scale = - this.plane.constant;$/;"	r
scale	js/three.js	/^		var scale = new Vector3( 1, 1, 1 );$/;"	r
scale	js/three.min.js	/^(n*k*g-h*m*g-n*e*q+a*m*q+h*e*p-a*k*p)*b;c[12]=J*b;c[13]=(n*x*f-t*m*f+t*e*r-a*x*r-n*e*y+a*m*y)*b;c[14]=(t*k*f-h*x*f-t*e*l+a*x*l+h*e*y-a*k*y)*b;c[15]=(h*m*f-n*k*f+n*e*l-a*m*l-h*e*r+a*k*r)*b;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],a[4]*a[4]+a[5]*a[5]+a[6]*a[6],$/;"	r
scale	js/three.min.js	/^1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function qb(a){T.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}function Yd(a,b,c){var d=this,e=!1,f=0,g=0,h=void 0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,$/;"	r
scale	js/three.min.js	/^a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new H(16777215));void 0===d&&(d=1);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b=this.lensFlares.length,c=2*-this.positionScreen.x,d=2*-this.positionScreen.y;$/;"	r
scale	js/three.min.js	/^c,d);this.applyMatrix(a);return this}}(),scale:function(){var a=new K;return function(b,c,d){a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a=new w;return function(b){a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a.isPoints||a.isLine){a=new z(3*b.vertices.length,3);var c=new z(3*b.colors.length,$/;"	r
scaleH	js/three.js	/^				var scaleH = ( this.top - this.bottom ) \/ this.view.height;$/;"	r
scalePt2	js/three.js	/^		function scalePt2( pt, vec, size ) {$/;"	r
scaleW	js/three.js	/^				var scaleW = ( this.right - this.left ) \/ this.view.width;$/;"	r
scaleX	js/three.js	/^				var scaleX = 1 \/ v1.setFromMatrixColumn( m, 0 ).length();$/;"	r
scaleXSq	js/three.js	/^			var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];$/;"	r
scaleY	js/three.js	/^				var scaleY = 1 \/ v1.setFromMatrixColumn( m, 1 ).length();$/;"	r
scaleYSq	js/three.js	/^			return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );$/;"	r
scaleYSq	js/three.js	/^			var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];$/;"	r
scaleZ	js/three.js	/^				var scaleZ = 1 \/ v1.setFromMatrixColumn( m, 2 ).length();$/;"	r
scaleZSq	js/three.js	/^			var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];$/;"	r
scene	js/GLTFLoader.js	/^					scene: scene,$/;"	r
scene	js/GLTFLoader.js	/^			refreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {$/;"	r
scene	js/GLTFLoader.js	/^			var scene = scenes[ json.scene || 0 ];$/;"	r
scene	js/three.js	/^							renderObject( object, scene, camera2, geometry, material, group );$/;"	r
scene	js/three.js	/^					boxMesh.onBeforeRender = function ( renderer, scene, camera ) {$/;"	r
scene	js/three.js	/^					renderObject( object, scene, camera, geometry, material, group );$/;"	r
scene	js/three.js	/^				if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );$/;"	r
scene	js/three.js	/^				if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );$/;"	r
scene	js/three.js	/^				if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );$/;"	r
scene	js/three.js	/^				if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );$/;"	r
scene	js/three.js	/^				sprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );$/;"	r
scene	js/three.js	/^				sprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );$/;"	r
scene	js/three.js	/^			background.render( currentRenderList, scene, camera, forceClear );$/;"	r
scene	js/three.js	/^			flareRenderer.render( flaresArray, scene, camera, _currentViewport );$/;"	r
scene	js/three.js	/^			object.onAfterRender( _this, scene, camera, geometry, material, group );$/;"	r
scene	js/three.js	/^			object.onBeforeRender( _this, scene, camera, geometry, material, group );$/;"	r
scene	js/three.js	/^			shadowMap.render( shadowsArray, scene, camera );$/;"	r
scene	js/three.js	/^			spriteRenderer.render( spritesArray, scene, camera );$/;"	r
scene	js/three.js	/^		attach: function ( child, scene, parent ) {$/;"	r
scene	js/three.js	/^		function render( renderList, scene, camera, forceClear ) {$/;"	r
scene	js/three.js	/^		function renderObject( object, scene, camera, geometry, material, group ) {$/;"	r
scene	js/three.js	/^		function renderObjects( renderList, scene, camera, overrideMaterial ) {$/;"	r
scene	js/three.js	/^		this.render = function ( flares, scene, camera, viewport ) {$/;"	r
scene	js/three.js	/^		this.render = function ( lights, scene, camera ) {$/;"	r
scene	js/three.js	/^		this.render = function ( sprites, scene, camera ) {$/;"	r
scene	script.js	/^var scene = new THREE.Scene();$/;"	r
sceneFogType	js/three.js	/^					fogType = sceneFogType;$/;"	r
sceneFogType	js/three.js	/^					sceneFogType = 1;$/;"	r
sceneFogType	js/three.js	/^					sceneFogType = 2;$/;"	r
sceneFogType	js/three.js	/^				sceneFogType = 0;$/;"	r
sceneFogType	js/three.js	/^			var sceneFogType = 0;$/;"	r
scenes	js/GLTFLoader.js	/^					scenes: scenes,$/;"	r
scenes	js/GLTFLoader.js	/^				onLoad( scene, scenes, cameras, animations );$/;"	r
scenes	js/GLTFLoader.js	/^			parser.parse( function ( scene, scenes, cameras, animations ) {$/;"	r
scenes	js/GLTFLoader.js	/^			var scenes = dependencies.scenes || [];$/;"	r
scissor	js/three.js	/^			scissor: scissor,$/;"	r
scissor	js/three.js	/^		function scissor( scissor ) {$/;"	r
scissor	js/three.js	/^		this.scissor = new Vector4( 0, 0, width, height );$/;"	r
scissorTest	js/three.js	/^				_currentScissorTest = renderTarget.scissorTest;$/;"	r
scissorTest	js/three.js	/^		this.scissorTest = false;$/;"	r
scope	js/GLTFLoader.js	/^			var scope = this;$/;"	r
scope	js/GLTFLoader.js	/^		var scope = this;$/;"	r
scope	js/three.js	/^				scope = this;$/;"	r
scope	js/three.js	/^			var scope = this;$/;"	r
scope	js/three.js	/^			var scope, i, l;$/;"	r
scope	js/three.js	/^		var scope = this,$/;"	r
scope	js/three.js	/^		var scope = this;$/;"	r
screenPosition	js/three.js	/^				screenPosition: gl.getUniformLocation( program, 'screenPosition' )$/;"	r
screenPosition	js/three.js	/^			var screenPosition = new Vector3( 1, 1, 0 ),$/;"	r
screenPositionPixels	js/three.js	/^				screenPositionPixels = new Vector2( 1, 1 );$/;"	r
sd	js/three.min.js	/^Ec.prototype=Object.assign(Object.create(w.prototype),{constructor:Ec});sd.prototype=Object.create(da.prototype);sd.prototype.constructor=sd;Nb.prototype=Object.create(da.prototype);Nb.prototype.constructor=Nb;Nb.prototype.isCompressedTexture=!0;Fc.prototype=Object.create(da.prototype);Fc.prototype.constructor=Fc;Fc.prototype.isDepthTexture=!0;Ob.prototype=Object.create(C.prototype);Ob.prototype.constructor=Ob;Gc.prototype=Object.create(L.prototype);Gc.prototype.constructor=Gc;Pb.prototype=Object.create(C.prototype);$/;"	r
searchNodeSubtree	js/three.js	/^				var searchNodeSubtree = function ( children ) {$/;"	r
searchSkeleton	js/three.js	/^				var searchSkeleton = function ( skeleton ) {$/;"	r
seek	js/three.js	/^				seek: {$/;"	r
seg1Pt	js/three.js	/^					var seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );	\/\/ segment1 is just a point?$/;"	r
seg1dx	js/three.js	/^				var seg1dx = inSeg1Pt2.x - inSeg1Pt1.x, seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;$/;"	r
seg1max	js/three.js	/^							seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;$/;"	r
seg1max	js/three.js	/^							seg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;$/;"	r
seg1max	js/three.js	/^							seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;$/;"	r
seg1max	js/three.js	/^							seg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;$/;"	r
seg1min	js/three.js	/^							seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;$/;"	r
seg1min	js/three.js	/^							seg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;$/;"	r
seg1min	js/three.js	/^							seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;$/;"	r
seg1min	js/three.js	/^							seg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;$/;"	r
seg1min	js/three.js	/^					var seg1min, seg1max, seg1minVal, seg1maxVal;$/;"	r
seg1seg2dx	js/three.js	/^				var seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;$/;"	r
seg1seg2dy	js/three.js	/^				var seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;$/;"	r
seg2Pt	js/three.js	/^					var seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );	\/\/ segment2 is just a point?$/;"	r
seg2dx	js/three.js	/^				var seg2dx = inSeg2Pt2.x - inSeg2Pt1.x, seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;$/;"	r
seg2max	js/three.js	/^							seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;$/;"	r
seg2max	js/three.js	/^							seg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;$/;"	r
seg2max	js/three.js	/^							seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;$/;"	r
seg2max	js/three.js	/^							seg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;$/;"	r
seg2min	js/three.js	/^							seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;$/;"	r
seg2min	js/three.js	/^							seg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;$/;"	r
seg2min	js/three.js	/^							seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;$/;"	r
seg2min	js/three.js	/^							seg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;$/;"	r
seg2min	js/three.js	/^					var seg2min, seg2max, seg2minVal, seg2maxVal;$/;"	r
segCenter	js/three.js	/^			var segCenter = new Vector3();$/;"	r
segDir	js/three.js	/^			var segDir = new Vector3();$/;"	r
segExtent	js/three.js	/^								s1 = segExtent;$/;"	r
segExtent	js/three.js	/^				var segExtent = v0.distanceTo( v1 ) * 0.5;$/;"	r
segment	js/three.js	/^				segment = i + thetaSegmentLevel;$/;"	r
segment	js/three.js	/^				segment = thetaStart + i \/ thetaSegments * thetaLength;$/;"	r
segment	js/three.js	/^				var a = segment;$/;"	r
segment	js/three.js	/^			var segment = thetaStart + s \/ segments * thetaLength;$/;"	r
segment	js/three.js	/^		var segment;$/;"	r
segmentFraction	js/three.js	/^			var segmentFraction = ( targetArcLength - lengthBefore ) \/ segmentLength;$/;"	r
segmentHeight	js/three.js	/^			var segmentHeight = height \/ gridY;$/;"	r
segmentLength	js/three.js	/^					var segmentLength = curve.getLength();$/;"	r
segmentLength	js/three.js	/^			var segmentLength = lengthAfter - lengthBefore;$/;"	r
segmentWidth	js/three.js	/^			var segmentWidth = width \/ gridX;$/;"	r
segment_height	js/three.js	/^		var segment_height = height \/ gridY;$/;"	r
segment_width	js/three.js	/^		var segment_width = width \/ gridX;$/;"	r
segments	js/three.js	/^								data.segments,$/;"	r
segments	js/three.js	/^				theta \/= segments;$/;"	r
segments	js/three.js	/^			segments: segments,$/;"	r
segments	js/three.js	/^		segments = Math.floor( segments ) || 12;$/;"	r
segments	js/three.js	/^		segments = segments !== undefined ? Math.max( 3, segments ) : 8;$/;"	r
segments	js/three.js	/^		this.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );$/;"	r
segments	js/three.js	/^		this.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );$/;"	r
segments	js/three.js	/^	function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {$/;"	r
segments	js/three.js	/^	function CircleGeometry( radius, segments, thetaStart, thetaLength ) {$/;"	r
segments	js/three.js	/^	function LatheBufferGeometry( points, segments, phiStart, phiLength ) {$/;"	r
segments	js/three.js	/^	function LatheGeometry( points, segments, phiStart, phiLength ) {$/;"	r
segments	js/three.min.js	/^f,q);this.setIndex(g);this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(k,3));this.addAttribute("uv",new z(l,2))}function Sc(a,b,c,d){L.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new Yb(a,b,c,d));this.mergeVertices()}function Yb(a,b,c,d){C.call(this);this.type="LatheBufferGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=R.clamp(d,$/;"	r
seq	js/three.js	/^		this.seq = [];$/;"	r
seq	js/three.js	/^		var seq = this.seq;$/;"	r
seq	js/three.js	/^	 * .upload( gl, seq, values, renderer )$/;"	r
seq	js/three.js	/^	WebGLUniforms.upload = function ( gl, seq, values, renderer ) {$/;"	r
seq	js/three.min.js	/^case 35667:case 35671:return De;case 35668:case 35672:return Ee;case 35669:case 35673:return Fe}}function Hf(a,b,c){this.id=a;this.addr=c;this.setValue=vf(b.type)}function If(a,b,c){this.id=a;this.addr=c;this.size=b.size;this.setValue=Gf(b.type)}function Ge(a){this.id=a;this.seq=[];this.map={}}function cb(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d<c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,k=$/;"	r
seqWithValue	js/three.js	/^	WebGLUniforms.seqWithValue = function ( seq, values ) {$/;"	r
serialize	js/three.js	/^			function serialize( library, element ) {$/;"	r
set	js/three.js	/^			set: function ( cullFace ) {$/;"	r
set	js/three.js	/^			set: function ( power ) {$/;"	r
set	js/three.js	/^			set: function ( value ) {$/;"	r
set	js/three.js	/^			set: function () {$/;"	r
set	js/three.js	/^		set: function ( a, b, c ) {$/;"	r
set	js/three.js	/^		set: function ( center, radius ) {$/;"	r
set	js/three.js	/^		set: function ( channel ) {$/;"	r
set	js/three.js	/^		set: function ( min, max ) {$/;"	r
set	js/three.js	/^		set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {$/;"	r
set	js/three.js	/^		set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {$/;"	r
set	js/three.js	/^		set: function ( normal, constant ) {$/;"	r
set	js/three.js	/^		set: function ( origin, direction ) {$/;"	r
set	js/three.js	/^		set: function ( p0, p1, p2, p3, p4, p5 ) {$/;"	r
set	js/three.js	/^		set: function ( radius, phi, theta ) {$/;"	r
set	js/three.js	/^		set: function ( radius, theta, y ) {$/;"	r
set	js/three.js	/^		set: function ( start, end ) {$/;"	r
set	js/three.js	/^		set: function ( value ) {$/;"	r
set	js/three.js	/^		set: function ( value, offset ) {$/;"	r
set	js/three.js	/^		set: function ( x, y ) {$/;"	r
set	js/three.js	/^		set: function ( x, y, z ) {$/;"	r
set	js/three.js	/^		set: function ( x, y, z, order ) {$/;"	r
set	js/three.js	/^		set: function ( x, y, z, w ) {$/;"	r
set	js/three.js	/^		set: function () {$/;"	r
set	js/three.min.js	/^2)?Math.ceil(a.y)-a.y:a.y-Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}});Object.assign(ba.prototype,{isVector4:!0,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;$/;"	r
set	js/three.min.js	/^Math.floor(Math.log(a)\/Math.LN2))}};Object.defineProperties(D.prototype,{width:{get:function(){return this.x},set:function(a){this.x=a}},height:{get:function(){return this.y},set:function(a){this.y=a}}});Object.assign(D.prototype,{isVector2:!0,set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;$/;"	r
set	js/three.min.js	/^Object.defineProperties(Cc.prototype,{objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}});Object.defineProperty(Dc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Object.defineProperty(ca.prototype,"__arcLengthDivisions",{get:function(){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");$/;"	r
set	js/three.min.js	/^Object.defineProperties(Jd.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this}}});Object.defineProperties(Q.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},$/;"	r
set	js/three.min.js	/^Object.defineProperties(Wd.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");$/;"	r
set	js/three.min.js	/^Ta;Ta.prototype.isCubeTexture=!0;Object.defineProperty(Ta.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});var Be=new da,Ce=new Ta,we=[],ye=[],Ae=new Float32Array(16),ze=new Float32Array(9);Ge.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var Od=\/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;cb.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};cb.prototype.setOptional=function(a,$/;"	r
set	js/three.min.js	/^Xa.DefaultOrder="XYZ";Object.defineProperties(Xa.prototype,{x:{get:function(){return this._x},set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},order:{get:function(){return this._order},set:function(a){this._order=a;this.onChangeCallback()}}});Object.assign(Xa.prototype,{isEuler:!0,set:function(a,b,c,d){this._x=a;this._y=b;this._z=$/;"	r
set	js/three.min.js	/^a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;return this};Object.assign(Na.prototype,{isBox3:!0,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromArray:function(a){for(var b=Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.length;h<k;h+=3){var l=a[h],q=a[h+1],n=a[h+2];l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromBufferAttribute:function(a){for(var b=$/;"	r
set	js/three.min.js	/^a}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=a}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=$/;"	r
set	js/three.min.js	/^a}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=a}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=a}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");$/;"	r
set	js/three.min.js	/^b[c++]=f.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},$/;"	r
set	js/three.min.js	/^d]=b.array[c+d];return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(a){this.onUploadCallback=a;return this}});me.prototype=Object.assign(Object.create(jc.prototype),{constructor:me,isInstancedInterleavedBuffer:!0,copy:function(a){jc.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this}});ne.prototype=Object.assign(Object.create(O.prototype),{constructor:ne,isInstancedBufferAttribute:!0,$/;"	r
set	js/three.min.js	/^return this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=a}});Y.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};Object.defineProperties(fa.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");$/;"	r
set	js/three.min.js	/^return this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},$/;"	r
set	js/three.min.js	/^return this.translateOnAxis(b,a)}});Object.defineProperties(w.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});$/;"	r
set	js/three.min.js	/^return!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Aa.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=a}}});Object.assign(Wd.prototype,$/;"	r
set	js/three.min.js	/^royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(H.prototype,{isColor:!0,r:1,g:1,b:1,set:function(a){a&&$/;"	r
set	js/three.min.js	/^set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a}}});ic.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var b=this;(new ee).load(a,function(a){b.setBuffer(a)});return this};ie.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};$c.prototype.updateCubeMap=function(a,$/;"	r
set	js/three.min.js	/^set:function(a){this._x=a;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(a){this._y=a;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(a){this._z=a;this.onChangeCallback()}},w:{get:function(){return this._w},set:function(a){this._w=a;this.onChangeCallback()}}});Object.assign(X.prototype,{set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,$/;"	r
set	js/three.min.js	/^this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a\/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI\/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new vd}function xd(a,b,c,d){fa.call(this,a,b);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=$/;"	r
set	js/three.min.js	/^this.shadowMap.cullFace=a}}});Object.defineProperties(Ie.prototype,{cullFace:{get:function(){return this.renderReverseSided?2:1},set:function(a){a=1!==a;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+a+".");this.renderReverseSided=a}}});Object.defineProperties(Db.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");$/;"	r
set	js/three.min.js	/^this.texture.wrapS=a}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=a}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=$/;"	r
set	js/three.min.js	/^wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new H}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=1===a}}});Object.defineProperties(Ia.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");$/;"	r
setArray	js/three.js	/^		setArray: function ( array ) {$/;"	r
setArray	js/three.min.js	/^Object.assign(jc.prototype,{isInterleavedBuffer:!0,setArray:function(a){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==a?a.length\/this.stride:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.count=a.count;this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+$/;"	r
setAxisAngleFromQuaternion	js/three.js	/^		setAxisAngleFromQuaternion: function ( q ) {$/;"	r
setAxisAngleFromRotationMatrix	js/three.js	/^		setAxisAngleFromRotationMatrix: function ( m ) {$/;"	r
setBit	js/three.js	/^			function setBit( value, position, enabled ) {$/;"	r
setBlending	js/three.js	/^			setBlending: setBlending,$/;"	r
setBlending	js/three.js	/^		function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {$/;"	r
setBuffer	js/three.js	/^		setBuffer: function ( audioBuffer ) {$/;"	r
setClear	js/three.js	/^				setClear: function ( depth ) {$/;"	r
setClear	js/three.js	/^				setClear: function ( r, g, b, a, premultipliedAlpha ) {$/;"	r
setClear	js/three.js	/^				setClear: function ( stencil ) {$/;"	r
setClear	js/three.js	/^		function setClear( color, alpha ) {$/;"	r
setClear	js/three.min.js	/^setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g);c.set(b,d,f,g);!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1;d=null;e.set(-1,0,0,0)}}},u=new function(){var b=!1,c=null,d=null,g=null;return{setTest:function(b){b?e(a.DEPTH_TEST):f(a.DEPTH_TEST)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case 0:a.depthFunc(a.NEVER);break;case 1:a.depthFunc(a.ALWAYS);break;case 2:a.depthFunc(a.LESS);break;case 3:a.depthFunc(a.LEQUAL);$/;"	r
setClearAlpha	js/three.js	/^			setClearAlpha: function ( alpha ) {$/;"	r
setClearAlpha	js/three.js	/^		this.setClearAlpha = function () {$/;"	r
setClearColor	js/three.js	/^			setClearColor: function ( color, alpha ) {$/;"	r
setClearColor	js/three.js	/^		this.setClearColor = function () {$/;"	r
setClearColor	js/three.js	/^		this.setClearColor = function () {};$/;"	r
setClearColor	js/three.min.js	/^b?b:new p;this.c=void 0!==c?c:new p}function qa(a,b){w.call(this);this.type="Mesh";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new va({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Qf(a,b,c,d){function e(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d)}var f=new H(0),g=0,h,k,l;return{getClearColor:function(){return f},setClearColor:function(a,b){f.set(a);g=void 0!==b?b:1;e(f,g)},getClearAlpha:function(){return g},setClearAlpha:function(a){g=a;e(f,$/;"	r
setColor	js/three.js	/^	ArrowHelper.prototype.setColor = function ( color ) {$/;"	r
setColors	js/three.js	/^	GridHelper.prototype.setColors = function () {$/;"	r
setColors	js/three.min.js	/^Object.create(la.prototype);ff.prototype=Object.create(la.prototype);re.prototype=Object.create(la.prototype);Object.assign(re.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});cd.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};$/;"	r
setComponent	js/three.js	/^		setComponent: function ( index, value ) {$/;"	r
setComponents	js/three.js	/^		setComponents: function ( x, y, z, w ) {$/;"	r
setContext	js/three.js	/^		setContext: function ( value ) {$/;"	r
setContext	js/three.min.js	/^window.webkitAudioContext));return Md},setContext:function(a){Md=a}};Object.assign(ee.prototype,{load:function(a,b,c,d){var e=new Ja(this.manager);e.setResponseType("arraybuffer");e.load(a,function(a){ge.getContext().decodeAudioData(a,function(a){b(a)})},c,d)}});Object.assign(Ue.prototype,{update:function(){var a,b,c,d,e,f,g,h,k=new K,l=new K;return function(m){if(a!==this||b!==m.focus||c!==m.fov||d!==m.aspect*this.aspect||e!==m.near||f!==m.far||g!==m.zoom||h!==this.eyeSep){a=this;b=m.focus;c=m.fov;$/;"	r
setCrossOrigin	js/GLTFLoader.js	/^		setCrossOrigin: function ( value ) {$/;"	r
setCrossOrigin	js/three.js	/^		setCrossOrigin: function ( value ) {$/;"	r
setCrossOrigin	js/three.min.js	/^"img");c.addEventListener("load",function(){jd.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);c.addEventListener("error",function(b){d&&d(b);e.manager.itemEnd(a);e.manager.itemError(a)},!1);"data:"!==a.substr(0,5)&&void 0!==this.crossOrigin&&(c.crossOrigin=this.crossOrigin);e.manager.itemStart(a);c.src=a;return c},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign($d.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){function e(c){g.load(a[c],$/;"	r
setCrossOrigin	js/three.min.js	/^function(){var c=0<a.search(\/\\.(jpg|jpeg)$\/)||0===a.search(\/^data\\:image\\\/jpeg\/);f.format=c?1022:1023;f.needsUpdate=!0;void 0!==b&&b(f)},c,d);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});fa.prototype=Object.assign(Object.create(w.prototype),{constructor:fa,isLight:!0,copy:function(a){w.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this},toJSON:function(a){a=w.prototype.toJSON.call(this,$/;"	r
setCrossOrigin	js/three.min.js	/^function(a){f.images[c]=a;h++;6===h&&(f.needsUpdate=!0,b&&b(f))},void 0,d)}var f=new Ta,g=new Wc(this.manager);g.setCrossOrigin(this.crossOrigin);g.setPath(this.path);var h=0;for(c=0;c<a.length;++c)e(c);return f},setCrossOrigin:function(a){this.crossOrigin=a;return this},setPath:function(a){this.path=a;return this}});Object.assign(td.prototype,{crossOrigin:"Anonymous",load:function(a,b,c,d){var e=new Wc(this.manager);e.setCrossOrigin(this.crossOrigin);e.setPath(this.path);var f=new da;f.image=e.load(a,$/;"	r
setCullFace	js/three.js	/^			setCullFace: setCullFace,$/;"	r
setCullFace	js/three.js	/^		function setCullFace( cullFace ) {$/;"	r
setDevice	js/three.js	/^		this.setDevice = function ( value ) {$/;"	r
setDevice	js/three.min.js	/^function(){return d};this.setDevice=function(a){void 0!==a&&(d=a)};this.getCamera=function(a){if(null===d)return a;d.depthNear=a.near;d.depthFar=a.far;d.getFrameData(e);var b=e.pose;null!==b.position?a.position.fromArray(b.position):a.position.set(0,0,0);null!==b.orientation&&a.quaternion.fromArray(b.orientation);a.updateMatrixWorld();b=d.stageParameters;this.standing&&b&&(g.fromArray(b.sittingToStandingTransform),h.getInverse(g),a.matrixWorld.multiply(g),a.matrixWorldInverse.multiply(h));if(!1===$/;"	r
setDirection	js/three.js	/^		return function setDirection( dir ) {$/;"	r
setDirection	js/three.js	/^	ArrowHelper.prototype.setDirection = ( function () {$/;"	r
setDistanceModel	js/three.js	/^		setDistanceModel: function ( value ) {$/;"	r
setDrawMode	js/three.js	/^		setDrawMode: function ( value ) {$/;"	r
setDrawMode	js/three.min.js	/^{constructor:qa,isMesh:!0,setDrawMode:function(a){this.drawMode=a},copy:function(a){w.prototype.copy.call(this,a);this.drawMode=a.drawMode;void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice());void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary));return this},updateMorphTargets:function(){var a=this.geometry;if(a.isBufferGeometry){a=a.morphAttributes;var b=Object.keys(a);if(0<b.length){var c=a[b[0]];if(void 0!==$/;"	r
setDrawRange	js/three.js	/^		setDrawRange: function ( start, count ) {$/;"	r
setDrawingBufferSize	js/three.js	/^		this.setDrawingBufferSize = function ( width, height, pixelRatio ) {$/;"	r
setDrawingBufferSize	js/three.min.js	/^P,height:ea*P}};this.setDrawingBufferSize=function(a,b,c){W=a;ea=b;P=c;t.width=a*c;t.height=b*c;this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){ca.set(a,ea-b-d,c,d);aa.viewport(Q.copy(ca).multiplyScalar(P))};this.setScissor=function(a,b,c,d){da.set(a,ea-b-d,c,d);aa.scissor(V.copy(da).multiplyScalar(P))};this.setScissorTest=function(a){aa.setScissorTest(Oe=a)};this.getClearColor=function(){return ia.getClearColor()};this.setClearColor=function(){ia.setClearColor.apply(ia,arguments)};$/;"	r
setDuration	js/three.js	/^		setDuration: function ( duration ) {$/;"	r
setDuration	js/three.min.js	/^setDuration:function(a){this.timeScale=this._clip.duration\/a;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a\/g;f[1]=b\/g;return this},stopWarping:function(){var a=$/;"	r
setDynamic	js/three.js	/^		setDynamic: function ( value ) {$/;"	r
setDynamic	js/three.min.js	/^a?a.length\/this.itemSize:0;this.array=a},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.count=a.count;this.normalized=a.normalized;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;c*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=$/;"	r
setEffectiveTimeScale	js/three.js	/^		setEffectiveTimeScale: function ( timeScale ) {$/;"	r
setEffectiveWeight	js/three.js	/^		setEffectiveWeight: function ( weight ) {$/;"	r
setEulerFromQuaternion	js/three.js	/^		setEulerFromQuaternion: function () {$/;"	r
setEulerFromQuaternion	js/three.min.js	/^setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,$/;"	r
setEulerFromRotationMatrix	js/three.js	/^		setEulerFromRotationMatrix: function () {$/;"	r
setFaceCulling	js/three.js	/^		this.setFaceCulling = function ( cullFace, frontFaceDirection ) {$/;"	r
setFaceCulling	js/three.min.js	/^d.length&&l(d,a,b,f);e.length&&l(e,a,b,f)}else d.length&&l(d,a,b),e.length&&l(e,a,b);Aa.render(C,a,b);za.render(Ua,a,b,Q);c&&S.updateRenderTargetMipmap(c);aa.buffers.depth.setTest(!0);aa.buffers.depth.setMask(!0);aa.buffers.color.setMask(!0);aa.setPolygonOffset(!1);la.enabled&&la.submitFrame()}};this.setFaceCulling=function(a,b){aa.setCullFace(a);aa.setFlipSided(0===b)};this.allocTextureUnit=function(){var a=G;a>=X.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+a+" texture units while this GPU supports only "+$/;"	r
setFilter	js/three.js	/^		setFilter: function ( filter ) {$/;"	r
setFilter	js/three.js	/^		setFilter: function ( value ) {$/;"	r
setFilter	js/three.min.js	/^setFilter:function(a){return this.setFilters(a?[a]:[])},setPlaybackRate:function(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),$/;"	r
setFilters	js/three.js	/^		setFilters: function ( value ) {$/;"	r
setFlipSided	js/three.js	/^			setFlipSided: setFlipSided,$/;"	r
setFlipSided	js/three.js	/^		function setFlipSided( flipSided ) {$/;"	r
setFlipSided	js/three.min.js	/^b.blendDst,b.blendEquationAlpha,b.blendSrcAlpha,b.blendDstAlpha,b.premultipliedAlpha):g(0);u.setFunc(b.depthFunc);u.setTest(b.depthTest);u.setMask(b.depthWrite);n.setMask(b.colorWrite);l(b.polygonOffset,b.polygonOffsetFactor,b.polygonOffsetUnits)},setFlipSided:h,setCullFace:k,setLineWidth:function(b){b!==N&&(Z&&a.lineWidth(b),N=b)},setPolygonOffset:l,setScissorTest:function(b){b?e(a.SCISSOR_TEST):f(a.SCISSOR_TEST)},activeTexture:q,bindTexture:function(b,c){null===R&&q();var d=O[R];void 0===d&&(d=$/;"	r
setFocalLength	js/three.js	/^		setFocalLength: function ( focalLength ) {$/;"	r
setFocalLength	js/three.min.js	/^this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()\/a;this.fov=2*R.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*R.DEG2RAD*this.fov);return.5*this.getFilmHeight()\/a},getEffectiveFOV:function(){return 2*R.RAD2DEG*Math.atan(Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,$/;"	r
setFromArray	js/three.js	/^		setFromArray: function ( array ) {$/;"	r
setFromAxisAngle	js/three.js	/^		setFromAxisAngle: function ( axis, angle ) {$/;"	r
setFromAxisAngle	js/three.min.js	/^h*d*e,this._y=h*d*f-c*k*e,this._z=h*k*e-c*d*f,this._w=h*k*f+c*d*e):"ZXY"===a?(this._x=c*k*f-h*d*e,this._y=h*d*f+c*k*e,this._z=h*k*e+c*d*f,this._w=h*k*f-c*d*e):"ZYX"===a?(this._x=c*k*f-h*d*e,this._y=h*d*f+c*k*e,this._z=h*k*e-c*d*f,this._w=h*k*f+c*d*e):"YZX"===a?(this._x=c*k*f+h*d*e,this._y=h*d*f+c*k*e,this._z=h*k*e-c*d*f,this._w=h*k*f-c*d*e):"XZY"===a&&(this._x=c*k*f-h*d*e,this._y=h*d*f-c*k*e,this._z=h*k*e+c*d*f,this._w=h*k*f+c*d*e);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,$/;"	r
setFromBufferAttribute	js/three.js	/^		setFromBufferAttribute: function ( attribute ) {$/;"	r
setFromCamera	js/three.js	/^		setFromCamera: function ( coords, camera ) {$/;"	r
setFromCenterAndSize	js/three.js	/^			return function setFromCenterAndSize( center, size ) {$/;"	r
setFromCenterAndSize	js/three.js	/^		setFromCenterAndSize: function () {$/;"	r
setFromCoplanarPoints	js/three.js	/^			return function setFromCoplanarPoints( a, b, c ) {$/;"	r
setFromCoplanarPoints	js/three.js	/^		setFromCoplanarPoints: function () {$/;"	r
setFromCylindrical	js/three.js	/^		setFromCylindrical: function ( c ) {$/;"	r
setFromEuler	js/three.js	/^		setFromEuler: function ( euler, update ) {$/;"	r
setFromEuler	js/three.min.js	/^this._w)},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!a||!a.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var c=a._x,d=a._y,e=a._z;a=a.order;var f=Math.cos,g=Math.sin,h=f(c\/2),k=f(d\/2),f=f(e\/2),c=g(c\/2),d=g(d\/2),e=g(e\/2);"XYZ"===a?(this._x=c*k*f+h*d*e,this._y=h*d*f-c*k*e,this._z=h*k*e+c*d*f,this._w=h*k*f-c*d*e):"YXZ"===a?(this._x=c*k*f+$/;"	r
setFromMatrix	js/three.js	/^		setFromMatrix: function ( m ) {$/;"	r
setFromMatrix4	js/three.js	/^		setFromMatrix4: function ( m ) {$/;"	r
setFromMatrixColumn	js/three.js	/^		setFromMatrixColumn: function ( m, index ) {$/;"	r
setFromMatrixColumn	js/three.min.js	/^a[13];this.z=a[14];return this},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=$/;"	r
setFromMatrixPosition	js/three.js	/^		setFromMatrixPosition: function ( m ) {$/;"	r
setFromMatrixScale	js/three.js	/^		setFromMatrixScale: function ( m ) {$/;"	r
setFromMatrixScale	js/three.min.js	/^a[13];this.z=a[14];return this},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=$/;"	r
setFromNormalAndCoplanarPoint	js/three.js	/^		setFromNormalAndCoplanarPoint: function ( normal, point ) {$/;"	r
setFromObject	js/three.js	/^		setFromObject: function ( object ) {$/;"	r
setFromObject	js/three.js	/^	BoxHelper.prototype.setFromObject = function ( object ) {$/;"	r
setFromObject	js/three.min.js	/^c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();Ab.prototype.setFromObject=function(a){this.object=a;this.update();return this};fd.prototype=Object.create(P.prototype);fd.prototype.constructor=fd;fd.prototype.updateMatrixWorld=function(a){var b=this.box;b.isEmpty()||(b.getCenter(this.position),b.getSize(this.scale),this.scale.multiplyScalar(.5),w.prototype.updateMatrixWorld.call(this,$/;"	r
setFromObject	js/three.min.js	/^return this}}(),setFromObject:function(a){this.makeEmpty();return this.expandByObject(a)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):$/;"	r
setFromPoints	js/three.js	/^			return function setFromPoints( points, optionalCenter ) {$/;"	r
setFromPoints	js/three.js	/^		setFromPoints: function ( points ) {$/;"	r
setFromPoints	js/three.js	/^		setFromPoints: function () {$/;"	r
setFromPoints	js/three.min.js	/^3);this.addAttribute("position",a.copyVector3sArray(b.vertices));this.addAttribute("color",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&(a=new z(b.lineDistances.length,1),this.addAttribute("lineDistance",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a.isMesh&&b&&b.isGeometry&&this.fromGeometry(b);return this},setFromPoints:function(a){for(var b=$/;"	r
setFromPoints	js/three.min.js	/^Infinity,c=Infinity,d=Infinity,e=-Infinity,f=-Infinity,g=-Infinity,h=0,k=a.count;h<k;h++){var l=a.getX(h),q=a.getY(h),n=a.getZ(h);l<b&&(b=l);q<c&&(c=q);n<d&&(d=n);l>e&&(e=l);q>f&&(f=q);n>g&&(g=n)}this.min.set(b,c,d);this.max.set(e,f,g);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new p;return function(b,c){c=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);$/;"	r
setFromPoints	js/three.min.js	/^b;return f},setFromPoints:function(a){this.vertices=[];for(var b=0,c=a.length;b<c;b++){var d=a[b];this.vertices.push(new p(d.x,d.y,d.z||0))}return this},sortFacesByMaterialIndex:function(){for(var a=this.faces,b=a.length,c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});var d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]);e&&e.length===b&&(g=[]);for(c=0;c<b;c++){var h=a[c]._id;f&&f.push(d[h]);g&&g.push(e[h])}f&&(this.faceVertexUvs[0]=f);$/;"	r
setFromPoints	js/three.min.js	/^fragmentShader:V.shadow_frag}};ib.physical={uniforms:Ea.merge([ib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:V.meshphysical_vert,fragmentShader:V.meshphysical_frag};Object.assign(kd.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new D;return function(b,c){c=a.copy(c).multiplyScalar(.5);$/;"	r
setFromPointsAndIndices	js/three.js	/^		setFromPointsAndIndices: function ( points, i0, i1, i2 ) {$/;"	r
setFromPointsAndIndices	js/three.min.js	/^Pa.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}()});Object.assign(Pa.prototype,{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new p,b=new p;return function(){a.subVectors(this.c,$/;"	r
setFromQuaternion	js/three.js	/^			return function setFromQuaternion( q, order, update ) {$/;"	r
setFromQuaternion	js/three.js	/^		setFromQuaternion: function () {$/;"	r
setFromQuaternion	js/three.min.js	/^b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-q,a)):(this._x=0,this._y=Math.atan2(g,e))):"XZY"===b?(this._z=Math.asin(-d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(n,k),this._y=Math.atan2(g,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a=new K;return function(b,c,d){a.makeRotationFromQuaternion(b);$/;"	r
setFromRotationMatrix	js/three.js	/^		setFromRotationMatrix: function ( m ) {$/;"	r
setFromRotationMatrix	js/three.js	/^		setFromRotationMatrix: function ( m, order, update ) {$/;"	r
setFromRotationMatrix	js/three.min.js	/^b){b\/=2;var c=Math.sin(b);this._x=a.x*c;this._y=a.y*c;this._z=a.z*c;this._w=Math.cos(b);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5\/Math.sqrt(l+1),this._w=.25\/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)\/c,this._x=.25*c,this._y=(a+e)\/c,this._z=(d+h)\/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)\/c,this._x=(a+e)\/c,this._y=$/;"	r
setFromSpherical	js/three.js	/^		setFromSpherical: function ( s ) {$/;"	r
setFromUnitVectors	js/three.js	/^			return function setFromUnitVectors( vFrom, vTo ) {$/;"	r
setFromUnitVectors	js/three.js	/^		setFromUnitVectors: function () {$/;"	r
setFromUnitVectors	js/three.min.js	/^.25*c,this._z=(g+k)\/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)\/c,this._x=(d+h)\/c,this._y=(g+k)\/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a=new p,b;return function(c,d){void 0===a&&(a=new p);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=$/;"	r
setFromVector3	js/three.js	/^		setFromVector3: function ( v, order ) {$/;"	r
setFromVector3	js/three.js	/^		setFromVector3: function ( vec3 ) {$/;"	r
setFromVector3	js/three.min.js	/^return this.setFromRotationMatrix(a,c,d)}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new X;return function(b){a.setFromEuler(this);return this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===$/;"	r
setFunc	js/three.js	/^				setFunc: function ( depthFunc ) {$/;"	r
setFunc	js/three.js	/^				setFunc: function ( stencilFunc, stencilRef, stencilMask ) {$/;"	r
setFunc	js/three.min.js	/^(a.stencilMask(d),c=d)},setFunc:function(b,c,e){if(d!==b||g!==c||h!==e)a.stencilFunc(b,c,e),d=b,g=c,h=e},setOp:function(b,c,d){if(l!==b||k!==c||n!==d)a.stencilOp(b,c,d),l=b,k=c,n=d},setLocked:function(a){b=a},setClear:function(b){q!==b&&(a.clearStencil(b),q=b)},reset:function(){b=!1;q=n=k=l=h=g=d=c=null}}},m=a.getParameter(a.MAX_VERTEX_ATTRIBS),t=new Uint8Array(m),p=new Uint8Array(m),y=new Uint8Array(m),B={},I=null,A=null,J=null,ya=null,w=null,z=null,ga=null,D=null,E=null,M=!1,C=null,H=null,N=null,$/;"	r
setHSL	js/three.js	/^			return function setHSL( h, s, l ) {$/;"	r
setHSL	js/three.js	/^		setHSL: function () {$/;"	r
setHex	js/three.js	/^		setHex: function ( hex ) {$/;"	r
setIndex	js/three.js	/^		function setIndex( value ) {$/;"	r
setIndex	js/three.js	/^		setIndex: function ( index ) {$/;"	r
setIndex	js/three.js	/^		this.setIndex = setIndex;$/;"	r
setIndex	js/three.min.js	/^a};this.setIndex=function(a){e=a.type;f=a.bytesPerElement};this.render=function(b,h){a.drawElements(d,h,e,b*f);c.calls++;c.vertices+=h;d===a.TRIANGLES?c.faces+=h\/3:d===a.POINTS&&(c.points+=h)};this.renderInstances=function(g,h,k){var l=b.get("ANGLE_instanced_arrays");null===l?console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."):(l.drawElementsInstancedANGLE(d,k,e,h*f,g.maxInstancedCount),c.calls++,c.vertices+=$/;"	r
setIndex	js/three.min.js	/^setIndex:function(a){Array.isArray(a)?this.index=new (65535<Qd(a)?eb:db)(a,1):this.index=a},addAttribute:function(a,b,c){if(b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)if("index"===a)console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b);else return this.attributes[a]=b,this;else console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(a,new O(b,c))},getAttribute:function(a){return this.attributes[a]},$/;"	r
setInterpolation	js/three.js	/^		setInterpolation: function ( interpolation ) {$/;"	r
setLength	js/three.js	/^		setLength: function ( length ) {$/;"	r
setLength	js/three.js	/^	ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {$/;"	r
setLength	js/three.min.js	/^0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();Bb.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,Math.max(0,a-b),1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};Bb.prototype.setColor=function(a){this.line.material.color.copy(a);this.cone.material.color.copy(a)};hd.prototype=Object.create(P.prototype);hd.prototype.constructor=hd;var Nd=new p,$/;"	r
setLens	js/three.js	/^	PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {$/;"	r
setLens	js/three.min.js	/^return this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=a}});Y.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};Object.defineProperties(fa.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");$/;"	r
setLineWidth	js/three.js	/^			setLineWidth: setLineWidth,$/;"	r
setLineWidth	js/three.js	/^		function setLineWidth( width ) {$/;"	r
setLineWidth	js/three.min.js	/^b.blendDst,b.blendEquationAlpha,b.blendSrcAlpha,b.blendDstAlpha,b.premultipliedAlpha):g(0);u.setFunc(b.depthFunc);u.setTest(b.depthTest);u.setMask(b.depthWrite);n.setMask(b.colorWrite);l(b.polygonOffset,b.polygonOffsetFactor,b.polygonOffsetUnits)},setFlipSided:h,setCullFace:k,setLineWidth:function(b){b!==N&&(Z&&a.lineWidth(b),N=b)},setPolygonOffset:l,setScissorTest:function(b){b?e(a.SCISSOR_TEST):f(a.SCISSOR_TEST)},activeTexture:q,bindTexture:function(b,c){null===R&&q();var d=O[R];void 0===d&&(d=$/;"	r
setLocked	js/three.js	/^				setLocked: function ( lock ) {$/;"	r
setLocked	js/three.min.js	/^break;case 4:a.depthFunc(a.EQUAL);break;case 5:a.depthFunc(a.GEQUAL);break;case 6:a.depthFunc(a.GREATER);break;case 7:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);d=b}},setLocked:function(a){b=a},setClear:function(b){g!==b&&(a.clearDepth(b),g=b)},reset:function(){b=!1;g=d=c=null}}},r=new function(){var b=!1,c=null,d=null,g=null,h=null,l=null,k=null,n=null,q=null;return{setTest:function(b){b?e(a.STENCIL_TEST):f(a.STENCIL_TEST)},setMask:function(d){c===d||b||$/;"	r
setLocked	js/three.min.js	/^function k(b){0!==b?(e(a.CULL_FACE),b!==H&&(1===b?a.cullFace(a.BACK):2===b?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):f(a.CULL_FACE);H=b}function l(b,c,d){if(b){if(e(a.POLYGON_OFFSET_FILL),U!==c||K!==d)a.polygonOffset(c,d),U=c,K=d}else f(a.POLYGON_OFFSET_FILL)}function q(b){void 0===b&&(b=a.TEXTURE0+L-1);R!==b&&(a.activeTexture(b),R=b)}var n=new function(){var b=!1,c=new ba,d=null,e=new ba(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},$/;"	r
setLoop	js/three.js	/^		setLoop: function ( mode, repetitions ) {$/;"	r
setLoop	js/three.js	/^		setLoop: function ( value ) {$/;"	r
setLoop	js/three.min.js	/^!1):this.loop},setLoop:function(a){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(a){this.gain.gain.value=a;return this}});he.prototype=Object.assign(Object.create(ic.prototype),{constructor:he,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(a){this.panner.refDistance=$/;"	r
setMask	js/three.js	/^				setMask: function ( colorMask ) {$/;"	r
setMask	js/three.js	/^				setMask: function ( depthMask ) {$/;"	r
setMask	js/three.js	/^				setMask: function ( stencilMask ) {$/;"	r
setMasterVolume	js/three.js	/^		setMasterVolume: function ( value ) {$/;"	r
setMaterial	js/three.js	/^			setMaterial: setMaterial,$/;"	r
setMaterial	js/three.js	/^		function setMaterial( material ) {$/;"	r
setMaxDistance	js/three.js	/^		setMaxDistance: function ( value ) {$/;"	r
setMimeType	js/three.js	/^		setMimeType: function ( value ) {$/;"	r
setMimeType	js/three.min.js	/^a;return this},setMimeType:function(a){this.mimeType=a;return this},setRequestHeader:function(a){this.requestHeader=a;return this}});Object.assign(Qe.prototype,{load:function(a,b,c,d){function e(e){l.load(a[e],function(a){a=g._parser(a,!0);h[e]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};f+=1;6===f&&(1===a.mipmapCount&&(k.minFilter=1006),k.format=a.format,k.needsUpdate=!0,b&&b(k))},c,d)}var f,g=this,h=[],k=new Nb;k.image=h;var l=new Ja(this.manager);l.setPath(this.path);l.setResponseType("arraybuffer");$/;"	r
setMode	js/three.js	/^		function setMode( value ) {$/;"	r
setMode	js/three.js	/^		this.setMode = setMode;$/;"	r
setMode	js/three.min.js	/^f.morphTargets&&e.morphAttributes.position;f=f.morphNormals&&e.morphAttributes.normal;for(l=0;l<k;l++){var n=d[l];0!==n[1]&&(q&&e.removeAttribute("morphTarget"+l),f&&e.removeAttribute("morphNormal"+l))}for(l=0;l<k;l++)n=d[l],n[0]=l,n[1]=h[l];d.sort(Vf);for(l=0;8>l;l++){if(n=d[l])if(h=n[0],n=n[1]){q&&e.addAttribute("morphTarget"+l,q[h]);f&&e.addAttribute("morphNormal"+l,f[h]);c[l]=n;continue}c[l]=0}g.getUniforms().setValue(a,"morphTargetInfluences",c)}}}function Xf(a,b,c){var d,e,f;this.setMode=function(a){d=$/;"	r
setMode	js/three.min.js	/^k*g.maxInstancedCount,d===a.TRIANGLES?c.faces+=g.maxInstancedCount*k\/3:d===a.POINTS&&(c.points+=g.maxInstancedCount*k))}}function Yf(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.calls++;c.vertices+=f;d===a.TRIANGLES?c.faces+=f\/3:d===a.POINTS&&(c.points+=f)};this.renderInstances=function(e,f,g){var h=b.get("ANGLE_instanced_arrays");if(null===h)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");$/;"	r
setNodeSource	js/three.js	/^		setNodeSource: function ( audioNode ) {$/;"	r
setOp	js/three.js	/^				setOp: function ( stencilFail, stencilZFail, stencilZPass ) {$/;"	r
setOptional	js/three.js	/^	WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {$/;"	r
setPath	js/GLTFLoader.js	/^		setPath: function ( value ) {$/;"	r
setPath	js/three.js	/^		setPath: function ( value ) {$/;"	r
setPath	js/three.min.js	/^e.manager.itemError(a)},!1);void 0!==this.responseType&&(n.responseType=this.responseType);void 0!==this.withCredentials&&(n.withCredentials=this.withCredentials);n.overrideMimeType&&n.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text\/plain");for(h in this.requestHeader)n.setRequestHeader(h,this.requestHeader[h]);n.send(null)}e.manager.itemStart(a);return n}},setPath:function(a){this.path=a;return this},setResponseType:function(a){this.responseType=a;return this},setWithCredentials:function(a){this.withCredentials=$/;"	r
setPath	js/three.min.js	/^if(Array.isArray(a))for(var m=f=0,n=a.length;m<n;++m)e(m);else l.load(a,function(a){a=g._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length\/a.mipmapCount,d=0;d<c;d++){h[d]={mipmaps:[]};for(var e=0;e<a.mipmapCount;e++)h[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+e]),h[d].format=a.format,h[d].width=a.width,h[d].height=a.height}else k.image.width=a.width,k.image.height=a.height,k.mipmaps=a.mipmaps;1===a.mipmapCount&&(k.minFilter=1006);k.format=a.format;k.needsUpdate=!0;b&&b(k)},c,d);return k},setPath:function(a){this.path=$/;"	r
setPixelRatio	js/three.js	/^		this.setPixelRatio = function ( value ) {$/;"	r
setPlaybackRate	js/three.js	/^		setPlaybackRate: function ( value ) {$/;"	r
setPoint	js/three.js	/^		function setPoint( point, x, y, z ) {$/;"	r
setPolygonOffset	js/three.js	/^			setPolygonOffset: setPolygonOffset,$/;"	r
setPolygonOffset	js/three.js	/^		function setPolygonOffset( polygonOffset, factor, units ) {$/;"	r
setPosition	js/three.js	/^		setPosition: function ( v ) {$/;"	r
setProgram	js/three.js	/^		function setProgram( camera, fog, material, object ) {$/;"	r
setRGB	js/three.js	/^		setRGB: function ( r, g, b ) {$/;"	r
setRGB	js/three.min.js	/^a.isColor?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a;return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)\/255;this.g=(a>>8&255)\/255;this.b=(a&255)\/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&--d;return d<1\/6?a+6*(c-a)*d:.5>d?c:d<2\/3?a+6*(c-a)*(2\/3-d):a}return function(b,c,d){b=R.euclideanModulo(b,$/;"	r
setRefDistance	js/three.js	/^		setRefDistance: function ( value ) {$/;"	r
setRenderTarget	js/three.js	/^		this.setRenderTarget = function ( renderTarget ) {$/;"	r
setRequestHeader	js/three.js	/^		setRequestHeader: function ( value ) {$/;"	r
setResponseType	js/three.js	/^		setResponseType: function ( value ) {$/;"	r
setRolloffFactor	js/three.js	/^		setRolloffFactor: function ( value ) {$/;"	r
setRotationFromAxisAngle	js/three.js	/^		setRotationFromAxisAngle: function ( axis, angle ) {$/;"	r
setRotationFromEuler	js/three.js	/^		setRotationFromEuler: function ( euler ) {$/;"	r
setRotationFromMatrix	js/three.js	/^		setRotationFromMatrix: function ( m ) {$/;"	r
setRotationFromMatrix	js/three.min.js	/^!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new X;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateOnWorldAxis:function(){var a=new X;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.premultiply(a);return this}}(),rotateX:function(){var a=new p(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=$/;"	r
setRotationFromQuaternion	js/three.js	/^		setRotationFromQuaternion: function ( q ) {$/;"	r
setRotationFromQuaternion	js/three.min.js	/^return a.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector4:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");$/;"	r
setScalar	js/three.js	/^		setScalar: function ( scalar ) {$/;"	r
setScalar	js/three.min.js	/^a.isColor?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setScalar:function(a){this.b=this.g=this.r=a;return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)\/255;this.g=(a>>8&255)\/255;this.b=(a&255)\/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&--d;return d<1\/6?a+6*(c-a)*d:.5>d?c:d<2\/3?a+6*(c-a)*(2\/3-d):a}return function(b,c,d){b=R.euclideanModulo(b,$/;"	r
setScissor	js/three.js	/^		this.setScissor = function ( x, y, width, height ) {$/;"	r
setScissorTest	js/three.js	/^			setScissorTest: setScissorTest,$/;"	r
setScissorTest	js/three.js	/^		function setScissorTest( scissorTest ) {$/;"	r
setScissorTest	js/three.js	/^		this.setScissorTest = function ( boolean ) {$/;"	r
setSize	js/three.js	/^		setSize: function ( width, height ) {$/;"	r
setSize	js/three.js	/^		this.setSize = function ( width, height, updateStyle ) {$/;"	r
setSize	js/three.js	/^		this.setSize = function () {};$/;"	r
setSize	js/three.min.js	/^b,c){void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);this.w=a.getW(b);return this}});Object.assign(Db.prototype,ia.prototype,{isWebGLRenderTarget:!0,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=$/;"	r
setState	js/three.js	/^		this.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {$/;"	r
setStyle	js/three.js	/^		setStyle: function ( style ) {$/;"	r
setStyle	js/three.min.js	/^1);c=R.clamp(c,0,1);d=R.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1\/3),this.g=a(d,c,b),this.b=a(d,c,b-1\/3));return this}}(),setStyle:function(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}var c;if(c=\/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)\/.exec(a)){var d=c[2];switch(c[1]){case "rgb":case "rgba":if(c=\/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d))return this.r=Math.min(255,$/;"	r
setTest	js/three.js	/^				setTest: function ( depthTest ) {$/;"	r
setTest	js/three.js	/^				setTest: function ( stencilTest ) {$/;"	r
setTexture	js/three.js	/^			return function setTexture( texture, slot ) {$/;"	r
setTexture	js/three.js	/^		this.setTexture = ( function () {$/;"	r
setTexture2D	js/three.js	/^			return function setTexture2D( texture, slot ) {$/;"	r
setTexture2D	js/three.js	/^		\/\/ this.setTexture2D = setTexture2D;$/;"	r
setTexture2D	js/three.js	/^		function setTexture2D( texture, slot ) {$/;"	r
setTexture2D	js/three.js	/^		this.setTexture2D = ( function () {$/;"	r
setTexture2D	js/three.js	/^		this.setTexture2D = setTexture2D;$/;"	r
setTexture2D	js/three.min.js	/^X.maxTextures);G+=1;return a};this.setTexture2D=function(){var a=!1;return function(b,c){b&&b.isWebGLRenderTarget&&(a||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),a=!0),b=b.texture);S.setTexture2D(b,c)}}();this.setTexture=function(){var a=!1;return function(b,c){a||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),a=!0);S.setTexture2D(b,c)}}();this.setTextureCube=function(){var a=$/;"	r
setTexture2D	js/three.min.js	/^a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)):c.depthBuffer&&c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,b)):a.renderbufferStorage(a.RENDERBUFFER,a.RGBA4,c.width,c.height);a.bindRenderbuffer(a.RENDERBUFFER,null)}var y="undefined"!==typeof WebGL2RenderingContext&&a instanceof window.WebGL2RenderingContext;this.setTexture2D=r;this.setTextureCube=$/;"	r
setTextureCube	js/three.js	/^			return function setTextureCube( texture, slot ) {$/;"	r
setTextureCube	js/three.js	/^		function setTextureCube( texture, slot ) {$/;"	r
setTextureCube	js/three.js	/^		this.setTextureCube = ( function () {$/;"	r
setTextureCube	js/three.js	/^		this.setTextureCube = setTextureCube;$/;"	r
setTextureCubeDynamic	js/three.js	/^		function setTextureCubeDynamic( texture, slot ) {$/;"	r
setTextureCubeDynamic	js/three.js	/^		this.setTextureCubeDynamic = setTextureCubeDynamic;$/;"	r
setTextureCubeDynamic	js/three.min.js	/^0,x,B,y.data);else r?c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,x,v[t].width,v[t].height,0,x,B,v[t].data):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,x,x,B,v[t]);l(b,p)&&a.generateMipmap(a.TEXTURE_CUBE_MAP);u.__version=b.version;if(b.onUpdate)b.onUpdate(b)}else c.activeTexture(a.TEXTURE0+q),c.bindTexture(a.TEXTURE_CUBE_MAP,u.__image__webglTextureCube)};this.setTextureCubeDynamic=function(b,e){c.activeTexture(a.TEXTURE0+e);c.bindTexture(a.TEXTURE_CUBE_MAP,d.get(b).__webglTexture)};this.setupRenderTarget=$/;"	r
setTextureParameters	js/three.js	/^		function setTextureParameters( textureType, texture, isPowerOfTwoImage ) {$/;"	r
setTexturePath	js/three.js	/^		setTexturePath: function ( value ) {$/;"	r
setTexturePath	js/three.min.js	/^a+" should be loaded with THREE.ObjectLoader instead.");return}if("scene"===d.toLowerCase()){console.error("THREE.JSONLoader: "+a+" should be loaded with THREE.SceneLoader instead.");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(){return function(a,b){void 0!==a.data&&(a=a.data);a.scale=void 0!==a.scale?1\/a.scale:1;var c=new L,d=a,e,f,g,h=d.faces;var k=d.vertices;var l=d.normals,m=d.colors;var n=d.scale;var u=0;if(void 0!==d.uvs){for(e=$/;"	r
setTexturePath	js/three.min.js	/^null;try{f=JSON.parse(c)}catch(h){void 0!==d&&d(h);console.error("THREE:ObjectLoader: Can't parse "+a+".",h.message);return}c=f.metadata;void 0===c||void 0===c.type||"geometry"===c.type.toLowerCase()?console.error("THREE.ObjectLoader: Can't load "+a+". Use THREE.JSONLoader instead."):e.parse(f,b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==$/;"	r
setTextures	js/three.js	/^		setTextures: function ( value ) {$/;"	r
setURLModifier	js/three.js	/^		this.setURLModifier = function ( transform ) {$/;"	r
setUvTransform	js/three.js	/^		setUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {$/;"	r
setUvTransform	js/three.min.js	/^transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},setUvTransform:function(a,b,c,d,e,f,g){var h=Math.cos(e);e=Math.sin(e);this.set(c*h,c*e,-c*(h*f+e*g)+f+a,-d*e,d*h,-d*(-e*f+h*g)+g+b,0,0,1)},scale:function(a,b){var c=this.elements;c[0]*=a;c[3]*=a;c[6]*=a;c[1]*=b;c[4]*=b;c[7]*=b;return this},rotate:function(a){var b=Math.cos(a);a=Math.sin(a);var c=this.elements,d=c[0],e=c[3],f=c[6],g=c[1],h=c[4],$/;"	r
setValue	js/three.js	/^			this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];$/;"	r
setValue	js/three.js	/^			this.setValue = this._setValue_unavailable;$/;"	r
setValue	js/three.js	/^			this.setValue = this._setValue_unbound;$/;"	r
setValue	js/three.js	/^		setValue: function ( array, offset ) {$/;"	r
setValue	js/three.js	/^		setValue: function getValue_unbound( sourceArray, offset ) {$/;"	r
setValue	js/three.js	/^		this.setValue = getPureArraySetter( activeInfo.type );$/;"	r
setValue	js/three.js	/^		this.setValue = getSingularSetter( activeInfo.type );$/;"	r
setValue	js/three.js	/^	StructuredUniform.prototype.setValue = function ( gl, value ) {$/;"	r
setValue	js/three.js	/^	WebGLUniforms.prototype.setValue = function ( gl, name, value ) {$/;"	r
setValue	js/three.min.js	/^Ta;Ta.prototype.isCubeTexture=!0;Object.defineProperty(Ta.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});var Be=new da,Ce=new Ta,we=[],ye=[],Ae=new Float32Array(16),ze=new Float32Array(9);Ge.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var Od=\/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;cb.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};cb.prototype.setOptional=function(a,$/;"	r
setValue1f	js/three.js	/^	function setValue1f( gl, v ) {$/;"	r
setValue1fv	js/three.js	/^	function setValue1fv( gl, v ) {$/;"	r
setValue1i	js/three.js	/^	function setValue1i( gl, v ) {$/;"	r
setValue1iv	js/three.js	/^	function setValue1iv( gl, v ) {$/;"	r
setValue2fm	js/three.js	/^	function setValue2fm( gl, v ) {$/;"	r
setValue2fv	js/three.js	/^	function setValue2fv( gl, v ) {$/;"	r
setValue2iv	js/three.js	/^	function setValue2iv( gl, v ) {$/;"	r
setValue3fm	js/three.js	/^	function setValue3fm( gl, v ) {$/;"	r
setValue3fv	js/three.js	/^	function setValue3fv( gl, v ) {$/;"	r
setValue3iv	js/three.js	/^	function setValue3iv( gl, v ) {$/;"	r
setValue4fm	js/three.js	/^	function setValue4fm( gl, v ) {$/;"	r
setValue4fv	js/three.js	/^	function setValue4fv( gl, v ) {$/;"	r
setValue4iv	js/three.js	/^	function setValue4iv( gl, v ) {$/;"	r
setValueM2a	js/three.js	/^	function setValueM2a( gl, v ) {$/;"	r
setValueM3a	js/three.js	/^	function setValueM3a( gl, v ) {$/;"	r
setValueM4a	js/three.js	/^	function setValueM4a( gl, v ) {$/;"	r
setValueT1	js/three.js	/^	function setValueT1( gl, v, renderer ) {$/;"	r
setValueT1a	js/three.js	/^	function setValueT1a( gl, v, renderer ) {$/;"	r
setValueT6	js/three.js	/^	function setValueT6( gl, v, renderer ) {$/;"	r
setValueT6a	js/three.js	/^	function setValueT6a( gl, v, renderer ) {$/;"	r
setValueV2a	js/three.js	/^	function setValueV2a( gl, v ) {$/;"	r
setValueV3a	js/three.js	/^	function setValueV3a( gl, v ) {$/;"	r
setValueV4a	js/three.js	/^	function setValueV4a( gl, v ) {$/;"	r
setValue_array	js/three.js	/^				function setValue_array( buffer, offset ) {$/;"	r
setValue_arrayElement	js/three.js	/^				function setValue_arrayElement( buffer, offset ) {$/;"	r
setValue_arrayElement_setMatrixWorldNeedsUpdate	js/three.js	/^				function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {$/;"	r
setValue_arrayElement_setNeedsUpdate	js/three.js	/^				function setValue_arrayElement_setNeedsUpdate( buffer, offset ) {$/;"	r
setValue_array_setMatrixWorldNeedsUpdate	js/three.js	/^				function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {$/;"	r
setValue_array_setNeedsUpdate	js/three.js	/^				function setValue_array_setNeedsUpdate( buffer, offset ) {$/;"	r
setValue_direct	js/three.js	/^				function setValue_direct( buffer, offset ) {$/;"	r
setValue_direct_setMatrixWorldNeedsUpdate	js/three.js	/^				function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {$/;"	r
setValue_direct_setNeedsUpdate	js/three.js	/^				function setValue_direct_setNeedsUpdate( buffer, offset ) {$/;"	r
setValue_fromArray	js/three.js	/^				function setValue_fromArray( buffer, offset ) {$/;"	r
setValue_fromArray_setMatrixWorldNeedsUpdate	js/three.js	/^				function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {$/;"	r
setValue_fromArray_setNeedsUpdate	js/three.js	/^				function setValue_fromArray_setNeedsUpdate( buffer, offset ) {$/;"	r
setValues	js/three.js	/^		setValues: function ( values ) {$/;"	r
setViewOffset	js/three.js	/^		setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {$/;"	r
setViewOffset	js/three.min.js	/^a,b);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;this.view=null===a.view?null:Object.assign({},a.view);return this},setViewOffset:function(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=a;this.view.fullHeight=b;this.view.offsetX=c;this.view.offsetY=d;this.view.width=e;this.view.height=f;this.updateProjectionMatrix()},$/;"	r
setViewport	js/three.js	/^		this.setViewport = function ( x, y, width, height ) {$/;"	r
setVolume	js/three.js	/^		setVolume: function ( value ) {$/;"	r
setW	js/three.js	/^		setW: function ( index, w ) {$/;"	r
setW	js/three.js	/^		setW: function ( w ) {$/;"	r
setW	js/three.min.js	/^setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},onUpload:function(a){this.onUploadCallback=a;return this},clone:function(){return(new this.constructor(this.array,$/;"	r
setWithCredentials	js/three.js	/^		setWithCredentials: function ( value ) {$/;"	r
setX	js/three.js	/^		setX: function ( index, x ) {$/;"	r
setX	js/three.js	/^		setX: function ( x ) {$/;"	r
setXY	js/three.js	/^		setXY: function ( index, x, y ) {$/;"	r
setXY	js/three.min.js	/^3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}});Object.defineProperty(jc.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});$/;"	r
setXYZ	js/three.js	/^		setXYZ: function ( index, x, y, z ) {$/;"	r
setXYZW	js/three.js	/^		setXYZW: function ( index, x, y, z, w ) {$/;"	r
setY	js/three.js	/^		setY: function ( index, y ) {$/;"	r
setY	js/three.js	/^		setY: function ( y ) {$/;"	r
setZ	js/three.js	/^		setZ: function ( index, z ) {$/;"	r
setZ	js/three.js	/^		setZ: function ( z ) {$/;"	r
setZ	js/three.min.js	/^this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+$/;"	r
settings	js/three.js	/^			interpolant.settings = interpolantSettings;$/;"	r
settings	js/three.js	/^			var settings = this._interpolantSettings;$/;"	r
settings	js/three.js	/^		settings: null, \/\/ optional, subclass-specific settings structure$/;"	r
settings	js/three.min.js	/^a,d);if(c===f)break;d=e;e=b[--c-1];if(a>=e)break b}d=c;c=0}}for(;c<d;)e=c+d>>>1,a<b[e]?d=e:c=e+1;d=b[c];e=b[c-1];if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return this._cachedIndex=c=b.length,this.afterEnd_(c-1,e,a)}this._cachedIndex=c;this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){var b=this.resultBuffer,c=this.sampleValues,$/;"	r
setup	js/three.js	/^			setup: setup,$/;"	r
setup	js/three.js	/^		function setup( lights, shadows, camera ) {$/;"	r
setupDepthRenderbuffer	js/three.js	/^		function setupDepthRenderbuffer( renderTarget ) {$/;"	r
setupDepthTexture	js/three.js	/^		function setupDepthTexture( framebuffer, renderTarget ) {$/;"	r
setupFrameBufferTexture	js/three.js	/^		function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {$/;"	r
setupRenderBufferStorage	js/three.js	/^		function setupRenderBufferStorage( renderbuffer, renderTarget ) {$/;"	r
setupRenderTarget	js/three.js	/^		function setupRenderTarget( renderTarget ) {$/;"	r
setupRenderTarget	js/three.js	/^		this.setupRenderTarget = setupRenderTarget;$/;"	r
setupVertexAttributes	js/three.js	/^		function setupVertexAttributes( material, program, geometry, startIndex ) {$/;"	r
sf	js/three.js	/^				var sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -$/;"	r
sg	js/three.min.js	/^b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};cb.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};cb.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};var sg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,$/;"	r
sgExtension	js/GLTFLoader.js	/^				var sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];$/;"	r
shader	js/GLTFLoader.js	/^				var shader = THREE.ShaderLib[ 'standard' ];$/;"	r
shader	js/three.js	/^					materialProperties.shader = {$/;"	r
shader	js/three.js	/^					var shader = ShaderLib[ parameters.shaderID ];$/;"	r
shader	js/three.js	/^			shader = {$/;"	r
shader	js/three.js	/^		this.acquireProgram = function ( material, shader, parameters, code ) {$/;"	r
shader	js/three.js	/^		var shader = gl.createShader( type );$/;"	r
shader	js/three.js	/^		var shader, program, attributes, uniforms;$/;"	r
shaderID	js/three.js	/^				shaderID: shaderID,$/;"	r
shaderID	js/three.js	/^			var shaderID = shaderIDs[ material.type ];$/;"	r
shaderIDs	js/three.js	/^		var shaderIDs = {$/;"	r
shaderTextureLOD	js/three.js	/^			shaderTextureLOD: false \/\/ set to use shader texture LOD$/;"	r
shading	js/three.js	/^			if ( json.shading !== undefined ) material.flatShading = json.shading === 1; \/\/ THREE.FlatShading$/;"	r
shading	js/three.js	/^		shading: {$/;"	r
shadow	js/three.js	/^							shadow: false,$/;"	r
shadow	js/three.js	/^						var shadow = light.shadow;$/;"	r
shadow	js/three.js	/^					uniforms.shadow = light.castShadow;$/;"	r
shadow	js/three.js	/^				shadow: {},$/;"	r
shadow	js/three.js	/^				var shadow = light.shadow;$/;"	r
shadow	js/three.js	/^			this.shadow = source.shadow.clone();$/;"	r
shadow	js/three.js	/^		shadow: {$/;"	r
shadow	js/three.js	/^		this.shadow = new DirectionalLightShadow();$/;"	r
shadow	js/three.js	/^		this.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );$/;"	r
shadow	js/three.js	/^		this.shadow = new SpotLightShadow();$/;"	r
shadowBias	js/three.js	/^							shadowBias: 0,$/;"	r
shadowBias	js/three.js	/^						uniforms.shadowBias = shadow.bias;$/;"	r
shadowBias	js/three.js	/^				shadowBias: {},$/;"	r
shadowBias	js/three.js	/^		shadowBias: {$/;"	r
shadowBias	js/three.min.js	/^d}}}function $f(){var a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];switch(b.type){case "DirectionalLight":var c={direction:new p,color:new H,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "SpotLight":c={position:new p,direction:new p,color:new H,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D};break;case "PointLight":c={position:new p,color:new H,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new D,$/;"	r
shadowCamera	js/three.js	/^				var shadowCamera = shadow.camera;$/;"	r
shadowCameraBottom	js/three.js	/^		shadowCameraBottom: {$/;"	r
shadowCameraFar	js/three.js	/^							shadowCameraFar: 1000$/;"	r
shadowCameraFar	js/three.js	/^						uniforms.shadowCameraFar = shadow.camera.far;$/;"	r
shadowCameraFar	js/three.js	/^				result.farDistance = shadowCameraFar;$/;"	r
shadowCameraFar	js/three.js	/^				shadowCameraFar: {}$/;"	r
shadowCameraFar	js/three.js	/^		shadowCameraFar: {$/;"	r
shadowCameraFov	js/three.js	/^		shadowCameraFov: {$/;"	r
shadowCameraFov	js/three.min.js	/^return this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=a}});Y.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.");void 0!==b&&(this.filmGauge=b);this.setFocalLength(a)};Object.defineProperties(fa.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");$/;"	r
shadowCameraLeft	js/three.js	/^		shadowCameraLeft: {$/;"	r
shadowCameraLeft	js/three.min.js	/^this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");$/;"	r
shadowCameraNear	js/three.js	/^							shadowCameraNear: 1,$/;"	r
shadowCameraNear	js/three.js	/^						uniforms.shadowCameraNear = shadow.camera.near;$/;"	r
shadowCameraNear	js/three.js	/^				result.nearDistance = shadowCameraNear;$/;"	r
shadowCameraNear	js/three.js	/^				shadowCameraNear: {},$/;"	r
shadowCameraNear	js/three.js	/^		shadowCameraNear: {$/;"	r
shadowCameraNear	js/three.min.js	/^shadowCameraNear:1,shadowCameraFar:1E3};break;case "HemisphereLight":c={direction:new p,skyColor:new H,groundColor:new H};break;case "RectAreaLight":c={color:new H,position:new p,halfWidth:new p,halfHeight:new p}}return a[b.id]=c}}}function ag(){var a=new $f,b={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},c=new p,d=new K,e=new K;return{setup:function(f,$/;"	r
shadowCameraNear	js/three.min.js	/^this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");$/;"	r
shadowCameraRight	js/three.js	/^		shadowCameraRight: {$/;"	r
shadowCameraTop	js/three.js	/^		shadowCameraTop: {$/;"	r
shadowCameraVisible	js/three.js	/^		shadowCameraVisible: {$/;"	r
shadowDarkness	js/three.js	/^		shadowDarkness: {$/;"	r
shadowDarkness	js/three.min.js	/^this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=a}}});Object.defineProperties(O.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");$/;"	r
shadowMap	js/three.js	/^					state.directionalShadowMap[ directionalLength ] = shadowMap;$/;"	r
shadowMap	js/three.js	/^					state.pointShadowMap[ pointLength ] = shadowMap;$/;"	r
shadowMap	js/three.js	/^					state.spotShadowMap[ spotLength ] = shadowMap;$/;"	r
shadowMap	js/three.js	/^				var shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;$/;"	r
shadowMap	js/three.js	/^				var shadowMap = shadow.map;$/;"	r
shadowMap	js/three.js	/^		this.shadowMap = shadowMap;$/;"	r
shadowMap	js/three.js	/^		var shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );$/;"	r
shadowMapCullFace	js/three.js	/^		shadowMapCullFace: {$/;"	r
shadowMapEnabled	js/three.js	/^				shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,$/;"	r
shadowMapEnabled	js/three.js	/^		shadowMapEnabled: {$/;"	r
shadowMapHeight	js/three.js	/^		shadowMapHeight: {$/;"	r
shadowMapSize	js/three.js	/^							shadowMapSize: new Vector2()$/;"	r
shadowMapSize	js/three.js	/^							shadowMapSize: new Vector2(),$/;"	r
shadowMapSize	js/three.js	/^						uniforms.shadowMapSize = shadow.mapSize;$/;"	r
shadowMapSize	js/three.js	/^				shadowMapSize: {}$/;"	r
shadowMapSize	js/three.js	/^				shadowMapSize: {},$/;"	r
shadowMapType	js/three.js	/^				shadowMapType: renderer.shadowMap.type,$/;"	r
shadowMapType	js/three.js	/^		shadowMapType: {$/;"	r
shadowMapType	js/three.min.js	/^Object.defineProperties(Wd.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");$/;"	r
shadowMapTypeDefine	js/three.js	/^			shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';$/;"	r
shadowMapTypeDefine	js/three.js	/^			shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';$/;"	r
shadowMapTypeDefine	js/three.js	/^		var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';$/;"	r
shadowMapWidth	js/three.js	/^		shadowMapWidth: {$/;"	r
shadowMatrix	js/three.js	/^				var shadowMatrix = shadow.matrix;$/;"	r
shadowRadius	js/three.js	/^							shadowRadius: 1,$/;"	r
shadowRadius	js/three.js	/^						uniforms.shadowRadius = shadow.radius;$/;"	r
shadowRadius	js/three.js	/^				shadowRadius: {},$/;"	r
shadow_frag	js/three.js	/^		shadow_frag: shadow_frag,$/;"	r
shadow_frag	js/three.js	/^	var shadow_frag = "uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n";$/;"	r
shadow_frag	js/three.min.js	/^shadow_frag:"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n",shadow_vert:"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n"},$/;"	r
shadow_vert	js/three.js	/^		shadow_vert: shadow_vert$/;"	r
shadow_vert	js/three.js	/^	var shadow_vert = "#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
shadowmap_pars_fragment	js/three.js	/^		shadowmap_pars_fragment: shadowmap_pars_fragment,$/;"	r
shadowmap_pars_fragment	js/three.js	/^	var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) \/ size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz \/= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) \/ shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 \/ max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) \/ ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) \/ ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 \/ 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n";$/;"	r
shadowmap_pars_vertex	js/three.js	/^		shadowmap_pars_vertex: shadowmap_pars_vertex,$/;"	r
shadowmap_pars_vertex	js/three.js	/^	var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n";$/;"	r
shadowmap_pars_vertex	js/three.min.js	/^shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n",$/;"	r
shadowmap_vertex	js/three.js	/^		shadowmap_vertex: shadowmap_vertex,$/;"	r
shadowmap_vertex	js/three.js	/^	var shadowmap_vertex = "#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n";$/;"	r
shadowmask_pars_fragment	js/three.js	/^		shadowmask_pars_fragment: shadowmask_pars_fragment,$/;"	r
shadowmask_pars_fragment	js/three.js	/^	var shadowmask_pars_fragment = "float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n";$/;"	r
shadows	js/three.js	/^		function setup( lights, shadows, camera ) {$/;"	r
shadowsArray	js/three.js	/^			lights.setup( lightsArray, shadowsArray, camera );$/;"	r
shadowsArray	js/three.js	/^		var shadowsArray = [];$/;"	r
shape	js/three.js	/^								shape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );$/;"	r
shape	js/three.js	/^				shape: this.getPoints( divisions ),$/;"	r
shape	js/three.js	/^				var shape = contour.concat(); \/\/ work on this shape$/;"	r
shape	js/three.js	/^			var shape = shapes[ s ];$/;"	r
shape	js/three.js	/^			var shapeVertices = points.shape;$/;"	r
shape	js/three.js	/^		var vertices = shapePoints.shape;$/;"	r
shapeHole	js/three.js	/^					shapeHole = shapeHoles[ i ];$/;"	r
shapeHole	js/three.js	/^				shapeHole = shapeHoles[ i ];$/;"	r
shapeHoles	js/three.js	/^			var shapeHoles = points.holes;$/;"	r
shapeIndex	js/three.js	/^								minShapeIndex = shapeIndex;$/;"	r
shapePoints	js/three.js	/^		var shapePoints = shape.extractPoints( curveSegments );$/;"	r
shapePt	js/three.js	/^						shapePt = shape[ shapeIndex ];$/;"	r
shapePt	js/three.js	/^					shapePt, holePt,$/;"	r
shapeVertices	js/three.js	/^				shapeVertices = shapeVertices.concat( shapeHole );$/;"	r
shapeVertices	js/three.js	/^				shapeVertices = shapeVertices.reverse();$/;"	r
shapeVertices	js/three.js	/^			var shapeVertices = points.shape;$/;"	r
shapeWithoutHoles	js/three.js	/^			var shapeWithoutHoles = removeHoles( contour, holes );$/;"	r
shapes	js/three.js	/^				var shapes = [];$/;"	r
shapes	js/three.js	/^			shapes: shapes,$/;"	r
shapes	js/three.js	/^			var shapes = [];$/;"	r
shapes	js/three.js	/^			var solid, tmpPath, tmpShape, shapes = [];$/;"	r
shapes	js/three.js	/^		ExtrudeBufferGeometry.call( this, shapes, parameters );$/;"	r
shapes	js/three.js	/^		shapes = Array.isArray( shapes ) ? shapes : [ shapes ];$/;"	r
shapes	js/three.js	/^		var shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );$/;"	r
shift	js/three.js	/^		shift: function ( timeOffset ) {$/;"	r
shininess	js/GLTFLoader.js	/^			materialParams.shininess = materialValues.shininessFactor;$/;"	r
shininess	js/three.js	/^							json.shininess = value;$/;"	r
shininess	js/three.js	/^					shininess: { value: 30 }$/;"	r
shininess	js/three.js	/^			if ( json.shininess !== undefined ) material.shininess = json.shininess;$/;"	r
shininess	js/three.js	/^			if ( this.shininess !== undefined ) data.shininess = this.shininess;$/;"	r
shininess	js/three.js	/^		this.shininess = 30;$/;"	r
shininess	js/three.js	/^		this.shininess = source.shininess;$/;"	r
shininess	js/three.min.js	/^this.color=new H(16777215);this.specular=new H(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=$/;"	r
shininessFactor	js/GLTFLoader.js	/^			materialParams.shininess = materialValues.shininessFactor;$/;"	r
sho	js/three.js	/^					var sho = newShapeHoles[ sIdx ];$/;"	r
shrink_by	js/three.js	/^					shrink_by = Math.sqrt( v_prev_lensq );$/;"	r
shrink_by	js/three.js	/^					shrink_by = Math.sqrt( v_prev_lensq \/ 2 );$/;"	r
shrink_by	js/three.js	/^					shrink_by = Math.sqrt( v_trans_lensq \/ 2 );$/;"	r
side	js/GLTFLoader.js	/^				materialParams.side = THREE.DoubleSide;$/;"	r
side	js/GLTFLoader.js	/^			side: THREE.FrontSide$/;"	r
side	js/three.js	/^							json.side = BackSide;$/;"	r
side	js/three.js	/^							json.side = DoubleSide;$/;"	r
side	js/three.js	/^							side: BackSide,$/;"	r
side	js/three.js	/^				side = FrontSide;$/;"	r
side	js/three.js	/^			if ( json.side !== undefined ) material.side = json.side;$/;"	r
side	js/three.js	/^			if ( this.side !== FrontSide ) data.side = this.side;$/;"	r
side	js/three.js	/^			material.side === DoubleSide$/;"	r
side	js/three.js	/^			result.side = side;$/;"	r
side	js/three.js	/^			this.side = source.side;$/;"	r
side	js/three.js	/^			var side = material.side;$/;"	r
side	js/three.js	/^		this.side = FrontSide;$/;"	r
side	js/three.min.js	/^g)},render:function(b,d,u,r){d=d.background;null===d?e(f,g):d&&d.isColor&&(e(d,1),r=!0);(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil);d&&d.isCubeTexture?(void 0===l&&(l=new qa(new fb(1,1,1),new Aa({uniforms:ib.cube.uniforms,vertexShader:ib.cube.vertexShader,fragmentShader:ib.cube.fragmentShader,side:1,depthTest:!0,depthWrite:!1,fog:!1})),l.geometry.removeAttribute("normal"),l.geometry.removeAttribute("uv"),l.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},$/;"	r
sidewalls	js/three.js	/^		function sidewalls( contour, layeroffset ) {$/;"	r
sign	js/three.js	/^					sign = - 1;$/;"	r
sign	js/three.js	/^					sign = 1;$/;"	r
sign	js/three.js	/^				normals.push( 0, sign, 0 );$/;"	r
sign	js/three.js	/^				var sign;$/;"	r
sign	js/three.js	/^			var sign = ( top === true ) ? 1 : - 1;$/;"	r
sign	js/three.js	/^		Math.sign = function ( x ) {$/;"	r
sin	js/three.js	/^					var sin = Math.sqrt( sqrSin ),$/;"	r
sin	js/three.js	/^				var sin = Math.sin( v );$/;"	r
sin	js/three.js	/^			var sin = Math.sin( phi );$/;"	r
sin	js/three.js	/^			var sin = Math.sin( this.aRotation );$/;"	r
sin	js/three.js	/^			var sin = Math.sin;$/;"	r
sinHalfTheta	js/three.js	/^			var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );$/;"	r
sinPhiRadius	js/three.js	/^			var sinPhiRadius = Math.sin( s.phi ) * s.radius;$/;"	r
sinTheta	js/three.js	/^					var sinTheta = Math.sin( theta );$/;"	r
sinTheta	js/three.js	/^				var sinTheta = Math.sin( theta );$/;"	r
size	js/three.js	/^							_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );$/;"	r
size	js/three.js	/^							_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );$/;"	r
size	js/three.js	/^							scale.y = size;$/;"	r
size	js/three.js	/^							size = Math.max( size, 4 );$/;"	r
size	js/three.js	/^							size = _Math.ceilPowerOfTwo( size );$/;"	r
size	js/three.js	/^							size = sprite.size * sprite.scale \/ viewport.w;$/;"	r
size	js/three.js	/^							skeleton.boneTextureSize = size;$/;"	r
size	js/three.js	/^							var boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );$/;"	r
size	js/three.js	/^							var size = Math.sqrt( bones.length * 4 ); \/\/ 4 pixels needed for 1 matrix$/;"	r
size	js/three.js	/^						var size = geometryAttribute.itemSize;$/;"	r
size	js/three.js	/^				size = 16 \/ viewport.w;$/;"	r
size	js/three.js	/^				size: size, 		\/\/ size in pixels (-1 = use texture.width)$/;"	r
size	js/three.js	/^				var size = hex.length;$/;"	r
size	js/three.js	/^			- size, size, 0$/;"	r
size	js/three.js	/^			- size, size, 0,$/;"	r
size	js/three.js	/^			if ( json.size !== undefined ) material.size = json.size;$/;"	r
size	js/three.js	/^			if ( this.size !== undefined ) data.size = this.size;$/;"	r
size	js/three.js	/^			size, - size, 0,$/;"	r
size	js/three.js	/^			size, size, 0,$/;"	r
size	js/three.js	/^			size: { value: 1.0 },$/;"	r
size	js/three.js	/^			this.add( texture, size, distance, blending, color );$/;"	r
size	js/three.js	/^			var size = 16 \/ viewport.w,$/;"	r
size	js/three.js	/^		add: function ( texture, size, distance, blending, color, opacity ) {$/;"	r
size	js/three.js	/^		generateShapes: function ( text, size, divisions ) {$/;"	r
size	js/three.js	/^		size = size || 10;$/;"	r
size	js/three.js	/^		size = size || 1;$/;"	r
size	js/three.js	/^		size: function ( optionalTarget ) {$/;"	r
size	js/three.js	/^		this.size = ( size !== undefined ) ? size : 1;$/;"	r
size	js/three.js	/^		this.size = ( size === undefined ) ? 1 : size;$/;"	r
size	js/three.js	/^		this.size = 1;$/;"	r
size	js/three.js	/^		this.size = activeInfo.size;$/;"	r
size	js/three.js	/^		this.size = source.size;$/;"	r
size	js/three.js	/^	function DirectionalLightHelper( light, size, color ) {$/;"	r
size	js/three.js	/^	function FaceNormalsHelper( object, size, hex, linewidth ) {$/;"	r
size	js/three.js	/^	function HemisphereLightHelper( light, size, color ) {$/;"	r
size	js/three.js	/^	function LensFlare( texture, size, distance, blending, color ) {$/;"	r
size	js/three.js	/^	function PlaneHelper( plane, size, hex ) {$/;"	r
size	js/three.js	/^	function VertexNormalsHelper( object, size, hex, linewidth ) {$/;"	r
size	js/three.js	/^	var points_vert = "uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale \/ - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n";$/;"	r
size	js/three.min.js	/^points_vert:"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale \/ - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",$/;"	r
size	js/three.min.js	/^size:function(a){console.warn("THREE.Box2: .size() has been renamed to .getSize().");return this.getSize(a)}});Object.assign(Na.prototype,{center:function(a){console.warn("THREE.Box3: .center() has been renamed to .getCenter().");return this.getCenter(a)},empty:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(a){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},$/;"	r
size	js/three.min.js	/^this.map=null;this.size=1;this.sizeAttenuation=!0;this.lights=!1;this.setValues(a)}function Mb(a,b){w.call(this);this.type="Points";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new Ba({color:16777215*Math.random()})}function Ec(){w.call(this);this.type="Group"}function sd(a,b,c,d,e,f,g,h,k){function l(){var a=q.image;a.readyState>=a.HAVE_CURRENT_DATA&&(q.needsUpdate=!0);requestAnimationFrame(l)}da.call(this,a,b,c,d,e,f,g,h,k);this.generateMipmaps=!1;var q=this;requestAnimationFrame(l)}$/;"	r
sizeAttenuation	js/three.js	/^				sizeAttenuation: material.sizeAttenuation,$/;"	r
sizeAttenuation	js/three.js	/^			if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;$/;"	r
sizeAttenuation	js/three.js	/^			if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;$/;"	r
sizeAttenuation	js/three.js	/^		this.sizeAttenuation = source.sizeAttenuation;$/;"	r
sizeAttenuation	js/three.js	/^		this.sizeAttenuation = true;$/;"	r
skeleton	js/three.js	/^						p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );$/;"	r
skeleton	js/three.js	/^				var skeleton = object.skeleton;$/;"	r
skeleton	js/three.js	/^			this.skeleton = skeleton;$/;"	r
skeleton	js/three.js	/^			var skeleton = object.skeleton;$/;"	r
skeleton	js/three.js	/^		var skeleton = new Skeleton( bones );$/;"	r
skew	js/three.js	/^			var skew = this.filmOffset;$/;"	r
skinEntry	js/GLTFLoader.js	/^							var skinEntry = dependencies.skins[ nodeDef.skin ];$/;"	r
skinIndices	js/three.js	/^				var skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );$/;"	r
skinIndices	js/three.js	/^			this.skinIndices = [];$/;"	r
skinIndices	js/three.js	/^			var skinIndices = geometry.skinIndices;$/;"	r
skinIndices	js/three.js	/^			var skinIndices = source.skinIndices;$/;"	r
skinIndices	js/three.js	/^		this.skinIndices = [];$/;"	r
skinWeight	js/three.js	/^				var skinWeight = this.geometry.attributes.skinWeight;$/;"	r
skinWeights	js/three.js	/^				var skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );$/;"	r
skinWeights	js/three.js	/^			this.skinWeights = [];$/;"	r
skinWeights	js/three.js	/^			var skinWeights = geometry.skinWeights;$/;"	r
skinWeights	js/three.js	/^			var skinWeights = source.skinWeights;$/;"	r
skinWeights	js/three.js	/^		this.skinWeights = [];$/;"	r
skinWeights	js/three.min.js	/^[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function Qd(a){if(0===a.length)return-Infinity;for(var b=a[0],c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}function C(){Object.defineProperty(this,"id",{value:Pf+=2});this.uuid=R.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes=$/;"	r
skinbase_vertex	js/three.js	/^		skinbase_vertex: skinbase_vertex,$/;"	r
skinbase_vertex	js/three.js	/^	var skinbase_vertex = "#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif";$/;"	r
skinnedMesh	js/GLTFLoader.js	/^							var skinnedMesh = new THREE.SkinnedMesh( geometry, material );$/;"	r
skinnedMeshes	js/GLTFLoader.js	/^						var skinnedMeshes = [];$/;"	r
skinning	js/GLTFLoader.js	/^							material.skinning = true;$/;"	r
skinning	js/three.js	/^				skinning: material.skinning && maxBones > 0,$/;"	r
skinning	js/three.js	/^				skinning: useSkinning$/;"	r
skinning	js/three.js	/^			if ( json.skinning !== undefined ) material.skinning = json.skinning;$/;"	r
skinning	js/three.js	/^		this.skinning = false; \/\/ set to use skinning attribute streams$/;"	r
skinning	js/three.js	/^		this.skinning = false;$/;"	r
skinning	js/three.js	/^		this.skinning = source.skinning;$/;"	r
skinning	js/three.min.js	/^skinning:B});u[c]=y}var A=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,c,d){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==b.length){var n=a.state;n.disable(a.context.BLEND);n.buffers.color.setClear(1,1,1,1);n.buffers.depth.setTest(!0);n.setScissorTest(!1);for(var u,r=0,B=b.length;r<B;r++){var v=b[r];u=v.shadow;var I=v&&v.isPointLight;if(void 0===u)console.warn("THREE.WebGLShadowMap:",$/;"	r
skinning	js/three.min.js	/^this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};pb.prototype=Object.create(Q.prototype);pb.prototype.constructor=pb;pb.prototype.isMeshLambertMaterial=!0;pb.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=$/;"	r
skinning_pars_vertex	js/three.js	/^		skinning_pars_vertex: skinning_pars_vertex,$/;"	r
skinning_pars_vertex	js/three.js	/^	var skinning_pars_vertex = "#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j \/ float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n";$/;"	r
skinning_pars_vertex	js/three.min.js	/^skinbase_vertex:"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j \/ float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n",$/;"	r
skinning_vertex	js/three.js	/^		skinning_vertex: skinning_vertex,$/;"	r
skinning_vertex	js/three.js	/^	var skinning_vertex = "#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n";$/;"	r
skinnormal_vertex	js/three.js	/^		skinnormal_vertex: skinnormal_vertex,$/;"	r
skinnormal_vertex	js/three.js	/^	var skinnormal_vertex = "#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n";$/;"	r
skins	js/GLTFLoader.js	/^		var skins = json.skins || [];$/;"	r
skyColor	js/three.js	/^							skyColor: new Color(),$/;"	r
skyColor	js/three.js	/^				skyColor: {},$/;"	r
skyColor	js/three.js	/^		Light.call( this, skyColor, intensity );$/;"	r
sl	js/three.js	/^					sl = steps + bevelSegments * 2;$/;"	r
sl	js/three.js	/^		var sl = shapes.length;$/;"	r
slen1	js/three.js	/^					var slen1 = vlen * s;$/;"	r
slen2	js/three.js	/^					var slen2 = vlen * ( s + 1 );$/;"	r
slerp	js/three.js	/^		slerp: function ( qa, qb, qm, t ) {$/;"	r
slerp	js/three.js	/^		slerp: function ( qb, t ) {$/;"	r
slerp	js/three.min.js	/^return this},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;a=Math.sqrt(1-g*g);if(.001>Math.abs(a))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var h=Math.atan2(a,g),g=Math.sin((1-b)*h)\/a;b=Math.sin(b*h)\/a;$/;"	r
slerpFlat	js/three.js	/^		slerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {$/;"	r
slerpFlat	js/three.min.js	/^d)},slerpFlat:function(a,b,c,d,e,f,g){var h=c[d+0],k=c[d+1],l=c[d+2];c=c[d+3];d=e[f+0];var q=e[f+1],n=e[f+2];e=e[f+3];if(c!==e||h!==d||k!==q||l!==n){f=1-g;var m=h*d+k*q+l*n+c*e,r=0<=m?1:-1,p=1-m*m;p>Number.EPSILON&&(p=Math.sqrt(p),m=Math.atan2(p,m*r),f=Math.sin(f*m)\/p,g=Math.sin(g*m)\/p);r*=g;h=h*f+d*r;k=k*f+q*r;l=l*f+n*r;c=c*f+e*r;f===1-g&&(g=1\/Math.sqrt(h*h+k*k+l*l+c*c),h*=g,k*=g,l*=g,c*=g)}a[b]=h;a[b+1]=k;a[b+2]=l;a[b+3]=c}});Object.defineProperties(X.prototype,{x:{get:function(){return this._x},$/;"	r
sliceCount	js/three.js	/^		var sliceCount = slices + 1;$/;"	r
slices	js/three.js	/^			slices: slices,$/;"	r
slices	js/three.js	/^		this.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );$/;"	r
slices	js/three.js	/^	function ParametricBufferGeometry( func, slices, stacks ) {$/;"	r
slices	js/three.js	/^	function ParametricGeometry( func, slices, stacks ) {$/;"	r
slices	js/three.min.js	/^l=0,d=k.count\/3;l<d;l++)for(c=0;3>c;c++)g=3*l+c,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z),g=3*l+(c+1)%3,h.fromBufferAttribute(k,g),b.push(h.x,h.y,h.z)}this.addAttribute("position",new z(b,3))}function Gc(a,b,c){L.call(this);this.type="ParametricGeometry";this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new Pb(a,b,c));this.mergeVertices()}function Pb(a,b,c){C.call(this);this.type="ParametricBufferGeometry";this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=$/;"	r
slope	js/three.js	/^					normal.set( sinTheta, slope, cosTheta ).normalize();$/;"	r
slope	js/three.js	/^			var slope = ( radiusBottom - radiusTop ) \/ height;$/;"	r
smoothInterpolation	js/three.js	/^				smoothInterpolation = this.getInterpolation() === InterpolateSmooth,$/;"	r
smootherstep	js/three.js	/^		smootherstep: function ( x, min, max ) {$/;"	r
smoothstep	js/three.js	/^		smoothstep: function ( x, min, max ) {$/;"	r
snip	js/three.js	/^			function snip( contour, u, v, w, n, verts ) {$/;"	r
solid	js/three.js	/^				solid = isCCW ? ! solid : solid;$/;"	r
solid	js/three.js	/^				solid = isClockWise( tmpPoints );$/;"	r
solid	js/three.js	/^			var solid, tmpPath, tmpShape, shapes = [];$/;"	r
sort	js/three.js	/^			sort: sort$/;"	r
sort	js/three.js	/^		function sort() {$/;"	r
sort	js/three.min.js	/^l.z=h,l.group=k);(!0===g.transparent?d:c).push(l);b++},sort:function(){1<c.length&&c.sort(Rf);1<d.length&&d.sort(Sf)}}}function Uf(){var a={};return{get:function(b,c){b=b.id+","+c.id;c=a[b];void 0===c&&(c=new Tf,a[b]=c);return c},dispose:function(){a={}}}}function Vf(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Wf(a){var b={},c=new Float32Array(8);return{update:function(d,e,f,g){var h=d.morphTargetInfluences,k=h.length;d=b[e.id];if(void 0===d){d=[];for(var l=0;l<k;l++)d[l]=[l,0];b[e.id]=d}var q=$/;"	r
sortFacesByMaterialIndex	js/three.js	/^		sortFacesByMaterialIndex: function () {$/;"	r
sortObjects	js/three.js	/^		this.sortObjects = true;$/;"	r
sortedArray	js/three.js	/^		sortedArray: function ( values, stride, order ) {$/;"	r
sortedArray	js/three.min.js	/^a[c]});return c},sortedArray:function(a,b,c){for(var d=a.length,e=new a.constructor(d),f=0,g=0;g!==d;++f)for(var h=c[f]*b,k=0;k!==b;++k)e[g++]=a[h+k];return e},flattenJSON:function(a,b,c,d){for(var e=1,f=a[0];void 0!==f&&void 0===f[d];)f=a[e++];if(void 0!==f){var g=f[d];if(void 0!==g)if(Array.isArray(g)){do g=f[d],void 0!==g&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f)}else if(void 0!==g.toArray){do g=f[d],void 0!==g&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==$/;"	r
source	js/GLTFLoader.js	/^		var source = json.images[ textureDef.source ];$/;"	r
source	js/three.js	/^					var source = arguments[ index ];$/;"	r
source	js/three.js	/^				var source = this.resolvedProperty;$/;"	r
source	js/three.js	/^			Camera.prototype.copy.call( this, source, recursive );$/;"	r
source	js/three.js	/^			Object3D.prototype.copy.call( this, source, false );$/;"	r
source	js/three.js	/^			Object3D.prototype.copy.call( this, source, recursive );$/;"	r
source	js/three.js	/^			this.source = audioNode;$/;"	r
source	js/three.js	/^			this.source = source;$/;"	r
source	js/three.js	/^			var source = this.context.createBufferSource();$/;"	r
sourceType	js/three.js	/^			this.sourceType = 'audioNode';$/;"	r
sourceType	js/three.js	/^			this.sourceType = 'buffer';$/;"	r
sourceType	js/three.js	/^		this.sourceType = 'empty';$/;"	r
sourceURI	js/GLTFLoader.js	/^					sourceURI = URL.createObjectURL( blob );$/;"	r
sourceURI	js/GLTFLoader.js	/^			sourceURI = parser.getDependency( 'bufferView', source.bufferView )$/;"	r
sourceURI	js/GLTFLoader.js	/^		var sourceURI = source.uri;$/;"	r
sourceVertices	js/three.js	/^		var sourceVertices = geometry2.vertices;$/;"	r
specGlossExtension	js/GLTFLoader.js	/^								var specGlossExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];$/;"	r
specGlossIndex	js/GLTFLoader.js	/^					var specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;$/;"	r
specular	js/GLTFLoader.js	/^					'vec3 specularFactor = specular;',$/;"	r
specular	js/GLTFLoader.js	/^				material.specular = params.specular;$/;"	r
specular	js/GLTFLoader.js	/^				params.specular = new THREE.Color( 1.0, 1.0, 1.0 );$/;"	r
specular	js/GLTFLoader.js	/^				uniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };$/;"	r
specular	js/GLTFLoader.js	/^			materialParams.specular = new THREE.Color().fromArray( materialValues.specularFactor );$/;"	r
specular	js/three.js	/^							json.specular = color.fromArray( value ).getHex();$/;"	r
specular	js/three.js	/^					specular: { value: new Color( 0x111111 ) },$/;"	r
specular	js/three.js	/^			uniforms.specular.value = material.specular;$/;"	r
specular	js/three.js	/^		this.specular = new Color( 0x111111 );$/;"	r
specular	js/three.min.js	/^E.fog,E.lights,{emissive:{value:new H(0)},specular:{value:new H(1118481)},shininess:{value:30}}]),vertexShader:V.meshphong_vert,fragmentShader:V.meshphong_frag},standard:{uniforms:Ea.merge([E.common,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.bumpmap,E.normalmap,E.displacementmap,E.roughnessmap,E.metalnessmap,E.fog,E.lights,{emissive:{value:new H(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:V.meshphysical_vert,fragmentShader:V.meshphysical_frag},points:{uniforms:Ea.merge([E.points,$/;"	r
specularGlossinessParams	js/GLTFLoader.js	/^				var params = this.specularGlossinessParams;$/;"	r
specularGlossinessParams	js/GLTFLoader.js	/^			specularGlossinessParams: [$/;"	r
specularMap	js/GLTFLoader.js	/^					uvScaleMap = material.specularMap;$/;"	r
specularMap	js/GLTFLoader.js	/^				material.specularMap = params.specularMap === undefined ? null : params.specularMap;$/;"	r
specularMap	js/GLTFLoader.js	/^				uniforms.specularMap = { value: null };$/;"	r
specularMap	js/GLTFLoader.js	/^				uniforms.specularMap.value = material.specularMap;$/;"	r
specularMap	js/three.js	/^							json.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );$/;"	r
specularMap	js/three.js	/^				specularMap: !! material.specularMap,$/;"	r
specularMap	js/three.js	/^				uniforms.specularMap.value = material.specularMap;$/;"	r
specularMap	js/three.js	/^				uvScaleMap = material.specularMap;$/;"	r
specularMap	js/three.js	/^			specularMap: { value: null },$/;"	r
specularMap	js/three.js	/^		this.specularMap = null;$/;"	r
specularMap	js/three.js	/^		this.specularMap = source.specularMap;$/;"	r
specularMap	js/three.min.js	/^a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};qb.prototype=Object.create(T.prototype);qb.prototype.constructor=$/;"	r
specularMapFragmentChunk	js/GLTFLoader.js	/^				var specularMapFragmentChunk = [$/;"	r
specularMapParsFragmentChunk	js/GLTFLoader.js	/^				var specularMapParsFragmentChunk = [$/;"	r
specularmap	js/three.js	/^				UniformsLib.specularmap,$/;"	r
specularmap	js/three.js	/^		specularmap: {$/;"	r
specularmap_fragment	js/three.js	/^		specularmap_fragment: specularmap_fragment,$/;"	r
specularmap_fragment	js/three.js	/^	var specularmap_fragment = "float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif";$/;"	r
specularmap_fragment	js/three.min.js	/^specularmap_fragment:"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n",tonemapping_pars_fragment:"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color \/ ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) \/ ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 \/ 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) \/ Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) \/ ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n",$/;"	r
specularmap_pars_fragment	js/three.js	/^		specularmap_pars_fragment: specularmap_pars_fragment,$/;"	r
specularmap_pars_fragment	js/three.js	/^	var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif";$/;"	r
sphere	js/three.js	/^			var sphere = new Sphere();$/;"	r
sphereSize	js/three.js	/^	function PointLightHelper( light, sphereSize, color ) {$/;"	r
splineThru	js/three.js	/^		splineThru: function ( pts ) {$/;"	r
splineThru	js/three.js	/^		splineThru: function ( pts \/*Array of Vector*\/ ) {$/;"	r
splineThru	js/three.min.js	/^splineThru:function(a){this.currentPath.splineThru(a)},toShapes:function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new zb;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(Math.abs(l)>Number.EPSILON){if(0>l&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=$/;"	r
splineTube	js/three.js	/^			splineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );$/;"	r
splineTube	js/three.js	/^		var splineTube, binormal, normal, position2;$/;"	r
spot	js/three.js	/^				uniforms.spotLights.value = lights.state.spot;$/;"	r
spot	js/three.js	/^			spot: [],$/;"	r
spotLength	js/three.js	/^			state.spot.length = spotLength;$/;"	r
spotLength	js/three.js	/^			var spotLength = 0;$/;"	r
spotLights	js/three.js	/^			spotLights: { value: [], properties: {$/;"	r
spotShadowMap	js/three.js	/^				uniforms.spotShadowMap.value = lights.state.spotShadowMap;$/;"	r
spotShadowMap	js/three.js	/^			spotShadowMap: [],$/;"	r
spotShadowMap	js/three.js	/^			spotShadowMap: { value: [] },$/;"	r
spotShadowMap	js/three.min.js	/^ua.state.spotShadowMap,c.spotShadowMatrix.value=ua.state.spotShadowMatrix,c.pointShadowMap.value=ua.state.pointShadowMap,c.pointShadowMatrix.value=ua.state.pointShadowMatrix);a=d.program.getUniforms();a=cb.seqWithValue(a.seq,c);d.uniformsList=a}function u(a,b,c,d){G=0;var e=Y.get(c);fa&&(Ud||a!==O)&&Fa.setState(c.clippingPlanes,c.clipIntersection,c.clipShadows,a,e,a===O&&c.id===U);!1===c.needsUpdate&&(void 0===e.program?c.needsUpdate=!0:c.fog&&e.fog!==b?c.needsUpdate=!0:c.lights&&e.lightsHash!==ua.state.hash?$/;"	r
spotShadowMatrix	js/three.js	/^				uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;$/;"	r
spotShadowMatrix	js/three.js	/^			spotShadowMatrix: [],$/;"	r
spotShadowMatrix	js/three.js	/^			spotShadowMatrix: { value: [] },$/;"	r
sprite	js/three.js	/^						var sprite = flare.lensFlares[ j ];$/;"	r
sprite	js/three.js	/^				var sprite = sprites[ i ];$/;"	r
spritePosition	js/three.js	/^		var spritePosition = new Vector3();$/;"	r
spriteRenderer	js/three.js	/^			spriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );$/;"	r
spriteRotation	js/three.js	/^				sprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );$/;"	r
spriteRotation	js/three.js	/^		var spriteRotation = new Quaternion();$/;"	r
spriteScale	js/three.js	/^		var spriteScale = new Vector3();$/;"	r
spritesArray	js/three.js	/^		var spritesArray = [];$/;"	r
sqrDist	js/three.js	/^								sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrDist	js/three.js	/^								sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;$/;"	r
sqrDist	js/three.js	/^							sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrDist	js/three.js	/^							sqrDist = s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrDist	js/three.js	/^					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;$/;"	r
sqrSin	js/three.js	/^					sqrSin = 1 - cos * cos;$/;"	r
src	js/three.js	/^			image.src = url;$/;"	r
srcOffset	js/three.js	/^				var srcOffset = order[ i ] * stride;$/;"	r
srcPlanes	js/three.js	/^			var srcPlanes = source.clippingPlanes,$/;"	r
srcVertexNormal	js/three.js	/^						var srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];$/;"	r
srcVertices	js/three.js	/^						var srcVertices = json.morphTargets[ i ].vertices;$/;"	r
stacks	js/three.js	/^			stacks: stacks$/;"	r
stageParameters	js/three.js	/^			var stageParameters = device.stageParameters;$/;"	r
standard	js/three.js	/^		standard: {$/;"	r
standing	js/three.js	/^		this.standing = false;$/;"	r
standingMatrix	js/three.js	/^		var standingMatrix = new Matrix4();$/;"	r
standingMatrixInverse	js/three.js	/^		var standingMatrixInverse = new Matrix4();$/;"	r
start	js/three.js	/^						for ( var i = start, il = start + count; i < il; i += 3 ) {$/;"	r
start	js/three.js	/^						start: i * 3,$/;"	r
start	js/three.js	/^						var start = group.start;$/;"	r
start	js/three.js	/^					for ( i = start, l = ( start + count ); i < l; i += 3 ) {$/;"	r
start	js/three.js	/^					for ( var j = start, jl = start + count; j < jl; j += 3 ) {$/;"	r
start	js/three.js	/^					start = group.start;$/;"	r
start	js/three.js	/^					var start = group.start;$/;"	r
start	js/three.js	/^				extension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );$/;"	r
start	js/three.js	/^				start: start,$/;"	r
start	js/three.js	/^			gl.drawArrays( mode, start, count );$/;"	r
start	js/three.js	/^			this.drawRange.start = source.drawRange.start;$/;"	r
start	js/three.js	/^			this.drawRange.start = start;$/;"	r
start	js/three.js	/^			var start = verticesArray.length \/ 3;$/;"	r
start	js/three.js	/^		function renderInstances( geometry, start, count ) {$/;"	r
start	js/three.js	/^		function replace( match, start, end, snippet ) {$/;"	r
start	js/three.js	/^		function start() {$/;"	r
start	js/three.js	/^		start: function () {$/;"	r
start	js/three.js	/^		this.start = ( start !== undefined ) ? start : new Vector3();$/;"	r
start	js/three.min.js	/^g[c],this.addGroup(d.start,d.count,d.materialIndex);g=a.boundingBox;null!==g&&(this.boundingBox=g.clone());g=a.boundingSphere;null!==g&&(this.boundingSphere=g.clone());this.drawRange.start=a.drawRange.start;this.drawRange.count=a.drawRange.count;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Hb.prototype=Object.create(L.prototype);Hb.prototype.constructor=Hb;fb.prototype=Object.create(C.prototype);fb.prototype.constructor=fb;zc.prototype=Object.create(L.prototype);zc.prototype.constructor=$/;"	r
startAt	js/three.js	/^		startAt: function ( time ) {$/;"	r
startEnd	js/three.js	/^			var startEnd = new Vector3();$/;"	r
startEnd2	js/three.js	/^				var startEnd2 = startEnd.dot( startEnd );$/;"	r
startEndRatio	js/three.js	/^					startEndRatio = fadeOutDuration \/ fadeInDuration,$/;"	r
startEndRatio	js/three.js	/^				fadeOutAction.warp( 1.0, startEndRatio, duration );$/;"	r
startEnd_startP	js/three.js	/^				var startEnd_startP = startEnd.dot( startP );$/;"	r
startP	js/three.js	/^			var startP = new Vector3();$/;"	r
startPoint	js/three.js	/^			var startPoint = this.curves[ 0 ].getPoint( 0 );$/;"	r
startSign	js/three.js	/^			var startSign = this.distanceToPoint( line.start );$/;"	r
startTime	js/three.js	/^			this.oldTime = this.startTime;$/;"	r
startTime	js/three.js	/^			this.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); \/\/ see #10732$/;"	r
startTime	js/three.js	/^			this.startTime = this.context.currentTime;$/;"	r
startTime	js/three.js	/^			var startTime = this._startTime;$/;"	r
startTime	js/three.js	/^		this.startTime = 0;$/;"	r
startTime	js/three.min.js	/^else{var a=this.context.createBufferSource();a.buffer=this.buffer;a.loop=this.loop;a.onended=this.onEnded.bind(this);a.playbackRate.setValueAtTime(this.playbackRate,this.startTime);this.startTime=this.context.currentTime;a.start(this.startTime,this.offset);this.isPlaying=!0;this.source=a;return this.connect()}},pause:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-$/;"	r
startTime	js/three.min.js	/^this.filter=null}function ic(a){w.call(this);this.type="Audio";this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=!1;this.offset=this.startTime=0;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.sourceType="empty";this.filters=[]}function he(a){ic.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function ie(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=$/;"	r
startTime	js/three.min.js	/^void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function bf(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this}function cf(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function ad(a){w.call(this);this.material=a;this.render=function(){}}function bd(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&&c.isGeometry?$/;"	r
state	js/three.js	/^			_this.state = state;$/;"	r
state	js/three.js	/^			background = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );$/;"	r
state	js/three.js	/^			state = new WebGLState( _gl, extensions, utils );$/;"	r
state	js/three.js	/^			state: state$/;"	r
state	js/three.js	/^			var _state = _renderer.state;$/;"	r
state	js/three.js	/^		var state = {$/;"	r
state	js/three.js	/^	function WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {$/;"	r
state	js/three.min.js	/^x+","+g.length},state:b}}function bg(a,b){var c={};return{update:function(d){var e=b.frame,f=d.geometry,g=a.get(d,f);c[g.id]!==e&&(f.isGeometry&&g.updateFromObject(d),a.update(g),c[g.id]=e);return g},clear:function(){c={}}}}function cg(a){a=a.split("\\n");for(var b=0;b<a.length;b++)a[b]=b+1+": "+a[b];return a.join("\\n")}function Ke(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile.");$/;"	r
stats	js/three.js	/^			this.stats = {$/;"	r
stats	js/three.js	/^		this.stats = {$/;"	r
stencil	js/three.js	/^						currentStencilClear = stencil;$/;"	r
stencil	js/three.js	/^				stencil: _stencil,$/;"	r
stencil	js/three.js	/^				stencil: stencilBuffer$/;"	r
stencilBuffer	js/three.js	/^			this.stencilBuffer = source.stencilBuffer;$/;"	r
stencilBuffer	js/three.js	/^		this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;$/;"	r
stencilBuffer	js/three.js	/^		var stencilBuffer = new StencilBuffer();$/;"	r
stencilFail	js/three.js	/^						currentStencilFail = stencilFail;$/;"	r
stencilFunc	js/three.js	/^						currentStencilFunc = stencilFunc;$/;"	r
stencilMask	js/three.js	/^						currentStencilFuncMask = stencilMask;$/;"	r
stencilMask	js/three.js	/^						currentStencilMask = stencilMask;$/;"	r
stencilRef	js/three.js	/^						currentStencilRef = stencilRef;$/;"	r
stencilRef	js/three.js	/^						gl.stencilFunc( stencilFunc, stencilRef, stencilMask );$/;"	r
stencilRef	js/three.js	/^				setFunc: function ( stencilFunc, stencilRef, stencilMask ) {$/;"	r
stencilZFail	js/three.js	/^						currentStencilZFail = stencilZFail;$/;"	r
stencilZFail	js/three.js	/^						gl.stencilOp( stencilFail, stencilZFail, stencilZPass );$/;"	r
stencilZFail	js/three.js	/^				setOp: function ( stencilFail, stencilZFail, stencilZPass ) {$/;"	r
stencilZPass	js/three.js	/^						currentStencilZPass = stencilZPass;$/;"	r
step	js/three.js	/^				var step = ( this && this.isLineSegments ) ? 2 : 1;$/;"	r
step	js/three.js	/^		var step = size \/ divisions;$/;"	r
steps	js/three.js	/^			\/\/ console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);$/;"	r
steps	js/three.js	/^		var steps = options.steps !== undefined ? options.steps : 1;$/;"	r
stop	js/three.js	/^		stop: function () {$/;"	r
stop	js/three.min.js	/^0;this.running=!0},stop:function(){this.getElapsedTime();this.autoStart=this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var b=("undefined"===typeof performance?Date:performance).now(),a=(b-this.oldTime)\/1E3;this.oldTime=b;this.elapsedTime+=a}return a}});Object.assign(bf.prototype,{set:function(a,b,c){this.radius=a;this.phi=b;this.theta=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
stop	js/three.min.js	/^f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}});Object.assign(Xe.prototype,{play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},$/;"	r
stop	js/three.min.js	/^this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(!1===this.hasPlaybackControl)console.warn("THREE.Audio: this Audio has no playback control.");else return this.source.stop(),this.offset=0,this.isPlaying=!1,this},connect:function(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(var a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());$/;"	r
stopAllAction	js/three.js	/^		stopAllAction: function () {$/;"	r
stopAllAction	js/three.min.js	/^a):a;a=this._actionsByClip[c?c.uuid:a];return void 0!==a?a.actionByRoot[b]||null:null},stopAllAction:function(){for(var a=this._actions,b=this._nActiveActions,c=this._bindings,d=this._nActiveBindings,e=this._nActiveBindings=this._nActiveActions=0;e!==b;++e)a[e].reset();for(e=0;e!==d;++e)c[e].useCount=0;return this},update:function(a){a*=this.timeScale;for(var b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1,g=0;g!==c;++g)b[g]._update(d,a,e,f);a=this._bindings;$/;"	r
stopFading	js/three.js	/^		stopFading: function () {$/;"	r
stopWarping	js/three.js	/^		stopWarping: function () {$/;"	r
strength	js/GLTFLoader.js	/^					materialParams.aoMapIntensity = material.occlusionTexture.strength;$/;"	r
stride	js/three.js	/^							var stride = data.stride;$/;"	r
stride	js/three.js	/^				stride = this.getValueSize(),$/;"	r
stride	js/three.js	/^				stride = this.valueSize,$/;"	r
stride	js/three.js	/^				stride = this.valueSize;$/;"	r
stride	js/three.js	/^				var stride = this.getValueSize();$/;"	r
stride	js/three.js	/^			for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {$/;"	r
stride	js/three.js	/^			for ( var i = stride, e = stride + stride; i !== e; ++ i ) {$/;"	r
stride	js/three.js	/^			index1 *= this.stride;$/;"	r
stride	js/three.js	/^			index2 *= attribute.stride;$/;"	r
stride	js/three.js	/^			this.stride = source.stride;$/;"	r
stride	js/three.js	/^			var stride = index * 3;$/;"	r
stride	js/three.js	/^			var stride = this.valueSize,$/;"	r
stride	js/three.js	/^		function correctUV( uv, stride, vector, azimuth ) {$/;"	r
stride	js/three.js	/^		sortedArray: function ( values, stride, order ) {$/;"	r
stride	js/three.js	/^		this.stride = stride;$/;"	r
stride	js/three.js	/^	function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {$/;"	r
su	js/three.js	/^			var su = Math.sin( u );$/;"	r
sub	js/three.js	/^		sub: function ( color ) {$/;"	r
sub	js/three.js	/^		sub: function ( v, w ) {$/;"	r
sub	js/three.min.js	/^a;this.g+=a;this.b+=a;return this},sub:function(a){this.r=Math.max(0,this.r-a.r);this.g=Math.max(0,this.g-a.g);this.b=Math.max(0,this.b-a.b);return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a,b){void 0===b&&(b=$/;"	r
subPaths	js/three.js	/^			var subPaths = this.subPaths;$/;"	r
subPaths	js/three.js	/^		this.subPaths = [];$/;"	r
subScalar	js/three.js	/^		subScalar: function ( s ) {$/;"	r
subScalar	js/three.min.js	/^b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*$/;"	r
subTreeNode	js/three.js	/^				var subTreeNode = searchNodeSubtree( root.children );$/;"	r
subVectors	js/three.js	/^		subVectors: function ( a, b ) {$/;"	r
subVectors	js/three.min.js	/^b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*$/;"	r
subdivide	js/three.js	/^		function subdivide( detail ) {$/;"	r
subdivideFace	js/three.js	/^		function subdivideFace( a, b, c, detail ) {$/;"	r
submitFrame	js/three.js	/^		this.submitFrame = function () {$/;"	r
subscribe_	js/three.js	/^		subscribe_: function ( path, parsedPath ) {$/;"	r
subscribe_	js/three.min.js	/^a[b],a.pop()}this.nCachedObjects_=e},subscribe_:function(a,b){var c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];var f=this._paths,g=this._parsedPaths,h=this._objects,k=this.nCachedObjects_,l=Array(h.length),d=e.length;c[a]=d;f.push(a);g.push(b);e.push(l);c=k;for(d=h.length;c!==d;++c)l[c]=new pa(h[c],a,b);return l},unsubscribe_:function(a){var b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){var d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=$/;"	r
subscript	js/three.js	/^				addUniform( container, subscript === undefined ?$/;"	r
subscript	js/three.js	/^				subscript = match[ 3 ];$/;"	r
sum	js/three.js	/^			return cache; \/\/ { sums: cache, sum: sum }; Sum is in the last element.$/;"	r
sum	js/three.js	/^			var p, sum = 0;$/;"	r
sums	js/three.js	/^			var lengths = [], sums = 0;$/;"	r
supportedObjectNames	js/three.js	/^			var supportedObjectNames = [ 'material', 'materials', 'bones' ];$/;"	r
supportsBlendMinMax	js/three.js	/^		supportsBlendMinMax: function () {$/;"	r
supportsBlendMinMax	js/three.min.js	/^supportsBlendMinMax:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.");return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");$/;"	r
supportsCompressedTexturePVRTC	js/three.js	/^		supportsCompressedTexturePVRTC: function () {$/;"	r
supportsCompressedTextureS3TC	js/three.js	/^		supportsCompressedTextureS3TC: function () {$/;"	r
supportsCompressedTextureS3TC	js/three.min.js	/^return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")},$/;"	r
supportsFloatTextures	js/three.js	/^		supportsFloatTextures: function () {$/;"	r
supportsFloatTextures	js/three.min.js	/^return this.state.reset()},supportsFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");$/;"	r
supportsHalfFloatTextures	js/three.js	/^		supportsHalfFloatTextures: function () {$/;"	r
supportsInstancedArrays	js/three.js	/^		supportsInstancedArrays: function () {$/;"	r
supportsStandardDerivatives	js/three.js	/^		supportsStandardDerivatives: function () {$/;"	r
supportsVertexTextures	js/three.js	/^				supportsVertexTextures: capabilities.vertexTextures,$/;"	r
supportsVertexTextures	js/three.js	/^		supportsVertexTextures: function () {$/;"	r
surf_norm	js/three.js	/^	var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n";$/;"	r
surf_norm	js/three.min.js	/^bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n",$/;"	r
sw	js/three.js	/^					var sw = this.geometry.skinWeights[ i ];$/;"	r
sx	js/three.js	/^				scale.x = sx;$/;"	r
sx	js/three.js	/^				var sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();$/;"	r
sx	js/three.js	/^			te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;$/;"	r
sx	js/three.js	/^			this.x = sx;$/;"	r
sx	js/three.js	/^			var sx = this.setFromMatrixColumn( m, 0 ).length();$/;"	r
sy	js/three.js	/^				scale.y = sy;$/;"	r
sy	js/three.js	/^				var sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();$/;"	r
sy	js/three.js	/^			te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;$/;"	r
sy	js/three.js	/^			this.y = sy;$/;"	r
sy	js/three.js	/^			var sy = this.setFromMatrixColumn( m, 1 ).length();$/;"	r
syncWith	js/three.js	/^		syncWith: function ( action ) {$/;"	r
sz	js/three.js	/^				scale.z = sz;$/;"	r
sz	js/three.js	/^				var sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();$/;"	r
sz	js/three.js	/^			this.z = sz;$/;"	r
sz	js/three.js	/^			var sz = this.setFromMatrixColumn( m, 2 ).length();$/;"	r
t	js/three.js	/^										var t = i2 \/ divisions;$/;"	r
t	js/three.js	/^									return this.afterEnd_( i1 - 1, t, t0 );$/;"	r
t	js/three.js	/^									return this.beforeStart_( 0, t, t1 );$/;"	r
t	js/three.js	/^						for ( s = v, t = v + 1; t < nv; s ++, t ++ ) {$/;"	r
t	js/three.js	/^						return this.beforeStart_( 0, t, t1 );$/;"	r
t	js/three.js	/^					t = Math.sin( t * len ) \/ sin;$/;"	r
t	js/three.js	/^					t = _Math.clamp( t, 0, 1 );$/;"	r
t	js/three.js	/^				var t = - ( line.start.dot( this.normal ) + this.constant ) \/ denominator;$/;"	r
t	js/three.js	/^				var t = startEnd_startP \/ startEnd2;$/;"	r
t	js/three.js	/^			 t, 0, - 1, 	t, 0, 1, 	- t, 0, - 1, 	- t, 0, 1$/;"	r
t	js/three.js	/^			- 1, t, 0, 	1, t, 0, 	- 1, - t, 0, 	1, - t, 0,$/;"	r
t	js/three.js	/^			t = b \/ bevelSegments;$/;"	r
t	js/three.js	/^			var t = ( i + segmentFraction ) \/ ( il - 1 );$/;"	r
t	js/three.js	/^			var t = - ( this.origin.dot( plane.normal ) + plane.constant ) \/ denominator;$/;"	r
t	js/three.js	/^			var t = 1 - c;$/;"	r
t	js/three.js	/^			var t = this.closestPointToPointParameter( point, clampToLine );$/;"	r
t	js/three.js	/^			var t = this.distanceToPlane( plane );$/;"	r
t	js/three.js	/^			var t = this.getUtoTmapping( u );$/;"	r
t	js/three.js	/^		\/\/( 0, t, t0 ), returns this.resultBuffer$/;"	r
t	js/three.js	/^		var t = ( 1 + Math.sqrt( 5 ) ) \/ 2;$/;"	r
t	js/three.min.js	/^aa.enableAttribute(m);F.bindBuffer(F.ARRAY_BUFFER,B);F.vertexAttribPointer(m,t,y,p,I*x,(h*I+v)*x)}else v.isInstancedBufferAttribute?(aa.enableAttributeAndDivisor(m,v.meshPerAttribute),void 0===c.maxInstancedCount&&(c.maxInstancedCount=v.meshPerAttribute*v.count)):aa.enableAttribute(m),F.bindBuffer(F.ARRAY_BUFFER,B),F.vertexAttribPointer(m,t,y,p,0,h*t*x)}}else if(void 0!==r&&(p=r[J],void 0!==p))switch(p.length){case 2:F.vertexAttrib2fv(m,p);break;case 3:F.vertexAttrib3fv(m,p);break;case 4:F.vertexAttrib4fv(m,$/;"	r
t	js/three.min.js	/^break;case 303:case 304:n="ENVMAP_TYPE_EQUIREC";break;case 305:n="ENVMAP_TYPE_SPHERE"}switch(d.envMap.mapping){case 302:case 304:u="ENVMAP_MODE_REFRACTION"}switch(d.combine){case 0:r="ENVMAP_BLENDING_MULTIPLY";break;case 1:r="ENVMAP_BLENDING_MIX";break;case 2:r="ENVMAP_BLENDING_ADD"}}var m=0<a.gammaFactor?a.gammaFactor:1,t=fg(d.extensions,f,b),x=gg(h),p=g.createProgram();d.isRawShaderMaterial?(h=[x].filter(Ac).join("\\n"),0<h.length&&(h+="\\n"),b=[t,x].filter(Ac).join("\\n"),0<b.length&&(b+="\\n")):(h=$/;"	r
t	js/three.min.js	/^c.faces.push(v);c.faces.push(w)}else{v=new Oa;v.a=h[r++];v.b=h[r++];v.c=h[r++];t&&(t=h[r++],v.materialIndex=t);t=c.faces.length;if(e)for(e=0;e<u;e++)for(z=d.uvs[e],c.faceVertexUvs[e][t]=[],f=0;3>f;f++)A=h[r++],C=z[2*A],A=z[2*A+1],C=new D(C,A),c.faceVertexUvs[e][t].push(C);x&&(x=3*h[r++],v.normal.set(l[x++],l[x++],l[x]));if(y)for(e=0;3>e;e++)x=3*h[r++],y=new p(l[x++],l[x++],l[x]),v.vertexNormals.push(y);n&&(n=h[r++],v.color.setHex(m[n]));if(k)for(e=0;3>e;e++)n=h[r++],v.vertexColors.push(new H(m[n]));$/;"	r
t	js/three.min.js	/^c.texImage2D(a.TEXTURE_2D,t,r,v.width,v.height,0,r,B,v.data);else if(0<p.length&&q){t=0;for(x=p.length;t<x;t++)v=p[t],c.texImage2D(a.TEXTURE_2D,t,r,r,B,v);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,r,B,v);l(b,q)&&a.generateMipmap(a.TEXTURE_2D);u.__version=b.version;if(b.onUpdate)b.onUpdate(b);return}}c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_2D,u.__webglTexture)}function m(c,g,h){h?(a.texParameteri(c,a.TEXTURE_WRAP_S,f.convert(g.wrapS)),a.texParameteri(c,a.TEXTURE_WRAP_T,$/;"	r
t	js/three.min.js	/^e.getMaxAnisotropy())),d.get(g).__currentAnisotropy=g.anisotropy)}function t(b,e,g,h){var l=f.convert(e.texture.format),k=f.convert(e.texture.type);c.texImage2D(h,0,l,e.width,e.height,0,l,k,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,g,h,d.get(e.texture).__webglTexture,0);a.bindFramebuffer(a.FRAMEBUFFER,null)}function p(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&&!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c.width,c.height),$/;"	r
t	js/three.min.js	/^function(b,q){var u=d.get(b);if(6===b.image.length)if(0<b.version&&u.__version!==b.version){u.__image__webglTextureCube||(b.addEventListener("dispose",n),u.__image__webglTextureCube=a.createTexture(),g.textures++);c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_CUBE_MAP,u.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);q=b&&b.isCompressedTexture;for(var r=b.image[0]&&b.image[0].isDataTexture,v=[],t=0;6>t;t++)v[t]=q||r?r?b.image[t].image:b.image[t]:h(b.image[t],e.maxCubemapSize);$/;"	r
t	js/three.min.js	/^outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||.5;b=b||1;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):1;var g=[],h=[],k=[],l=[],q=a,n=(b-a)\/d,u=new p,m=new D,v,t;for(v=0;v<=d;v++){for(t=0;t<=c;t++)a=e+t\/c*f,u.x=q*Math.cos(a),u.y=q*Math.sin(a),h.push(u.x,u.y,u.z),k.push(0,0,1),m.x=(u.x\/b+1)\/2,m.y=(u.y\/b+1)\/2,l.push(m.x,m.y);q+=n}for(v=0;v<d;v++)for(b=v*(c+1),t=0;t<c;t++)a=t+b,e=a+c+1,f=a+c+2,q=a+1,g.push(a,e,q),g.push(e,$/;"	r
t	js/three.min.js	/^v[e],t=f.start,x=f.count,r=t,t=t+x;r<t;r+=3)void 0!==d?b(d[r],d[r+1],d[r+2],f.materialIndex):b(r,r+1,r+2,f.materialIndex);else if(void 0!==d)for(e=0;e<d.length;e+=3)b(d[e],d[e+1],d[e+2]);else for(e=0;e<f.length\/3;e+=3)b(e,e+1,e+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.getCenter().negate();this.translate(a.x,$/;"	r
t0	js/three.js	/^								t0 = pp[ -- i1 - 1 ];$/;"	r
t0	js/three.js	/^								t0 = t1;$/;"	r
t0	js/three.js	/^								t0 = t1global;$/;"	r
t0	js/three.js	/^								t1 = t0;$/;"	r
t0	js/three.js	/^						return this.afterEnd_( i1 - 1, t0, t );$/;"	r
t0	js/three.js	/^						tNext = t0;$/;"	r
t0	js/three.js	/^					t0 = pp[ i1 - 1 ];$/;"	r
t0	js/three.js	/^				t0 = pp[ i1 - 1 ];$/;"	r
t0	js/three.js	/^				this.intervalChanged_( i1, t0, t1 );$/;"	r
t0	js/three.js	/^				var t0 = tca - thc;$/;"	r
t0	js/three.js	/^			c1 = t0;$/;"	r
t0	js/three.js	/^			return this.interpolate_( i1, t0, t, t1 );$/;"	r
t0	js/three.js	/^		 *   p'(0) = t0, p'(1) = t1.$/;"	r
t0	js/three.js	/^		interpolate_: function ( \/* i1, t0, t, t1 *\/ ) {$/;"	r
t0	js/three.js	/^		interpolate_: function ( i1 \/*, t0, t, t1 *\/ ) {$/;"	r
t0	js/three.js	/^		interpolate_: function ( i1, t0, t, t1 ) {$/;"	r
t0	js/three.js	/^		intervalChanged_: function ( \/* i1, t0, t1 *\/ ) {$/;"	r
t0	js/three.js	/^		intervalChanged_: function ( i1, t0, t1 ) {$/;"	r
t1	js/three.js	/^								t0 = t1;$/;"	r
t1	js/three.js	/^								t1 = pp[ ++ i1 ];$/;"	r
t1	js/three.js	/^								t1 = t0;$/;"	r
t1	js/three.js	/^						tPrev = t1;$/;"	r
t1	js/three.js	/^					t1 = pp[ i1 ];$/;"	r
t1	js/three.js	/^				t1 = pp[ i1 ],$/;"	r
t1	js/three.js	/^				var t1 = ( x1 - x0 ) \/ dt0 - ( x2 - x0 ) \/ ( dt0 + dt1 ) + ( x2 - x1 ) \/ dt1;$/;"	r
t1	js/three.js	/^				var t1 = tca + thc;$/;"	r
t1	js/three.js	/^			var t1 = t - delta;$/;"	r
t11	js/three.js	/^				t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,$/;"	r
t11	js/three.js	/^				t11 = n33 * n22 - n32 * n23,$/;"	r
t12	js/three.js	/^				t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,$/;"	r
t12	js/three.js	/^				t12 = n32 * n13 - n33 * n12,$/;"	r
t13	js/three.js	/^				t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,$/;"	r
t13	js/three.js	/^				t13 = n23 * n12 - n22 * n13,$/;"	r
t14	js/three.js	/^				t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;$/;"	r
t1global	js/three.js	/^								t0 = t1global;$/;"	r
t1global	js/three.js	/^							var t1global = pp[ 1 ];$/;"	r
t2	js/three.js	/^				var t2 = ( x2 - x1 ) \/ dt1 - ( x3 - x1 ) \/ ( dt1 + dt2 ) + ( x3 - x2 ) \/ dt2;$/;"	r
t2	js/three.js	/^				var t2 = t * t;$/;"	r
t2	js/three.js	/^			var t2 = t + delta;$/;"	r
t2	js/three.js	/^		var t2 = t * t;$/;"	r
t3	js/three.js	/^				var t3 = t2 * t;$/;"	r
t3	js/three.js	/^		var t3 = t * t2;$/;"	r
tCube	js/three.js	/^				tCube: { value: null },$/;"	r
tDir	js/three.js	/^				var tDir = t * dir;$/;"	r
tEquirect	js/three.js	/^				tEquirect: { value: null },$/;"	r
tFlip	js/three.js	/^				tFlip: { value: - 1 },$/;"	r
tFlip	js/three.min.js	/^tFlip:{value:-1},opacity:{value:1}},vertexShader:V.cube_vert,fragmentShader:V.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:V.equirect_vert,fragmentShader:V.equirect_frag},distanceRGBA:{uniforms:Ea.merge([E.common,E.displacementmap,{referencePosition:{value:new p},nearDistance:{value:1},farDistance:{value:1E3}}]),vertexShader:V.distanceRGBA_vert,fragmentShader:V.distanceRGBA_frag},shadow:{uniforms:Ea.merge([E.lights,E.fog,{color:{value:new H(0)},opacity:{value:1}}]),vertexShader:V.shadow_vert,$/;"	r
tNext	js/three.js	/^						tNext = 2 * t1 - t0;$/;"	r
tNext	js/three.js	/^						tNext = t0;$/;"	r
tNext	js/three.js	/^						tNext = t1 + pp[ 1 ] - pp[ 0 ];$/;"	r
tNext	js/three.js	/^				tNext = pp[ iNext ];$/;"	r
tPrev	js/three.js	/^						tPrev = 2 * t0 - t1;$/;"	r
tPrev	js/three.js	/^						tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];$/;"	r
tPrev	js/three.js	/^						tPrev = t1;$/;"	r
tPrev	js/three.js	/^				tPrev = pp[ iPrev ],$/;"	r
tangent	js/three.js	/^		var tangent = this.v2.clone().sub( this.v1 );$/;"	r
tangents	js/three.js	/^				tangents: tangents,$/;"	r
tangents	js/three.js	/^			var tangents = [];$/;"	r
tangents	js/three.js	/^		this.tangents = bufferGeometry.tangents;$/;"	r
tangents	js/three.js	/^		this.tangents = frames.tangents;$/;"	r
target	js/GLTFLoader.js	/^						var target = channel.target;$/;"	r
target	js/GLTFLoader.js	/^				var target = source.clone();$/;"	r
target	js/GLTFLoader.js	/^			var target = targets[ i ];$/;"	r
target	js/three.js	/^				event.target = this;$/;"	r
target	js/three.js	/^				var target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;$/;"	r
target	js/three.js	/^			return function lookAt( eye, target, up ) {$/;"	r
target	js/three.js	/^			this.target = source.target.clone();$/;"	r
target	js/three.js	/^			var geometry = event.target;$/;"	r
target	js/three.js	/^			var material = event.target;$/;"	r
target	js/three.js	/^			var renderTarget = event.target;$/;"	r
target	js/three.js	/^			var texture = event.target;$/;"	r
target	js/three.js	/^		function createTexture( type, target, count ) {$/;"	r
target	js/three.js	/^		this.target = new Object3D();$/;"	r
target	js/three.min.js	/^this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a\/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI\/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new vd}function xd(a,b,c,d){fa.call(this,a,b);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=$/;"	r
target	js/three.min.js	/^{constructor:zd,isDirectionalLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this}});Ad.prototype=Object.assign(Object.create(fa.prototype),{constructor:Ad,isAmbientLight:!0});Bd.prototype=Object.assign(Object.create(fa.prototype),{constructor:Bd,isRectAreaLight:!0,copy:function(a){fa.prototype.copy.call(this,a);this.width=a.width;this.height=a.height;return this},toJSON:function(a){a=fa.prototype.toJSON.call(this,a);a.object.width=$/;"	r
targetArcLength	js/three.js	/^				targetArcLength = distance;$/;"	r
targetArcLength	js/three.js	/^				targetArcLength = u * arcLengths[ il - 1 ];$/;"	r
targetArcLength	js/three.js	/^			var targetArcLength; \/\/ The targeted u distance value to get$/;"	r
targetGroup	js/three.js	/^		this._targetGroup = targetGroup;$/;"	r
targetLine	js/three.js	/^		this.targetLine = new Line( geometry, material );$/;"	r
targetName	js/GLTFLoader.js	/^							var targetName = node.name ? node.name : node.uuid;$/;"	r
targetNames	js/GLTFLoader.js	/^							var targetNames = [];$/;"	r
targetObject	js/three.js	/^						targetObject = targetObject.material.materials;$/;"	r
targetObject	js/three.js	/^						targetObject = targetObject.skeleton.bones;$/;"	r
targetObject	js/three.js	/^						targetObject = targetObject[ objectName ];$/;"	r
targetObject	js/three.js	/^					targetObject = targetObject[ objectIndex ];$/;"	r
targetObject	js/three.js	/^				targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;$/;"	r
targetObject	js/three.js	/^				this.node = targetObject;$/;"	r
targetObject	js/three.js	/^				this.targetObject = targetObject;$/;"	r
targetObject	js/three.js	/^			var targetObject = this.node,$/;"	r
targets	js/GLTFLoader.js	/^		var targets = primitiveDef.targets;$/;"	r
targets	js/three.js	/^								var targets = morphTargets[ t ].vertices;$/;"	r
tc	js/three.min.js	/^this.itemSize)).copy(this)}});tc.prototype=Object.create(O.prototype);tc.prototype.constructor=tc;uc.prototype=Object.create(O.prototype);uc.prototype.constructor=uc;vc.prototype=Object.create(O.prototype);vc.prototype.constructor=vc;wc.prototype=Object.create(O.prototype);wc.prototype.constructor=wc;db.prototype=Object.create(O.prototype);db.prototype.constructor=db;xc.prototype=Object.create(O.prototype);xc.prototype.constructor=xc;eb.prototype=Object.create(O.prototype);eb.prototype.constructor=$/;"	r
tca	js/three.js	/^				var tca = v1.dot( this.direction );$/;"	r
te	js/three.js	/^				te = m.elements,$/;"	r
te	js/three.js	/^				te = this.elements,$/;"	r
te	js/three.js	/^				var te = this.elements;$/;"	r
te	js/three.js	/^			var te = m.elements,$/;"	r
te	js/three.js	/^			var te = m.elements;$/;"	r
te	js/three.js	/^			var te = this.elements, me = m.elements;$/;"	r
te	js/three.js	/^			var te = this.elements,$/;"	r
te	js/three.js	/^			var te = this.elements;$/;"	r
te	js/three.min.js	/^te=new qe,ue=new qe,ve=new qe;la.prototype=Object.create(ca.prototype);la.prototype.constructor=la;la.prototype.isCatmullRomCurve3=!0;la.prototype.getPoint=function(a,b){b=b||new p;var c=this.points,d=c.length;a*=d-(this.closed?0:1);var e=Math.floor(a);a-=e;this.closed?e+=0<e?0:(Math.floor(Math.abs(e)\/c.length)+1)*c.length:0===a&&e===d-1&&(e=d-2,a=1);if(this.closed||0<e)var f=c[(e-1)%d];else Nd.subVectors(c[0],c[1]).add(c[0]),f=Nd;var g=c[e%d];var h=c[(e+1)%d];this.closed||e+2<d?c=c[(e+2)%d]:(Nd.subVectors(c[d-$/;"	r
tempA	js/three.js	/^			var tempA = new Vector3();$/;"	r
tempB	js/three.js	/^			var tempB = new Vector3();$/;"	r
tempC	js/three.js	/^			var tempC = new Vector3();$/;"	r
tempNormals	js/three.js	/^			var tempNormals = [];$/;"	r
tempPosition	js/three.js	/^			var tempPosition = new Vector3();$/;"	r
tempTexture	js/three.js	/^			tempTexture = gl.createTexture();$/;"	r
tempTexture	js/three.js	/^		var tempTexture, occlusionTexture;$/;"	r
tempUVs	js/three.js	/^			var tempUVs = [];$/;"	r
tempUVs2	js/three.js	/^			var tempUVs2 = [];$/;"	r
tension	js/three.js	/^			var tension = this.tension !== undefined ? this.tension : 0.5;$/;"	r
test	js/three.js	/^		test: function ( layers ) {$/;"	r
testPoint	js/three.js	/^				function testPoint( point, index ) {$/;"	r
texData	js/three.js	/^				var texData = scope._parser( buffer );$/;"	r
texDatas	js/three.js	/^					var texDatas = scope._parser( buffer, true );$/;"	r
texImage2D	js/three.js	/^			texImage2D: texImage2D,$/;"	r
texImage2D	js/three.js	/^		function texImage2D() {$/;"	r
texelColor	js/three.js	/^	var map_fragment = "#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n";$/;"	r
texelColor	js/three.min.js	/^map_fragment:"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n",map_pars_fragment:"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n",map_particle_fragment:"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n",map_particle_pars_fragment:"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n",$/;"	r
text	js/three.js	/^			text: text,$/;"	r
texture	js/GLTFLoader.js	/^						uvScaleMap = uvScaleMap.texture;$/;"	r
texture	js/GLTFLoader.js	/^			materialParams[ textureName ] = texture;$/;"	r
texture	js/three.js	/^						texture = loader.load( fullPath );$/;"	r
texture	js/three.js	/^						texture = textureLoader.load( fullPath );$/;"	r
texture	js/three.js	/^					'		gl_FragColor = texture;',$/;"	r
texture	js/three.js	/^					setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );$/;"	r
texture	js/three.js	/^					texture = texture.texture;$/;"	r
texture	js/three.js	/^					textures[ data.uuid ] = texture;$/;"	r
texture	js/three.js	/^					textures[ uuid ] = texture;$/;"	r
texture	js/three.js	/^					uploadTexture( textureProperties, texture, slot );$/;"	r
texture	js/three.js	/^					uvScaleMap = uvScaleMap.texture;$/;"	r
texture	js/three.js	/^					var texture = new Texture( images[ data.image ] );$/;"	r
texture	js/three.js	/^					var texture = renderTarget.texture;$/;"	r
texture	js/three.js	/^					var texture;$/;"	r
texture	js/three.js	/^				boundTexture = { type: undefined, texture: undefined };$/;"	r
texture	js/three.js	/^				boundTexture.texture = webglTexture;$/;"	r
texture	js/three.js	/^				texture: texture,	\/\/ THREE.Texture$/;"	r
texture	js/three.js	/^			setTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );$/;"	r
texture	js/three.js	/^			texture = new CanvasTexture( canvas );$/;"	r
texture	js/three.js	/^			this.texture = source.texture.clone();$/;"	r
texture	js/three.js	/^			var texture = event.target;$/;"	r
texture	js/three.js	/^			var texture = gl.createTexture();$/;"	r
texture	js/three.js	/^			var texture = loader.load( url, onLoad, undefined, onError );$/;"	r
texture	js/three.js	/^			var texture = loader.load( urls, onLoad, undefined, onError );$/;"	r
texture	js/three.js	/^			var texture = new CompressedTexture();$/;"	r
texture	js/three.js	/^			var texture = new CubeTexture();$/;"	r
texture	js/three.js	/^			var texture = new DataTexture();$/;"	r
texture	js/three.js	/^			var texture = new Texture();$/;"	r
texture	js/three.js	/^			var texture = renderTarget.texture;$/;"	r
texture	js/three.js	/^		function setTextureParameters( textureType, texture, isPowerOfTwoImage ) {$/;"	r
texture	js/three.js	/^		function uploadTexture( textureProperties, texture, slot ) {$/;"	r
texture	js/three.js	/^		this.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );$/;"	r
texture	js/three.js	/^		var texture;$/;"	r
texture	js/three.min.js	/^a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.depthTexture=a.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Eb.prototype=Object.create(Db.prototype);Eb.prototype.constructor=Eb;Eb.prototype.isWebGLRenderTargetCube=!0;bb.prototype=Object.create(da.prototype);bb.prototype.constructor=bb;bb.prototype.isDataTexture=!0;Ta.prototype=Object.create(da.prototype);Ta.prototype.constructor=$/;"	r
texture	js/three.min.js	/^fragmentShader:"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\n\\tif ( renderType == 0 ) {\\n\\t\\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n\\t} else if ( renderType == 1 ) {\\n\\t\\tgl_FragColor = texture2D( map, vUV );\\n\\t} else {\\n\\t\\tvec4 texture = texture2D( map, vUV );\\n\\t\\ttexture.a *= opacity * vVisibility;\\n\\t\\tgl_FragColor = texture;\\n\\t\\tgl_FragColor.rgb *= color;\\n\\t}\\n}"},z=b.createProgram(),$/;"	r
texture	js/three.min.js	/^{type:void 0,texture:void 0},O[R]=d);if(d.type!==b||d.texture!==c)a.bindTexture(b,c||W[b]),d.type=b,d.texture=c},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(ea){console.error("THREE.WebGLState:",ea)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(ea){console.error("THREE.WebGLState:",ea)}},scissor:function(b){!1===Q.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),Q.copy(b))},viewport:function(b){!1===G.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),G.copy(b))},$/;"	r
textureDef	js/GLTFLoader.js	/^		var textureDef = json.textures[ textureIndex ];$/;"	r
textureFormat	js/three.js	/^					var textureFormat = texture.format;$/;"	r
textureId	js/three.js	/^	var textureId = 0;$/;"	r
textureIndex	js/GLTFLoader.js	/^					var textureIndex = metallicRoughness.metallicRoughnessTexture.index;$/;"	r
textureLoader	js/GLTFLoader.js	/^		this.textureLoader = new THREE.TextureLoader( this.options.manager );$/;"	r
textureLoader	js/GLTFLoader.js	/^		var textureLoader = this.textureLoader;$/;"	r
textureLoader	js/three.js	/^			var textureLoader = new TextureLoader();$/;"	r
textureName	js/GLTFLoader.js	/^	GLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {$/;"	r
textureNeedsGenerateMipmaps	js/three.js	/^		function textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {$/;"	r
textureNeedsPowerOfTwo	js/three.js	/^		function textureNeedsPowerOfTwo( texture ) {$/;"	r
texturePath	js/three.js	/^					var materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );$/;"	r
texturePath	js/three.js	/^				array[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );$/;"	r
texturePath	js/three.js	/^				this.texturePath = url.substring( 0, url.lastIndexOf( '\/' ) + 1 );$/;"	r
texturePath	js/three.js	/^			return function createMaterial( m, texturePath, crossOrigin ) {$/;"	r
texturePath	js/three.js	/^			this.texturePath = value;$/;"	r
texturePath	js/three.js	/^			var texturePath = this.texturePath && ( typeof this.texturePath === "string" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );$/;"	r
texturePath	js/three.js	/^		initMaterials: function ( materials, texturePath, crossOrigin ) {$/;"	r
texturePath	js/three.js	/^		this.texturePath = '';$/;"	r
textureProperties	js/three.js	/^				var textureProperties = properties.get( renderTarget.texture );$/;"	r
textureProperties	js/three.js	/^			var textureProperties = properties.get( renderTarget.texture );$/;"	r
textureProperties	js/three.js	/^			var textureProperties = properties.get( texture );$/;"	r
textureType	js/three.js	/^					var textureType = texture.type;$/;"	r
textureUnit	js/three.js	/^			var textureUnit = _usedTextureUnits;$/;"	r
textures	js/three.js	/^					textures: {},$/;"	r
textures	js/three.js	/^				if ( textures.length > 0 ) data.textures = textures;$/;"	r
textures	js/three.js	/^				if ( textures.length > 0 ) output.textures = textures;$/;"	r
textures	js/three.js	/^				textures: 0$/;"	r
textures	js/three.js	/^				var textures = extractFromCache( meta.textures );$/;"	r
textures	js/three.js	/^				var textures = {};$/;"	r
textures	js/three.js	/^			textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );$/;"	r
textures	js/three.js	/^			this.textures = value;$/;"	r
textures	js/three.js	/^			var textures = this.parseTextures( json.textures, images );$/;"	r
textures	js/three.js	/^			var textures = this.textures;$/;"	r
textures	js/three.js	/^			var textures = {};$/;"	r
textures	js/three.js	/^		this.textures = {};$/;"	r
textures	js/three.min.js	/^!1;this.gammaFactor=2;this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1;this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var M=this,H=!1,ka=null,N=null,U=-1,L="",O=null,Z=null,Q=new ba,V=new ba,T=null,G=0,W=t.width,ea=t.height,P=1,ca=new ba(0,0,W,ea),da=new ba(0,0,W,ea),Oe=!1,Td=new ld,Fa=new qg,fa=!1,Ud=!1,md=new K,Jb=new p,Vd={geometries:0,textures:0},Qa={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:Qa,$/;"	r
textures	js/three.min.js	/^c)}function Hd(a,b,c,d){sb.call(this,a,b,c,d)}function tb(a,b,c,d){sb.apply(this,a,b,c,d)}function ra(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=R.generateUUID();0>this.duration&&this.resetDuration();this.optimize()}function Id(a){this.manager=void 0!==a?a:wa;this.textures={}}function ae(a){this.manager=void 0!==a?a:wa}function gc(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}}function be(a){"boolean"===typeof a&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),$/;"	r
textures	js/three.min.js	/^return c[a]}var c=this.textures,d=new tg[a.type];void 0!==a.uuid&&(d.uuid=a.uuid);void 0!==a.name&&(d.name=a.name);void 0!==a.color&&d.color.setHex(a.color);void 0!==a.roughness&&(d.roughness=a.roughness);void 0!==a.metalness&&(d.metalness=a.metalness);void 0!==a.emissive&&d.emissive.setHex(a.emissive);void 0!==a.specular&&d.specular.setHex(a.specular);void 0!==a.shininess&&(d.shininess=a.shininess);void 0!==a.clearCoat&&(d.clearCoat=a.clearCoat);void 0!==a.clearCoatRoughness&&(d.clearCoatRoughness=$/;"	r
thc	js/three.js	/^				var thc = Math.sqrt( radius2 - d2 );$/;"	r
there	js/three.js	/^					\/\/ Object names must be checked against a whitelist. Otherwise, there$/;"	r
theta	js/three.js	/^					theta = - theta;$/;"	r
theta	js/three.js	/^					theta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); \/\/ clamp for floating pt errors$/;"	r
theta	js/three.js	/^					var theta = u * thetaLength + thetaStart;$/;"	r
theta	js/three.js	/^				theta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );$/;"	r
theta	js/three.js	/^				this.theta = 0;$/;"	r
theta	js/three.js	/^				this.theta = Math.atan2( vec3.x, vec3.z ); \/\/ equator angle around y-up axis$/;"	r
theta	js/three.js	/^				var theta = u * thetaLength + thetaStart;$/;"	r
theta	js/three.js	/^			this.theta = Math.atan2( vec3.x, vec3.z );$/;"	r
theta	js/three.js	/^			this.theta = other.theta;$/;"	r
theta	js/three.js	/^			this.theta = theta;$/;"	r
theta	js/three.js	/^			var theta = this.dot( v ) \/ ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );$/;"	r
theta	js/three.js	/^		set: function ( radius, theta, y ) {$/;"	r
theta	js/three.js	/^		this.theta = ( theta !== undefined ) ? theta : 0; \/\/ around the equator of the sphere$/;"	r
theta	js/three.js	/^		this.theta = ( theta !== undefined ) ? theta : 0; \/\/ counterclockwise angle in the x-z plane measured in radians from the positive z-axis$/;"	r
theta	js/three.js	/^	function Cylindrical( radius, theta, y ) {$/;"	r
theta	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.phi=a.phi;this.theta=a.theta;return this},makeSafe:function(){this.phi=Math.max(1E-6,Math.min(Math.PI-1E-6,this.phi));return this},setFromVector3:function(a){this.radius=a.length();0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(a.x,a.z),this.phi=Math.acos(R.clamp(a.y\/this.radius,-1,1)));return this}});Object.assign(cf.prototype,{set:function(a,b,c){this.radius=a;this.theta=b;this.y=c;return this},clone:function(){return(new this.constructor).copy(this)},$/;"	r
theta	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);this.theta=Math.atan2(a.x,a.z);this.y=a.y;return this}});ad.prototype=Object.create(w.prototype);ad.prototype.constructor=ad;ad.prototype.isImmediateRenderObject=!0;bd.prototype=Object.create(P.prototype);bd.prototype.constructor=bd;bd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){var d,e=["a","b","c"];this.object.updateMatrixWorld(!0);$/;"	r
thetaEnd	js/three.js	/^		var thetaEnd = thetaStart + thetaLength;$/;"	r
thetaLength	js/three.js	/^								data.thetaLength$/;"	r
thetaLength	js/three.js	/^			thetaLength: thetaLength$/;"	r
thetaLength	js/three.js	/^		thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;$/;"	r
thetaLength	js/three.js	/^		thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;$/;"	r
thetaLength	js/three.js	/^		thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;$/;"	r
thetaSegmentLevel	js/three.js	/^			var thetaSegmentLevel = j * ( thetaSegments + 1 );$/;"	r
thetaSegments	js/three.js	/^								data.thetaSegments,$/;"	r
thetaSegments	js/three.js	/^			thetaSegments: thetaSegments,$/;"	r
thetaSegments	js/three.js	/^		thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;$/;"	r
thetaStart	js/three.js	/^								data.thetaStart,$/;"	r
thetaStart	js/three.js	/^			thetaStart: thetaStart,$/;"	r
thetaStart	js/three.js	/^		thetaStart = thetaStart !== undefined ? thetaStart : 0.0;$/;"	r
thetaStart	js/three.js	/^		thetaStart = thetaStart !== undefined ? thetaStart : 0;$/;"	r
this	js/GLTFLoader.js	/^			var scope = this;$/;"	r
this	js/GLTFLoader.js	/^		var parser = this;$/;"	r
this	js/GLTFLoader.js	/^		var scope = this;$/;"	r
this	js/three.js	/^							console.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );$/;"	r
this	js/three.js	/^						console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );$/;"	r
this	js/three.js	/^					console.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );$/;"	r
this	js/three.js	/^					console.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );$/;"	r
this	js/three.js	/^					instance = this;$/;"	r
this	js/three.js	/^				event.target = this;$/;"	r
this	js/three.js	/^				intersectObject( objects[ i ], this, intersects, recursive );$/;"	r
this	js/three.js	/^				object.parent = this;$/;"	r
this	js/three.js	/^				scope = this;$/;"	r
this	js/three.js	/^				var object = this;$/;"	r
this	js/three.js	/^			intersectObject( object, this, intersects, recursive );$/;"	r
this	js/three.js	/^			var scope = this;$/;"	r
this	js/three.js	/^		\/\/ although .enabled = false yields an effective weight of zero, this$/;"	r
this	js/three.js	/^		\/\/ although .paused = true yields an effective time scale of zero, this$/;"	r
this	js/three.js	/^		var _this = this,$/;"	r
this	js/three.js	/^		var scope = this,$/;"	r
this	js/three.js	/^		var scope = this;$/;"	r
this	js/three.min.js	/^console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,b){var c=[];oe(a,this,c,b);c.sort($e);return c},intersectObjects:function(a,b){var c=[];if(!1===Array.isArray(a))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),c;for(var d=0,e=a.length;d<e;d++)oe(a[d],this,c,b);c.sort($e);return c}});Object.assign(af.prototype,{start:function(){this.oldTime=this.startTime=("undefined"===typeof performance?Date:performance).now();this.elapsedTime=$/;"	r
this	js/three.min.js	/^parseInt(c[1],10))\/255,this.g=Math.min(255,parseInt(c[2],10))\/255,this.b=Math.min(255,parseInt(c[3],10))\/255,b(c[5]),this;if(c=\/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))\/100,this.g=Math.min(100,parseInt(c[2],10))\/100,this.b=Math.min(100,parseInt(c[3],10))\/100,b(c[5]),this;break;case "hsl":case "hsla":if(c=\/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$\/.exec(d)){var d=parseFloat(c[1])\/360,$/;"	r
this	js/three.min.js	/^set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a}}});ic.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var b=this;(new ee).load(a,function(a){b.setBuffer(a)});return this};ie.prototype.getData=function(){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()};$c.prototype.updateCubeMap=function(a,$/;"	r
this	js/three.min.js	/^skinning:B});u[c]=y}var A=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,c,d){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==b.length){var n=a.state;n.disable(a.context.BLEND);n.buffers.color.setClear(1,1,1,1);n.buffers.depth.setTest(!0);n.setScissorTest(!1);for(var u,r=0,B=b.length;r<B;r++){var v=b[r];u=v.shadow;var I=v&&v.isPointLight;if(void 0===u)console.warn("THREE.WebGLShadowMap:",$/;"	r
this	js/three.min.js	/^this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}f=a[d];if(void 0===f)console.error("THREE.PropertyBinding: Trying to update property for track: "+b.nodeName+"."+d+" but it wasn't found.",a);else{b=this.Versioning.None;void 0!==a.needsUpdate?(b=this.Versioning.NeedsUpdate,this.targetObject=a):void 0!==a.matrixWorldNeedsUpdate&&(b=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=$/;"	r
this	js/three.min.js	/^this,f,g);a=!1;break}if(null!==e&&e>g){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,f,g,e);a=!1;break}e=g}if(void 0!==b&&S.isTypedArray(b))for(f=0,c=b.length;f!==c;++f)if(d=b[f],isNaN(d)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,f,d);a=!1;break}return a},optimize:function(){for(var a,b,c=this.times,d=this.values,e=this.getValueSize(),f=2302===this.getInterpolation(),g=1,h=c.length-1,k=1;k<h;++k){a=!1;var l=c[k];if(l!==c[k+1]&&(1!==k||$/;"	r
this	js/three.min.js	/^this;var a=new C,b=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h,k=0,l=0,q=b.length;l<q;l++){h=b[l]*e;for(var n=0;n<e;n++)g[k++]=f[h++]}a.addAttribute(d,new O(g,e))}return a},toJSON:function(){var a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};a.uuid=this.uuid;a.type=this.type;""!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters;for(var c in b)void 0!==b[c]&&$/;"	r
this	js/three.min.js	/^{constructor:Mb,isPoints:!0,raycast:function(){var a=new K,b=new hb,c=new Da;return function(d,e){function f(a,c){var f=b.distanceSqToPoint(a);if(f<m){a=b.closestPointToPoint(a);a.applyMatrix4(k);var h=d.ray.origin.distanceTo(a);h<d.near||h>d.far||e.push({distance:h,distanceToRay:Math.sqrt(f),point:a.clone(),index:c,face:null,object:g})}}var g=this,h=this.geometry,k=this.matrixWorld,l=d.params.Points.threshold;null===h.boundingSphere&&h.computeBoundingSphere();c.copy(h.boundingSphere);c.applyMatrix4(k);$/;"	r
threshold	js/three.js	/^				sphere.radius += threshold;$/;"	r
threshold	js/three.js	/^				var threshold = raycaster.params.Points.threshold;$/;"	r
thresholdAngle	js/three.js	/^			thresholdAngle: thresholdAngle$/;"	r
thresholdAngle	js/three.js	/^		thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;$/;"	r
thresholdDot	js/three.js	/^		var thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );$/;"	r
time	js/three.js	/^						time = 0;$/;"	r
time	js/three.js	/^						time = deltaTime > 0 ? duration : 0;$/;"	r
time	js/three.js	/^						time = duration;$/;"	r
time	js/three.js	/^					this.time = time;$/;"	r
time	js/three.js	/^				time = this.time += deltaTime,$/;"	r
time	js/three.js	/^				var time = times[ i ];$/;"	r
time	js/three.js	/^			this._startTime = time;$/;"	r
time	js/three.js	/^			this.time = 0;			\/\/ restart clip$/;"	r
time	js/three.js	/^			this.time = action.time;$/;"	r
time	js/three.js	/^			this.time = time;$/;"	r
time	js/three.js	/^			var time = this.time + deltaTime;$/;"	r
time	js/three.js	/^		this.time = 0;$/;"	r
time	js/three.min.js	/^2201;this._loopCount=-1;this._startTime=null;this.time=0;this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0}function Ye(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Jd(a,b){"string"===typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=b);this.value=a}function ke(){C.call(this);$/;"	r
time	js/three.min.js	/^f[g];b[a[g]]=c;f[c]=h;f.pop();e[c]=e[g];e.pop();d[c]=d[g];d.pop()}}});Object.assign(Xe.prototype,{play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=!1;this.enabled=!0;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},$/;"	r
timeDirection	js/three.js	/^				timeDirection = Math.sign( deltaTime ),$/;"	r
timeNext	js/three.js	/^				var timeNext = times[ i + 1 ];$/;"	r
timeOffset	js/three.js	/^					times[ i ] += timeOffset;$/;"	r
timeRunning	js/three.js	/^				var timeRunning = ( time - startTime ) * timeDirection;$/;"	r
timeScale	js/three.js	/^							this.timeScale = timeScale;$/;"	r
timeScale	js/three.js	/^					times[ i ] *= timeScale;$/;"	r
timeScale	js/three.js	/^				timeScale = this.timeScale;$/;"	r
timeScale	js/three.js	/^			deltaTime *= this.timeScale;$/;"	r
timeScale	js/three.js	/^			this._effectiveTimeScale = timeScale;$/;"	r
timeScale	js/three.js	/^			this.timeScale = action.timeScale;$/;"	r
timeScale	js/three.js	/^			this.timeScale = this._clip.duration \/ duration;$/;"	r
timeScale	js/three.js	/^			this.timeScale = timeScale;$/;"	r
timeScale	js/three.js	/^			var timeScale = 0;$/;"	r
timeScale	js/three.js	/^		this.timeScale = 1.0;$/;"	r
timeScale	js/three.js	/^		this.timeScale = 1;$/;"	r
timeScale	js/three.min.js	/^setDuration:function(a){this.timeScale=this._clip.duration\/a;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._effectiveTimeScale,0,a)},warp:function(a,b,c){var d=this._mixer,e=d.time,f=this._timeScaleInterpolant,g=this.timeScale;null===f&&(this._timeScaleInterpolant=f=d._lendControlInterpolant());d=f.parameterPositions;f=f.sampleValues;d[0]=e;d[1]=e+c;f[0]=a\/g;f[1]=b\/g;return this},stopWarping:function(){var a=$/;"	r
timeScaleInterpolant	js/three.js	/^			var timeScaleInterpolant = this._timeScaleInterpolant;$/;"	r
times	js/three.js	/^						destTracks.push( new trackType( trackName, times, values ) );$/;"	r
times	js/three.js	/^						times, values$/;"	r
times	js/three.js	/^						tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );$/;"	r
times	js/three.js	/^						var times = [];$/;"	r
times	js/three.js	/^					AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );$/;"	r
times	js/three.js	/^					var times = [];$/;"	r
times	js/three.js	/^				AnimationUtils.flattenJSON( json.keys, times, values, 'value' );$/;"	r
times	js/three.js	/^				json.times = times;$/;"	r
times	js/three.js	/^				this.times = AnimationUtils.arraySlice( times, 0, writeIndex );$/;"	r
times	js/three.js	/^				this.times = AnimationUtils.arraySlice( times, from, to );$/;"	r
times	js/three.js	/^				times = AnimationUtils.sortedArray( times, 1, order );$/;"	r
times	js/three.js	/^				var times = [], values = [];$/;"	r
times	js/three.js	/^				var times = [];$/;"	r
times	js/three.js	/^				var times = this.times;$/;"	r
times	js/three.js	/^			var times = interpolant.parameterPositions,$/;"	r
times	js/three.js	/^			var times = this.times,$/;"	r
times	js/three.js	/^		flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {$/;"	r
times	js/three.js	/^		this.times = AnimationUtils.convertArray( times, this.TimeBufferType );$/;"	r
times	js/three.js	/^	function BooleanKeyframeTrack( name, times, values ) {$/;"	r
times	js/three.js	/^	function ColorKeyframeTrack( name, times, values, interpolation ) {$/;"	r
times	js/three.js	/^	function KeyframeTrack( name, times, values, interpolation ) {$/;"	r
times	js/three.js	/^	function KeyframeTrackConstructor( name, times, values, interpolation ) {$/;"	r
times	js/three.js	/^	function NumberKeyframeTrack( name, times, values, interpolation ) {$/;"	r
times	js/three.js	/^	function QuaternionKeyframeTrack( name, times, values, interpolation ) {$/;"	r
times	js/three.js	/^	function StringKeyframeTrack( name, times, values, interpolation ) {$/;"	r
times	js/three.js	/^	function VectorKeyframeTrack( name, times, values, interpolation ) {$/;"	r
times	js/three.min.js	/^case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length\/this.times.length},shift:function(a){if(0!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]+=a;return this},scale:function(a){if(1!==a)for(var b=this.times,c=0,d=b.length;c!==d;++c)b[c]*=a;return this},trim:function(a,b){for(var c=this.times,d=c.length,e=0,f=d-1;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;++f;if(0!==e||f!==d)e>=f&&(f=Math.max(f,$/;"	r
times	js/three.min.js	/^tb.prototype=ab;ab.constructor=tb;Object.assign(tb,{parse:function(a){if(void 0===a.type)throw Error("track type undefined, can not parse");var b=tb._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];S.flattenJSON(a.keys,c,d,"value");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:S.convertArray(a.times,Array),values:S.convertArray(a.values,$/;"	r
tl	js/three.js	/^							for ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {$/;"	r
tmax	js/three.js	/^				tmax = ( box.max.x - origin.x ) * invdirx;$/;"	r
tmax	js/three.js	/^				tmax = ( box.min.x - origin.x ) * invdirx;$/;"	r
tmin	js/three.js	/^				tmin = ( box.max.x - origin.x ) * invdirx;$/;"	r
tmin	js/three.js	/^				tmin = ( box.min.x - origin.x ) * invdirx;$/;"	r
tmin	js/three.js	/^			var tmin, tmax, tymin, tymax, tzmin, tzmax;$/;"	r
tmp	js/three.js	/^				var tmp = this.clone( uniforms[ u ] );$/;"	r
tmp	js/three.js	/^			p0 = tmp;$/;"	r
tmp	js/three.js	/^			p3 = tmp;$/;"	r
tmp	js/three.js	/^			tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;$/;"	r
tmp	js/three.js	/^			tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;$/;"	r
tmp	js/three.js	/^			var tmp, m = this.elements;$/;"	r
tmp	js/three.js	/^			var tmp;$/;"	r
tmp	js/three.js	/^	var tmp = new Vector3();$/;"	r
tmpGeo	js/three.js	/^			var tmpGeo = new Geometry();$/;"	r
tmpHole1	js/three.js	/^								tmpHole1 = hole.slice( holeIndex );$/;"	r
tmpHole1	js/three.js	/^					tmpHole1, tmpHole2;$/;"	r
tmpHole2	js/three.js	/^								tmpHole2 = hole.slice( 0, holeIndex + 1 );$/;"	r
tmpHoles	js/three.js	/^				tmpHoles = newShapeHoles[ i ];$/;"	r
tmpHoles	js/three.js	/^			var tmpHoles;$/;"	r
tmpPath	js/three.js	/^					var tmpPath = inSubpaths[ i ];$/;"	r
tmpPath	js/three.js	/^				tmpPath = subPaths[ 0 ];$/;"	r
tmpPath	js/three.js	/^				tmpPath = subPaths[ i ];$/;"	r
tmpPoints	js/three.js	/^				tmpPoints = tmpPath.getPoints();$/;"	r
tmpPoints	js/three.js	/^			var tmpPoints;$/;"	r
tmpShape	js/three.js	/^					var tmpShape = new Shape();$/;"	r
tmpShape	js/three.js	/^				tmpShape = new Shape();$/;"	r
tmpShape	js/three.js	/^				tmpShape = newShapes[ i ].s;$/;"	r
tmpShape1	js/three.js	/^								tmpShape1 = shape.slice( 0, shapeIndex + 1 );$/;"	r
tmpShape1	js/three.js	/^					tmpShape1, tmpShape2,$/;"	r
tmpShape2	js/three.js	/^								tmpShape2 = shape.slice( shapeIndex );$/;"	r
to	js/three.js	/^				to = nKeys - 1;$/;"	r
toArray	js/three.js	/^		toArray: function ( array, offset ) {$/;"	r
toArray	js/three.min.js	/^0);this.r=a[b];this.g=a[b+1];this.b=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+2]=this.b;return a},toJSON:function(){return this.getHex()}});var E={common:{diffuse:{value:new H(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ta},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},$/;"	r
toChange	js/three.js	/^				var toChange = [];$/;"	r
toJSON	js/three.js	/^		toJSON: function ( clip ) {$/;"	r
toJSON	js/three.js	/^		toJSON: function ( meta ) {$/;"	r
toJSON	js/three.js	/^		toJSON: function ( track ) {$/;"	r
toJSON	js/three.js	/^		toJSON: function () {$/;"	r
toJSON	js/three.js	/^	Fog.prototype.toJSON = function ( \/* meta *\/ ) {$/;"	r
toJSON	js/three.js	/^	FogExp2.prototype.toJSON = function ( \/* meta *\/ ) {$/;"	r
toJSON	js/three.js	/^	ShaderMaterial.prototype.toJSON = function ( meta ) {$/;"	r
toJSON	js/three.min.js	/^[],c=a.tracks,d=1\/(a.fps||1),e=0,f=c.length;e!==f;++e)b.push(tb.parse(c[e]).scale(d));return new ra(a.name,a.duration,b)},toJSON:function(a){var b=[],c=a.tracks;a={name:a.name,duration:a.duration,tracks:b};for(var d=0,e=c.length;d!==e;++d)b.push(tb.toJSON(c[d]));return a},CreateFromMorphTargetSequence:function(a,b,c,d){for(var e=b.length,f=[],g=0;g<e;g++){var h=[],k=[];h.push((g+e-1)%e,g,(g+1)%e);k.push(0,1,0);var l=S.getKeyframeOrder(h),h=S.sortedArray(h,1,l),k=S.sortedArray(k,1,l);d||0!==h[0]||$/;"	r
toJSON	js/three.min.js	/^a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this},toJSON:function(a){var b=w.prototype.toJSON.call(this,a);null!==this.background&&(b.object.background=this.background.toJSON(a));null!==this.fog&&(b.object.fog=this.fog.toJSON());return b}});Xd.prototype=Object.assign(Object.create(w.prototype),{constructor:Xd,isLensFlare:!0,copy:function(a){w.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=$/;"	r
toJSON	js/three.min.js	/^b+"' parameter is undefined.");else if("shading"===b)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c?!0:!1;else{var d=this[b];void 0===d?console.warn("THREE."+this.type+": '"+b+"' is not a property of this material."):d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]="overdraw"===b?Number(c):c}}},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=$/;"	r
toJSON	js/three.min.js	/^g&&(this.faceVertexUvs[1]=g)},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length\/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==n[b])return n[b];n[b]=q.length;q.push(a.getHex());return n[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==r[b])return r[b];r[b]=m.length\/2;m.push(a.x,a.y);return r[b]}var e=$/;"	r
toJSON	js/three.min.js	/^return this},toJSON:function(a){var b=void 0===a||"string"===typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];var c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};$/;"	r
toJSON	js/three.min.js	/^tb.prototype=ab;ab.constructor=tb;Object.assign(tb,{parse:function(a){if(void 0===a.type)throw Error("track type undefined, can not parse");var b=tb._getTrackTypeForValueTypeName(a.type);if(void 0===a.times){var c=[],d=[];S.flattenJSON(a.keys,c,d,"value");a.times=c;a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)},toJSON:function(a){var b=a.constructor;if(void 0!==b.toJSON)b=b.toJSON(a);else{var b={name:a.name,times:S.convertArray(a.times,Array),values:S.convertArray(a.values,$/;"	r
toJSON	js/three.min.js	/^this.uniforms=Ea.clone(a.uniforms);this.defines=a.defines;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this};Aa.prototype.toJSON=function(a){a=Q.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};Object.assign(hb.prototype,$/;"	r
toJSON	js/three.min.js	/^this.view.height,e=e+this.view.offsetX\/c*f,c=e+this.view.width\/c*f,a=a-this.view.offsetY\/b*d,b=a-this.view.height\/b*d;this.projectionMatrix.makeOrthographic(e,c,a,b,this.near,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;null!==this.view&&(a.object.view=Object.assign({},this.view));return a}});Object.assign(Oa.prototype,$/;"	r
toJSON	js/three.min.js	/^this;var a=new C,b=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h,k=0,l=0,q=b.length;l<q;l++){h=b[l]*e;for(var n=0;n<e;n++)g[k++]=f[h++]}a.addAttribute(d,new O(g,e))}return a},toJSON:function(){var a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};a.uuid=this.uuid;a.type=this.type;""!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters;for(var c in b)void 0!==b[c]&&$/;"	r
toNonIndexed	js/three.js	/^		toNonIndexed: function () {$/;"	r
toShapes	js/three.js	/^		toShapes: function ( isCCW, noHoles ) {$/;"	r
toShapesNoHoles	js/three.js	/^			function toShapesNoHoles( inSubpaths ) {$/;"	r
toVector3	js/three.js	/^		toVector3: function ( optionalResult ) {$/;"	r
toVector3	js/three.min.js	/^b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new p(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}});Object.assign(Pd.prototype,{set:function(a){this.mask=1<<a|0},enable:function(a){this.mask=this.mask|1<<a|0},toggle:function(a){this.mask^=1<<a|0},disable:function(a){this.mask&=~(1<<a|0)},test:function(a){return 0!==(this.mask&a.mask)}});$/;"	r
toggle	js/three.js	/^		toggle: function ( channel ) {$/;"	r
toneMapping	js/three.js	/^				toneMapping: renderer.toneMapping,$/;"	r
toneMapping	js/three.js	/^		this.toneMapping = LinearToneMapping;$/;"	r
toneMappingExposure	js/three.js	/^		this.toneMappingExposure = 1.0;$/;"	r
toneMappingExposure	js/three.js	/^	var tonemapping_pars_fragment = "#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color \/ ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) \/ ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 \/ 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) \/ Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) \/ ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n";$/;"	r
toneMappingName	js/three.js	/^				toneMappingName = "Linear";$/;"	r
toneMappingName	js/three.js	/^				toneMappingName = "OptimizedCineon";$/;"	r
toneMappingName	js/three.js	/^				toneMappingName = "Reinhard";$/;"	r
toneMappingName	js/three.js	/^				toneMappingName = "Uncharted2";$/;"	r
toneMappingName	js/three.js	/^		var toneMappingName;$/;"	r
toneMappingWhitePoint	js/three.js	/^		this.toneMappingWhitePoint = 1.0;$/;"	r
tonemapping_fragment	js/three.js	/^		tonemapping_fragment: tonemapping_fragment,$/;"	r
tonemapping_fragment	js/three.js	/^	var tonemapping_fragment = "#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n";$/;"	r
tonemapping_pars_fragment	js/three.js	/^		tonemapping_pars_fragment: tonemapping_pars_fragment,$/;"	r
tonemapping_pars_fragment	js/three.js	/^	var tonemapping_pars_fragment = "#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color \/ ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) \/ ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 \/ 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) \/ Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) \/ ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n";$/;"	r
top	js/three.js	/^				this.shadow.camera.top = value;$/;"	r
top	js/three.js	/^				top = near * Math.tan($/;"	r
top	js/three.js	/^			data.object.top = this.top;$/;"	r
top	js/three.js	/^			scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );$/;"	r
top	js/three.js	/^			this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );$/;"	r
top	js/three.js	/^			this.top = source.top;$/;"	r
top	js/three.js	/^			var top = cy + dy;$/;"	r
top	js/three.js	/^		this.top = top;$/;"	r
tos	js/three.js	/^								if ( sIdx !== s2Idx )	toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );$/;"	r
tos	js/three.min.js	/^!1;a=[];e=0;for(f=l.length;e<f;e++)h[e]=[];e=0;for(f=l.length;e<f;e++)for(g=m[e],t=0;t<g.length;t++){k=g[t];n=!0;for(v=0;v<l.length;v++)d(k.p,l[v].p)&&(e!==v&&a.push({froms:e,tos:v,hole:t}),n?(n=!1,h[v].push(k)):p=!0);n&&h[e].push(k)}0<a.length&&(p||(m=h))}p=0;for(e=l.length;p<e;p++)for(h=l[p].s,b.push(h),a=m[p],f=0,g=a.length;f<g;f++)h.holes.push(a[f].h);return b}});Object.assign(de.prototype,{isFont:!0,generateShapes:function(a,b,c){void 0===b&&(b=100);void 0===c&&(c=4);var d=this.data;a=String(a).split("");$/;"	r
totalSize	js/three.js	/^					totalSize: { value: 2 }$/;"	r
trace	js/three.js	/^				trace = m11 + m22 + m33,$/;"	r
track	js/three.js	/^				var track = this.tracks[ i ];$/;"	r
track	js/three.js	/^				var track = tracks[ i ],$/;"	r
trackName	js/three.js	/^						PropertyBinding.create( root, trackName, path ),$/;"	r
trackName	js/three.js	/^					trackName = track.name,$/;"	r
trackName	js/three.js	/^				trackName = propBinding.path,$/;"	r
trackName	js/three.js	/^			var addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {$/;"	r
trackRe	js/three.js	/^			var trackRe = new RegExp( ''$/;"	r
trackType	js/three.js	/^			var trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );$/;"	r
trackType	js/three.js	/^			var trackType = track.constructor;$/;"	r
tracks	js/GLTFLoader.js	/^				var tracks = [];$/;"	r
tracks	js/three.js	/^				clipTracks = clip.tracks;$/;"	r
tracks	js/three.js	/^				jsonTracks = json.tracks,$/;"	r
tracks	js/three.js	/^				tracks = action._clip.tracks,$/;"	r
tracks	js/three.js	/^			var tracks = [],$/;"	r
tracks	js/three.js	/^			var tracks = [];$/;"	r
tracks	js/three.js	/^			var tracks = this.tracks, duration = 0;$/;"	r
tracks	js/three.js	/^		this.tracks = tracks;$/;"	r
tracks	js/three.js	/^		var tracks = clip.tracks,$/;"	r
tracks	js/three.min.js	/^c)}function Hd(a,b,c,d){sb.call(this,a,b,c,d)}function tb(a,b,c,d){sb.apply(this,a,b,c,d)}function ra(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=R.generateUUID();0>this.duration&&this.resetDuration();this.optimize()}function Id(a){this.manager=void 0!==a?a:wa;this.textures={}}function ae(a){this.manager=void 0!==a?a:wa}function gc(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}}function be(a){"boolean"===typeof a&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),$/;"	r
tracks	js/three.min.js	/^{_bindAction:function(a,b){var c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings;a=a._interpolants;var g=c.uuid,h=this._bindingsByRootAndName,k=h[g];void 0===k&&(k={},h[g]=k);for(h=0;h!==e;++h){var l=d[h],m=l.name,n=k[m];if(void 0===n){n=f[h];if(void 0!==n){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,g,m));continue}n=new je(pa.create(c,m,b&&b._propertyBindings[h].binding.parsedPath),l.ValueTypeName,l.getValueSize());++n.referenceCount;this._addInactiveBinding(n,$/;"	r
transform	js/three.js	/^			urlModifier = transform;$/;"	r
transformDirection	js/three.js	/^		transformDirection: function ( m ) {$/;"	r
transformDirection	js/three.min.js	/^a.getInverse(b.projectionMatrix));return this.applyMatrix4(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x\/=a.x;this.y\/=a.y;this.z\/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=$/;"	r
transformUv	js/three.js	/^		transformUv: function ( uv ) {$/;"	r
translate	js/three.js	/^			return function translate( x, y, z ) {$/;"	r
translate	js/three.js	/^		translate: function ( distance, axis ) {$/;"	r
translate	js/three.js	/^		translate: function ( offset ) {$/;"	r
translate	js/three.js	/^		translate: function ( tx, ty ) {$/;"	r
translate	js/three.js	/^		translate: function () {$/;"	r
translate	js/three.min.js	/^a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});Object.assign(Da.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new Na;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).getCenter(d);for(var e=c=0,f=b.length;e<f;e++)c=Math.max(c,$/;"	r
translate	js/three.min.js	/^k=c[7];c[0]=b*d+a*g;c[3]=b*e+a*h;c[6]=b*f+a*k;c[1]=-a*d+b*g;c[4]=-a*e+b*h;c[7]=-a*f+b*k;return this},translate:function(a,b){var c=this.elements;c[0]+=a*c[2];c[3]+=a*c[5];c[6]+=a*c[8];c[1]+=b*c[2];c[4]+=b*c[5];c[7]+=b*c[8];return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;9>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a,b){void 0===b&&(b=0);for(var c=0;9>c;c++)this.elements[c]=a[c+b];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);var c=$/;"	r
translate	js/three.min.js	/^this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius}});Object.assign(za.prototype,{set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=$/;"	r
translate	js/three.min.js	/^translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}});Object.assign(ld.prototype,{set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,$/;"	r
translateOnAxis	js/three.js	/^			return function translateOnAxis( axis, distance ) {$/;"	r
translateOnAxis	js/three.js	/^		translateOnAxis: function () {$/;"	r
translateX	js/three.js	/^			return function translateX( distance ) {$/;"	r
translateX	js/three.js	/^		translateX: function () {$/;"	r
translateY	js/three.js	/^			return function translateY( distance ) {$/;"	r
translateY	js/three.js	/^		translateY: function () {$/;"	r
translateZ	js/three.js	/^			return function translateZ( distance ) {$/;"	r
translateZ	js/three.js	/^		translateZ: function () {$/;"	r
translateZ	js/three.min.js	/^b)}}(),translateZ:function(){var a=new p(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new K;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new K,b=new p;return function(c,d,e){c.isVector3?b.copy(c):b.set(c,d,e);this.isCamera?a.lookAt(this.position,b,this.up):a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),$/;"	r
translation	js/GLTFLoader.js	/^		translation: 'position',$/;"	r
transparent	js/GLTFLoader.js	/^					transparent: params.transparent$/;"	r
transparent	js/GLTFLoader.js	/^				materialParams.transparent = false;$/;"	r
transparent	js/GLTFLoader.js	/^				materialParams.transparent = true;$/;"	r
transparent	js/GLTFLoader.js	/^			transparent: false,$/;"	r
transparent	js/three.js	/^				material.transparent = true;$/;"	r
transparent	js/three.js	/^			if ( json.transparent !== undefined ) material.transparent = json.transparent;$/;"	r
transparent	js/three.js	/^			if ( this.transparent === true ) data.transparent = this.transparent;$/;"	r
transparent	js/three.js	/^			material.transparent === true$/;"	r
transparent	js/three.js	/^			this.transparent = source.transparent;$/;"	r
transparent	js/three.js	/^			transparent: transparent,$/;"	r
transparent	js/three.js	/^			var transparentObjects = currentRenderList.transparent;$/;"	r
transparent	js/three.js	/^		this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );$/;"	r
transparent	js/three.js	/^		this.transparent = false;$/;"	r
transparent	js/three.js	/^		this.transparent = true;$/;"	r
transparent	js/three.js	/^		var transparent = [];$/;"	r
transparent	js/three.min.js	/^b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function Sf(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Tf(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,k){var l=a[b];void 0===l?(l={id:e.id,object:e,geometry:f,material:g,program:g.program,renderOrder:e.renderOrder,z:h,group:k},a[b]=l):(l.id=e.id,l.object=e,l.geometry=f,l.material=g,l.program=g.program,l.renderOrder=e.renderOrder,$/;"	r
transparentObjects	js/three.js	/^			var transparentObjects = currentRenderList.transparent;$/;"	r
transpose	js/three.js	/^		transpose: function () {$/;"	r
transpose	js/three.min.js	/^b)throw Error("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");console.warn("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");return this.identity()}b=1\/p;a[0]=n*b;a[1]=(f*q-c*e)*b;a[2]=(k*e-f*h)*b;a[3]=m*b;a[4]=(c*d-f*l)*b;a[5]=(f*g-k*d)*b;a[6]=r*b;a[7]=(e*l-q*d)*b;a[8]=(h*d-e*g)*b;return this},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},getNormalMatrix:function(a){return this.setFromMatrix4(a).getInverse(this).transpose()},$/;"	r
transpose	js/three.min.js	/^this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],q=a[6],n=a[10],m=a[14];return a[3]*(+e*h*q-d*k*q-e*g*n+c*k*n+d*g*m-c*h*m)+a[7]*(+b*h*m-b*k*n+e*f*n-d*f*m+d*k*l-e*h*l)+a[11]*(+b*k*q-b*g*m-e*f*q+c*f*m+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*q+b*g*n+d*f*q-c*f*n+c*h*l)},transpose:function(){var a=this.elements;var b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},setPosition:function(a){var b=$/;"	r
transposeIntoArray	js/three.js	/^		transposeIntoArray: function ( r ) {$/;"	r
transposeIntoArray	js/three.min.js	/^transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},setUvTransform:function(a,b,c,d,e,f,g){var h=Math.cos(e);e=Math.sin(e);this.set(c*h,c*e,-c*(h*f+e*g)+f+a,-d*e,d*h,-d*(-e*f+h*g)+g+b,0,0,1)},scale:function(a,b){var c=this.elements;c[0]*=a;c[3]*=a;c[6]*=a;c[1]*=b;c[4]*=b;c[7]*=b;return this},rotate:function(a){var b=Math.cos(a);a=Math.sin(a);var c=this.elements,d=c[0],e=c[3],f=c[6],g=c[1],h=c[4],$/;"	r
traverse	js/three.js	/^			function traverse( node ) {$/;"	r
traverse	js/three.js	/^		traverse: function ( callback ) {$/;"	r
traverseAncestors	js/three.js	/^		traverseAncestors: function ( callback ) {$/;"	r
traverseVisible	js/three.js	/^		traverseVisible: function ( callback ) {$/;"	r
triangles	js/three.js	/^			\/\/console.log( "triangles",triangles, triangles.length );$/;"	r
triangles	js/three.js	/^			var triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); \/\/ True returns indices for points of spooled shape$/;"	r
triangulate	js/three.js	/^			return function triangulate( contour, indices ) {$/;"	r
triangulate	js/three.js	/^		triangulate: ( function () {$/;"	r
triangulate	js/three.min.js	/^Oc.prototype.constructor=Oc;Vb.prototype=Object.create(C.prototype);Vb.prototype.constructor=Vb;var Ha={area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},triangulate:function(){return function(a,b){var c=a.length;if(3>c)return null;var d=[],e=[],f=[],g;if(0<Ha.area(a))for(g=0;g<c;g++)e[g]=g;else for(g=0;g<c;g++)e[g]=c-1-g;var h=2*c;for(g=c-1;2<c;){if(0>=h--){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");break}var k=$/;"	r
triangulateShape	js/three.js	/^		triangulateShape: function ( contour, holes ) {$/;"	r
triangulateShape	js/three.min.js	/^!1;break a}}}y=!0}}if(y){d.push([a[e[k]],a[e[g]],a[e[l]]]);f.push([e[k],e[g],e[l]]);k=g;for(l=g+1;l<c;k++,l++)e[k]=e[l];c--;h=2*c}}return b?f:d}}(),triangulateShape:function(a,b){function c(a){var b=a.length;2<b&&a[b-1].equals(a[0])&&a.pop()}function d(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function e(a,b,c,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-c.x,l=e.y-c.y,m=a.x-c.x,n=a.y-c.y,q=h*k-g*l,p=h*m-g*n;if(Math.abs(q)>Number.EPSILON){if(0<$/;"	r
trim	js/three.js	/^		trim: function ( startTime, endTime ) {$/;"	r
trim	js/three.js	/^		trim: function () {$/;"	r
trim	js/three.min.js	/^1]);this.duration=a},trim:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},optimize:function(){for(var a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}});Object.assign(Id.prototype,{load:function(a,b,c,d){var e=this;(new Ja(e.manager)).load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setTextures:function(a){this.textures=a},parse:function(a){function b(a){void 0===c[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a);$/;"	r
true	js/GLTFLoader.js	/^							material.flatShading = true;$/;"	r
true	js/GLTFLoader.js	/^							material.needsUpdate = true;$/;"	r
true	js/GLTFLoader.js	/^							material.skinning = true;$/;"	r
true	js/GLTFLoader.js	/^							node.matrixAutoUpdate = true;$/;"	r
true	js/GLTFLoader.js	/^					isObjectURL = true;$/;"	r
true	js/GLTFLoader.js	/^				material.extensions.derivatives = true;$/;"	r
true	js/GLTFLoader.js	/^				material.isGLTFSpecularGlossinessMaterial = true;$/;"	r
true	js/GLTFLoader.js	/^				material.morphNormals = true;$/;"	r
true	js/GLTFLoader.js	/^				materialParams.transparent = true;$/;"	r
true	js/GLTFLoader.js	/^				nodes[ joints[ i ] ].isBone = true;$/;"	r
true	js/GLTFLoader.js	/^				target.isGLTFSpecularGlossinessMaterial = true;$/;"	r
true	js/GLTFLoader.js	/^		material.morphTargets = true;$/;"	r
true	js/three.js	/^									ambiguous = true;$/;"	r
true	js/three.js	/^								keep = true;$/;"	r
true	js/three.js	/^							direction_eq = true;$/;"	r
true	js/three.js	/^							failedCuts[ cutKey ] = true;			\/\/ remember failure$/;"	r
true	js/three.js	/^							levels[ i ].object.visible = true;$/;"	r
true	js/three.js	/^							this.paused = true;$/;"	r
true	js/three.js	/^						direction_eq = true;$/;"	r
true	js/three.js	/^						edgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );$/;"	r
true	js/three.js	/^						if ( this.clampWhenFinished ) this.paused = true;$/;"	r
true	js/three.js	/^						texture.needsUpdate = true;$/;"	r
true	js/three.js	/^						var hole_unassigned = true;$/;"	r
true	js/three.js	/^						warned = true;$/;"	r
true	js/three.js	/^					attribute.needsUpdate = true;$/;"	r
true	js/three.js	/^					boneTexture.needsUpdate = true;$/;"	r
true	js/three.js	/^					if ( this.clampWhenFinished ) this.paused = true;$/;"	r
true	js/three.js	/^					isCube = true;$/;"	r
true	js/three.js	/^					levels[ 0 ].object.visible = true;$/;"	r
true	js/three.js	/^					material.needsUpdate = true;$/;"	r
true	js/three.js	/^					refreshLights = true;		\/\/ remains set until update done$/;"	r
true	js/three.js	/^					refreshMaterial = true;		\/\/ set to true on material change$/;"	r
true	js/three.js	/^					restore = true;$/;"	r
true	js/three.js	/^					texture.needsUpdate = true;$/;"	r
true	js/three.js	/^					this._setEndings( true, true, false );$/;"	r
true	js/three.js	/^					this.targetObject.matrixWorldNeedsUpdate = true;$/;"	r
true	js/three.js	/^					this.targetObject.needsUpdate = true;$/;"	r
true	js/three.js	/^					warned = true;$/;"	r
true	js/three.js	/^					} else keep = true;$/;"	r
true	js/three.js	/^				\/\/ assuming for LoopOnce atStart == atEnd == true$/;"	r
true	js/three.js	/^				\/\/, true$/;"	r
true	js/three.js	/^				attributes.normal.needsUpdate = true;$/;"	r
true	js/three.js	/^				capabilities[ id ] = true;$/;"	r
true	js/three.js	/^				colors.needsUpdate = true;$/;"	r
true	js/three.js	/^				force = true;$/;"	r
true	js/three.js	/^				forceClear = true;$/;"	r
true	js/three.js	/^				if ( json.opacity < 1 ) json.transparent = true;$/;"	r
true	js/three.js	/^				material.transparent = true;$/;"	r
true	js/three.js	/^				normal.needsUpdate = true;$/;"	r
true	js/three.js	/^				position.needsUpdate = true;$/;"	r
true	js/three.js	/^				refreshLights = true;$/;"	r
true	js/three.js	/^				refreshMaterial = true;$/;"	r
true	js/three.js	/^				refreshProgram = true;$/;"	r
true	js/three.js	/^				renderTarget.depthTexture.needsUpdate = true;$/;"	r
true	js/three.js	/^				scope.needsUpdate = true;$/;"	r
true	js/three.js	/^				texture.needsUpdate = true;$/;"	r
true	js/three.js	/^				textureProperties.__webglInit = true;$/;"	r
true	js/three.js	/^				this.normalsNeedUpdate = true;$/;"	r
true	js/three.js	/^				uniform.needsUpdate = true;$/;"	r
true	js/three.js	/^				updateBuffers = true;$/;"	r
true	js/three.js	/^				var hasMaterial = true;$/;"	r
true	js/three.js	/^			_isContextLost = true;$/;"	r
true	js/three.js	/^			extrudeByPath = true;$/;"	r
true	js/three.js	/^			geometry.getAttribute( 'position' ).needsUpdate = true;$/;"	r
true	js/three.js	/^			if ( areaWeighted === undefined ) areaWeighted = true;$/;"	r
true	js/three.js	/^			if ( recursive === undefined ) recursive = true;$/;"	r
true	js/three.js	/^			if ( this.castShadow === true ) object.castShadow = true;$/;"	r
true	js/three.js	/^			if ( this.dithering === true ) data.dithering = true;$/;"	r
true	js/three.js	/^			if ( this.morphTargets === true ) data.morphTargets = true;$/;"	r
true	js/three.js	/^			if ( this.receiveShadow === true ) object.receiveShadow = true;$/;"	r
true	js/three.js	/^			if ( this.skinning === true ) data.skinning = true;$/;"	r
true	js/three.js	/^			isAnimating = true;$/;"	r
true	js/three.js	/^			isLoading = true;$/;"	r
true	js/three.js	/^			material.transparent === true$/;"	r
true	js/three.js	/^			position.needsUpdate = true;$/;"	r
true	js/three.js	/^			renderingShadows = true;$/;"	r
true	js/three.js	/^			this.clear( false, true, false );$/;"	r
true	js/three.js	/^			this.enabled = true;$/;"	r
true	js/three.js	/^			this.isPlaying = true;$/;"	r
true	js/three.js	/^			this.lightDistance.visible = true;$/;"	r
true	js/three.js	/^			this.matrixWorldNeedsUpdate = true;$/;"	r
true	js/three.js	/^			this.needsUpdate = true;$/;"	r
true	js/three.js	/^			this.normalsNeedUpdate = true;$/;"	r
true	js/three.js	/^			this.running = true;$/;"	r
true	js/three.js	/^			this.verticesNeedUpdate = true;$/;"	r
true	js/three.js	/^			this.view.enabled = true;$/;"	r
true	js/three.js	/^			var programChange = true;$/;"	r
true	js/three.js	/^			var valid = true;$/;"	r
true	js/three.js	/^		materials.isMultiMaterial = true;$/;"	r
true	js/three.js	/^		position.needsUpdate = true;$/;"	r
true	js/three.js	/^		this.autoClear = true;$/;"	r
true	js/three.js	/^		this.autoClearColor = true;$/;"	r
true	js/three.js	/^		this.autoClearDepth = true;$/;"	r
true	js/three.js	/^		this.autoClearStencil = true;$/;"	r
true	js/three.js	/^		this.autoUpdate = true; \/\/ checked by the renderer$/;"	r
true	js/three.js	/^		this.autoUpdate = true;$/;"	r
true	js/three.js	/^		this.closed = true;$/;"	r
true	js/three.js	/^		this.colorWrite = true;$/;"	r
true	js/three.js	/^		this.depthTest = true;$/;"	r
true	js/three.js	/^		this.depthWrite = true;$/;"	r
true	js/three.js	/^		this.enabled = true;				\/\/ false -> zero effective weight$/;"	r
true	js/three.js	/^		this.flipY = true;$/;"	r
true	js/three.js	/^		this.fog = true;$/;"	r
true	js/three.js	/^		this.frustumCulled = true;$/;"	r
true	js/three.js	/^		this.generateMipmaps = true;$/;"	r
true	js/three.js	/^		this.hasPlaybackControl = true;$/;"	r
true	js/three.js	/^		this.lights = true;$/;"	r
true	js/three.js	/^		this.matrixAutoUpdate = true;$/;"	r
true	js/three.js	/^		this.needsUpdate = true;$/;"	r
true	js/three.js	/^		this.normalized = normalized === true;$/;"	r
true	js/three.js	/^		this.renderReverseSided = true;$/;"	r
true	js/three.js	/^		this.renderSingleSided = true;$/;"	r
true	js/three.js	/^		this.sizeAttenuation = true;$/;"	r
true	js/three.js	/^		this.sortObjects = true;$/;"	r
true	js/three.js	/^		this.transparent = true;$/;"	r
true	js/three.js	/^		this.visible = true;$/;"	r
true	js/three.js	/^		this.zeroSlopeAtEnd		= true;		\/\/ clips for start, loop and end$/;"	r
true	js/three.js	/^		this.zeroSlopeAtStart 	= true;		\/\/ for smooth interpolation w\/o separate$/;"	r
true	js/three.js	/^		var haveDiagnostics = true;$/;"	r
true	js/three.js	/^		var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;$/;"	r
true	js/three.js	/^		var runnable = true;$/;"	r
true	js/three.js	/^	ArcCurve.prototype.isArcCurve = true;$/;"	r
true	js/three.js	/^	CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;$/;"	r
true	js/three.js	/^	CompressedTexture.prototype.isCompressedTexture = true;$/;"	r
true	js/three.js	/^	CubeTexture.prototype.isCubeTexture = true;$/;"	r
true	js/three.js	/^	CubicBezierCurve.prototype.isCubicBezierCurve = true;$/;"	r
true	js/three.js	/^	CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;$/;"	r
true	js/three.js	/^	DataTexture.prototype.isDataTexture = true;$/;"	r
true	js/three.js	/^	DepthTexture.prototype.isDepthTexture = true;$/;"	r
true	js/three.js	/^	EllipseCurve.prototype.isEllipseCurve = true;$/;"	r
true	js/three.js	/^	Fog.prototype.isFog = true;$/;"	r
true	js/three.js	/^	FogExp2.prototype.isFogExp2 = true;$/;"	r
true	js/three.js	/^	ImmediateRenderObject.prototype.isImmediateRenderObject = true;$/;"	r
true	js/three.js	/^	LineBasicMaterial.prototype.isLineBasicMaterial = true;$/;"	r
true	js/three.js	/^	LineCurve.prototype.isLineCurve = true;$/;"	r
true	js/three.js	/^	LineCurve3.prototype.isLineCurve3 = true;$/;"	r
true	js/three.js	/^	LineDashedMaterial.prototype.isLineDashedMaterial = true;$/;"	r
true	js/three.js	/^	MeshBasicMaterial.prototype.isMeshBasicMaterial = true;$/;"	r
true	js/three.js	/^	MeshDepthMaterial.prototype.isMeshDepthMaterial = true;$/;"	r
true	js/three.js	/^	MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;$/;"	r
true	js/three.js	/^	MeshLambertMaterial.prototype.isMeshLambertMaterial = true;$/;"	r
true	js/three.js	/^	MeshNormalMaterial.prototype.isMeshNormalMaterial = true;$/;"	r
true	js/three.js	/^	MeshPhongMaterial.prototype.isMeshPhongMaterial = true;$/;"	r
true	js/three.js	/^	MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;$/;"	r
true	js/three.js	/^	MeshStandardMaterial.prototype.isMeshStandardMaterial = true;$/;"	r
true	js/three.js	/^	MeshToonMaterial.prototype.isMeshToonMaterial = true;$/;"	r
true	js/three.js	/^	Object3D.DefaultMatrixAutoUpdate = true;$/;"	r
true	js/three.js	/^	PointsMaterial.prototype.isPointsMaterial = true;$/;"	r
true	js/three.js	/^	QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;$/;"	r
true	js/three.js	/^	QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;$/;"	r
true	js/three.js	/^	RawShaderMaterial.prototype.isRawShaderMaterial = true;$/;"	r
true	js/three.js	/^	ShaderMaterial.prototype.isShaderMaterial = true;$/;"	r
true	js/three.js	/^	ShadowMaterial.prototype.isShadowMaterial = true;$/;"	r
true	js/three.js	/^	SplineCurve.prototype.isSplineCurve = true;$/;"	r
true	js/three.js	/^	SpriteMaterial.prototype.isSpriteMaterial = true;$/;"	r
true	js/three.js	/^	WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;$/;"	r
tube	js/three.js	/^								data.tube,$/;"	r
tube	js/three.js	/^			tube: tube,$/;"	r
tube	js/three.js	/^		this.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );$/;"	r
tube	js/three.js	/^		this.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );$/;"	r
tube	js/three.js	/^		tube = tube || 0.4;$/;"	r
tube	js/three.js	/^	function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {$/;"	r
tube	js/three.js	/^	function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {$/;"	r
tube	js/three.js	/^	function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {$/;"	r
tube	js/three.js	/^	function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {$/;"	r
tube	js/three.min.js	/^1;u<=b;u++)for(n=1;n<=d;n++){var a=(d+1)*u+(n-1),c=(d+1)*u+n,e=(d+1)*(u-1)+n;x.push((d+1)*(u-1)+(n-1),a,e);x.push(a,c,e)}})();this.setIndex(x);this.addAttribute("position",new z(m,3));this.addAttribute("normal",new z(v,3));this.addAttribute("uv",new z(t,2))}function Nc(a,b,c,d,e,f,g){L.call(this);this.type="TorusKnotGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");$/;"	r
tube	js/three.min.js	/^h.push(a,b,e);this.setIndex(h);this.addAttribute("position",new z(k,3));this.addAttribute("normal",new z(l,3));this.addAttribute("uv",new z(q,2))}function Oc(a,b,c,d,e){L.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new Vb(a,b,c,d,e));this.mergeVertices()}function Vb(a,b,c,d,e){C.call(this);this.type="TorusBufferGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||$/;"	r
tube	js/three.min.js	/^this.fromBufferGeometry(new Ub(a,b,c,d,e,f));this.mergeVertices()}function Ub(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c\/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}C.call(this);this.type="TorusKnotBufferGeometry";this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],k=[],l=[],q=[],n,u=new p,m=new p,v=new p,t=new p,x=new p,y=new p,B=new p;for(n=0;n<=$/;"	r
tubularSegments	js/three.js	/^								data.tubularSegments,$/;"	r
tubularSegments	js/three.js	/^			tubularSegments: tubularSegments,$/;"	r
tubularSegments	js/three.js	/^		tubularSegments = Math.floor( tubularSegments ) || 64;$/;"	r
tubularSegments	js/three.js	/^		tubularSegments = Math.floor( tubularSegments ) || 6;$/;"	r
tubularSegments	js/three.js	/^		tubularSegments = tubularSegments || 64;$/;"	r
tubularSegments	js/three.js	/^		var bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );$/;"	r
tubularSegments	js/three.js	/^	function TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {$/;"	r
tubularSegments	js/three.js	/^	function TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {$/;"	r
tubularSegments	js/three.min.js	/^k.y,k.z);h.x=q.x+c*k.x;h.y=q.y+c*k.y;h.z=q.z+c*k.z;m.push(h.x,h.y,h.z)}}C.call(this);this.type="TubeBufferGeometry";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var g=a.computeFrenetFrames(b,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;var h=new p,k=new p,l=new D,q=new p,n,u,m=[],v=[],t=[],x=[];for(n=0;n<b;n++)f(n);f(!1===e?b:0);for(n=0;n<=b;n++)for(u=0;u<=d;u++)l.x=n\/b,l.y=u\/d,t.push(l.x,l.y);(function(){for(u=$/;"	r
tubularSegments	js/three.min.js	/^tubularSegments:b,radius:c,radialSegments:d,closed:e};void 0!==f&&console.warn("THREE.TubeGeometry: taper has been removed.");a=new Tb(a,b,c,d,e);this.tangents=a.tangents;this.normals=a.normals;this.binormals=a.binormals;this.fromBufferGeometry(a);this.mergeVertices()}function Tb(a,b,c,d,e){function f(e){q=a.getPointAt(e\/b,q);var f=g.normals[e];e=g.binormals[e];for(u=0;u<=d;u++){var l=u\/d*Math.PI*2,n=Math.sin(l),l=-Math.cos(l);k.x=l*f.x+n*e.x;k.y=l*f.y+n*e.y;k.z=l*f.z+n*e.z;k.normalize();v.push(k.x,$/;"	r
twoPi	js/three.js	/^				deltaAngle = twoPi;$/;"	r
twoPi	js/three.js	/^		var twoPi = Math.PI * 2;$/;"	r
twoPi	js/three.js	/^		while ( deltaAngle < 0 ) deltaAngle += twoPi;$/;"	r
twoPi	js/three.js	/^		while ( deltaAngle > twoPi ) deltaAngle -= twoPi;$/;"	r
tx	js/three.js	/^				min = tx;$/;"	r
tx	js/three.js	/^			var tx = Math.abs( tangents[ 0 ].x );$/;"	r
tx	js/three.js	/^			var tx = t * x, ty = t * y;$/;"	r
tx	js/three.js	/^			var tx = x - this.aX;$/;"	r
ty	js/three.js	/^				min = ty;$/;"	r
ty	js/three.js	/^			var ty = Math.abs( tangents[ 0 ].y );$/;"	r
ty	js/three.js	/^			var ty = y - this.aY;$/;"	r
ty	js/three.js	/^		setUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {$/;"	r
tymax	js/three.js	/^				tymax = ( box.max.y - origin.y ) * invdiry;$/;"	r
tymax	js/three.js	/^				tymax = ( box.min.y - origin.y ) * invdiry;$/;"	r
tymax	js/three.js	/^			if ( tymax < tmax || tmax !== tmax ) tmax = tymax;$/;"	r
tymin	js/three.js	/^				tymin = ( box.max.y - origin.y ) * invdiry;$/;"	r
tymin	js/three.js	/^				tymin = ( box.min.y - origin.y ) * invdiry;$/;"	r
tymin	js/three.js	/^			if ( tymin > tmin || tmin !== tmin ) tmin = tymin;$/;"	r
type	js/GLTFLoader.js	/^			texture.type = textureDef.type !== undefined ? WEBGL_TEXTURE_DATATYPES[ textureDef.type ] : THREE.UnsignedByteType;$/;"	r
type	js/three.js	/^							type: 'finished', action: this,$/;"	r
type	js/three.js	/^							type: 'loop', action: this, loopDelta: loopDelta$/;"	r
type	js/three.js	/^						texture.type = UnsignedInt248Type;$/;"	r
type	js/three.js	/^						texture.type = UnsignedShortType;$/;"	r
type	js/three.js	/^						type: 'finished', action: this,$/;"	r
type	js/three.js	/^						var type = attribute.type;$/;"	r
type	js/three.js	/^					\/\/ console.log("type", type, "bits", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);$/;"	r
type	js/three.js	/^					texture.type = texData.type;$/;"	r
type	js/three.js	/^					type = faces[ offset ++ ];$/;"	r
type	js/three.js	/^					type,$/;"	r
type	js/three.js	/^					type: 'BufferGeometry',$/;"	r
type	js/three.js	/^					type: 'Geometry',$/;"	r
type	js/three.js	/^					type: 'Material',$/;"	r
type	js/three.js	/^					type: 'MeshLambertMaterial'$/;"	r
type	js/three.js	/^					type: 'Object',$/;"	r
type	js/three.js	/^					type: 'Texture',$/;"	r
type	js/three.js	/^					type: attribute.array.constructor.name,$/;"	r
type	js/three.js	/^					type: index.array.constructor.name,$/;"	r
type	js/three.js	/^					var textureType = texture.type;$/;"	r
type	js/three.js	/^					var type = metadata.type;$/;"	r
type	js/three.js	/^				boundTexture.type = webglType;$/;"	r
type	js/three.js	/^				this.shadowMap.type = value;$/;"	r
type	js/three.js	/^				this.texture.type = value;$/;"	r
type	js/three.js	/^				type = gl.BYTE;$/;"	r
type	js/three.js	/^				type = gl.FLOAT;$/;"	r
type	js/three.js	/^				type = gl.INT;$/;"	r
type	js/three.js	/^				type = gl.SHORT;$/;"	r
type	js/three.js	/^				type = gl.UNSIGNED_BYTE;$/;"	r
type	js/three.js	/^				type = gl.UNSIGNED_INT;$/;"	r
type	js/three.js	/^				type = gl.UNSIGNED_SHORT;$/;"	r
type	js/three.js	/^				type: type,$/;"	r
type	js/three.js	/^			console.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );$/;"	r
type	js/three.js	/^			data.type = this.type;$/;"	r
type	js/three.js	/^			json.type = track.ValueTypeName; \/\/ mandatory$/;"	r
type	js/three.js	/^			object.type = this.type;$/;"	r
type	js/three.js	/^			this.type = source.type;$/;"	r
type	js/three.js	/^			type = value.type;$/;"	r
type	js/three.js	/^			type: 'Fog',$/;"	r
type	js/three.js	/^			type: 'FogExp2',$/;"	r
type	js/three.js	/^			var type = gl.FLOAT;$/;"	r
type	js/three.js	/^		convertArray: function ( array, type, forceClone ) {$/;"	r
type	js/three.js	/^		this.type = 'AmbientLight';$/;"	r
type	js/three.js	/^		this.type = 'ArcCurve';$/;"	r
type	js/three.js	/^		this.type = 'Audio';$/;"	r
type	js/three.js	/^		this.type = 'AudioListener';$/;"	r
type	js/three.js	/^		this.type = 'Bone';$/;"	r
type	js/three.js	/^		this.type = 'Box3Helper';$/;"	r
type	js/three.js	/^		this.type = 'BoxBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'BoxGeometry';$/;"	r
type	js/three.js	/^		this.type = 'BufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'Camera';$/;"	r
type	js/three.js	/^		this.type = 'CatmullRomCurve3';$/;"	r
type	js/three.js	/^		this.type = 'CircleBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'CircleGeometry';$/;"	r
type	js/three.js	/^		this.type = 'ConeBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'ConeGeometry';$/;"	r
type	js/three.js	/^		this.type = 'CubeCamera';$/;"	r
type	js/three.js	/^		this.type = 'CubicBezierCurve';$/;"	r
type	js/three.js	/^		this.type = 'CubicBezierCurve3';$/;"	r
type	js/three.js	/^		this.type = 'Curve';$/;"	r
type	js/three.js	/^		this.type = 'CurvePath';$/;"	r
type	js/three.js	/^		this.type = 'CylinderBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'CylinderGeometry';$/;"	r
type	js/three.js	/^		this.type = 'DirectionalLight';$/;"	r
type	js/three.js	/^		this.type = 'DodecahedronBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'DodecahedronGeometry';$/;"	r
type	js/three.js	/^		this.type = 'EdgesGeometry';$/;"	r
type	js/three.js	/^		this.type = 'EllipseCurve';$/;"	r
type	js/three.js	/^		this.type = 'ExtrudeBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'ExtrudeGeometry';$/;"	r
type	js/three.js	/^		this.type = 'Font';$/;"	r
type	js/three.js	/^		this.type = 'Geometry';$/;"	r
type	js/three.js	/^		this.type = 'Group';$/;"	r
type	js/three.js	/^		this.type = 'HemisphereLight';$/;"	r
type	js/three.js	/^		this.type = 'IcosahedronBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'IcosahedronGeometry';$/;"	r
type	js/three.js	/^		this.type = 'InstancedBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'LOD';$/;"	r
type	js/three.js	/^		this.type = 'LatheBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'LatheGeometry';$/;"	r
type	js/three.js	/^		this.type = 'Light';$/;"	r
type	js/three.js	/^		this.type = 'Line';$/;"	r
type	js/three.js	/^		this.type = 'LineBasicMaterial';$/;"	r
type	js/three.js	/^		this.type = 'LineCurve';$/;"	r
type	js/three.js	/^		this.type = 'LineCurve3';$/;"	r
type	js/three.js	/^		this.type = 'LineDashedMaterial';$/;"	r
type	js/three.js	/^		this.type = 'LineLoop';$/;"	r
type	js/three.js	/^		this.type = 'LineSegments';$/;"	r
type	js/three.js	/^		this.type = 'Material';$/;"	r
type	js/three.js	/^		this.type = 'Mesh';$/;"	r
type	js/three.js	/^		this.type = 'MeshBasicMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshDepthMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshDistanceMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshLambertMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshNormalMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshPhongMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshPhysicalMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshStandardMaterial';$/;"	r
type	js/three.js	/^		this.type = 'MeshToonMaterial';$/;"	r
type	js/three.js	/^		this.type = 'Object3D';$/;"	r
type	js/three.js	/^		this.type = 'OctahedronBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'OctahedronGeometry';$/;"	r
type	js/three.js	/^		this.type = 'OrthographicCamera';$/;"	r
type	js/three.js	/^		this.type = 'ParametricBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'ParametricGeometry';$/;"	r
type	js/three.js	/^		this.type = 'Path';$/;"	r
type	js/three.js	/^		this.type = 'PerspectiveCamera';$/;"	r
type	js/three.js	/^		this.type = 'PlaneBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'PlaneGeometry';$/;"	r
type	js/three.js	/^		this.type = 'PlaneHelper';$/;"	r
type	js/three.js	/^		this.type = 'PointLight';$/;"	r
type	js/three.js	/^		this.type = 'Points';$/;"	r
type	js/three.js	/^		this.type = 'PointsMaterial';$/;"	r
type	js/three.js	/^		this.type = 'PolyhedronBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'PolyhedronGeometry';$/;"	r
type	js/three.js	/^		this.type = 'QuadraticBezierCurve';$/;"	r
type	js/three.js	/^		this.type = 'QuadraticBezierCurve3';$/;"	r
type	js/three.js	/^		this.type = 'RawShaderMaterial';$/;"	r
type	js/three.js	/^		this.type = 'RectAreaLight';$/;"	r
type	js/three.js	/^		this.type = 'RingBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'RingGeometry';$/;"	r
type	js/three.js	/^		this.type = 'Scene';$/;"	r
type	js/three.js	/^		this.type = 'ShaderMaterial';$/;"	r
type	js/three.js	/^		this.type = 'ShadowMaterial';$/;"	r
type	js/three.js	/^		this.type = 'Shape';$/;"	r
type	js/three.js	/^		this.type = 'ShapeBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'ShapeGeometry';$/;"	r
type	js/three.js	/^		this.type = 'ShapePath';$/;"	r
type	js/three.js	/^		this.type = 'SkinnedMesh';$/;"	r
type	js/three.js	/^		this.type = 'SphereBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'SphereGeometry';$/;"	r
type	js/three.js	/^		this.type = 'SplineCurve';$/;"	r
type	js/three.js	/^		this.type = 'SpotLight';$/;"	r
type	js/three.js	/^		this.type = 'Sprite';$/;"	r
type	js/three.js	/^		this.type = 'SpriteMaterial';$/;"	r
type	js/three.js	/^		this.type = 'StereoCamera';$/;"	r
type	js/three.js	/^		this.type = 'TetrahedronBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TetrahedronGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TextBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TextGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TorusBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TorusGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TorusKnotBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TorusKnotGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TubeBufferGeometry';$/;"	r
type	js/three.js	/^		this.type = 'TubeGeometry';$/;"	r
type	js/three.js	/^		this.type = 'WireframeGeometry';$/;"	r
type	js/three.js	/^		this.type = 'catmullrom';$/;"	r
type	js/three.js	/^		this.type = PCFShadowMap;$/;"	r
type	js/three.js	/^		this.type = type !== undefined ? type : UnsignedByteType;$/;"	r
type	js/three.js	/^		type: {$/;"	r
type	js/three.js	/^		var type, bytesPerElement;$/;"	r
type	js/three.js	/^	function WebGLShader( gl, type, string ) {$/;"	r
type	js/three.min.js	/^!1;this.setValues(a)}function Aa(a){Q.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}";this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions={derivatives:!1,fragDepth:!1,$/;"	r
type	js/three.min.js	/^1E3));void 0!==d&&a.offset.fromArray(d);void 0!==e&&("repeat"===e[0]&&(a.wrapS=1E3),"mirror"===e[0]&&(a.wrapS=1002),"repeat"===e[1]&&(a.wrapT=1E3),"mirror"===e[1]&&(a.wrapT=1002));void 0!==h&&(a.anisotropy=h);b=R.generateUUID();k[b]=a;return b}var k={},l={uuid:R.generateUUID(),type:"MeshLambertMaterial"},m;for(m in e){var n=e[m];switch(m){case "DbgColor":case "DbgIndex":case "opticalDensity":case "illumination":break;case "DbgName":l.name=n;break;case "blending":l.blending=a[n];break;case "colorAmbient":case "mapAmbient":console.warn("THREE.Loader.createMaterial:",$/;"	r
type	js/three.min.js	/^5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type="IcosahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Lc(a,b){L.call(this);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Sb(a,b));this.mergeVertices()}function Sb(a,b){var c=(1+Math.sqrt(5))\/2,d=1\/c;sa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,$/;"	r
type	js/three.min.js	/^b){w.call(this);this.type="Light";this.color=new H(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0}function ud(a,b,c){fa.call(this,a,c);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(w.DefaultUp);this.updateMatrix();this.groundColor=new H(b)}function rb(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new D(512,512);this.map=null;this.matrix=new K}function vd(){rb.call(this,new Y(50,1,.5,500))}function wd(a,b,c,d,e,f){fa.call(this,a,b);this.type="SpotLight";$/;"	r
type	js/three.min.js	/^b*e+c*f+d*f*e}}}function la(a){ca.call(this);this.type="CatmullRomCurve3";2>a.length&&console.warn("THREE.CatmullRomCurve3: Points array needs at least two entries.");this.points=a||[];this.closed=!1;this.curveType="centripetal"}function qc(a,b,c,d){ca.call(this);this.type="CubicBezierCurve3";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function rc(a,b,c){ca.call(this);this.type="QuadraticBezierCurve3";this.v0=a;this.v1=b;this.v2=c}function Cb(a,b){ca.call(this);this.type="LineCurve3";this.v1=a;this.v2=$/;"	r
type	js/three.min.js	/^b,c,d));this.mergeVertices()}function gb(a,b,c,d){C.call(this);this.type="PlaneBufferGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a\/2,f=b\/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,k=a\/c,l=b\/d,q=[],n=[],u=[],r=[];for(a=0;a<h;a++){var m=a*l-f;for(b=0;b<g;b++)n.push(b*k-e,-m,0),u.push(0,0,1),r.push(b\/c),r.push(1-a\/d)}for(a=0;a<d;a++)for(b=0;b<c;b++)e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,q.push(b+g*a,e,h),q.push(e,f,h);this.setIndex(q);this.addAttribute("position",$/;"	r
type	js/three.min.js	/^b}function id(a,b,c,d,e,f){Sa.call(this,a,b,c,c,d,e,f);this.type="ArcCurve"}function ef(a){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);this.type="catmullrom";this.closed=!0}function ff(a){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);this.type="catmullrom"}function re(a){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");la.call(this,a);$/;"	r
type	js/three.min.js	/^d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b);this.type="DodecahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Mc(a,b,c,d,e,f){L.call(this);this.type="TubeGeometry";this.parameters={path:a,$/;"	r
type	js/three.min.js	/^e);this.setIndex(f);this.addAttribute("position",new z(g,3));this.addAttribute("normal",new z(h,3));this.addAttribute("uv",new z(k,2))}function Za(a,b){L.call(this);this.type="ExtrudeGeometry";this.parameters={shapes:a,options:b};this.fromBufferGeometry(new Ga(a,b));this.mergeVertices()}function Ga(a,b){"undefined"!==typeof a&&(C.call(this),this.type="ExtrudeBufferGeometry",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeVertexNormals())}function Pc(a,b){L.call(this);this.type="TextGeometry";$/;"	r
type	js/three.min.js	/^f instanceof Uint16Array?d=a.UNSIGNED_SHORT:f instanceof Int16Array?d=a.SHORT:f instanceof Uint32Array?d=a.UNSIGNED_INT:f instanceof Int32Array?d=a.INT:f instanceof Int8Array?d=a.BYTE:f instanceof Uint8Array&&(d=a.UNSIGNED_BYTE);b[e]={buffer:h,type:d,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}else e.version<c.version&&(f=c,h=f.array,g=f.updateRange,a.bindBuffer(d,e.buffer),!1===f.dynamic?a.bufferData(d,h,a.STATIC_DRAW):-1===g.count?a.bufferSubData(d,0,h):0===g.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):$/;"	r
type	js/three.min.js	/^f,q);this.setIndex(g);this.addAttribute("position",new z(h,3));this.addAttribute("normal",new z(k,3));this.addAttribute("uv",new z(l,2))}function Sc(a,b,c,d){L.call(this);this.type="LatheGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new Yb(a,b,c,d));this.mergeVertices()}function Yb(a,b,c,d){C.call(this);this.type="LatheBufferGeometry";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=R.clamp(d,$/;"	r
type	js/three.min.js	/^function Qc(a,b,c,d,e,f,g){L.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new kb(a,b,c,d,e,f,g));this.mergeVertices()}function kb(a,b,c,d,e,f,g){C.call(this);this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==$/;"	r
type	js/three.min.js	/^function dc(a){Aa.call(this,a);this.type="RawShaderMaterial"}function La(a){Q.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new H(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=$/;"	r
type	js/three.min.js	/^function jb(a,b){sa.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type="OctahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Kc(a,b){L.call(this);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Rb(a,b));this.mergeVertices()}function Rb(a,b){var c=(1+Math.sqrt(5))\/2;sa.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,$/;"	r
type	js/three.min.js	/^g),(l!==c-1||h<Math.PI)&&v.push(d,e,g);this.setIndex(v);this.addAttribute("position",new z(t,3));this.addAttribute("normal",new z(x,3));this.addAttribute("uv",new z(y,2))}function Rc(a,b,c,d,e,f){L.call(this);this.type="RingGeometry";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new Xb(a,b,c,d,e,f));this.mergeVertices()}function Xb(a,b,c,d,e,f){C.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:a,$/;"	r
type	js/three.min.js	/^h.push(a,b,e);this.setIndex(h);this.addAttribute("position",new z(k,3));this.addAttribute("normal",new z(l,3));this.addAttribute("uv",new z(q,2))}function Oc(a,b,c,d,e){L.call(this);this.type="TorusGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new Vb(a,b,c,d,e));this.mergeVertices()}function Vb(a,b,c,d,e){C.call(this);this.type="TorusBufferGeometry";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||$/;"	r
type	js/three.min.js	/^heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Vc(a,b,c,d){L.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new bc(a,b,c,d));this.mergeVertices()}function bc(a,b,c,d){C.call(this);this.type="CircleBufferGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=[],f=[],g=[],h=[],k,l=new p,q=new D;f.push(0,$/;"	r
type	js/three.min.js	/^k.y,k.z);h.x=q.x+c*k.x;h.y=q.y+c*k.y;h.z=q.z+c*k.z;m.push(h.x,h.y,h.z)}}C.call(this);this.type="TubeBufferGeometry";this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;var g=a.computeFrenetFrames(b,e);this.tangents=g.tangents;this.normals=g.normals;this.binormals=g.binormals;var h=new p,k=new p,l=new D,q=new p,n,u,m=[],v=[],t=[],x=[];for(n=0;n<b;n++)f(n);f(!1===e?b:0);for(n=0;n<=b;n++)for(u=0;u<=d;u++)l.x=n\/b,l.y=u\/d,t.push(l.x,l.y);(function(){for(u=$/;"	r
type	js/three.min.js	/^new z(c,3))}function lb(a,b,c,d,e,f,g,h){L.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new Ra(a,b,c,d,e,f,g,h));this.mergeVertices()}function Ra(a,b,c,d,e,f,g,h){function k(c){var e,f=new D,k=new p,r=0,t=!0===c?a:b,B=!0===c?1:-1;var w=v;for(e=1;e<=d;e++)n.push(0,x*B,0),u.push(0,B,0),m.push(.5,.5),v++;var z=v;for(e=0;e<=d;e++){var C=e\/d*h+g,M=Math.cos(C),$/;"	r
type	js/three.min.js	/^new z(e,3));this.addAttribute("normal",new z(f,3));this.addAttribute("uv",new z(g,2))}function Hc(a,b,c,d){L.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new sa(a,b,c,d));this.mergeVertices()}function sa(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){b*=3;c.x=a[b+0];c.y=a[b+1];c.z=a[b+2]}function g(a,b,c,d){0>d&&1===a.x&&(k[b]=a.x-1);0===c.x&&0===c.z&&(k[b]=d\/2\/Math.PI+.5)}C.call(this);this.type="PolyhedronBufferGeometry";$/;"	r
type	js/three.min.js	/^new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(r,2))}function va(a){Q.call(this);this.type="MeshBasicMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.lights=this.morphTargets=this.skinning=$/;"	r
type	js/three.min.js	/^return this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},$/;"	r
type	js/three.min.js	/^return this},toJSON:function(a){var b=void 0===a||"string"===typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];var c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};$/;"	r
type	js/three.min.js	/^skinning:B});u[c]=y}var A=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=1;this.renderSingleSided=this.renderReverseSided=!0;this.render=function(b,c,d){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==b.length){var n=a.state;n.disable(a.context.BLEND);n.buffers.color.setClear(1,1,1,1);n.buffers.depth.setTest(!0);n.setScissorTest(!1);for(var u,r=0,B=b.length;r<B;r++){var v=b[r];u=v.shadow;var I=v&&v.isPointLight;if(void 0===u)console.warn("THREE.WebGLShadowMap:",$/;"	r
type	js/three.min.js	/^this.normalizeNormals()}function Ic(a,b){L.call(this);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new Qb(a,b));this.mergeVertices()}function Qb(a,b){sa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type="TetrahedronBufferGeometry";this.parameters={radius:a,detail:b}}function Jc(a,b){L.call(this);this.type="OctahedronGeometry";this.parameters={radius:a,detail:b};this.fromBufferGeometry(new jb(a,b));this.mergeVertices()}$/;"	r
type	js/three.min.js	/^this.setValues(a)}function oa(a,b,c){if(1===c)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new P(a,b);w.call(this);this.type="Line";this.geometry=void 0!==a?a:new C;this.material=void 0!==b?b:new T({color:16777215*Math.random()})}function P(a,b){oa.call(this,a,b);this.type="LineSegments"}function rd(a,b){oa.call(this,a,b);this.type="LineLoop"}function Ba(a){Q.call(this);this.type="PointsMaterial";this.color=new H(16777215);$/;"	r
type	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
type	js/three.min.js	/^this.type="QuadraticBezierCurve";this.v0=a;this.v1=b;this.v2=c}function Zc(a){hc.call(this);this.type="Path";this.currentPoint=new D;a&&this.fromPoints(a)}function zb(){Zc.apply(this,arguments);this.type="Shape";this.holes=[]}function ce(){this.type="ShapePath";this.subPaths=[];this.currentPath=null}function de(a){this.type="Font";this.data=a}function Te(a){this.manager=void 0!==a?a:wa}function ee(a){this.manager=void 0!==a?a:wa}function Ue(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;$/;"	r
type	js/three.min.js	/^this.type="catmullrom"}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Number.isInteger&&(Number.isInteger=function(a){return"number"===typeof a&&isFinite(a)&&Math.floor(a)===a});void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});!1==="name"in Function.prototype&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(\/^\\s*function\\s*([^\\(\\s]*)\/)[1]}});void 0===Object.assign&&function(){Object.assign=function(a){if(void 0===$/;"	r
type	js/three.min.js	/^this;var a=new C,b=this.index.array,c=this.attributes,d;for(d in c){for(var e=c[d],f=e.array,e=e.itemSize,g=new f.constructor(b.length*e),h,k=0,l=0,q=b.length;l<q;l++){h=b[l]*e;for(var n=0;n<e;n++)g[k++]=f[h++]}a.addAttribute(d,new O(g,e))}return a},toJSON:function(){var a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};a.uuid=this.uuid;a.type=this.type;""!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters;for(var c in b)void 0!==b[c]&&$/;"	r
type	js/three.min.js	/^t}}function Y(a,b,c,d){Ka.call(this);this.type="PerspectiveCamera";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function nd(a){Y.call(this);this.cameras=a||[]}function og(a){function b(){if(null!==d&&d.isPresenting){var b=d.getEyeParameters("left"),e=b.renderWidth,b=b.renderHeight;u=a.getPixelRatio();n=a.getSize();a.setDrawingBufferSize(2*$/;"	r
type	js/three.min.js	/^y+=w})();!1===f&&(0<a&&k(!0),0<b&&k(!1));this.setIndex(q);this.addAttribute("position",new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(m,2))}function Tc(a,b,c,d,e,f,g){lb.call(this,0,a,b,c,d,e,f,g);this.type="ConeGeometry";this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function Uc(a,b,c,d,e,f,g){Ra.call(this,0,a,b,c,d,e,f,g);this.type="ConeBufferGeometry";this.parameters={radius:a,height:b,radialSegments:c,$/;"	r
type	js/three.min.js	/^{metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},q=[],n={},m=[],r={};for(g=0;g<this.faces.length;g++){var p=this.faces[g],t=void 0!==this.faceVertexUvs[0][g],x=0<p.normal.length(),y=0<p.vertexNormals.length,B=$/;"	r
typeName	js/three.js	/^	function PropertyMixer( binding, typeName, valueSize ) {$/;"	r
typedArray	js/three.js	/^				var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );$/;"	r
typedArray	js/three.js	/^				var typedArray = new TYPED_ARRAYS[ index.type ]( index.array );$/;"	r
tz	js/three.js	/^			var tz = Math.abs( tangents[ 0 ].z );$/;"	r
tzmax	js/three.js	/^				tzmax = ( box.max.z - origin.z ) * invdirz;$/;"	r
tzmax	js/three.js	/^				tzmax = ( box.min.z - origin.z ) * invdirz;$/;"	r
tzmax	js/three.js	/^			if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;$/;"	r
tzmin	js/three.js	/^				tzmin = ( box.max.z - origin.z ) * invdirz;$/;"	r
tzmin	js/three.js	/^				tzmin = ( box.min.z - origin.z ) * invdirz;$/;"	r
tzmin	js/three.js	/^			if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;$/;"	r
u	js/three.js	/^									u = uvLayer[ uvIndex * 2 ];$/;"	r
u	js/three.js	/^					if ( snip( contour, u, v, w, nv, verts ) ) {$/;"	r
u	js/three.js	/^					u = v; if ( nv <= u ) u = 0; \/* previous *\/$/;"	r
u	js/three.js	/^					var u = segmentLength === 0 ? 0 : 1 - diff \/ segmentLength;$/;"	r
u	js/three.js	/^					var u = x \/ radialSegments;$/;"	r
u	js/three.js	/^				u = i \/ segments;$/;"	r
u	js/three.js	/^				var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;$/;"	r
u	js/three.js	/^				var u = azimuth( vertex ) \/ 2 \/ Math.PI + 0.5;$/;"	r
u	js/three.js	/^				var u = i \/ tubularSegments * arc;$/;"	r
u	js/three.js	/^				var u = ix \/ widthSegments;$/;"	r
u	js/three.js	/^				var u = j \/ slices;$/;"	r
u	js/three.js	/^				var u = x \/ radialSegments;$/;"	r
u	js/three.js	/^				var u, v, w;$/;"	r
u	js/three.js	/^			function snip( contour, u, v, w, n, verts ) {$/;"	r
u	js/three.js	/^			var u = i \/ tubularSegments * p * Math.PI * 2;$/;"	r
u	js/three.js	/^			var u = seq[ i ],$/;"	r
u	js/three.js	/^			var u = seq[ i ];$/;"	r
u	js/three.js	/^		var u = this.map[ name ];$/;"	r
u	js/three.min.js	/^.4;c=Math.floor(c)||8;d=Math.floor(d)||6;e=e||2*Math.PI;var f=[],g=[],h=[],k=[],l=new p,q=new p,n=new p,u,m;for(u=0;u<=c;u++)for(m=0;m<=d;m++){var v=m\/d*e,t=u\/c*Math.PI*2;q.x=(a+b*Math.cos(t))*Math.cos(v);q.y=(a+b*Math.cos(t))*Math.sin(v);q.z=b*Math.sin(t);g.push(q.x,q.y,q.z);l.x=a*Math.cos(v);l.y=a*Math.sin(v);n.subVectors(q,l).normalize();h.push(n.x,n.y,n.z);k.push(m\/d);k.push(u\/c)}for(u=1;u<=c;u++)for(m=1;m<=d;m++)a=(d+1)*(u-1)+m-1,b=(d+1)*(u-1)+m,e=(d+1)*u+m,f.push((d+1)*u+m-1,a,e),f.push(a,b,$/;"	r
u	js/three.min.js	/^[],l=[],q=[],n=[],u=0,r=0;g("z","y","x",-1,-1,c,b,a,f,e,0);g("z","y","x",1,-1,c,b,-a,f,e,1);g("x","z","y",1,1,a,c,b,d,f,2);g("x","z","y",1,-1,a,c,-b,d,f,3);g("x","y","z",1,-1,a,b,c,d,e,4);g("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.addAttribute("position",new z(l,3));this.addAttribute("normal",new z(q,3));this.addAttribute("uv",new z(n,2))}function zc(a,b,c,d){L.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new gb(a,$/;"	r
u	js/three.min.js	/^a+" should be loaded with THREE.ObjectLoader instead.");return}if("scene"===d.toLowerCase()){console.error("THREE.JSONLoader: "+a+" should be loaded with THREE.SceneLoader instead.");return}}c=e.parse(c,f);b(c.geometry,c.materials)},c,d)},setTexturePath:function(a){this.texturePath=a},parse:function(){return function(a,b){void 0!==a.data&&(a=a.data);a.scale=void 0!==a.scale?1\/a.scale:1;var c=new L,d=a,e,f,g,h=d.faces;var k=d.vertices;var l=d.normals,m=d.colors;var n=d.scale;var u=0;if(void 0!==d.uvs){for(e=$/;"	r
u	js/three.min.js	/^a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){function b(a,b,d,e){var f=void 0!==g?[q[a].clone(),q[b].clone(),q[d].clone()]:[],u=void 0!==h?[c.colors[a].clone(),c.colors[b].clone(),c.colors[d].clone()]:[];e=new Oa(a,b,d,f,u,e);c.faces.push(e);void 0!==k&&c.faceVertexUvs[0].push([n[a].clone(),n[b].clone(),n[d].clone()]);void 0!==l&&c.faceVertexUvs[1].push([m[a].clone(),m[b].clone(),m[d].clone()])}var c=this,d=null!==a.index?a.index.array:void 0,e=a.attributes,f=e.position.array,$/;"	r
u	js/three.min.js	/^c.skinIndices.length!==c.vertices.length)&&console.warn("When skinning, number of vertices ("+c.vertices.length+"), skinIndices ("+c.skinIndices.length+"), and skinWeights ("+c.skinWeights.length+") should match.");g=a;h=g.scale;if(void 0!==g.morphTargets)for(d=0,r=g.morphTargets.length;d<r;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=g.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,m=g.morphTargets[d].vertices,u=0,k=m.length;u<k;u+=3)n=new p,n.x=m[u]*h,n.y=$/;"	r
u	js/three.min.js	/^c;for(var n=c.cameras,u=0,r=n.length;u<r;u++){var m=n[u];if(h.layers.test(m.layers)){var v=m.bounds;aa.viewport(Q.set(v.x*W,v.y*ea,v.z*W,v.w*ea).multiplyScalar(P));q(h,b,m,l,k,g)}}}else Z=null,q(h,b,c,l,k,g)}}function q(a,b,c,d,e,f){a.onBeforeRender(M,b,c,d,e,f);a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld);a.normalMatrix.getNormalMatrix(a.modelViewMatrix);if(a.isImmediateRenderObject){aa.setMaterial(e);var h=u(c,b.fog,e,a);L="";g(a,h,e)}else M.renderBufferDirect(c,b.fog,$/;"	r
u	js/three.min.js	/^d&&(k=u,l=b.customDistanceMaterial);l?k=l:(l=!1,c.morphTargets&&(h&&h.isBufferGeometry?l=h.morphAttributes&&h.morphAttributes.position&&0<h.morphAttributes.position.length:h&&h.isGeometry&&(l=h.morphTargets&&0<h.morphTargets.length)),b.isSkinnedMesh&&!1===c.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",b),b=b.isSkinnedMesh&&c.skinning,h=0,l&&(h|=1),b&&(h|=2),k=k[h]);a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length&&(h=$/;"	r
u	js/three.min.js	/^else{if(void 0===c.__webglInit)break a;a.deleteTexture(c.__webglTexture)}d.remove(b)}g.textures--}function u(b){b=b.target;b.removeEventListener("dispose",u);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==e.__webglTexture&&a.deleteTexture(e.__webglTexture);b.depthTexture&&b.depthTexture.dispose();if(b.isWebGLRenderTargetCube)for(e=0;6>e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),$/;"	r
u	js/three.min.js	/^new p,k=new p,l=new p,q=new p,n=new p,u,r,m=b+1;for(u=0;u<=c;u++){var t=u\/c;for(r=0;r<=b;r++){var x=r\/b,k=a(x,t,k);e.push(k.x,k.y,k.z);0<=x-1E-5?(l=a(x-1E-5,t,l),q.subVectors(k,l)):(l=a(x+1E-5,t,l),q.subVectors(l,k));0<=t-1E-5?(l=a(x,t-1E-5,l),n.subVectors(k,l)):(l=a(x,t+1E-5,l),n.subVectors(l,k));h.crossVectors(q,n).normalize();f.push(h.x,h.y,h.z);g.push(x,t)}}for(u=0;u<c;u++)for(r=0;r<b;r++)a=u*m+r+1,h=(u+1)*m+r+1,k=(u+1)*m+r,d.push(u*m+r,a,k),d.push(a,h,k);this.setIndex(d);this.addAttribute("position",$/;"	r
u	js/three.min.js	/^ua.state.spotShadowMap,c.spotShadowMatrix.value=ua.state.spotShadowMatrix,c.pointShadowMap.value=ua.state.pointShadowMap,c.pointShadowMatrix.value=ua.state.pointShadowMatrix);a=d.program.getUniforms();a=cb.seqWithValue(a.seq,c);d.uniformsList=a}function u(a,b,c,d){G=0;var e=Y.get(c);fa&&(Ud||a!==O)&&Fa.setState(c.clippingPlanes,c.clipIntersection,c.clipShadows,a,e,a===O&&c.id===U);!1===c.needsUpdate&&(void 0===e.program?c.needsUpdate=!0:c.fog&&e.fog!==b?c.needsUpdate=!0:c.lights&&e.lightsHash!==ua.state.hash?$/;"	r
uCamPos	js/three.js	/^					var uCamPos = p_uniforms.map.cameraPosition;$/;"	r
ud	js/three.min.js	/^b){w.call(this);this.type="Light";this.color=new H(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0}function ud(a,b,c){fa.call(this,a,c);this.type="HemisphereLight";this.castShadow=void 0;this.position.copy(w.DefaultUp);this.updateMatrix();this.groundColor=new H(b)}function rb(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new D(512,512);this.map=null;this.matrix=new K}function vd(){rb.call(this,new Y(50,1,.5,500))}function wd(a,b,c,d,e,f){fa.call(this,a,b);this.type="SpotLight";$/;"	r
uf	js/three.min.js	/^Be,d)}function uf(a,b,c){var d=c.allocTextureUnit();a.uniform1i(this.addr,d);c.setTextureCube(b||Ce,d)}function De(a,b){a.uniform2iv(this.addr,b)}function Ee(a,b){a.uniform3iv(this.addr,b)}function Fe(a,b){a.uniform4iv(this.addr,b)}function vf(a){switch(a){case 5126:return lf;case 35664:return nf;case 35665:return of;case 35666:return pf;case 35674:return qf;case 35675:return rf;case 35676:return sf;case 35678:case 36198:return tf;case 35680:return uf;case 5124:case 35670:return mf;case 35667:case 35671:return De;$/;"	r
ug	js/three.min.js	/^b.visible&&(g.visible=b.visible);void 0!==b.userData&&(g.userData=b.userData);if(void 0!==b.children)for(var h=b.children,k=0;k<h.length;k++)g.add(this.parseObject(h[k],c,d));if("LOD"===b.type)for(b=b.levels,h=0;h<b.length;h++){var k=b[h],l=g.getObjectByProperty("uuid",k.object);void 0!==l&&g.addLevel(l,k.distance)}return g}}()});var ug={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,$/;"	r
unbind	js/three.js	/^		unbind: function () {$/;"	r
unbind	js/three.min.js	/^c=a.length;b!==c;++b)a[b].bind()},unbind:function(){for(var a=this._bindings,b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}});Object.assign(pa,{Composite:Ve,create:function(a,b,c){return a&&a.isAnimationObjectGroup?new pa.Composite(a,b,c):new pa(a,b,c)},sanitizeNodeName:function(a){return a.replace(\/\\s\/g,"_").replace(\/[^\\w-]\/g,"")},parseTrackName:function(){var a=new RegExp("^"+\/((?:[\\w-]+[\\\/:])*)\/.source+\/([\\w-\\.]+)?\/.source+\/(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?\/.source+\/\\.([\\w-]+)(?:\\[(.+)\\])?\/.source+$/;"	r
unbind	js/three.min.js	/^this.resolvedProperty=f):this.propertyName=d;this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][b]}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(pa.prototype,{_getValue_unbound:pa.prototype.getValue,_setValue_unbound:pa.prototype.setValue});Object.assign(We.prototype,$/;"	r
uncache	js/three.js	/^		uncache: function () {$/;"	r
uncache	js/three.min.js	/^n[l];n[l]=n[m];n[m]=p}}}this.nCachedObjects_=b},uncache:function(){for(var a,b,c=this._objects,d=c.length,e=this.nCachedObjects_,f=this._indicesByUUID,g=this._bindings,h=g.length,k=0,l=arguments.length;k!==l;++k){b=arguments[k].uuid;var m=f[b];if(void 0!==m)if(delete f[b],m<e){var n=--e,p=c[n];b=--d;a=c[b];f[p.uuid]=m;c[m]=p;f[a.uuid]=n;c[n]=a;c.pop();for(var p=0,r=h;p!==r;++p){a=g[p];var v=a[b];a[m]=a[n];a[n]=v;a.pop()}}else for(b=--d,a=c[b],f[a.uuid]=m,c[m]=a,c.pop(),p=0,r=h;p!==r;++p)a=g[p],a[m]=$/;"	r
uncacheAction	js/three.js	/^		uncacheAction: function ( clip, optionalRoot ) {$/;"	r
uncacheAction	js/three.min.js	/^this._actionsByClip;for(d in b){var c=b[d].actionByRoot[a];void 0!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}var d=this._bindingsByRootAndName[a];if(void 0!==d)for(var e in d)a=d[e],a.restoreOriginalState(),this._removeInactiveBinding(a)},uncacheAction:function(a,b){a=this.existingAction(a,b);null!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}});Jd.prototype.clone=function(){return new Jd(void 0===this.value.clone?this.value:this.value.clone())};ke.prototype=Object.assign(Object.create(C.prototype),$/;"	r
uncacheClip	js/three.js	/^		uncacheClip: function ( clip ) {$/;"	r
uncacheRoot	js/three.js	/^		uncacheRoot: function ( root ) {$/;"	r
undefined	js/GLTFLoader.js	/^								&& geometry.attributes.uv2 === undefined$/;"	r
undefined	js/GLTFLoader.js	/^						var material = primitive.material === undefined$/;"	r
undefined	js/GLTFLoader.js	/^						var useFlatShading = geometry.attributes.normal === undefined;$/;"	r
undefined	js/GLTFLoader.js	/^						var useVertexColors = geometry.attributes.color !== undefined;$/;"	r
undefined	js/GLTFLoader.js	/^				return new THREE.AnimationClip( name, undefined, tracks );$/;"	r
undefined	js/three.js	/^					direct = undefined;$/;"	r
undefined	js/three.js	/^					knownObject = undefined;$/;"	r
undefined	js/three.js	/^				var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;$/;"	r
undefined	js/three.js	/^				}, undefined, function () {$/;"	r
undefined	js/three.js	/^				}, undefined, onError );$/;"	r
undefined	js/three.js	/^			manager = undefined;$/;"	r
undefined	js/three.js	/^			material.program = undefined;$/;"	r
undefined	js/three.js	/^			newShapes[ mainIdx ] = undefined;$/;"	r
undefined	js/three.js	/^			rotation.setFromQuaternion( quaternion, undefined, false );$/;"	r
undefined	js/three.js	/^			this.program = undefined;$/;"	r
undefined	js/three.js	/^			var materialIndex = undefined;$/;"	r
undefined	js/three.js	/^		this.castShadow = undefined;$/;"	r
undefined	js/three.js	/^		this.customUpdateCallback = undefined;$/;"	r
undefined	js/three.js	/^		this.index0AttributeName = undefined;$/;"	r
undefined	js/three.js	/^		this.maxInstancedCount = undefined;$/;"	r
undefined	js/three.js	/^		this.onStart = undefined;$/;"	r
undefined	js/three.js	/^		this.receiveShadow = undefined;$/;"	r
undefined	js/three.js	/^		this.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );$/;"	r
undefined	js/three.js	/^		var urlModifier = undefined;$/;"	r
undefined	js/three.js	/^	Texture.DEFAULT_IMAGE = undefined;$/;"	r
uniform	js/three.js	/^				uniforms.clippingPlanes = _clipping.uniform;$/;"	r
uniform	js/three.js	/^			uniform = { value: null, needsUpdate: false };$/;"	r
uniform	js/three.js	/^		this.uniform = uniform;$/;"	r
uniformObject	js/three.js	/^		container.map[ uniformObject.id ] = uniformObject;$/;"	r
uniforms	js/GLTFLoader.js	/^					uniforms: params.uniforms,$/;"	r
uniforms	js/GLTFLoader.js	/^				params.uniforms = uniforms;$/;"	r
uniforms	js/GLTFLoader.js	/^				var uniforms = THREE.UniformsUtils.clone( shader.uniforms );$/;"	r
uniforms	js/GLTFLoader.js	/^				var uniforms = material.uniforms;$/;"	r
uniforms	js/three.js	/^							uniforms: ShaderLib.cube.uniforms,$/;"	r
uniforms	js/three.js	/^						uniforms = {$/;"	r
uniforms	js/three.js	/^						uniforms: UniformsUtils.clone( shader.uniforms ),$/;"	r
uniforms	js/three.js	/^						uniforms: material.uniforms,$/;"	r
uniforms	js/three.js	/^					state.directional[ directionalLength ] = uniforms;$/;"	r
uniforms	js/three.js	/^					state.hemi[ hemiLength ] = uniforms;$/;"	r
uniforms	js/three.js	/^					state.point[ pointLength ] = uniforms;$/;"	r
uniforms	js/three.js	/^					state.rectArea[ rectAreaLength ] = uniforms;$/;"	r
uniforms	js/three.js	/^					state.spot[ spotLength ] = uniforms;$/;"	r
uniforms	js/three.js	/^					var uniforms = cache.get( light );$/;"	r
uniforms	js/three.js	/^				lights[ light.id ] = uniforms;$/;"	r
uniforms	js/three.js	/^				m_uniforms = materialProperties.shader.uniforms;$/;"	r
uniforms	js/three.js	/^				var uniforms;$/;"	r
uniforms	js/three.js	/^			ShaderLib.standard.uniforms,$/;"	r
uniforms	js/three.js	/^			if ( json.uniforms !== undefined ) material.uniforms = json.uniforms;$/;"	r
uniforms	js/three.js	/^			uniforms = {$/;"	r
uniforms	js/three.js	/^			uniforms: UniformsUtils.merge( [$/;"	r
uniforms	js/three.js	/^			uniforms: {$/;"	r
uniforms	js/three.js	/^			var uniforms = materialProperties.shader.uniforms;$/;"	r
uniforms	js/three.js	/^		data.uniforms = this.uniforms;$/;"	r
uniforms	js/three.js	/^		this.uniforms = UniformsUtils.clone( source.uniforms );$/;"	r
uniforms	js/three.js	/^		this.uniforms = {};$/;"	r
uniforms	js/three.js	/^		uniforms: UniformsUtils.merge( [$/;"	r
uniforms	js/three.min.js	/^d,e,a,f);a.onAfterRender(M,b,c,d,e,f)}function n(a,b,c){var d=Y.get(a);c=oa.getParameters(a,ua.state,z,b,Fa.numPlanes,Fa.numIntersection,c);var g=oa.getProgramCode(a,c),h=d.program,l=!0;if(void 0===h)a.addEventListener("dispose",e);else if(h.code!==g)f(a);else{if(void 0!==c.shaderID)return;l=!1}l&&(c.shaderID?(h=ib[c.shaderID],d.shader={name:a.type,uniforms:Ea.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}):d.shader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,$/;"	r
uniforms	js/three.min.js	/^this.uniforms=Ea.clone(a.uniforms);this.defines=a.defines;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.lights=a.lights;this.clipping=a.clipping;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this};Aa.prototype.toJSON=function(a){a=Q.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};Object.assign(hb.prototype,$/;"	r
uniformsList	js/three.js	/^			materialProperties.uniformsList = uniformsList;$/;"	r
uniforms_dst	js/three.js	/^			var uniforms_dst = {};$/;"	r
union	js/three.js	/^		union: function ( box ) {$/;"	r
union	js/three.min.js	/^this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}});sc.prototype=Object.create(da.prototype);sc.prototype.constructor=sc;var Lf=0;Object.assign(Q.prototype,ia.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+$/;"	r
unique	js/three.js	/^			this.vertices = unique;$/;"	r
unique	js/three.js	/^			var unique = [], changes = [];$/;"	r
unit	js/three.js	/^		var unit = renderer.allocTextureUnit();$/;"	r
units	js/three.js	/^					currentPolygonOffsetUnits = units;$/;"	r
units	js/three.js	/^			units = allocTexUnits( renderer, n );$/;"	r
unpackAlignment	js/three.js	/^			this.unpackAlignment = source.unpackAlignment;$/;"	r
unpackAlignment	js/three.js	/^		this.unpackAlignment = 1;$/;"	r
unpackAlignment	js/three.js	/^		this.unpackAlignment = 4;	\/\/ valid values: 1, 2, 4, 8 (see http:\/\/www.khronos.org\/opengles\/sdk\/docs\/man\/xhtml\/glPixelStorei.xml)$/;"	r
unproject	js/three.js	/^			return function unproject( camera ) {$/;"	r
unproject	js/three.js	/^		unproject: function () {$/;"	r
unprojectVector	js/three.js	/^		this.unprojectVector = function ( vector, camera ) {$/;"	r
unroll	js/three.js	/^			var unroll = '';$/;"	r
unrollLoops	js/three.js	/^	function unrollLoops( string ) {$/;"	r
unsubscribe_	js/three.js	/^		unsubscribe_: function ( path ) {$/;"	r
up	js/three.js	/^				var up = this.up;$/;"	r
up	js/three.js	/^		this.up = Object3D.DefaultUp.clone();$/;"	r
update	js/three.js	/^			return function update( camera ) {$/;"	r
update	js/three.js	/^			return function update() {$/;"	r
update	js/three.js	/^			update: update$/;"	r
update	js/three.js	/^			update: update,$/;"	r
update	js/three.js	/^		function update( attribute, bufferType ) {$/;"	r
update	js/three.js	/^		function update( geometry ) {$/;"	r
update	js/three.js	/^		function update( object ) {$/;"	r
update	js/three.js	/^		function update( object, geometry, material, program ) {$/;"	r
update	js/three.js	/^		function update() {$/;"	r
update	js/three.js	/^		return function update( object ) {$/;"	r
update	js/three.js	/^		return function update() {$/;"	r
update	js/three.js	/^		this.update = function ( renderer, scene ) {$/;"	r
update	js/three.js	/^		update: ( function () {$/;"	r
update	js/three.js	/^		update: function ( deltaTime ) {$/;"	r
update	js/three.js	/^		update: function ( light ) {$/;"	r
update	js/three.js	/^		update: function () {$/;"	r
update	js/three.js	/^	BoxHelper.prototype.update = ( function () {$/;"	r
update	js/three.js	/^	CameraHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	DirectionalLightHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	FaceNormalsHelper.prototype.update = ( function () {$/;"	r
update	js/three.js	/^	HemisphereLightHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	PointLightHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	RectAreaLightHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	SkeletonHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	SpotLightHelper.prototype.update = function () {$/;"	r
update	js/three.js	/^	VertexNormalsHelper.prototype.update = ( function () {$/;"	r
update	js/three.min.js	/^(a=a.data);return b[a.uuid]},remove:function(c){c.isInterleavedBufferAttribute&&(c=c.data);var d=b[c.uuid];d&&(a.deleteBuffer(d.buffer),delete b[c.uuid])},update:function(c,d){c.isInterleavedBufferAttribute&&(c=c.data);var e=b[c.uuid];if(void 0===e){var e=c.uuid,f=c.array,g=c.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW,h=a.createBuffer();a.bindBuffer(d,h);a.bufferData(d,f,g);c.onUploadCallback();d=a.FLOAT;f instanceof Float32Array?d=a.FLOAT:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):$/;"	r
update	js/three.min.js	/^0,1,-1);b.getAttribute("position").needsUpdate=!0}}();Ab.prototype=Object.create(P.prototype);Ab.prototype.constructor=Ab;Ab.prototype.update=function(){var a=new Na;return function(b){void 0!==b&&console.warn("THREE.BoxHelper: .update() has no longer arguments.");void 0!==this.object&&a.setFromObject(this.object);if(!a.isEmpty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=$/;"	r
update	js/three.min.js	/^a);this.lightPlane.lookAt(c);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(c);this.targetLine.scale.z=c.length()}}();ed.prototype=Object.create(P.prototype);ed.prototype.constructor=ed;ed.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=b.getAttribute("position"),$/;"	r
update	js/three.min.js	/^a.camera=this.camera.toJSON(!1).object;delete a.camera.matrix;return a}});vd.prototype=Object.assign(Object.create(rb.prototype),{constructor:vd,isSpotLightShadow:!0,update:function(a){var b=this.camera,c=2*R.RAD2DEG*a.angle,d=this.mapSize.width\/this.mapSize.height;a=a.distance||b.far;if(c!==b.fov||d!==b.aspect||a!==b.far)b.fov=c,b.aspect=d,b.far=a,b.updateProjectionMatrix()}});wd.prototype=Object.assign(Object.create(fa.prototype),{constructor:wd,isSpotLight:!0,copy:function(a){fa.prototype.copy.call(this,$/;"	r
update	js/three.min.js	/^b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),update:function(){var a=new p,b=new p;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,f=d.length;e<f;e++)if(c>=d[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<f;e++)d[e].object.visible=!1}}}(),toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.levels=$/;"	r
update	js/three.min.js	/^b;c++)if(a=this.bones[c])a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)},update:function(){var a=new K,b=new K;return function(){for(var c=this.bones,d=this.boneInverses,e=this.boneMatrices,f=this.boneTexture,g=0,h=c.length;g<h;g++)a.multiplyMatrices(c[g]?c[g].matrixWorld:b,d[g]),a.toArray(e,16*g);void 0!==f&&(f.needsUpdate=!0)}}(),clone:function(){return new Dc(this.bones,$/;"	r
update	js/three.min.js	/^copy:function(a){this.radius=a.radius;this.theta=a.theta;this.y=a.y;return this},setFromVector3:function(a){this.radius=Math.sqrt(a.x*a.x+a.z*a.z);this.theta=Math.atan2(a.x,a.z);this.y=a.y;return this}});ad.prototype=Object.create(w.prototype);ad.prototype.constructor=ad;ad.prototype.isImmediateRenderObject=!0;bd.prototype=Object.create(P.prototype);bd.prototype.constructor=bd;bd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){var d,e=["a","b","c"];this.object.updateMatrixWorld(!0);$/;"	r
update	js/three.min.js	/^d);delete e[a.id];if(k=f[a.id])b.remove(k),delete f[a.id];if(k=f[g.id])b.remove(k),delete f[g.id];c.geometries--}var e={},f={};return{get:function(a,b){var f=e[b.id];if(f)return f;b.addEventListener("dispose",d);b.isBufferGeometry?f=b:b.isGeometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new C).setFromObject(a)),f=b._bufferGeometry);e[b.id]=f;c.geometries++;return f},update:function(c){var d=c.index,e=c.attributes;null!==d&&b.update(d,a.ELEMENT_ARRAY_BUFFER);for(var f in e)b.update(e[f],$/;"	r
update	js/three.min.js	/^dd.prototype.constructor=dd;dd.prototype.update=function(){var a=new p,b=new p,c=new ta;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,f=f.faces,h=0,k=0,l=f.length;k<l;k++){var m=f[k],n=m.normal;a.copy(g[m.a]).add(g[m.b]).add(g[m.c]).divideScalar(3).applyMatrix4(d);b.copy(n).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);e.setXYZ(h,$/;"	r
update	js/three.min.js	/^lc.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(kd.prototype,{center:function(a){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");return this.getCenter(a)},empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(a){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)},$/;"	r
update	js/three.min.js	/^this.add(g);var h=new Y(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new p(0,0,1));this.add(h);var k=new Y(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new p(0,0,-1));this.add(k);this.renderTarget=new Eb(c,c,{format:1022,magFilter:1006,minFilter:1006});this.renderTarget.texture.name="CubeCamera";this.update=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,l=c.texture.generateMipmaps;c.texture.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);$/;"	r
updateArcLengths	js/three.js	/^		updateArcLengths: function () {$/;"	r
updateArcLengths	js/three.min.js	/^this.getPoint(d\/a);e+=f.distanceTo(c);b.push(e);c=f}return this.cacheArcLengths=b},updateArcLengths:function(){this.needsUpdate=!0;this.getLengths()},getUtoTmapping:function(a,b){var c=this.getLengths(),d=c.length;b=b?b:a*c[d-1];for(var e=0,f=d-1,g;e<=f;)if(a=Math.floor(e+(f-e)\/2),g=c[a]-b,0>g)e=a+1;else if(0<g)f=a-1;else{f=a;break}a=f;if(c[a]===b)return a\/(d-1);e=c[a];return(a+(b-e)\/(c[a+1]-e))\/(d-1)},getTangent:function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()},$/;"	r
updateBuffer	js/three.js	/^		function updateBuffer( buffer, attribute, bufferType ) {$/;"	r
updateBuffers	js/three.js	/^				updateBuffers = true;$/;"	r
updateBuffers	js/three.js	/^			var updateBuffers = false;$/;"	r
updateCubeMap	js/three.js	/^	CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {$/;"	r
updateFromObject	js/three.js	/^		updateFromObject: function ( object ) {$/;"	r
updateFromObject	js/three.min.js	/^[],c=0,d=a.length;c<d;c++){var e=a[c];b.push(e.x,e.y,e.z||0)}this.addAttribute("position",new z(b,3));return this},updateFromObject:function(a){var b=a.geometry;if(a.isMesh){var c=b.__directGeometry;!0===b.elementsNeedUpdate&&(c=void 0,b.elementsNeedUpdate=!1);if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=$/;"	r
updateLensFlares	js/three.js	/^		updateLensFlares: function () {$/;"	r
updateList	js/three.js	/^			updateList = {};$/;"	r
updateList	js/three.js	/^		var updateList = {};$/;"	r
updateMatrix	js/three.js	/^		updateMatrix: function () {$/;"	r
updateMatrixWorld	js/three.js	/^			return function updateMatrixWorld( force ) {$/;"	r
updateMatrixWorld	js/three.js	/^		return function updateMatrixWorld( force ) {$/;"	r
updateMatrixWorld	js/three.js	/^		updateMatrixWorld: ( function () {$/;"	r
updateMatrixWorld	js/three.js	/^		updateMatrixWorld: function ( force ) {$/;"	r
updateMatrixWorld	js/three.js	/^	Box3Helper.prototype.updateMatrixWorld = function ( force ) {$/;"	r
updateMatrixWorld	js/three.js	/^	PlaneHelper.prototype.updateMatrixWorld = function ( force ) {$/;"	r
updateMatrixWorld	js/three.js	/^	SkeletonHelper.prototype.updateMatrixWorld = function () {$/;"	r
updateMatrixWorld	js/three.min.js	/^a))};gd.prototype=Object.create(oa.prototype);gd.prototype.constructor=gd;gd.prototype.updateMatrixWorld=function(a){var b=-this.plane.constant;1E-8>Math.abs(b)&&(b=1E-8);this.scale.set(.5*this.size,.5*this.size,b);this.lookAt(this.plane.normal);w.prototype.updateMatrixWorld.call(this,a)};var Ld,pe;Bb.prototype=Object.create(w.prototype);Bb.prototype.constructor=Bb;Bb.prototype.setDirection=function(){var a=new p,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,$/;"	r
updateMatrixWorld	js/three.min.js	/^this.geometry.skinWeights[a];var c=1\/b.manhattanLength();Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var b=new ba,d=this.geometry.attributes.skinWeight;for(a=0;a<d.count;a++)b.x=d.getX(a),b.y=d.getY(a),b.z=d.getZ(a),b.w=d.getW(a),c=1\/b.manhattanLength(),Infinity!==c?b.multiplyScalar(c):b.set(1,0,0,0),d.setXYZW(a,b.x,b.y,b.z,b.w)}},updateMatrixWorld:function(a){qa.prototype.updateMatrixWorld.call(this,a);"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):$/;"	r
updateMatrixWorld	js/three.min.js	/^this.projectionMatrix.copy(a.projectionMatrix);return this},getWorldDirection:function(){var a=new X;return function(b){b=b||new p;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}(),updateMatrixWorld:function(a){w.prototype.updateMatrixWorld.call(this,a);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});Gb.prototype=Object.assign(Object.create(Ka.prototype),{constructor:Gb,isOrthographicCamera:!0,copy:function(a,b){Ka.prototype.copy.call(this,$/;"	r
updateMatrixWorld	js/three.min.js	/^this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},toJSON:function(a){function b(b,c){void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a));return c.uuid}function c(a){var b=$/;"	r
updateMatrixWorld	js/three.min.js	/^var c=this.light.distance?this.light.distance:1E3,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}();lc.prototype=Object.create(P.prototype);lc.prototype.constructor=lc;lc.prototype.updateMatrixWorld=function(){var a=new p,b=new K,c=new K;return function(d){var e=$/;"	r
updateMorphTargets	js/three.js	/^		updateMorphTargets: function () {$/;"	r
updateProjectionMatrix	js/three.js	/^		updateProjectionMatrix: function () {$/;"	r
updateProjectionMatrix	js/three.min.js	/^updateProjectionMatrix:function(){var a=this.near,b=a*Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled)var g=f.fullWidth,h=f.fullHeight,e=e+f.offsetX*d\/g,b=b-f.offsetY*c\/h,d=f.width\/g*d,c=f.height\/h*c;f=this.filmOffset;0!==f&&(e+=a*f\/this.getFilmWidth());this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far)},toJSON:function(a){a=w.prototype.toJSON.call(this,a);a.object.fov=this.fov;a.object.zoom=this.zoom;a.object.near=$/;"	r
updateRange	js/three.js	/^			var updateRange = attribute.updateRange;$/;"	r
updateRange	js/three.js	/^		this.updateRange = { offset: 0, count: - 1 };$/;"	r
updateRange	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
updateRange	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
updateRenderTargetMipmap	js/three.js	/^		function updateRenderTargetMipmap( renderTarget ) {$/;"	r
updateRenderTargetMipmap	js/three.js	/^		this.updateRenderTargetMipmap = updateRenderTargetMipmap;$/;"	r
updateRenderTargetMipmap	js/three.min.js	/^b);a.bindFramebuffer(a.FRAMEBUFFER,null)}};this.updateRenderTargetMipmap=function(b){var e=b.texture,f=k(b);l(e,f)&&(b=b.isWebGLRenderTargetCube?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,e=d.get(e).__webglTexture,c.bindTexture(b,e),a.generateMipmap(b),c.bindTexture(b,null))}}function lg(){var a={};return{get:function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c},remove:function(b){delete a[b.uuid]},clear:function(){a={}}}}function mg(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();$/;"	r
updateShadowMap	js/three.js	/^		updateShadowMap: function () {$/;"	r
upload	js/three.js	/^	WebGLUniforms.upload = function ( gl, seq, values, renderer ) {$/;"	r
upload	js/three.min.js	/^b,c){b=b[c];void 0!==b&&this.setValue(a,c,b)};cb.upload=function(a,b,c,d){for(var e=0,f=b.length;e!==f;++e){var g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}};cb.seqWithValue=function(a,b){for(var c=[],d=0,e=a.length;d!==e;++d){var f=a[d];f.id in b&&c.push(f)}return c};var sg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,$/;"	r
uploadTexture	js/three.js	/^		function uploadTexture( textureProperties, texture, slot ) {$/;"	r
uri	js/GLTFLoader.js	/^		var sourceURI = source.uri;$/;"	r
url	js/three.js	/^						url: getDataURL( image )$/;"	r
url	js/three.js	/^				request.open( 'GET', url, true );$/;"	r
url	js/three.js	/^			image.src = url;$/;"	r
url	js/three.js	/^			url = this.manager.resolveURL( url );$/;"	r
urlModifier	js/three.js	/^			urlModifier = transform;$/;"	r
urlModifier	js/three.js	/^		var urlModifier = undefined;$/;"	r
usage	js/three.js	/^			var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;$/;"	r
useCount	js/three.js	/^		this.useCount = 0;$/;"	r
useFlatShading	js/GLTFLoader.js	/^						var useFlatShading = geometry.attributes.normal === undefined;$/;"	r
useFog	js/three.js	/^				useFog: material.fog,$/;"	r
useMorphing	js/three.js	/^						useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;$/;"	r
useMorphing	js/three.js	/^						useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;$/;"	r
useMorphing	js/three.js	/^				var useMorphing = false;$/;"	r
useMorphing	js/three.js	/^			var useMorphing = ( i & _MorphingFlag ) !== 0;$/;"	r
useProgram	js/three.js	/^			useProgram: useProgram,$/;"	r
useProgram	js/three.js	/^		function useProgram( program ) {$/;"	r
useQuaternion	js/three.js	/^		useQuaternion: {$/;"	r
useQuaternion	js/three.min.js	/^return this.translateOnAxis(b,a)}});Object.defineProperties(w.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});$/;"	r
useSkinning	js/three.js	/^				var useSkinning = object.isSkinnedMesh && material.skinning;$/;"	r
useSkinning	js/three.js	/^			var useSkinning = ( i & _SkinningFlag ) !== 0;$/;"	r
useVertexColors	js/GLTFLoader.js	/^						var useVertexColors = geometry.attributes.color !== undefined;$/;"	r
useVertexTexture	js/three.js	/^				useVertexTexture: capabilities.floatVertexTextures,$/;"	r
usedTimes	js/three.js	/^		this.usedTimes = 1;$/;"	r
userData	js/GLTFLoader.js	/^							skinnedMesh.userData = mesh.userData;$/;"	r
userData	js/three.js	/^				if ( data.userData !== undefined ) object.userData = data.userData;$/;"	r
userData	js/three.js	/^			if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;$/;"	r
userData	js/three.js	/^			if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;$/;"	r
userData	js/three.js	/^			if ( json.userData !== undefined ) material.userData = json.userData;$/;"	r
userData	js/three.js	/^			this.userData = JSON.parse( JSON.stringify( source.userData ) );$/;"	r
userData	js/three.js	/^		this.userData = {};$/;"	r
userData	js/three.min.js	/^0;this.userData={}}function Ka(){w.call(this);this.type="Camera";this.matrixWorldInverse=new K;this.projectionMatrix=new K}function Gb(a,b,c,d,e,f){Ka.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}function Oa(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&&d.isVector3?d:new p;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&&e.isColor?$/;"	r
userData	js/three.min.js	/^null;this.depthFunc=3;this.depthWrite=this.depthTest=!0;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.overdraw=0;this.visible=!0;this.userData={};this.needsUpdate=!0}function Va(a){Q.call(this);this.type="MeshDepthMaterial";this.depthPacking=3200;this.morphTargets=this.skinning=!1;this.displacementMap=$/;"	r
utils	js/three.js	/^			utils = new WebGLUtils( _gl, extensions );$/;"	r
utils	js/three.js	/^		var utils;$/;"	r
uuid	js/three.js	/^							var uuid = name[ i ];$/;"	r
uuid	js/three.js	/^						clipUuid = action._clip.uuid,$/;"	r
uuid	js/three.js	/^						uuid: image.uuid,$/;"	r
uuid	js/three.js	/^					geometry.uuid = data.uuid;$/;"	r
uuid	js/three.js	/^					image.uuid = _Math.generateUUID(); \/\/ UGH$/;"	r
uuid	js/three.js	/^					texture.uuid = data.uuid;$/;"	r
uuid	js/three.js	/^					uuid = object.uuid,$/;"	r
uuid	js/three.js	/^					uuid: _Math.generateUUID(),$/;"	r
uuid	js/three.js	/^					var uuid = _Math.generateUUID();$/;"	r
uuid	js/three.js	/^				clipUuid = clip.uuid,$/;"	r
uuid	js/three.js	/^				object.uuid = data.uuid;$/;"	r
uuid	js/three.js	/^				output.image = image.uuid;$/;"	r
uuid	js/three.js	/^				rootUuid = propBinding.rootNode.uuid,$/;"	r
uuid	js/three.js	/^				rootUuid = root.uuid,$/;"	r
uuid	js/three.js	/^				uuid: this.uuid,$/;"	r
uuid	js/three.js	/^				var keyA = result.uuid, keyB = material.uuid;$/;"	r
uuid	js/three.js	/^				var uuid = '';$/;"	r
uuid	js/three.js	/^			data.uuid = this.uuid;$/;"	r
uuid	js/three.js	/^			if ( json.uuid !== undefined ) material.uuid = json.uuid;$/;"	r
uuid	js/three.js	/^			object.uuid = this.uuid;$/;"	r
uuid	js/three.js	/^			var clipUuid = action._clip.uuid,$/;"	r
uuid	js/three.js	/^			var rootUuid = root.uuid,$/;"	r
uuid	js/three.js	/^			var uuid = object.uuid;$/;"	r
uuid	js/three.js	/^		this.uuid = _Math.generateUUID();$/;"	r
uuid	js/three.min.js	/^d.setTexture2D(G.map||He,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);w.onAfterRender(a,p,U,void 0,G,void 0)}}c.enable(b.CULL_FACE);c.reset()}}}function Q(){Object.defineProperty(this,"id",{value:Lf++});this.uuid=R.generateUUID();this.name="";this.type="Material";this.lights=this.fog=!0;this.blending=1;this.side=0;this.flatShading=!1;this.vertexColors=0;this.opacity=1;this.transparent=!1;this.blendSrc=204;this.blendDst=205;this.blendEquation=100;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=$/;"	r
uuid	js/three.min.js	/^void 0===a||"string"===typeof a;c&&(a={textures:{},images:{}});var d={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};d.uuid=this.uuid;d.type=this.type;""!==this.name&&(d.name=this.name);this.color&&this.color.isColor&&(d.color=this.color.getHex());void 0!==this.roughness&&(d.roughness=this.roughness);void 0!==this.metalness&&(d.metalness=this.metalness);this.emissive&&this.emissive.isColor&&(d.emissive=this.emissive.getHex());1!==this.emissiveIntensity&&(d.emissiveIntensity=this.emissiveIntensity);$/;"	r
uuid	js/three.min.js	/^{metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},q=[],n={},m=[],r={};for(g=0;g<this.faces.length;g++){var p=this.faces[g],t=void 0!==this.faceVertexUvs[0][g],x=0<p.normal.length(),y=0<p.vertexNormals.length,B=$/;"	r
uuids	js/three.js	/^					object.material = uuids;$/;"	r
uuids	js/three.js	/^					var uuids = [];$/;"	r
uv	js/three.js	/^									uv = new Vector2( u, v );$/;"	r
uv	js/three.js	/^								intersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );$/;"	r
uv	js/three.js	/^						intersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );$/;"	r
uv	js/three.js	/^						var uv = uvs[ k ];$/;"	r
uv	js/three.js	/^					'	vUV = uv;',$/;"	r
uv	js/three.js	/^					var uv = geometry.attributes.uv;$/;"	r
uv	js/three.js	/^				attribute = this.attributes.uv;$/;"	r
uv	js/three.js	/^				uv: gl.getAttribLocation( program, 'uv' )$/;"	r
uv	js/three.js	/^				var uv = uvs2[ i ], uvCopy = [];$/;"	r
uv	js/three.js	/^			uv: uvArray,$/;"	r
uv	js/three.js	/^			var uv = new Vector2();$/;"	r
uv	js/three.js	/^		var uv = new Vector2();$/;"	r
uv	js/three.js	/^		var uvArray = arrays.uv;$/;"	r
uv	js/three.min.js	/^!1);b.uvsNeedUpdate&&(c=this.attributes.uv,void 0!==c&&(c.copyVector2sArray(b.uvs),c.needsUpdate=!0),b.uvsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=b.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new Je).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=$/;"	r
uv	js/three.min.js	/^Object.create(C.prototype);Ga.prototype.constructor=Ga;Ga.prototype.getArrays=function(){var a=this.getAttribute("position"),a=a?Array.prototype.slice.call(a.array):[],b=this.getAttribute("uv"),b=b?Array.prototype.slice.call(b.array):[],c=this.index,c=c?Array.prototype.slice.call(c.array):[];return{position:a,uv:b,index:c}};Ga.prototype.addShapeList=function(a,b){var c=a.length;b.arrays=this.getArrays();for(var d=0;d<c;d++)this.addShape(a[d],b);this.setIndex(b.arrays.index);this.addAttribute("position",$/;"	r
uv	js/three.min.js	/^drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function hb(a,b){this.origin=void 0!==a?a:new p;this.direction=void 0!==b?b:new p}function Ib(a,b){this.start=void 0!==a?a:new p;this.end=void 0!==b?b:new p}function Pa(a,b,c){this.a=void 0!==a?a:new p;this.b=void 0!==$/;"	r
uv2	js/three.js	/^	var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif";$/;"	r
uv2	js/three.min.js	/^uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n",cube_frag:"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n",$/;"	r
uv2_pars_fragment	js/three.js	/^		uv2_pars_fragment: uv2_pars_fragment,$/;"	r
uv2_pars_fragment	js/three.js	/^	var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif";$/;"	r
uv2_pars_fragment	js/three.min.js	/^uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif",$/;"	r
uv2_pars_vertex	js/three.js	/^		uv2_pars_vertex: uv2_pars_vertex,$/;"	r
uv2_pars_vertex	js/three.js	/^	var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif";$/;"	r
uv2_vertex	js/three.js	/^		uv2_vertex: uv2_vertex,$/;"	r
uv2_vertex	js/three.js	/^	var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif";$/;"	r
uvA	js/three.js	/^			var uvA = new Vector2();$/;"	r
uvArray	js/three.js	/^		var uvArray = arrays.uv;$/;"	r
uvArray	js/three.js	/^		var uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];$/;"	r
uvAttribute	js/three.js	/^		var uvAttribute = this.getAttribute( "uv" );$/;"	r
uvB	js/three.js	/^			var uvB = new Vector2();$/;"	r
uvBuffer	js/three.js	/^		var uvBuffer = [];$/;"	r
uvC	js/three.js	/^			var uvC = new Vector2();$/;"	r
uvCopy	js/three.js	/^				var uv = uvs2[ i ], uvCopy = [];$/;"	r
uvIndex	js/three.js	/^									uvIndex = faces[ offset ++ ];$/;"	r
uvIntersection	js/three.js	/^			function uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {$/;"	r
uvLayer	js/three.js	/^								uvLayer = json.uvs[ i ];$/;"	r
uvLayer	js/three.js	/^					uvLayer, uv, u, v,$/;"	r
uvOffset	js/three.js	/^				uvOffset: gl.getUniformLocation( program, 'uvOffset' ),$/;"	r
uvScale	js/three.js	/^				uvScale: gl.getUniformLocation( program, 'uvScale' ),$/;"	r
uvScaleMap	js/GLTFLoader.js	/^						uvScaleMap = uvScaleMap.texture;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.alphaMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.bumpMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.displacementMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.emissiveMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.glossinessMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.map;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.normalMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^					uvScaleMap = material.specularMap;$/;"	r
uvScaleMap	js/GLTFLoader.js	/^				var uvScaleMap;$/;"	r
uvScaleMap	js/three.js	/^					uvScaleMap = uvScaleMap.texture;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.alphaMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.bumpMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.displacementMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.emissiveMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.map;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.metalnessMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.normalMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.roughnessMap;$/;"	r
uvScaleMap	js/three.js	/^				uvScaleMap = material.specularMap;$/;"	r
uvScaleMap	js/three.js	/^			var uvScaleMap;$/;"	r
uvTransform	js/three.js	/^			uvTransform: { value: new Matrix3() }$/;"	r
uvTransform	js/three.js	/^			uvTransform: { value: new Matrix3() },$/;"	r
uv_pars_fragment	js/three.js	/^		uv_pars_fragment: uv_pars_fragment,$/;"	r
uv_pars_fragment	js/three.js	/^	var uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif";$/;"	r
uv_pars_fragment	js/three.min.js	/^uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n",$/;"	r
uv_pars_vertex	js/three.js	/^		uv_pars_vertex: uv_pars_vertex,$/;"	r
uv_pars_vertex	js/three.js	/^	var uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n";$/;"	r
uv_vertex	js/three.js	/^		uv_vertex: uv_vertex,$/;"	r
uv_vertex	js/three.js	/^	var uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif";$/;"	r
uvgen	js/three.js	/^		var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;$/;"	r
uvs	js/three.js	/^					var uvs = faceVertexUvs[ j ], uvsCopy = [];$/;"	r
uvs	js/three.js	/^					var uvs;$/;"	r
uvs	js/three.js	/^				var uvs = new Float32Array( geometry.uvs.length * 2 );$/;"	r
uvs	js/three.js	/^			var uvs = [];$/;"	r
uvs	js/three.js	/^			var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;$/;"	r
uvs	js/three.js	/^			var uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );$/;"	r
uvs	js/three.js	/^			var uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );$/;"	r
uvs	js/three.js	/^		this.uvs = [];$/;"	r
uvs	js/three.js	/^		var uvs = [];$/;"	r
uvs1	js/three.js	/^				uvs1 = this.faceVertexUvs[ 0 ],$/;"	r
uvs1	js/three.js	/^			var uvs1 = this.faceVertexUvs[ 0 ];$/;"	r
uvs2	js/three.js	/^				uvs2 = geometry.faceVertexUvs[ 0 ],$/;"	r
uvs2	js/three.js	/^				var uvs2 = new Float32Array( geometry.uvs2.length * 2 );$/;"	r
uvs2	js/three.js	/^			var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;$/;"	r
uvs2	js/three.js	/^			var uvs2 = this.faceVertexUvs[ 1 ];$/;"	r
uvs2	js/three.js	/^		this.uvs2 = [];$/;"	r
uvsCopy	js/three.js	/^					var uvs = faceVertexUvs[ j ], uvsCopy = [];$/;"	r
uvsHash	js/three.js	/^			var uvsHash = {};$/;"	r
uvsNeedUpdate	js/three.js	/^				direct.uvsNeedUpdate = geometry.uvsNeedUpdate;$/;"	r
uvsNeedUpdate	js/three.js	/^				geometry.uvsNeedUpdate = false;$/;"	r
uvsNeedUpdate	js/three.js	/^			this.uvsNeedUpdate = geometry.uvsNeedUpdate;$/;"	r
uvsNeedUpdate	js/three.js	/^			this.uvsNeedUpdate = source.uvsNeedUpdate;$/;"	r
uvsNeedUpdate	js/three.js	/^		this.uvsNeedUpdate = false;$/;"	r
uvsNeedUpdate	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
uvs_f	js/three.js	/^								var uvs_f = uvs[ f ];$/;"	r
v	js/three.js	/^									v = uvLayer[ uvIndex * 2 + 1 ];$/;"	r
v	js/three.js	/^						for ( s = v, t = v + 1; t < nv; s ++, t ++ ) {$/;"	r
v	js/three.js	/^					\/* three consecutive vertices in current polygon, <u,v,w> *\/$/;"	r
v	js/three.js	/^					p1 = func( u + EPS, v, p1 );$/;"	r
v	js/three.js	/^					p1 = func( u - EPS, v, p1 );$/;"	r
v	js/three.js	/^					u = v; if ( nv <= u ) u = 0; \/* previous *\/$/;"	r
v	js/three.js	/^					v = u + 1; if ( nv <= v ) v = 0; \/* new v    *\/$/;"	r
v	js/three.js	/^				p0 = func( u, v, p0 );$/;"	r
v	js/three.js	/^				return result.set( 1 - u - v, v, u );$/;"	r
v	js/three.js	/^				v = ( ( j + 1 ) \/ divisions ) * ( Math.PI * 2 );$/;"	r
v	js/three.js	/^				v = ( j \/ divisions ) * ( Math.PI * 2 );$/;"	r
v	js/three.js	/^				v = this.vertices[ i ];$/;"	r
v	js/three.js	/^				v = values[ u.id ];$/;"	r
v	js/three.js	/^				var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;$/;"	r
v	js/three.js	/^				var v = inclination( vertex ) \/ Math.PI + 0.5;$/;"	r
v	js/three.js	/^				var v = j \/ radialSegments * Math.PI * 2;$/;"	r
v	js/three.js	/^				var v = y \/ heightSegments;$/;"	r
v	js/three.js	/^			v = ( i \/ radials ) * ( Math.PI * 2 );$/;"	r
v	js/three.js	/^			var v = [];$/;"	r
v	js/three.js	/^			var v = i \/ stacks;$/;"	r
v	js/three.js	/^			var v = iy \/ heightSegments;$/;"	r
v	js/three.js	/^			var v = new Vector3();$/;"	r
v	js/three.js	/^			var v, key;$/;"	r
v	js/three.js	/^			var v, vl, f, fl, face, vertices;$/;"	r
v	js/three.js	/^		function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {$/;"	r
v	js/three.js	/^		function v( x, y, z ) {$/;"	r
v	js/three.js	/^		var v = object[ name ];$/;"	r
v	js/three.js	/^		var v, i, j, r, color;$/;"	r
v	js/three.js	/^	function setValueT1( gl, v, renderer ) {$/;"	r
v	js/three.js	/^	function setValueT1a( gl, v, renderer ) {$/;"	r
v	js/three.js	/^	function setValueT6( gl, v, renderer ) {$/;"	r
v	js/three.js	/^	function setValueT6a( gl, v, renderer ) {$/;"	r
v	js/three.min.js	/^!1;g=void 0!==g?g:0;h=void 0!==h?h:2*Math.PI;var q=[],n=[],u=[],m=[],v=0,t=[],x=c\/2,y=0;(function(){var f,k,r=new p,J=new p,w=0,z=(b-a)\/c;for(k=0;k<=e;k++){var D=[],C=k\/e,E=C*(b-a)+a;for(f=0;f<=d;f++){var H=f\/d,M=H*h+g,L=Math.sin(M),M=Math.cos(M);J.x=E*L;J.y=-C*c+x;J.z=E*M;n.push(J.x,J.y,J.z);r.set(L,z,M).normalize();u.push(r.x,r.y,r.z);m.push(H,1-C);D.push(v++)}t.push(D)}for(f=0;f<d;f++)for(k=0;k<e;k++)r=t[k+1][f],J=t[k+1][f+1],z=t[k][f+1],q.push(t[k][f],r,z),q.push(r,J,z),w+=6;l.addGroup(y,w,0);$/;"	r
v	js/three.min.js	/^"canvas"),r.width=R.floorPowerOfTwo(q.width),r.height=R.floorPowerOfTwo(q.height),r.getContext("2d").drawImage(q,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+q.width+"x"+q.height+"). Resized to "+r.width+"x"+r.height,q),v=r):v=q);q=k(v);var r=f.convert(b.format),B=f.convert(b.type);m(a.TEXTURE_2D,b,q);var p=b.mipmaps;if(b.isDepthTexture){p=a.DEPTH_COMPONENT;if(1015===b.type){if(!y)throw Error("Float Depth Texture only supported in WebGL2.0");p=a.DEPTH_COMPONENT32F}else y&&$/;"	r
v	js/three.min.js	/^a.createTexture(),g.textures++);c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_2D,u.__webglTexture);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,b.premultiplyAlpha);a.pixelStorei(a.UNPACK_ALIGNMENT,b.unpackAlignment);var v=h(b.image,e.maxTextureSize);(1001!==b.wrapS||1001!==b.wrapT||1003!==b.minFilter&&1006!==b.minFilter)&&!1===k(v)&&(q=v,q instanceof HTMLImageElement||q instanceof HTMLCanvasElement||q instanceof ImageBitmap?(r=document.createElementNS("http:\/\/www.w3.org\/1999\/xhtml",$/;"	r
v	js/three.min.js	/^function(b,q){var u=d.get(b);if(6===b.image.length)if(0<b.version&&u.__version!==b.version){u.__image__webglTextureCube||(b.addEventListener("dispose",n),u.__image__webglTextureCube=a.createTexture(),g.textures++);c.activeTexture(a.TEXTURE0+q);c.bindTexture(a.TEXTURE_CUBE_MAP,u.__image__webglTextureCube);a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,b.flipY);q=b&&b.isCompressedTexture;for(var r=b.image[0]&&b.image[0].isDataTexture,v=[],t=0;6>t;t++)v[t]=q||r?r?b.image[t].image:b.image[t]:h(b.image[t],e.maxCubemapSize);$/;"	r
v	js/three.min.js	/^v,"has no shadow.");else{var p=u.camera;h.copy(u.mapSize);h.min(k);if(I){var y=h.x,J=h.y;x[0].set(2*y,J,y,J);x[1].set(0,J,y,J);x[2].set(3*y,J,y,J);x[3].set(y,J,y,J);x[4].set(3*y,0,y,J);x[5].set(y,0,y,J);h.x*=4;h.y*=2}null===u.map&&(u.map=new Db(h.x,h.y,{minFilter:1003,magFilter:1003,format:1023}),u.map.texture.name=v.name+".shadowMap",p.updateProjectionMatrix());u.isSpotLightShadow&&u.update(v);y=u.map;J=u.matrix;q.setFromMatrixPosition(v.matrixWorld);p.position.copy(q);I?(u=6,J.makeTranslation(-q.x,$/;"	r
v0	js/three.js	/^			var v0 = new Vector3();$/;"	r
v0	js/three.js	/^		this.v0 = v0;$/;"	r
v0	js/three.js	/^		var v0 = ( p2 - p0 ) * 0.5;$/;"	r
v0	js/three.js	/^		var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;$/;"	r
v0	js/three.js	/^		var v0 = this.v0, v1 = this.v1, v2 = this.v2;$/;"	r
v1	js/three.js	/^			return function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {$/;"	r
v1	js/three.js	/^			var v1 = new Vector2();$/;"	r
v1	js/three.js	/^			var v1 = new Vector3( 0, 0, 1 );$/;"	r
v1	js/three.js	/^			var v1 = new Vector3( 0, 1, 0 );$/;"	r
v1	js/three.js	/^			var v1 = new Vector3( 1, 0, 0 );$/;"	r
v1	js/three.js	/^			var v1 = new Vector3();$/;"	r
v1	js/three.js	/^			var v1;$/;"	r
v1	js/three.js	/^		this.v1 = v1;$/;"	r
v1	js/three.js	/^		var v1 = ( p3 - p1 ) * 0.5;$/;"	r
v1	js/three.js	/^		var v1 = new Vector3();$/;"	r
v1	js/three.js	/^	function CubicBezierCurve( v0, v1, v2, v3 ) {$/;"	r
v1	js/three.js	/^	function CubicBezierCurve3( v0, v1, v2, v3 ) {$/;"	r
v1	js/three.js	/^	function QuadraticBezierCurve( v0, v1, v2 ) {$/;"	r
v1	js/three.js	/^	function QuadraticBezierCurve3( v0, v1, v2 ) {$/;"	r
v2	js/three.js	/^			var v2 = new Vector3();$/;"	r
v2	js/three.js	/^		lerpVectors: function ( v1, v2, alpha ) {$/;"	r
v2	js/three.js	/^		this.v2 = v2;$/;"	r
v2	js/three.js	/^		var v2 = new Vector3();$/;"	r
v2	js/three.js	/^	var skinning_pars_vertex = "#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j \/ float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n";$/;"	r
v2	js/three.min.js	/^e=this.v2;b.set(ub(a,c.x,d.x,e.x),ub(a,c.y,d.y,e.y));return b};var se=Object.assign(Object.create(hc.prototype),{fromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},moveTo:function(a,b){this.currentPoint.set(a,b)},lineTo:function(a,b){var c=new Ma(this.currentPoint.clone(),new D(a,b));this.curves.push(c);this.currentPoint.set(a,b)},quadraticCurveTo:function(a,b,c,d){a=new yb(this.currentPoint.clone(),new D(a,b),new D(c,d));this.curves.push(a);$/;"	r
v2	js/three.min.js	/^skinbase_vertex:"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j \/ float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 \/ float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n",$/;"	r
v2	js/three.min.js	/^this.v2=b}function hc(){ca.call(this);this.type="CurvePath";this.curves=[];this.autoClose=!1}function Sa(a,b,c,d,e,f,g,h){ca.call(this);this.type="EllipseCurve";this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g;this.aRotation=h||0}function wb(a){ca.call(this);this.type="SplineCurve";this.points=void 0===a?[]:a}function xb(a,b,c,d){ca.call(this);this.type="CubicBezierCurve";this.v0=a;this.v1=b;this.v2=c;this.v3=d}function yb(a,b,c){ca.call(this);$/;"	r
v3	js/three.js	/^		this.v3 = v3;$/;"	r
v3	js/three.js	/^		var v3 = new Vector3();$/;"	r
vA	js/three.js	/^							fvA = vA;$/;"	r
vA	js/three.js	/^							vA = indices[ i + 0 ] * 3;$/;"	r
vA	js/three.js	/^						intersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );$/;"	r
vA	js/three.js	/^					vA = this.vertices[ face.a ];$/;"	r
vA	js/three.js	/^				var vA = this.vertices[ face.a ];$/;"	r
vA	js/three.js	/^				var vA, vB, vC;$/;"	r
vA	js/three.js	/^			var vA = new Vector3();$/;"	r
vB	js/three.js	/^							fvB = vB;$/;"	r
vB	js/three.js	/^							vB = indices[ i + 1 ] * 3;$/;"	r
vB	js/three.js	/^					vB = this.vertices[ face.b ];$/;"	r
vB	js/three.js	/^				var vB = this.vertices[ face.b ];$/;"	r
vB	js/three.js	/^			var vB = new Vector3();$/;"	r
vC	js/three.js	/^							fvC = vC;$/;"	r
vC	js/three.js	/^							vC = indices[ i + 2 ] * 3;$/;"	r
vC	js/three.js	/^					vC = this.vertices[ face.c ];$/;"	r
vC	js/three.js	/^				var vC = this.vertices[ face.c ];$/;"	r
vC	js/three.js	/^			var vC = new Vector3();$/;"	r
vColor	js/three.js	/^	var color_fragment = "#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif";$/;"	r
vColor	js/three.min.js	/^color_fragment:"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif",color_pars_fragment:"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n",color_pars_vertex:"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif",color_vertex:"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif",common:"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) \/ dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n",$/;"	r
vEnd	js/three.js	/^							var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );$/;"	r
vEnd	js/three.js	/^				var vEnd = new Vector3();$/;"	r
vExtentSlope	js/three.js	/^			var vExtentSlope = 0.5 * this.getFilmHeight() \/ focalLength;$/;"	r
vExtentSlope	js/three.js	/^			var vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );$/;"	r
vStart	js/three.js	/^				var vStart = new Vector3();$/;"	r
v_next_len	js/three.js	/^				var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );$/;"	r
v_next_x	js/three.js	/^			var v_next_x = inNext.x - inPt.x,$/;"	r
v_next_y	js/three.js	/^				v_next_y = inNext.y - inPt.y;$/;"	r
v_prev_len	js/three.js	/^				var v_prev_len = Math.sqrt( v_prev_lensq );$/;"	r
v_prev_lensq	js/three.js	/^			var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );$/;"	r
v_prev_x	js/three.js	/^					v_trans_x = v_prev_x;$/;"	r
v_prev_x	js/three.js	/^					v_trans_y = v_prev_x;$/;"	r
v_prev_x	js/three.js	/^			var v_prev_x = inPt.x - inPrev.x,$/;"	r
v_prev_y	js/three.js	/^					v_trans_y = v_prev_y;$/;"	r
v_prev_y	js/three.js	/^				v_prev_y = inPt.y - inPrev.y;$/;"	r
v_trans_lensq	js/three.js	/^				var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );$/;"	r
v_trans_x	js/three.js	/^					v_trans_x = - v_prev_y;$/;"	r
v_trans_x	js/three.js	/^					v_trans_x = v_prev_x;$/;"	r
v_trans_x	js/three.js	/^				v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );$/;"	r
v_trans_x	js/three.js	/^			var v_trans_x, v_trans_y, shrink_by; \/\/ resulting translation vector for inPt$/;"	r
v_trans_y	js/three.js	/^					v_trans_y = v_prev_x;$/;"	r
v_trans_y	js/three.js	/^					v_trans_y = v_prev_y;$/;"	r
v_trans_y	js/three.js	/^				v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );$/;"	r
va	js/three.min.js	/^new z(n,3));this.addAttribute("normal",new z(u,3));this.addAttribute("uv",new z(r,2))}function va(a){Q.call(this);this.type="MeshBasicMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.lights=this.morphTargets=this.skinning=$/;"	r
valid	js/three.js	/^							valid = false;$/;"	r
valid	js/three.js	/^					valid = false;$/;"	r
valid	js/three.js	/^				valid = false;$/;"	r
valid	js/three.js	/^			var valid = true;$/;"	r
validArea	js/three.js	/^			var validArea = new Box2();$/;"	r
validate	js/three.js	/^		validate: function () {$/;"	r
validate	js/three.min.js	/^1),e=f-1),a=this.getValueSize(),this.times=S.arraySlice(c,e,f),this.values=S.arraySlice(this.values,e*a,f*a);return this},validate:function(){var a=!0,b=this.getValueSize();0!==b-Math.floor(b)&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),a=!1);var c=this.times,b=this.values,d=c.length;0===d&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),a=!1);for(var e=null,f=0;f!==d;f++){var g=c[f];if("number"===typeof g&&isNaN(g)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",$/;"	r
validate_interval	js/three.js	/^			validate_interval: {$/;"	r
value	js/GLTFLoader.js	/^								results[ key ] = value;$/;"	r
value	js/GLTFLoader.js	/^							results[ key ] = value;$/;"	r
value	js/GLTFLoader.js	/^						results[ idx ] = value;$/;"	r
value	js/GLTFLoader.js	/^					var value = callback.call( thisObj || this, object[ key ], key );$/;"	r
value	js/GLTFLoader.js	/^				uniforms.alphaMap.value = material.alphaMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.aoMap.value = material.aoMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.aoMapIntensity.value = material.aoMapIntensity;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.bumpMap.value = material.bumpMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.displacementBias.value = material.displacementBias;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.displacementMap.value = material.displacementMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.displacementScale.value = material.displacementScale;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.emissiveMap.value = material.emissiveMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.envMap.value = material.envMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.envMapIntensity.value = material.envMapIntensity;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.glossiness.value = material.glossiness;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.glossinessMap.value = material.glossinessMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.lightMap.value = material.lightMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.lightMapIntensity.value = material.lightMapIntensity;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.map.value = material.map;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.normalMap.value = material.normalMap;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.opacity.value = material.opacity;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.refractionRatio.value = material.refractionRatio;$/;"	r
value	js/GLTFLoader.js	/^				uniforms.specularMap.value = material.specularMap;$/;"	r
value	js/GLTFLoader.js	/^				var value = callback.call( thisObj || this, object[ idx ], idx );$/;"	r
value	js/GLTFLoader.js	/^			this.crossOrigin = value;$/;"	r
value	js/GLTFLoader.js	/^			this.path = value;$/;"	r
value	js/three.js	/^							json.bumpScale = value;$/;"	r
value	js/three.js	/^							json.name = value;$/;"	r
value	js/three.js	/^							json.opacity = value;$/;"	r
value	js/three.js	/^							json.shininess = value;$/;"	r
value	js/three.js	/^							json[ name ] = value;$/;"	r
value	js/three.js	/^							var value = values[ offset + j ];$/;"	r
value	js/three.js	/^						morphInfluences[ i ] = value;$/;"	r
value	js/three.js	/^						var value = materialDefaultAttributeValues[ name ];$/;"	r
value	js/three.js	/^						var value = values[ i ];$/;"	r
value	js/three.js	/^					m_uniforms.color.value = material.color;$/;"	r
value	js/three.js	/^					m_uniforms.opacity.value = material.opacity;$/;"	r
value	js/three.js	/^					value = key[ valuePropertyName ];$/;"	r
value	js/three.js	/^					var value = influence[ 1 ];$/;"	r
value	js/three.js	/^					var value = m[ name ];$/;"	r
value	js/three.js	/^				boxMesh.material.uniforms.tCube.value = background;$/;"	r
value	js/three.js	/^				case 0: this.x = value; break;$/;"	r
value	js/three.js	/^				case 1: this.y = value; break;$/;"	r
value	js/three.js	/^				case 2: this.z = value; break;$/;"	r
value	js/three.js	/^				case 3: this.w = value; break;$/;"	r
value	js/three.js	/^				dstArray = uniform.value;$/;"	r
value	js/three.js	/^				this._order = value;$/;"	r
value	js/three.js	/^				this._w = value;$/;"	r
value	js/three.js	/^				this._x = value;$/;"	r
value	js/three.js	/^				this._y = value;$/;"	r
value	js/three.js	/^				this._z = value;$/;"	r
value	js/three.js	/^				this.extensions.derivatives = value;$/;"	r
value	js/three.js	/^				this.filters = value;$/;"	r
value	js/three.js	/^				this.renderReverseSided = value;$/;"	r
value	js/three.js	/^				this.rotation.order = value;$/;"	r
value	js/three.js	/^				this.shadow.bias = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.bottom = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.far = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.fov = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.left = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.near = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.right = value;$/;"	r
value	js/three.js	/^				this.shadow.camera.top = value;$/;"	r
value	js/three.js	/^				this.shadow.mapSize.height = value;$/;"	r
value	js/three.js	/^				this.shadow.mapSize.width = value;$/;"	r
value	js/three.js	/^				this.shadowMap.cullFace = value;$/;"	r
value	js/three.js	/^				this.shadowMap.enabled = value;$/;"	r
value	js/three.js	/^				this.shadowMap.type = value;$/;"	r
value	js/three.js	/^				this.texture.anisotropy = value;$/;"	r
value	js/three.js	/^				this.texture.format = value;$/;"	r
value	js/three.js	/^				this.texture.generateMipmaps = value;$/;"	r
value	js/three.js	/^				this.texture.magFilter = value;$/;"	r
value	js/three.js	/^				this.texture.minFilter = value;$/;"	r
value	js/three.js	/^				this.texture.offset = value;$/;"	r
value	js/three.js	/^				this.texture.repeat = value;$/;"	r
value	js/three.js	/^				this.texture.type = value;$/;"	r
value	js/three.js	/^				this.texture.wrapS = value;$/;"	r
value	js/three.js	/^				this.texture.wrapT = value;$/;"	r
value	js/three.js	/^				this.x = value;$/;"	r
value	js/three.js	/^				this.y = value;$/;"	r
value	js/three.js	/^				uniform.value = dstArray; \/\/ ensure unique state$/;"	r
value	js/three.js	/^				uniform.value = dstArray;$/;"	r
value	js/three.js	/^				uniform.value = globalState;$/;"	r
value	js/three.js	/^				uniforms.alphaMap.value = material.alphaMap;$/;"	r
value	js/three.js	/^				uniforms.ambientLightColor.value = lights.state.ambient;$/;"	r
value	js/three.js	/^				uniforms.aoMap.value = material.aoMap;$/;"	r
value	js/three.js	/^				uniforms.aoMapIntensity.value = material.aoMapIntensity;$/;"	r
value	js/three.js	/^				uniforms.bumpMap.value = material.bumpMap;$/;"	r
value	js/three.js	/^				uniforms.bumpScale.value = material.bumpScale;$/;"	r
value	js/three.js	/^				uniforms.diffuse.value = material.color;$/;"	r
value	js/three.js	/^				uniforms.directionalLights.value = lights.state.directional;$/;"	r
value	js/three.js	/^				uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;$/;"	r
value	js/three.js	/^				uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;$/;"	r
value	js/three.js	/^				uniforms.displacementBias.value = material.displacementBias;$/;"	r
value	js/three.js	/^				uniforms.displacementMap.value = material.displacementMap;$/;"	r
value	js/three.js	/^				uniforms.displacementScale.value = material.displacementScale;$/;"	r
value	js/three.js	/^				uniforms.emissiveMap.value = material.emissiveMap;$/;"	r
value	js/three.js	/^				uniforms.envMap.value = material.envMap;$/;"	r
value	js/three.js	/^				uniforms.envMapIntensity.value = material.envMapIntensity;$/;"	r
value	js/three.js	/^				uniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;$/;"	r
value	js/three.js	/^				uniforms.fogDensity.value = fog.density;$/;"	r
value	js/three.js	/^				uniforms.fogFar.value = fog.far;$/;"	r
value	js/three.js	/^				uniforms.fogNear.value = fog.near;$/;"	r
value	js/three.js	/^				uniforms.gradientMap.value = material.gradientMap;$/;"	r
value	js/three.js	/^				uniforms.hemisphereLights.value = lights.state.hemi;$/;"	r
value	js/three.js	/^				uniforms.lightMap.value = material.lightMap;$/;"	r
value	js/three.js	/^				uniforms.lightMapIntensity.value = material.lightMapIntensity;$/;"	r
value	js/three.js	/^				uniforms.map.value = material.map;$/;"	r
value	js/three.js	/^				uniforms.metalnessMap.value = material.metalnessMap;$/;"	r
value	js/three.js	/^				uniforms.normalMap.value = material.normalMap;$/;"	r
value	js/three.js	/^				uniforms.pointLights.value = lights.state.point;$/;"	r
value	js/three.js	/^				uniforms.pointShadowMap.value = lights.state.pointShadowMap;$/;"	r
value	js/three.js	/^				uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;$/;"	r
value	js/three.js	/^				uniforms.rectAreaLights.value = lights.state.rectArea;$/;"	r
value	js/three.js	/^				uniforms.reflectivity.value = material.reflectivity;$/;"	r
value	js/three.js	/^				uniforms.refractionRatio.value = material.refractionRatio;$/;"	r
value	js/three.js	/^				uniforms.roughnessMap.value = material.roughnessMap;$/;"	r
value	js/three.js	/^				uniforms.specularMap.value = material.specularMap;$/;"	r
value	js/three.js	/^				uniforms.spotLights.value = lights.state.spot;$/;"	r
value	js/three.js	/^				uniforms.spotShadowMap.value = lights.state.spotShadowMap;$/;"	r
value	js/three.js	/^				uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;$/;"	r
value	js/three.js	/^				value: []$/;"	r
value	js/three.js	/^				value: new Matrix3()$/;"	r
value	js/three.js	/^				value: new Matrix4()$/;"	r
value	js/three.js	/^				value: position$/;"	r
value	js/three.js	/^				value: quaternion$/;"	r
value	js/three.js	/^				value: rotation$/;"	r
value	js/three.js	/^				value: scale$/;"	r
value	js/three.js	/^				var value = ( cullFace !== CullFaceBack );$/;"	r
value	js/three.js	/^			_pixelRatio = value;$/;"	r
value	js/three.js	/^			context = value;$/;"	r
value	js/three.js	/^			if ( value !== undefined ) device = value;$/;"	r
value	js/three.js	/^			mode = value;$/;"	r
value	js/three.js	/^			return typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;$/;"	r
value	js/three.js	/^			this.arcLengthDivisions = value;$/;"	r
value	js/three.js	/^			this.crossOrigin = value;$/;"	r
value	js/three.js	/^			this.drawMode = value;$/;"	r
value	js/three.js	/^			this.dynamic = value;$/;"	r
value	js/three.js	/^			this.filter = value;$/;"	r
value	js/three.js	/^			this.gain.gain.value = value;$/;"	r
value	js/three.js	/^			this.image = value;$/;"	r
value	js/three.js	/^			this.loop = value;$/;"	r
value	js/three.js	/^			this.mimeType = value;$/;"	r
value	js/three.js	/^			this.panner.distanceModel = value;$/;"	r
value	js/three.js	/^			this.panner.maxDistance = value;$/;"	r
value	js/three.js	/^			this.panner.refDistance = value;$/;"	r
value	js/three.js	/^			this.panner.rolloffFactor = value;$/;"	r
value	js/three.js	/^			this.path = value;$/;"	r
value	js/three.js	/^			this.playbackRate = value;$/;"	r
value	js/three.js	/^			this.requestHeader = value;$/;"	r
value	js/three.js	/^			this.responseType = value;$/;"	r
value	js/three.js	/^			this.texturePath = value;$/;"	r
value	js/three.js	/^			this.textures = value;$/;"	r
value	js/three.js	/^			this.withCredentials = value;$/;"	r
value	js/three.js	/^			uniforms.ambientLightColor.needsUpdate = value;$/;"	r
value	js/three.js	/^			uniforms.clearCoat.value = material.clearCoat;$/;"	r
value	js/three.js	/^			uniforms.clearCoatRoughness.value = material.clearCoatRoughness;$/;"	r
value	js/three.js	/^			uniforms.dashSize.value = material.dashSize;$/;"	r
value	js/three.js	/^			uniforms.diffuse.value = material.color;$/;"	r
value	js/three.js	/^			uniforms.directionalLights.needsUpdate = value;$/;"	r
value	js/three.js	/^			uniforms.farDistance.value = material.farDistance;$/;"	r
value	js/three.js	/^			uniforms.fogColor.value = fog.color;$/;"	r
value	js/three.js	/^			uniforms.hemisphereLights.needsUpdate = value;$/;"	r
value	js/three.js	/^			uniforms.map.value = material.map;$/;"	r
value	js/three.js	/^			uniforms.metalness.value = material.metalness;$/;"	r
value	js/three.js	/^			uniforms.nearDistance.value = material.nearDistance;$/;"	r
value	js/three.js	/^			uniforms.opacity.value = material.opacity;$/;"	r
value	js/three.js	/^			uniforms.pointLights.needsUpdate = value;$/;"	r
value	js/three.js	/^			uniforms.rectAreaLights.needsUpdate = value;$/;"	r
value	js/three.js	/^			uniforms.roughness.value = material.roughness;$/;"	r
value	js/three.js	/^			uniforms.scale.value = _height * 0.5;$/;"	r
value	js/three.js	/^			uniforms.scale.value = material.scale;$/;"	r
value	js/three.js	/^			uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); \/\/ to prevent pow( 0.0, 0.0 )$/;"	r
value	js/three.js	/^			uniforms.size.value = material.size * _pixelRatio;$/;"	r
value	js/three.js	/^			uniforms.specular.value = material.specular;$/;"	r
value	js/three.js	/^			uniforms.spotLights.needsUpdate = value;$/;"	r
value	js/three.js	/^			uniforms.totalSize.value = material.dashSize + material.gapSize;$/;"	r
value	js/three.js	/^			value = arguments[ 1 ];$/;"	r
value	js/three.js	/^			value: function () {$/;"	r
value	js/three.js	/^			var value = 0, data = this.getFrequencyData();$/;"	r
value	js/three.js	/^			var value = defines[ name ];$/;"	r
value	js/three.js	/^			var value = key[ valuePropertyName ];$/;"	r
value	js/three.js	/^		if ( u !== undefined ) u.setValue( gl, value, this.renderer );$/;"	r
value	js/three.js	/^		this.value = value;$/;"	r
value	js/three.js	/^	 * .setValue( gl, value, [renderer] )$/;"	r
value	js/three.min.js	/^!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new K},normalMatrix:{value:new ta}});this.matrix=new K;this.matrixWorld=new K;this.matrixAutoUpdate=w.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new Pd;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=$/;"	r
value	js/three.min.js	/^q.displacementBias.value=c.displacementBias),q.referencePosition.value.copy(c.referencePosition),q.nearDistance.value=c.nearDistance,q.farDistance.value=c.farDistance):c.isMeshNormalMaterial?(r(q,c),c.bumpMap&&(q.bumpMap.value=c.bumpMap,q.bumpScale.value=c.bumpScale),c.normalMap&&(q.normalMap.value=c.normalMap,q.normalScale.value.copy(c.normalScale)),c.displacementMap&&(q.displacementMap.value=c.displacementMap,q.displacementScale.value=c.displacementScale,q.displacementBias.value=c.displacementBias)):$/;"	r
value	js/three.min.js	/^this.color=new H(16777215);this.map=null;this.rotation=0;this.lights=this.fog=!1;this.setValues(a)}function Bc(a){w.call(this);this.type="Sprite";this.material=void 0!==a?a:new Ya}function Cc(){w.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Dc(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn("THREE.Skeleton boneInverses is the wrong length."),$/;"	r
valueSize	js/three.js	/^				stride = this.valueSize,$/;"	r
valueSize	js/three.js	/^				stride = this.valueSize;$/;"	r
valueSize	js/three.js	/^			var stride = this.valueSize,$/;"	r
valueSize	js/three.js	/^			var valueSize = this.getValueSize();$/;"	r
valueSize	js/three.js	/^		this.valueSize = sampleSize;$/;"	r
valueSize	js/three.js	/^		this.valueSize = valueSize;$/;"	r
valueSize	js/three.min.js	/^d=this.valueSize;a*=d;for(var e=0;e!==d;++e)b[e]=c[a+e];return b},interpolate_:function(){throw Error("call to abstract method");},intervalChanged_:function(){}});Object.assign(xa.prototype,{beforeStart_:xa.prototype.copySampleValue_,afterEnd_:xa.prototype.copySampleValue_});Cd.prototype=Object.assign(Object.create(xa.prototype),{constructor:Cd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){var d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=$/;"	r
valueSize	js/three.min.js	/^this.valueSize,c=this.buffer;a=a*b+b;var d=this.cumulativeWeight,e=this.binding;this.cumulativeWeight=0;1>d&&this._mixBufferRegion(c,a,3*b,1-d,b);for(var d=b,f=b+b;d!==f;++d)if(c[d]!==c[d+b]){e.setValue(c,a);break}},saveOriginalState:function(){var a=this.buffer,b=this.valueSize,c=3*b;this.binding.getValue(a,c);for(var d=b;d!==c;++d)a[d]=a[c+d%b];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(a,b,c,d,e){if(.5<=d)for(d=$/;"	r
values	js/three.js	/^						var values = [];$/;"	r
values	js/three.js	/^					var values = [];$/;"	r
values	js/three.js	/^				json.values = values;$/;"	r
values	js/three.js	/^				this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );$/;"	r
values	js/three.js	/^				this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );$/;"	r
values	js/three.js	/^				values = AnimationUtils.sortedArray( values, 1, order );$/;"	r
values	js/three.js	/^				values = interpolant.sampleValues;$/;"	r
values	js/three.js	/^				values = this.sampleValues,$/;"	r
values	js/three.js	/^				values = this.values,$/;"	r
values	js/three.js	/^				var values = [];$/;"	r
values	js/three.js	/^			 var values = [];$/;"	r
values	js/three.js	/^		this.values = AnimationUtils.convertArray( values, this.ValueBufferType );$/;"	r
variantIndex	js/three.js	/^				var variantIndex = 0;$/;"	r
vc	js/three.min.js	/^b,c)}function vc(a,b,c){O.call(this,new Uint8ClampedArray(a),b,c)}function wc(a,b,c){O.call(this,new Int16Array(a),b,c)}function db(a,b,c){O.call(this,new Uint16Array(a),b,c)}function xc(a,b,c){O.call(this,new Int32Array(a),b,c)}function eb(a,b,c){O.call(this,new Uint32Array(a),b,c)}function z(a,b,c){O.call(this,new Float32Array(a),b,c)}function yc(a,b,c){O.call(this,new Float64Array(a),b,c)}function Je(){this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=$/;"	r
vec	js/three.js	/^				var vec = new Vector4();$/;"	r
vec	js/three.js	/^			var vec = new Vector3();$/;"	r
vec	js/three.js	/^			var vec = pt2.clone().sub( pt1 );$/;"	r
vec	js/three.js	/^		function scalePt2( pt, vec, size ) {$/;"	r
vecX	js/three.js	/^			var vecX = - this.positionScreen.x * 2;$/;"	r
vecY	js/three.js	/^			var vecY = - this.positionScreen.y * 2;$/;"	r
vector	js/three.js	/^					m1.lookAt( this.position, vector, this.up );$/;"	r
vector	js/three.js	/^					vector = new Vector2();$/;"	r
vector	js/three.js	/^					vector = new Vector3();$/;"	r
vector	js/three.js	/^					vector = new Vector4();$/;"	r
vector	js/three.js	/^				var vector = vectors[ i ];$/;"	r
vector	js/three.js	/^			var vector = new Vector3();$/;"	r
vector	js/three.js	/^		var vector = new Vector3();$/;"	r
vector2	js/three.js	/^		var vector2 = new Vector3();$/;"	r
vector3	js/three.js	/^		var vector3 = new Vector3();$/;"	r
version	js/GLTFLoader.js	/^			version: headerView.getUint32( 4, true ),$/;"	r
version	js/three.js	/^					textureProperties.__version = texture.version;$/;"	r
version	js/three.js	/^					version: 4.5,$/;"	r
version	js/three.js	/^				data.version = attribute.version;$/;"	r
version	js/three.js	/^				version: attribute.version$/;"	r
version	js/three.js	/^			textureProperties.__version = texture.version;$/;"	r
version	js/three.js	/^		this.version = 0;$/;"	r
version	js/three.js	/^		var version = parseFloat( \/^WebGL\\ ([0-9])\/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );$/;"	r
version	js/three.min.js	/^this.type="InstancedBufferGeometry";this.maxInstancedCount=void 0}function le(a,b,c,d){this.uuid=R.generateUUID();this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function jc(a,b){this.uuid=R.generateUUID();this.array=a;this.stride=b;this.count=void 0!==a?a.length\/b:0;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function me(a,b,c){jc.call(this,a,b);this.meshPerAttribute=c||1}function ne(a,b,c){O.call(this,a,b);this.meshPerAttribute=$/;"	r
version	js/three.min.js	/^this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function O(a,b,c){if(Array.isArray(a))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=R.generateUUID();this.name="";this.array=a;this.itemSize=b;this.count=void 0!==a?a.length\/b:0;this.normalized=!0===c;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function tc(a,b,c){O.call(this,new Int8Array(a),b,c)}function uc(a,b,c){O.call(this,new Uint8Array(a),$/;"	r
versioning	js/three.js	/^				versioning = this.Versioning.MatrixWorldNeedsUpdate;$/;"	r
versioning	js/three.js	/^				versioning = this.Versioning.NeedsUpdate;$/;"	r
versioning	js/three.js	/^			var versioning = this.Versioning.None;$/;"	r
vert	js/three.js	/^					vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );$/;"	r
vert	js/three.js	/^				vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];$/;"	r
vert	js/three.js	/^				vert = scalePt2( contour[ i ], contourMovements[ i ], bs );$/;"	r
vert	js/three.js	/^			vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];$/;"	r
vert	js/three.js	/^			vert, vlen = vertices.length,$/;"	r
vertIndices	js/three.js	/^					vertIndices = [];$/;"	r
vertex	js/three.js	/^							var vertex = new Vector3();$/;"	r
vertex	js/three.js	/^						var vertex = vertices[ face[ keys[ j ] ] ];$/;"	r
vertex	js/three.js	/^					vertex = new Vector3();$/;"	r
vertex	js/three.js	/^					vertex, face, faceA, faceB, hex, normal,$/;"	r
vertex	js/three.js	/^				var vertex = shapeVertices[ i ];$/;"	r
vertex	js/three.js	/^				var vertex = sourceVertices[ e.index1 ];$/;"	r
vertex	js/three.js	/^				var vertex = this.vertices[ i ];$/;"	r
vertex	js/three.js	/^				var vertex = vertices2[ i ];$/;"	r
vertex	js/three.js	/^				vertex = geometry.vertices[ e.index1 ];$/;"	r
vertex	js/three.js	/^				vertex = geometry.vertices[ e.index2 ];$/;"	r
vertex	js/three.js	/^				vertex = sourceVertices[ e.index2 ];$/;"	r
vertex	js/three.js	/^				vertex: gl.getAttribLocation( program, 'position' ),$/;"	r
vertex	js/three.js	/^			var vertex = new Vector3();$/;"	r
vertex	js/three.js	/^			vertex = new Vector3();$/;"	r
vertex	js/three.js	/^		var vertex = new Vector3();$/;"	r
vertex	js/three.js	/^		var vertex;$/;"	r
vertexBuffer	js/three.js	/^			vertexBuffer = gl.createBuffer();$/;"	r
vertexBuffer	js/three.js	/^		var vertexBuffer = [];$/;"	r
vertexBuffer	js/three.js	/^		var vertexBuffer, elementBuffer;$/;"	r
vertexColors	js/GLTFLoader.js	/^							material.vertexColors = THREE.VertexColors;$/;"	r
vertexColors	js/three.js	/^					faceVertexColors = face.vertexColors;$/;"	r
vertexColors	js/three.js	/^					var vertexColors = face.vertexColors;$/;"	r
vertexColors	js/three.js	/^				var vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];$/;"	r
vertexColors	js/three.js	/^				var vertexColors = face.vertexColors;$/;"	r
vertexColors	js/three.js	/^				vertexColors: material.vertexColors,$/;"	r
vertexColors	js/three.js	/^			if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;$/;"	r
vertexColors	js/three.js	/^			if ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;$/;"	r
vertexColors	js/three.js	/^			this.vertexColors = source.vertexColors;$/;"	r
vertexColors	js/three.js	/^		this.vertexColors = Array.isArray( color ) ? color : [];$/;"	r
vertexColors	js/three.js	/^		this.vertexColors = NoColors; \/\/ THREE.NoColors, THREE.VertexColors, THREE.FaceColors$/;"	r
vertexColors	js/three.js	/^		var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );$/;"	r
vertexColors	js/three.min.js	/^b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&&(h[a]=[]);h[a].push(f.length\/3-1)}var d=new C,e=new T({color:16777215,vertexColors:1}),f=[],g=[],h={},k=new H(16755200),l=new H(16711680),q=new H(43775),n=new H(16777215),u=new H(3355443);b("n1","n2",k);b("n2","n4",k);b("n4","n3",k);b("n3","n1",k);b("f1","f2",k);b("f2","f4",k);b("f4","f3",k);b("f3","f1",k);b("n1","f1",k);b("n2","f2",k);b("n3","f3",k);b("n4","f4",k);b("p","n1",l);b("p","n2",l);b("p","n3",l);b("p","n4",$/;"	r
vertexColors	js/three.min.js	/^e:new H;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}function L(){Object.defineProperty(this,"id",{value:Of+=2});this.uuid=R.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=$/;"	r
vertexCopy	js/three.js	/^				var vertexCopy = vertex.clone();$/;"	r
vertexCounter	js/three.js	/^			numberOfVertices += vertexCounter;$/;"	r
vertexCounter	js/three.js	/^			var vertexCounter = 0;$/;"	r
vertexGlsl	js/three.js	/^		var vertexGlsl = prefixVertex + vertexShader;$/;"	r
vertexLog	js/three.js	/^		var vertexLog = gl.getShaderInfoLog( glVertexShader );$/;"	r
vertexNormals	js/three.js	/^						vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };$/;"	r
vertexNormals	js/three.js	/^					faceVertexNormals = face.vertexNormals,$/;"	r
vertexNormals	js/three.js	/^					morphNormal.vertexNormals = [];$/;"	r
vertexNormals	js/three.js	/^					var vertexNormals = face.vertexNormals;$/;"	r
vertexNormals	js/three.js	/^					vertexNormals = morphNormals.vertexNormals[ f ];$/;"	r
vertexNormals	js/three.js	/^				face.vertexNormals = face.__originalVertexNormals;$/;"	r
vertexNormals	js/three.js	/^				var vertexNormals = face.vertexNormals;$/;"	r
vertexNormals	js/three.js	/^				var vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];$/;"	r
vertexNormals	js/three.js	/^		this.vertexNormals = Array.isArray( normal ) ? normal : [];$/;"	r
vertexOffset	js/three.js	/^				vertexOffset = this.vertices.length,$/;"	r
vertexShader	js/GLTFLoader.js	/^					vertexShader: params.vertexShader,$/;"	r
vertexShader	js/GLTFLoader.js	/^				params.vertexShader = shader.vertexShader;$/;"	r
vertexShader	js/three.js	/^							vertexShader: ShaderLib.cube.vertexShader,$/;"	r
vertexShader	js/three.js	/^						vertexShader: material.vertexShader,$/;"	r
vertexShader	js/three.js	/^						vertexShader: shader.vertexShader,$/;"	r
vertexShader	js/three.js	/^				vertexShader: [$/;"	r
vertexShader	js/three.js	/^				vertexShader: {$/;"	r
vertexShader	js/three.js	/^			if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;$/;"	r
vertexShader	js/three.js	/^			var vertexShader = gl.createShader( gl.VERTEX_SHADER );$/;"	r
vertexShader	js/three.js	/^			vertexShader = unrollLoops( vertexShader );$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.cube_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.depth_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.distanceRGBA_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.equirect_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.linedashed_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.meshbasic_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.meshlambert_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.meshphong_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.meshphysical_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.normal_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.points_vert,$/;"	r
vertexShader	js/three.js	/^			vertexShader: ShaderChunk.shadow_vert,$/;"	r
vertexShader	js/three.js	/^		data.vertexShader = this.vertexShader;$/;"	r
vertexShader	js/three.js	/^		this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';$/;"	r
vertexShader	js/three.js	/^		this.vertexShader = glVertexShader;$/;"	r
vertexShader	js/three.js	/^		this.vertexShader = source.vertexShader;$/;"	r
vertexShader	js/three.js	/^		var vertexShader = shader.vertexShader;$/;"	r
vertexShader	js/three.js	/^		vertexShader = parseIncludes( vertexShader );$/;"	r
vertexShader	js/three.js	/^		vertexShader = replaceLightNums( vertexShader, parameters );$/;"	r
vertexShader	js/three.js	/^		vertexShader: ShaderChunk.meshphysical_vert,$/;"	r
vertexShader	js/three.min.js	/^"gl.VALIDATE_STATUS",g.getProgramParameter(p,g.VALIDATE_STATUS),"gl.getProgramInfoLog",f,e,q);else if(""!==f)console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",f);else if(""===e||""===q)u=!1;u&&(this.diagnostics={runnable:n,material:d,programLog:f,vertexShader:{log:e,prefix:h},fragmentShader:{log:q,prefix:b}});g.deleteShader(k);g.deleteShader(l);var B;this.getUniforms=function(){void 0===B&&(B=new cb(g,p,a));return B};var I;this.getAttributes=function(){if(void 0===I){for(var a={},b=g.getProgramParameter(p,$/;"	r
vertexShader	js/three.min.js	/^E.fog]),vertexShader:V.points_vert,fragmentShader:V.points_frag},dashed:{uniforms:Ea.merge([E.common,E.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:V.linedashed_vert,fragmentShader:V.linedashed_frag},depth:{uniforms:Ea.merge([E.common,E.displacementmap]),vertexShader:V.depth_vert,fragmentShader:V.depth_frag},normal:{uniforms:Ea.merge([E.common,E.bumpmap,E.normalmap,E.displacementmap,{opacity:{value:1}}]),vertexShader:V.normal_vert,fragmentShader:V.normal_frag},cube:{uniforms:{tCube:{value:null},$/;"	r
vertexShader	js/three.min.js	/^ib={basic:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.fog]),vertexShader:V.meshbasic_vert,fragmentShader:V.meshbasic_frag},lambert:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.fog,E.lights,{emissive:{value:new H(0)}}]),vertexShader:V.meshlambert_vert,fragmentShader:V.meshlambert_frag},phong:{uniforms:Ea.merge([E.common,E.specularmap,E.envmap,E.aomap,E.lightmap,E.emissivemap,E.bumpmap,E.normalmap,E.displacementmap,E.gradientmap,$/;"	r
vertexTextures	js/three.js	/^			vertexTextures: vertexTextures,$/;"	r
vertexTextures	js/three.js	/^		var vertexTextures = maxVertexTextures > 0;$/;"	r
vertexUvs	js/three.js	/^					var vertexUvs = faceVertexUvs[ 0 ][ i ];$/;"	r
vertexUvs	js/three.js	/^					var vertexUvs = faceVertexUvs[ 1 ][ i ];$/;"	r
vertices	js/three.js	/^								data.vertices,$/;"	r
vertices	js/three.js	/^						var vertices = geometry.vertices;$/;"	r
vertices	js/three.js	/^					morphTarget.vertices = [];$/;"	r
vertices	js/three.js	/^					var vertices = geometry.vertices;$/;"	r
vertices	js/three.js	/^					vertices = json.vertices,$/;"	r
vertices	js/three.js	/^				tmpGeo.vertices = this.morphTargets[ i ].vertices;$/;"	r
vertices	js/three.js	/^				var vertices = objGeometry.vertices;$/;"	r
vertices	js/three.js	/^				vertices1 = this.vertices,$/;"	r
vertices	js/three.js	/^				vertices2 = geometry.vertices,$/;"	r
vertices	js/three.js	/^				vertices: 0,$/;"	r
vertices	js/three.js	/^			_infoRender.vertices = 0;$/;"	r
vertices	js/three.js	/^			data.data.vertices = vertices;$/;"	r
vertices	js/three.js	/^			gl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );$/;"	r
vertices	js/three.js	/^			this.vertices = [];$/;"	r
vertices	js/three.js	/^			this.vertices = unique;$/;"	r
vertices	js/three.js	/^			var vertices = [];$/;"	r
vertices	js/three.js	/^			var vertices = geometry.vertices;$/;"	r
vertices	js/three.js	/^			var vertices = new Float32Array( [$/;"	r
vertices	js/three.js	/^			var vertices = objGeometry.vertices;$/;"	r
vertices	js/three.js	/^			var vertices = source.vertices;$/;"	r
vertices	js/three.js	/^			var vertices = this.vertices;$/;"	r
vertices	js/three.js	/^			vertices = new Array( this.vertices.length );$/;"	r
vertices	js/three.js	/^			vertices = vertices.concat( ahole );$/;"	r
vertices	js/three.js	/^			vertices = vertices.reverse();$/;"	r
vertices	js/three.js	/^			vertices: vertices,$/;"	r
vertices	js/three.js	/^		PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );$/;"	r
vertices	js/three.js	/^		generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {$/;"	r
vertices	js/three.js	/^		generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {$/;"	r
vertices	js/three.js	/^		this.vertices = [];$/;"	r
vertices	js/three.js	/^		var contour = vertices; \/\/ vertices has all points but contour has only points of circumference$/;"	r
vertices	js/three.js	/^		var sourceVertices = geometry2.vertices;$/;"	r
vertices	js/three.js	/^		var vertices = [$/;"	r
vertices	js/three.js	/^		var vertices = [], colors = [];$/;"	r
vertices	js/three.js	/^		var vertices = [];$/;"	r
vertices	js/three.js	/^		var vertices = shapePoints.shape;$/;"	r
vertices	js/three.min.js	/^b,c)}function vc(a,b,c){O.call(this,new Uint8ClampedArray(a),b,c)}function wc(a,b,c){O.call(this,new Int16Array(a),b,c)}function db(a,b,c){O.call(this,new Uint16Array(a),b,c)}function xc(a,b,c){O.call(this,new Int32Array(a),b,c)}function eb(a,b,c){O.call(this,new Uint32Array(a),b,c)}function z(a,b,c){O.call(this,new Float32Array(a),b,c)}function yc(a,b,c){O.call(this,new Float64Array(a),b,c)}function Je(){this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=$/;"	r
vertices	js/three.min.js	/^e:new H;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}function L(){Object.defineProperty(this,"id",{value:Of+=2});this.uuid=R.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=$/;"	r
vertices	js/three.min.js	/^q);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){return(new L).copy(this)},copy:function(a){var b,c,d;this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.name=a.name;var e=a.vertices;var f=0;for(b=e.length;f<b;f++)this.vertices.push(e[f].clone());e=a.colors;f=0;for(b=e.length;f<b;f++)this.colors.push(e[f].clone());$/;"	r
vertices1	js/three.js	/^				vertices1 = this.vertices,$/;"	r
vertices2	js/three.js	/^				vertices2 = geometry.vertices,$/;"	r
verticesArray	js/three.js	/^			var uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );$/;"	r
verticesArray	js/three.js	/^			var uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );$/;"	r
verticesArray	js/three.js	/^		var verticesArray = arrays.position;$/;"	r
verticesArray	js/three.js	/^		var verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];$/;"	r
verticesMap	js/three.js	/^			var verticesMap = {}; \/\/ Hashmap for looking up vertices by position coordinates (and making sure they are unique)$/;"	r
verticesMovements	js/three.js	/^			oneHoleMovements, verticesMovements = contourMovements.concat();$/;"	r
verticesMovements	js/three.js	/^			verticesMovements = verticesMovements.concat( oneHoleMovements );$/;"	r
verticesNeedUpdate	js/three.js	/^				direct.verticesNeedUpdate = geometry.verticesNeedUpdate;$/;"	r
verticesNeedUpdate	js/three.js	/^				geometry.verticesNeedUpdate = false;$/;"	r
verticesNeedUpdate	js/three.js	/^			this.verticesNeedUpdate = geometry.verticesNeedUpdate;$/;"	r
verticesNeedUpdate	js/three.js	/^			this.verticesNeedUpdate = source.verticesNeedUpdate;$/;"	r
verticesNeedUpdate	js/three.js	/^			this.verticesNeedUpdate = true;$/;"	r
verticesNeedUpdate	js/three.js	/^		this.verticesNeedUpdate = false;$/;"	r
verticesNeedUpdate	js/three.min.js	/^I[y.b],I[y.c])}for(B=0;B<n;B++)I=q[B].vertexNormals[l],m[B].push(I.a,I.b,I.c);t&&this.skinIndices.push(r[y.a],r[y.b],r[y.c]);x&&this.skinWeights.push(p[y.a],p[y.b],p[y.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this}});var Pf=1;Object.assign(C.prototype,ia.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},$/;"	r
verticesRow	js/three.js	/^			var verticesRow = [];$/;"	r
verts	js/three.js	/^					verts = [],$/;"	r
vfov	script.js	/^var vfov     = 60;              \/* vertical field of view *\/$/;"	r
video	js/three.js	/^				\/\/ regular Texture (image, video, canvas)$/;"	r
video	js/three.js	/^			var video = scope.image;$/;"	r
video	js/three.js	/^		Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );$/;"	r
view	js/three.js	/^							var view = new Uint8Array( data.length );$/;"	r
view	js/three.js	/^				this.view = {$/;"	r
view	js/three.js	/^				view = this.view;$/;"	r
view	js/three.js	/^			this.view = source.view === null ? null : Object.assign( {}, source.view );$/;"	r
view	js/three.js	/^		this.view = null;$/;"	r
view	js/three.min.js	/^this.view=null===a.view?null:Object.assign({},a.view);this.filmGauge=a.filmGauge;this.filmOffset=a.filmOffset;return this},setFocalLength:function(a){a=.5*this.getFilmHeight()\/a;this.fov=2*R.RAD2DEG*Math.atan(a);this.updateProjectionMatrix()},getFocalLength:function(){var a=Math.tan(.5*R.DEG2RAD*this.fov);return.5*this.getFilmHeight()\/a},getEffectiveFOV:function(){return 2*R.RAD2DEG*Math.atan(Math.tan(.5*R.DEG2RAD*this.fov)\/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,$/;"	r
viewMatrix	js/three.js	/^						viewMatrix = camera.matrixWorldInverse;$/;"	r
viewMatrix	js/three.js	/^			var viewMatrix = camera.matrixWorldInverse;$/;"	r
viewNormalMatrix	js/three.js	/^			viewNormalMatrix = new Matrix3(),$/;"	r
viewport	js/three.js	/^			viewport: viewport,$/;"	r
viewport	js/three.js	/^		function viewport( viewport ) {$/;"	r
viewport	js/three.js	/^		this.viewport = new Vector4( 0, 0, width, height );$/;"	r
visible	js/three.js	/^				if ( data.visible !== undefined ) object.visible = data.visible;$/;"	r
visible	js/three.js	/^			if ( json.visible !== undefined ) material.visible = json.visible;$/;"	r
visible	js/three.js	/^			result.visible = material.visible;$/;"	r
visible	js/three.js	/^			this.lightDistance.visible = false;$/;"	r
visible	js/three.js	/^			this.lightDistance.visible = true;$/;"	r
visible	js/three.js	/^			this.visible = source.visible;$/;"	r
visible	js/three.js	/^			var visible = object.layers.test( camera.layers );$/;"	r
visible	js/three.js	/^		this.visible = true;$/;"	r
vl	js/three.js	/^						for ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {$/;"	r
vl	js/three.js	/^			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {$/;"	r
vlen	js/three.js	/^			vert, vlen = vertices.length,$/;"	r
vpDimensions	js/three.js	/^						var vpDimensions = cube2DViewPorts[ face ];$/;"	r
vpHeight	js/three.js	/^					cube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );$/;"	r
vpHeight	js/three.js	/^					cube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );$/;"	r
vpHeight	js/three.js	/^					cube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );$/;"	r
vpHeight	js/three.js	/^					cube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );$/;"	r
vpHeight	js/three.js	/^					var vpHeight = _shadowMapSize.y;$/;"	r
vpWidth	js/three.js	/^					var vpWidth = _shadowMapSize.x;$/;"	r
vr	js/three.js	/^		this.vr = vr;$/;"	r
vr	js/three.js	/^		var vr = new WebVRManager( _this );$/;"	r
w	js/three.js	/^						var w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;$/;"	r
w	js/three.js	/^					vec.w = skinWeight.getW( i );$/;"	r
w	js/three.js	/^					w = v + 1; if ( nv <= w ) w = 0; \/* next     *\/$/;"	r
w	js/three.js	/^				array[ offset ++ ] = vector.w;$/;"	r
w	js/three.js	/^				this._w = w;$/;"	r
w	js/three.js	/^			array[ offset + 3 ] = this.w;$/;"	r
w	js/three.js	/^			setPoint( 'cf2', w, 0, 1 );$/;"	r
w	js/three.js	/^			setPoint( 'cn2', w, 0, - 1 );$/;"	r
w	js/three.js	/^			setPoint( 'f2', w, - h, 1 );$/;"	r
w	js/three.js	/^			setPoint( 'f4', w, h, 1 );$/;"	r
w	js/three.js	/^			setPoint( 'n2', w, - h, - 1 );$/;"	r
w	js/three.js	/^			setPoint( 'n4', w, h, - 1 );$/;"	r
w	js/three.js	/^			this._w = quaternion.w;$/;"	r
w	js/three.js	/^			this._w = w;$/;"	r
w	js/three.js	/^			this.array[ index * this.itemSize + 3 ] = w;$/;"	r
w	js/three.js	/^			this.array[ index + 3 ] = w;$/;"	r
w	js/three.js	/^			this.constant = w;$/;"	r
w	js/three.js	/^			this.data.array[ index * this.data.stride + this.offset + 3 ] = w;$/;"	r
w	js/three.js	/^			this.data.array[ index + 3 ] = w;$/;"	r
w	js/three.js	/^			this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );$/;"	r
w	js/three.js	/^			this.w = ( v.w !== undefined ) ? v.w : 1;$/;"	r
w	js/three.js	/^			this.w = - this.w;$/;"	r
w	js/three.js	/^			this.w = 2 * Math.acos( q.w );$/;"	r
w	js/three.js	/^			this.w = Math.acos( ( m11 + m22 + m33 - 1 ) \/ 2 );$/;"	r
w	js/three.js	/^			this.w = Math.ceil( this.w );$/;"	r
w	js/three.js	/^			this.w = Math.floor( this.w );$/;"	r
w	js/three.js	/^			this.w = Math.max( min.w, Math.min( max.w, this.w ) );$/;"	r
w	js/three.js	/^			this.w = Math.max( this.w, v.w );$/;"	r
w	js/three.js	/^			this.w = Math.min( this.w, v.w );$/;"	r
w	js/three.js	/^			this.w = Math.round( this.w );$/;"	r
w	js/three.js	/^			this.w = a.w + b.w;$/;"	r
w	js/three.js	/^			this.w = a.w - b.w;$/;"	r
w	js/three.js	/^			this.w = array[ offset + 3 ];$/;"	r
w	js/three.js	/^			this.w = attribute.getW( index );$/;"	r
w	js/three.js	/^			this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;$/;"	r
w	js/three.js	/^			this.w = scalar;$/;"	r
w	js/three.js	/^			this.w = w;$/;"	r
w	js/three.js	/^			var w = 1 \/ ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );$/;"	r
w	js/three.js	/^			var w = 1, h = 1;$/;"	r
w	js/three.js	/^			var w = 1.0 \/ ( right - left );$/;"	r
w	js/three.js	/^		this.w = ( w !== undefined ) ? w : 1;$/;"	r
w	js/three.js	/^	var cube_vert = "varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n";$/;"	r
w	js/three.js	/^	var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n";$/;"	r
w	js/three.min.js	/^cube_vert:"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n",depth_frag:"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n",$/;"	r
w	js/three.min.js	/^e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x\/b,this.y=a.y\/b,this.z=a.z\/b);return this},setAxisAngleFromRotationMatrix:function(a){a=a.elements;var b=a[0];var c=a[4];var d=a[8],e=a[1],f=a[5],g=a[9];var h=a[2];var k=a[6];var l=a[10];if(.01>Math.abs(c-e)&&.01>Math.abs(d-h)&&.01>Math.abs(g-k)){if(.1>Math.abs(c+$/;"	r
w	js/three.min.js	/^logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n",$/;"	r
w	js/three.min.js	/^this.w=Math.acos((b+f+l-1)\/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));this.w=Math.max(a.w,Math.min(b.w,$/;"	r
w	js/three.min.js	/^this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},$/;"	r
w	js/three.min.js	/^var p=k(v[0]),x=f.convert(b.format),B=f.convert(b.type);m(a.TEXTURE_CUBE_MAP,b,p);for(t=0;6>t;t++)if(q)for(var y,I=v[t].mipmaps,w=0,z=I.length;w<z;w++)y=I[w],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(x)?c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,w,x,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+t,w,x,y.width,y.height,$/;"	r
w	js/three.min.js	/^w=b.createShader(b.FRAGMENT_SHADER),Z=b.createShader(b.VERTEX_SHADER),C="precision "+e.precision+" float;\\n";b.shaderSource(w,C+M.fragmentShader);b.shaderSource(Z,C+M.vertexShader);b.compileShader(w);b.compileShader(Z);b.attachShader(z,w);b.attachShader(z,Z);b.linkProgram(z);B=z;r=b.getAttribLocation(B,"position");m=b.getAttribLocation(B,"uv");f=b.getUniformLocation(B,"renderType");g=b.getUniformLocation(B,"map");h=b.getUniformLocation(B,"occlusionMap");k=b.getUniformLocation(B,"opacity");l=b.getUniformLocation(B,$/;"	r
w0	js/three.js	/^				w0 = src0[ srcOffset0 + 3 ],$/;"	r
w0	js/three.js	/^				w0 = w0 * s + w1 * tDir;$/;"	r
w0	js/three.js	/^			dst[ dstOffset + 3 ] = w0;$/;"	r
w1	js/three.js	/^				w1 = src1[ srcOffset1 + 3 ];$/;"	r
wP	js/three.js	/^				wP = this._weightPrev,	wN = this._weightNext,$/;"	r
wantedRotation	js/three.js	/^				flare.wantedRotation = flare.x * Math.PI * 0.25;$/;"	r
warned	js/three.js	/^						warned = true;$/;"	r
warned	js/three.js	/^					warned = true;$/;"	r
warned	js/three.js	/^			var warned = false;$/;"	r
warp	js/three.js	/^		warp: function ( startTimeScale, endTimeScale, duration ) {$/;"	r
we	js/three.js	/^			\/\/ if faces are completely degenerate after merging vertices, we$/;"	r
we	js/three.min.js	/^Ta;Ta.prototype.isCubeTexture=!0;Object.defineProperty(Ta.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}});var Be=new da,Ce=new Ta,we=[],ye=[],Ae=new Float32Array(16),ze=new Float32Array(9);Ge.prototype.setValue=function(a,b){for(var c=this.seq,d=0,e=c.length;d!==e;++d){var f=c[d];f.setValue(a,b[f.id])}};var Od=\/([\\w\\d_]+)(\\])?(\\[|\\.)?\/g;cb.prototype.setValue=function(a,b,c){b=this.map[b];void 0!==b&&b.setValue(a,c,this.renderer)};cb.prototype.setOptional=function(a,$/;"	r
webglDepthTexture	js/three.js	/^				_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );$/;"	r
webglDepthTexture	js/three.js	/^				_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );$/;"	r
webglDepthTexture	js/three.js	/^			var webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;$/;"	r
webglSlot	js/three.js	/^				currentTextureSlot = webglSlot;$/;"	r
webglTexture	js/three.js	/^				boundTexture.texture = webglTexture;$/;"	r
webglTexture	js/three.js	/^				var webglTexture = properties.get( texture ).__webglTexture;$/;"	r
webglType	js/three.js	/^				boundTexture.type = webglType;$/;"	r
weight	js/three.js	/^				currentWeight += weight;$/;"	r
weight	js/three.js	/^				currentWeight = weight;$/;"	r
weight	js/three.js	/^				weight = this.cumulativeWeight,$/;"	r
weight	js/three.js	/^				weight = this.weight;$/;"	r
weight	js/three.js	/^			this._effectiveWeight = weight;$/;"	r
weight	js/three.js	/^			this.weight = weight;$/;"	r
weight	js/three.js	/^			var weight = 0;$/;"	r
weight	js/three.js	/^			var weight = this._updateWeight( time );$/;"	r
weight	js/three.js	/^			weight = 1;$/;"	r
weight	js/three.js	/^		this.weight = 1;$/;"	r
weight	js/three.js	/^		var weight = p - intPoint;$/;"	r
weight0	js/three.js	/^				weight0 = 1 - weight1;$/;"	r
weight1	js/three.js	/^				weight1 = ( t - t0 ) \/ ( t1 - t0 ),$/;"	r
weightInterpolant	js/three.js	/^			var weightInterpolant = this._weightInterpolant;$/;"	r
weightNow	js/three.js	/^		_scheduleFading: function ( duration, weightNow, weightThen ) {$/;"	r
weightThen	js/three.js	/^			times[ 1 ] = now + duration;	values[ 1 ] = weightThen;$/;"	r
weights	js/GLTFLoader.js	/^		weights: 'morphTargetInfluences'$/;"	r
wf	js/three.min.js	/^case 35668:case 35672:return Ee;case 35669:case 35673:return Fe}}function wf(a,b){a.uniform1fv(this.addr,b)}function xf(a,b){a.uniform1iv(this.addr,b)}function yf(a,b){a.uniform2fv(this.addr,Fb(b,this.size,2))}function zf(a,b){a.uniform3fv(this.addr,Fb(b,this.size,3))}function Af(a,b){a.uniform4fv(this.addr,Fb(b,this.size,4))}function Bf(a,b){a.uniformMatrix2fv(this.addr,!1,Fb(b,this.size,4))}function Cf(a,b){a.uniformMatrix3fv(this.addr,!1,Fb(b,this.size,9))}function Df(a,b){a.uniformMatrix4fv(this.addr,$/;"	r
when	js/three.js	/^					\/\/ now, in case this material supports lights - or later, when$/;"	r
which	js/GLTFLoader.js	/^		\/\/ Avoid the String.fromCharCode.apply(null, array) shortcut, which$/;"	r
width	js/three.js	/^								data.width,$/;"	r
width	js/three.js	/^								images[ f ].width = texDatas.width;$/;"	r
width	js/three.js	/^							var width = bounds.z * _width;$/;"	r
width	js/three.js	/^						texture.image.width = texDatas.width;$/;"	r
width	js/three.js	/^						width: texDatas.width,$/;"	r
width	js/three.js	/^					canvas.width = image.width;$/;"	r
width	js/three.js	/^					texture.image.width = texData.width;$/;"	r
width	js/three.js	/^					width: 1,$/;"	r
width	js/three.js	/^				_canvas.style.width = width + 'px';$/;"	r
width	js/three.js	/^				canvas.width = Math.floor( image.width * scale );$/;"	r
width	js/three.js	/^				canvas.width = _Math.floorPowerOfTwo( image.width );$/;"	r
width	js/three.js	/^				currentLineWidth = width;$/;"	r
width	js/three.js	/^				renderTarget.depthTexture.image.width = renderTarget.width;$/;"	r
width	js/three.js	/^				this.shadow.mapSize.width = value;$/;"	r
width	js/three.js	/^				this.width = width;$/;"	r
width	js/three.js	/^				width = this.aspect * height,$/;"	r
width	js/three.js	/^				width: _width * _pixelRatio,$/;"	r
width	js/three.js	/^				width: _width,$/;"	r
width	js/three.js	/^				width: {},$/;"	r
width	js/three.js	/^			_canvas.width = width * _pixelRatio;$/;"	r
width	js/three.js	/^			_canvas.width = width * pixelRatio;$/;"	r
width	js/three.js	/^			_scissor.set( x, _height - y - height, width, height );$/;"	r
width	js/three.js	/^			_viewport.set( x, _height - y - height, width, height );$/;"	r
width	js/three.js	/^			_width = _canvas.width,$/;"	r
width	js/three.js	/^			_width = width;$/;"	r
width	js/three.js	/^			canvas.width = 8;$/;"	r
width	js/three.js	/^			data.object.width = this.width;$/;"	r
width	js/three.js	/^			this.view.width = width;$/;"	r
width	js/three.js	/^			this.width = source.width;$/;"	r
width	js/three.js	/^			width: width,$/;"	r
width	js/three.js	/^		WebGLRenderTarget.call( this, width, height, options );$/;"	r
width	js/three.js	/^		buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); \/\/ nz$/;"	r
width	js/three.js	/^		this.image = { data: data, width: width, height: height };$/;"	r
width	js/three.js	/^		this.width = ( width !== undefined ) ? width : 10;$/;"	r
width	js/three.js	/^		this.width = width;$/;"	r
width	js/three.js	/^		var width = ( linewidth !== undefined ) ? linewidth : 1;$/;"	r
width	js/three.js	/^		width = width || 1;$/;"	r
width	js/three.js	/^	function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {$/;"	r
width	js/three.js	/^	function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {$/;"	r
width	js/three.min.js	/^a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function bb(a,b,c,d,e,f,g,h,k,l,q,n){da.call(this,null,f,g,h,k,l,d,e,q,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:1003;this.minFilter=void 0!==l?l:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Ta(a,b,c,d,e,f,g,h,k,l){a=void 0!==a?a:[];da.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,k,l);this.flipY=!1}function Fb(a,b,c){var d=a[0];if(0>=d||0<d)return a;var e=b*c,f=we[e];void 0===f&&(f=new Float32Array(e),$/;"	r
width	js/three.min.js	/^b,c){this.uuid=R.generateUUID();this.width=a;this.height=b;this.scissor=new ba(0,0,a,b);this.scissorTest=!1;this.viewport=new ba(0,0,a,b);c=c||{};void 0===c.minFilter&&(c.minFilter=1006);this.texture=new da(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding);this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function Eb(a,b,c){Db.call(this,$/;"	r
width	js/three.min.js	/^this.width;a.object.height=this.height;return a}});var S={arraySlice:function(a,b,c){return S.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return!a||!c&&a.constructor===b?a:"number"===typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){for(var b=a.length,c=Array(b),d=0;d!==b;++d)c[d]=d;c.sort(function(b,c){return a[b]-$/;"	r
width	js/three.min.js	/^this.width=void 0!==c?c:10;this.height=void 0!==d?d:10}function xa(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}function Cd(a,b,c,d){xa.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}function Xc(a,b,c,d){xa.call(this,a,b,c,d)}function Dd(a,b,c,d){xa.call(this,a,b,c,d)}function sb(a,b,c,d){if(void 0===a)throw Error("track name is undefined");if(void 0===b||0===$/;"	r
width	script.js	/^var width   = 600;$/;"	r
widthHalf	js/three.js	/^			var widthHalf = width \/ 2;$/;"	r
widthSegments	js/three.js	/^								data.widthSegments,$/;"	r
widthSegments	js/three.js	/^			widthSegments: widthSegments,$/;"	r
widthSegments	js/three.js	/^		this.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );$/;"	r
widthSegments	js/three.js	/^		widthSegments = Math.floor( widthSegments ) || 1;$/;"	r
widthSegments	js/three.js	/^		widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );$/;"	r
widthSegments	js/three.js	/^	function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {$/;"	r
widthSegments	js/three.js	/^	function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {$/;"	r
widthSegments	js/three.min.js	/^function Qc(a,b,c,d,e,f,g){L.call(this);this.type="SphereGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};this.fromBufferGeometry(new kb(a,b,c,d,e,f,g));this.mergeVertices()}function kb(a,b,c,d,e,f,g){C.call(this);this.type="SphereBufferGeometry";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==$/;"	r
width_half	js/three.js	/^		var width_half = width \/ 2;$/;"	r
wireframe	js/three.js	/^			if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;$/;"	r
wireframe	js/three.js	/^			if ( this.wireframe === true ) data.wireframe = this.wireframe;$/;"	r
wireframe	js/three.js	/^			result.wireframe = material.wireframe;$/;"	r
wireframe	js/three.js	/^		this.wireframe = false;$/;"	r
wireframe	js/three.js	/^		this.wireframe = source.wireframe;$/;"	r
wireframe	js/three.min.js	/^a.displacementBias;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};Wa.prototype=Object.create(Q.prototype);Wa.prototype.constructor=Wa;Wa.prototype.isMeshDistanceMaterial=!0;Wa.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.referencePosition.copy(a.referencePosition);this.nearDistance=a.nearDistance;this.farDistance=a.farDistance;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.map=a.map;this.alphaMap=a.alphaMap;this.displacementMap=$/;"	r
wireframeAttributes	js/three.js	/^		var wireframeAttributes = {};$/;"	r
wireframeLinecap	js/three.js	/^			if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;$/;"	r
wireframeLinecap	js/three.js	/^			if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;$/;"	r
wireframeLinecap	js/three.js	/^		this.wireframeLinecap = 'round';$/;"	r
wireframeLinecap	js/three.js	/^		this.wireframeLinecap = source.wireframeLinecap;$/;"	r
wireframeLinejoin	js/three.js	/^			if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;$/;"	r
wireframeLinejoin	js/three.js	/^			if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;$/;"	r
wireframeLinejoin	js/three.js	/^		this.wireframeLinejoin = 'round';$/;"	r
wireframeLinejoin	js/three.js	/^		this.wireframeLinejoin = source.wireframeLinejoin;$/;"	r
wireframeLinejoin	js/three.min.js	/^1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function qb(a){T.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}function Yd(a,b,c){var d=this,e=!1,f=0,g=0,h=void 0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){g++;if(!1===e&&void 0!==d.onStart)d.onStart(a,f,g);e=!0};this.itemEnd=function(a){f++;if(void 0!==d.onProgress)d.onProgress(a,$/;"	r
wireframeLinewidth	js/three.js	/^			if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;$/;"	r
wireframeLinewidth	js/three.js	/^			if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;$/;"	r
wireframeLinewidth	js/three.js	/^			result.wireframeLinewidth = material.wireframeLinewidth;$/;"	r
wireframeLinewidth	js/three.js	/^		this.wireframeLinewidth = 1;$/;"	r
wireframeLinewidth	js/three.js	/^		this.wireframeLinewidth = source.wireframeLinewidth;$/;"	r
wireframeLinewidth	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.lights=this.fog=!1;this.setValues(a)}function pb(a){Q.call(this);this.type="MeshLambertMaterial";this.color=new H(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new H(0);this.emissiveIntensity=1;this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=$/;"	r
wireframeLinewidth	js/three.min.js	/^!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)}function nb(a){Ia.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.gradientMap=null;this.setValues(a)}function ob(a){Q.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new D(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=$/;"	r
withCredentials	js/three.js	/^				if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;$/;"	r
withCredentials	js/three.js	/^			this.withCredentials = value;$/;"	r
withCredentials	js/three.js	/^		this.withCredentials = false;$/;"	r
worldNormal	js/three.js	/^	var envmap_fragment = "#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n";$/;"	r
worldNormal	js/three.min.js	/^envmap_fragment:"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n",$/;"	r
worldPosition	js/three.js	/^			var worldPosition = new Vector3();$/;"	r
worldScale	js/three.js	/^			var worldScale = new Vector3();$/;"	r
worldToLocal	js/three.js	/^			return function worldToLocal( vector ) {$/;"	r
worldToLocal	js/three.js	/^		worldToLocal: function () {$/;"	r
worldpos_vertex	js/three.js	/^		worldpos_vertex: worldpos_vertex,$/;"	r
worldpos_vertex	js/three.js	/^	var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n";$/;"	r
wrap	js/three.js	/^				wrap: [ this.wrapS, this.wrapT ],$/;"	r
wrapAround	js/three.js	/^		wrapAround: {$/;"	r
wrapRGB	js/three.js	/^		wrapRGB: {$/;"	r
wrapRGB	js/three.min.js	/^wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new H}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=1===a}}});Object.defineProperties(Ia.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");$/;"	r
wrapS	js/GLTFLoader.js	/^			texture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;$/;"	r
wrapS	js/three.js	/^						texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );$/;"	r
wrapS	js/three.js	/^				texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;$/;"	r
wrapS	js/three.js	/^				this.texture.wrapS = value;$/;"	r
wrapS	js/three.js	/^			this.wrapS = source.wrapS;$/;"	r
wrapS	js/three.js	/^		this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;$/;"	r
wrapS	js/three.js	/^		wrapS: {$/;"	r
wrapS	js/three.min.js	/^a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.center.copy(a.center);this.rotation=a.rotation;this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrix.copy(a.matrix);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=a.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;this.encoding=a.encoding;$/;"	r
wrapS	js/three.min.js	/^this.texture.wrapS=a}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=a}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=$/;"	r
wrapT	js/GLTFLoader.js	/^			texture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;$/;"	r
wrapT	js/three.js	/^						texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );$/;"	r
wrapT	js/three.js	/^				texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;$/;"	r
wrapT	js/three.js	/^				this.texture.wrapT = value;$/;"	r
wrapT	js/three.js	/^			this.wrapT = source.wrapT;$/;"	r
wrapT	js/three.js	/^		this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;$/;"	r
wrapT	js/three.js	/^		wrapT: {$/;"	r
wrapT	js/three.min.js	/^this.texture.wrapS=a}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=a}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=$/;"	r
writeIndex	js/three.js	/^				writeIndex = 1,$/;"	r
writeOffset	js/three.js	/^							writeOffset = writeIndex * stride;$/;"	r
writeOffset	js/three.js	/^				for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )$/;"	r
wx	js/three.js	/^			var wx = w * x2, wy = w * y2, wz = w * z2;$/;"	r
x	js/GLTFLoader.js	/^					_material.normalScale.x = - _material.normalScale.x;$/;"	r
x	js/three.js	/^									cpx0 = laste.x;$/;"	r
x	js/three.js	/^								x = outline[ i ++ ] * scale + offsetX;$/;"	r
x	js/three.js	/^							normals[ vA ] += cb.x;$/;"	r
x	js/three.js	/^							normals[ vB ] += cb.x;$/;"	r
x	js/three.js	/^							normals[ vC ] += cb.x;$/;"	r
x	js/three.js	/^							scale.x = size * invAspect;$/;"	r
x	js/three.js	/^							screenPosition.x = sprite.x;$/;"	r
x	js/three.js	/^							uv.x = Math.ceil( uv.x ) - uv.x;$/;"	r
x	js/three.js	/^							uv.x = uv.x - Math.floor( uv.x );$/;"	r
x	js/three.js	/^							var x = bounds.x * _width;$/;"	r
x	js/three.js	/^							vertex.x = srcVertices[ v ] * scale;$/;"	r
x	js/three.js	/^						normals[ i + 3 ] = cb.x;$/;"	r
x	js/three.js	/^						normals[ i + 6 ] = cb.x;$/;"	r
x	js/three.js	/^						normals[ i ] = cb.x;$/;"	r
x	js/three.js	/^						uv.x = uv.x - Math.floor( uv.x );$/;"	r
x	js/three.js	/^						uv.x = uv.x < 0 ? 0 : 1;$/;"	r
x	js/three.js	/^						var x = json.skinWeights[ i ];$/;"	r
x	js/three.js	/^						vector.x = position.getX( i );$/;"	r
x	js/three.js	/^						x = 0.707106781;$/;"	r
x	js/three.js	/^						x = 0;$/;"	r
x	js/three.js	/^						x = Math.sqrt( xx );$/;"	r
x	js/three.js	/^						x = xy \/ y;$/;"	r
x	js/three.js	/^						x = xz \/ z;$/;"	r
x	js/three.js	/^					p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;$/;"	r
x	js/three.js	/^					p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;$/;"	r
x	js/three.js	/^					uv.x = i \/ tubularSegments;$/;"	r
x	js/three.js	/^					v1.x = attribute.getX( i );$/;"	r
x	js/three.js	/^					var vpWidth = _shadowMapSize.x;$/;"	r
x	js/three.js	/^					var x = ix * segmentWidth - widthHalf;$/;"	r
x	js/three.js	/^					vec.x = skinWeight.getX( i );$/;"	r
x	js/three.js	/^					vector.x = normals.getX( i );$/;"	r
x	js/three.js	/^					vertex.x = radius * sinTheta;$/;"	r
x	js/three.js	/^					vertex.x = vertices[ offset ++ ] * scale;$/;"	r
x	js/three.js	/^				array[ offset ++ ] = vector.x;$/;"	r
x	js/three.js	/^				center.x = radius * Math.cos( u );$/;"	r
x	js/three.js	/^				flare.x = this.positionScreen.x + vecX * flare.distance;$/;"	r
x	js/three.js	/^				if ( x < minX ) minX = x;$/;"	r
x	js/three.js	/^				if ( x > maxX ) maxX = x;$/;"	r
x	js/three.js	/^				n1.x = normals[ j + 0 ];$/;"	r
x	js/three.js	/^				n2.x = normals[ base + j + 0 ];$/;"	r
x	js/three.js	/^				normal.x = ( cos * N.x + sin * B.x );$/;"	r
x	js/three.js	/^				position.x = te[ 12 ];$/;"	r
x	js/three.js	/^				scale.x = sx;$/;"	r
x	js/three.js	/^				scale[ 0 ] = spriteScale.x;$/;"	r
x	js/three.js	/^				screenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;$/;"	r
x	js/three.js	/^				this._x = v1.x;$/;"	r
x	js/three.js	/^				this._x = x;$/;"	r
x	js/three.js	/^				this.x = 1;$/;"	r
x	js/three.js	/^				this.x = q.x \/ s;$/;"	r
x	js/three.js	/^				this.x = value;$/;"	r
x	js/three.js	/^				uv.x = ( cosTheta * 0.5 ) + 0.5;$/;"	r
x	js/three.js	/^				uv.x = ( vertex.x \/ outerRadius + 1 ) \/ 2;$/;"	r
x	js/three.js	/^				uv.x = i \/ segments;$/;"	r
x	js/three.js	/^				var x = array[ i ];$/;"	r
x	js/three.js	/^				var x = attribute.getX( i );$/;"	r
x	js/three.js	/^				var x = ix * segment_width - width_half;$/;"	r
x	js/three.js	/^				var x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;$/;"	r
x	js/three.js	/^				vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );$/;"	r
x	js/three.js	/^				vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );$/;"	r
x	js/three.js	/^				vertex.x = P.x + radius * normal.x;$/;"	r
x	js/three.js	/^				vertex.x = P1.x + ( cx * N.x + cy * B.x );$/;"	r
x	js/three.js	/^				vertex.x = points[ j ].x * sin;$/;"	r
x	js/three.js	/^				vertex.x = radius * Math.cos( segment );$/;"	r
x	js/three.js	/^				vertex.x = radius * sinTheta;$/;"	r
x	js/three.js	/^				vertex.x = vertexBuffer[ i + 0 ];$/;"	r
x	js/three.js	/^				vertexBuffer[ i + 0 ] = vertex.x;$/;"	r
x	js/three.js	/^				x = Math.sin( v ) * r;$/;"	r
x	js/three.js	/^				x, 0, 0, 0,$/;"	r
x	js/three.js	/^				x, 1, z, 0,$/;"	r
x	js/three.js	/^				x, y, 1, 0,$/;"	r
x	js/three.js	/^				xAxis.x, yAxis.x, zAxis.x, 0,$/;"	r
x	js/three.js	/^			array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;$/;"	r
x	js/three.js	/^			array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;$/;"	r
x	js/three.js	/^			array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;$/;"	r
x	js/three.js	/^			array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;$/;"	r
x	js/three.js	/^			array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;$/;"	r
x	js/three.js	/^			array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;$/;"	r
x	js/three.js	/^			array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;$/;"	r
x	js/three.js	/^			array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;$/;"	r
x	js/three.js	/^			array[ offset ] = this.x;$/;"	r
x	js/three.js	/^			position.x = radius * ( 2 + cs ) * 0.5 * cu;$/;"	r
x	js/three.js	/^			te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;$/;"	r
x	js/three.js	/^			te[ 0 ] = x;	te[ 4 ] = 0;	te[ 8 ] = a;	te[ 12 ] = 0;$/;"	r
x	js/three.js	/^			te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;$/;"	r
x	js/three.js	/^			te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;$/;"	r
x	js/three.js	/^			te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;$/;"	r
x	js/three.js	/^			this._x = quaternion.x;$/;"	r
x	js/three.js	/^			this._x = x;$/;"	r
x	js/three.js	/^			this.array[ index * this.itemSize ] = x;$/;"	r
x	js/three.js	/^			this.array[ index + 0 ] = x;$/;"	r
x	js/three.js	/^			this.data.array[ index * this.data.stride + this.offset ] = x;$/;"	r
x	js/three.js	/^			this.data.array[ index + 0 ] = x;$/;"	r
x	js/three.js	/^			this.max.x = this.max.y = - Infinity;$/;"	r
x	js/three.js	/^			this.max.x = this.max.y = this.max.z = - Infinity;$/;"	r
x	js/three.js	/^			this.min.x = this.min.y = + Infinity;$/;"	r
x	js/three.js	/^			this.min.x = this.min.y = this.min.z = + Infinity;$/;"	r
x	js/three.js	/^			this.view.offsetX = x;$/;"	r
x	js/three.js	/^			this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;$/;"	r
x	js/three.js	/^			this.x = ( m32 - m23 ) \/ s;$/;"	r
x	js/three.js	/^			this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );$/;"	r
x	js/three.js	/^			this.x = - this.x;$/;"	r
x	js/three.js	/^			this.x = Math.ceil( this.x );$/;"	r
x	js/three.js	/^			this.x = Math.floor( this.x );$/;"	r
x	js/three.js	/^			this.x = Math.max( min.x, Math.min( max.x, this.x ) );$/;"	r
x	js/three.js	/^			this.x = Math.max( this.x, v.x );$/;"	r
x	js/three.js	/^			this.x = Math.min( this.x, v.x );$/;"	r
x	js/three.js	/^			this.x = Math.round( this.x );$/;"	r
x	js/three.js	/^			this.x = a.x * b.x;$/;"	r
x	js/three.js	/^			this.x = a.x + b.x;$/;"	r
x	js/three.js	/^			this.x = a.x - b.x;$/;"	r
x	js/three.js	/^			this.x = array[ offset ];$/;"	r
x	js/three.js	/^			this.x = attribute.getX( index );$/;"	r
x	js/three.js	/^			this.x = ay * bz - az * by;$/;"	r
x	js/three.js	/^			this.x = c.radius * Math.sin( c.theta );$/;"	r
x	js/three.js	/^			this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;$/;"	r
x	js/three.js	/^			this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];$/;"	r
x	js/three.js	/^			this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;$/;"	r
x	js/three.js	/^			this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;$/;"	r
x	js/three.js	/^			this.x = e[ 12 ];$/;"	r
x	js/three.js	/^			this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;$/;"	r
x	js/three.js	/^			this.x = scalar;$/;"	r
x	js/three.js	/^			this.x = sinPhiRadius * Math.sin( s.theta );$/;"	r
x	js/three.js	/^			this.x = sx;$/;"	r
x	js/three.js	/^			this.x = v.x;$/;"	r
x	js/three.js	/^			this.x = x * c - y * s + center.x;$/;"	r
x	js/three.js	/^			this.x = x;$/;"	r
x	js/three.js	/^			uv.x = ( vertices[ i ] \/ radius + 1 ) \/ 2;$/;"	r
x	js/three.js	/^			var x = ( right + left ) * w;$/;"	r
x	js/three.js	/^			var x = 2 * near \/ ( right - left );$/;"	r
x	js/three.js	/^			var x = axis.x, y = axis.y, z = axis.z;$/;"	r
x	js/three.js	/^			var x = euler._x, y = euler._y, z = euler._z, order = euler.order;$/;"	r
x	js/three.js	/^			var x = euler.x, y = euler.y, z = euler.z;$/;"	r
x	js/three.js	/^			var x = new Vector3();$/;"	r
x	js/three.js	/^			var x = q._x, y = q._y, z = q._z, w = q._w;$/;"	r
x	js/three.js	/^			var x = this._x, y = this._y, z = this._z, w = this._w;$/;"	r
x	js/three.js	/^			var x = this.x - center.x;$/;"	r
x	js/three.js	/^			var x = this.x, y = this.y, z = this.z, w = this.w;$/;"	r
x	js/three.js	/^			var x = this.x, y = this.y, z = this.z;$/;"	r
x	js/three.js	/^			var x = this.x, y = this.y;$/;"	r
x	js/three.js	/^			var x = v.x, y = v.y, z = v.z;$/;"	r
x	js/three.js	/^			var x, centerIndexStart, centerIndexEnd;$/;"	r
x	js/three.js	/^			var x, y;$/;"	r
x	js/three.js	/^			var x0 = this.currentPoint.x;$/;"	r
x	js/three.js	/^			vertex.x = radius * Math.cos( segment );$/;"	r
x	js/three.js	/^			vertex.x = vertices[ stride + 0 ];$/;"	r
x	js/three.js	/^			x = ( x - min ) \/ ( max - min );$/;"	r
x	js/three.js	/^			x = Math.sin( v ) * radius;$/;"	r
x	js/three.js	/^			x = tx * cos - ty * sin + this.aX;$/;"	r
x	js/three.js	/^		function setPoint( point, x, y, z ) {$/;"	r
x	js/three.js	/^		setXY: function ( index, x, y ) {$/;"	r
x	js/three.js	/^		setXYZ: function ( index, x, y, z ) {$/;"	r
x	js/three.js	/^		setXYZW: function ( index, x, y, z, w ) {$/;"	r
x	js/three.js	/^		this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {$/;"	r
x	js/three.js	/^		this.x = x || 0;$/;"	r
x	js/three.js	/^		var x = this.aX + this.xRadius * Math.cos( angle );$/;"	r
x	js/three.js	/^		var x, z;$/;"	r
x	js/three.min.js	/^"\\t\\tattribute vec3 morphNormal2;","\\t\\tattribute vec3 morphNormal3;","\\t#else","\\t\\tattribute vec3 morphTarget4;","\\t\\tattribute vec3 morphTarget5;","\\t\\tattribute vec3 morphTarget6;","\\t\\tattribute vec3 morphTarget7;","\\t#endif","#endif","#ifdef USE_SKINNING","\\tattribute vec4 skinIndex;","\\tattribute vec4 skinWeight;","#endif","\\n"].filter(Ac).join("\\n"),b=[t,"precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+e.name,x,f.alphaTest?"#define ALPHATEST "+f.alphaTest:$/;"	r
x	js/three.min.js	/^"canvas"),x=void 0!==a.context?a.context:null,y=void 0!==a.alpha?a.alpha:!1,B=void 0!==a.depth?a.depth:!0,I=void 0!==a.stencil?a.stencil:!0,A=void 0!==a.antialias?a.antialias:!1,J=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,w=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ja=[],z=[],D=null,C=[],Ua=[];this.domElement=t;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.clippingPlanes=[];this.localClippingEnabled=$/;"	r
x	js/three.min.js	/^(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromBufferAttribute:function(a,$/;"	r
x	js/three.min.js	/^(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a)},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);$/;"	r
x	js/three.min.js	/^["precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+e.name,x,f.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+f.maxBones,f.useFog&&f.fog?"#define USE_FOG":"",f.useFog&&f.fogExp?"#define FOG_EXP2":"",f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+u:"",f.lightMap?"#define USE_LIGHTMAP":"",f.aoMap?"#define USE_AOMAP":"",f.emissiveMap?"#define USE_EMISSIVEMAP":"",f.bumpMap?"#define USE_BUMPMAP":$/;"	r
x	js/three.min.js	/^[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromBufferAttribute:function(a,b,c){void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);return this}});Object.assign(ta.prototype,{isMatrix3:!0,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[1]=d;l[2]=g;l[3]=b;l[4]=e;l[5]=h;l[6]=c;l[7]=f;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},$/;"	r
x	js/three.min.js	/^a.getInverse(b.projectionMatrix));return this.applyMatrix4(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;return this.normalize()},divide:function(a){this.x\/=a.x;this.y\/=a.y;this.z\/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=$/;"	r
x	js/three.min.js	/^b,c){void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().");this.x=a.getX(b);this.y=a.getY(b);this.z=a.getZ(b);this.w=a.getW(b);return this}});Object.assign(Db.prototype,ia.prototype,{isWebGLRenderTarget:!0,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose();this.viewport.set(0,0,a,b);this.scissor.set(0,0,a,b)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=$/;"	r
x	js/three.min.js	/^b.bevelSegments:3,y=void 0!==b.bevelEnabled?b.bevelEnabled:!0,B=void 0!==b.curveSegments?b.curveSegments:12,w=void 0!==b.steps?b.steps:1,A=b.extrudePath,C=!1,E=void 0!==b.UVGenerator?b.UVGenerator:Za.WorldUVGenerator;if(A){var H=A.getSpacedPoints(w);C=!0;y=!1;var K=void 0!==b.frames?b.frames:A.computeFrenetFrames(w,!1);var L=new p;var Q=new p;var O=new p}y||(t=v=x=0);var M,R=this,B=a.extractPoints(B);a=B.shape;var P=B.holes;if(!Ha.isClockWise(a)){a=a.reverse();var N=0;for(M=P.length;N<M;N++){var U=$/;"	r
x	js/three.min.js	/^d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a=new K;return function(b){a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyMatrix4(a)}}(),unproject:function(){var a=new K;return function(b){a.multiplyMatrices(b.matrixWorld,$/;"	r
x	js/three.min.js	/^ka.x,ka.y,ka.z);c.disable(b.BLEND);c.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);c.activeTexture(b.TEXTURE0);c.bindTexture(b.TEXTURE_2D,A);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,N.x,N.y,16,16,0);b.uniform1i(f,1);c.disable(b.DEPTH_TEST);c.activeTexture(b.TEXTURE1);c.bindTexture(b.TEXTURE_2D,I);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);Z.positionScreen.copy(ka);Z.customUpdateCallback?Z.customUpdateCallback(Z):Z.updateLensFlares();b.uniform1i(f,2);c.enable(b.BLEND);for(var C=$/;"	r
x	js/three.min.js	/^p.length&&q){for(var t=0,x=p.length;t<x;t++)v=p[t],c.texImage2D(a.TEXTURE_2D,t,r,v.width,v.height,0,r,B,v.data);b.generateMipmaps=!1}else c.texImage2D(a.TEXTURE_2D,0,r,v.width,v.height,0,r,B,v.data);else if(b.isCompressedTexture)for(t=0,x=p.length;t<x;t++)v=p[t],1023!==b.format&&1022!==b.format?-1<c.getCompressedTextureFormats().indexOf(r)?c.compressedTexImage2D(a.TEXTURE_2D,t,r,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):$/;"	r
x	js/three.min.js	/^return this.applyQuaternion(a.setFromEuler(b))}}(),applyAxisAngle:function(){var a=new X;return function(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c))}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1\/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*$/;"	r
x	js/three.min.js	/^{metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;""!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&&(e[g]=f[g]);return e}f=[];for(g=0;g<this.vertices.length;g++){var h=this.vertices[g];f.push(h.x,h.y,h.z)}var h=[],k=[],l={},q=[],n={},m=[],r={};for(g=0;g<this.faces.length;g++){var p=this.faces[g],t=void 0!==this.faceVertexUvs[0][g],x=0<p.normal.length(),y=0<p.vertexNormals.length,B=$/;"	r
x0	js/three.js	/^				var x0 = uvBuffer[ i + 0 ];$/;"	r
x0	js/three.js	/^				x0 = x0 * s + x1 * tDir;$/;"	r
x0	js/three.js	/^			c0 = x0;$/;"	r
x0	js/three.js	/^			dst[ dstOffset ] = x0;$/;"	r
x0	js/three.js	/^			var x0 = src0[ srcOffset0 + 0 ],$/;"	r
x0	js/three.js	/^			var x0 = this.currentPoint.x;$/;"	r
x0	js/three.js	/^		 *   p(0) = x0, p(1) = x1$/;"	r
x1	js/three.js	/^				var max = Math.max( x0, x1, x2 );$/;"	r
x1	js/three.js	/^				var min = Math.min( x0, x1, x2 );$/;"	r
x1	js/three.js	/^				var x1 = uvBuffer[ i + 2 ];$/;"	r
x1	js/three.js	/^				x1 = src1[ srcOffset1 + 0 ],$/;"	r
x1	js/three.js	/^			initCatmullRom: function ( x0, x1, x2, x3, tension ) {$/;"	r
x1	js/three.js	/^			initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {$/;"	r
x1	js/three.js	/^		function init( x0, x1, t0, t1 ) {$/;"	r
x2	js/three.js	/^				init( x1, x2, t1, t2 );$/;"	r
x2	js/three.js	/^				init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );$/;"	r
x2	js/three.js	/^				var x2 = uvBuffer[ i + 4 ];$/;"	r
x2	js/three.js	/^			var x2 = x + x, y2 = y + y, z2 = z + z;$/;"	r
xRadius	js/three.js	/^			this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );$/;"	r
xRadius	js/three.js	/^		this.xRadius = xRadius;$/;"	r
xa	js/three.min.js	/^this.width=void 0!==c?c:10;this.height=void 0!==d?d:10}function xa(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}function Cd(a,b,c,d){xa.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}function Xc(a,b,c,d){xa.call(this,a,b,c,d)}function Dd(a,b,c,d){xa.call(this,a,b,c,d)}function sb(a,b,c,d){if(void 0===a)throw Error("track name is undefined");if(void 0===b||0===$/;"	r
xb	js/three.min.js	/^1:a+2];b.set(Se(d,e.x,f.x,g.x,c.x),Se(d,e.y,f.y,g.y,c.y));return b};xb.prototype=Object.create(ca.prototype);xb.prototype.constructor=xb;xb.prototype.isCubicBezierCurve=!0;xb.prototype.getPoint=function(a,b){b=b||new D;var c=this.v0,d=this.v1,e=this.v2,f=this.v3;b.set(vb(a,c.x,d.x,e.x,f.x),vb(a,c.y,d.y,e.y,f.y));return b};yb.prototype=Object.create(ca.prototype);yb.prototype.constructor=yb;yb.prototype.isQuadraticBezierCurve=!0;yb.prototype.getPoint=function(a,b){b=b||new D;var c=this.v0,d=this.v1,$/;"	r
xc	js/three.min.js	/^xc;m.Uint16BufferAttribute=db;m.Int16BufferAttribute=wc;m.Uint8ClampedBufferAttribute=vc;m.Uint8BufferAttribute=uc;m.Int8BufferAttribute=tc;m.BufferAttribute=O;m.REVISION="88dev";m.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};m.CullFaceNone=0;m.CullFaceBack=1;m.CullFaceFront=2;m.CullFaceFrontBack=3;m.FrontFaceDirectionCW=0;m.FrontFaceDirectionCCW=1;m.BasicShadowMap=0;m.PCFShadowMap=1;m.PCFSoftShadowMap=2;m.FrontSide=0;m.BackSide=1;m.DoubleSide=2;m.FlatShading=1;m.SmoothShading=2;m.NoColors=0;m.FaceColors=1;m.VertexColors=$/;"	r
xd	js/three.min.js	/^this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a\/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI\/3;this.penumbra=void 0!==e?e:0;this.decay=void 0!==f?f:1;this.shadow=new vd}function xd(a,b,c,d){fa.call(this,a,b);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=$/;"	r
xe	js/three.min.js	/^we[e]=f);if(0!==b)for(d.toArray(f,0),d=1,e=0;d!==b;++d)e+=c,a[d].toArray(f,e);return f}function xe(a,b){var c=ye[b];void 0===c&&(c=new Int32Array(b),ye[b]=c);for(var d=0;d!==b;++d)c[d]=a.allocTextureUnit();return c}function lf(a,b){a.uniform1f(this.addr,b)}function mf(a,b){a.uniform1i(this.addr,b)}function nf(a,b){void 0===b.x?a.uniform2fv(this.addr,b):a.uniform2f(this.addr,b.x,b.y)}function of(a,b){void 0!==b.x?a.uniform3f(this.addr,b.x,b.y,b.z):void 0!==b.r?a.uniform3f(this.addr,b.r,b.g,b.b):a.uniform3fv(this.addr,$/;"	r
xfov	js/GLTFLoader.js	/^			var xfov = params.yfov * aspectRatio;$/;"	r
xmax	js/three.js	/^					xmax = ymax * aspect + eyeSepOnProjection;$/;"	r
xmax	js/three.js	/^					xmax = ymax * aspect - eyeSepOnProjection;$/;"	r
xmin	js/three.js	/^					var xmin, xmax;$/;"	r
xmin	js/three.js	/^					xmin = - ymax * aspect + eyeSepOnProjection;$/;"	r
xmin	js/three.js	/^					xmin = - ymax * aspect - eyeSepOnProjection;$/;"	r
xx	js/three.js	/^				var xx = ( m11 + 1 ) \/ 2;$/;"	r
xx	js/three.js	/^			var xx = x * x2, xy = x * y2, xz = x * z2;$/;"	r
xy	js/three.js	/^				var xy = ( m12 + m21 ) \/ 4;$/;"	r
xyz	js/three.js	/^	var color_vertex = "#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif";$/;"	r
xyz	js/three.js	/^	var distanceRGBA_vert = "#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n";$/;"	r
xyz	js/three.js	/^	var envmap_vertex = "#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n";$/;"	r
xyz	js/three.js	/^	var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n";$/;"	r
xyz	js/three.min.js	/^distanceRGBA_vert:"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n",$/;"	r
xyz	js/three.min.js	/^envmap_pars_vertex:"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n",envmap_vertex:"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n",$/;"	r
xyz	js/three.min.js	/^lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",$/;"	r
xz	js/three.js	/^				var xz = ( m13 + m31 ) \/ 4;$/;"	r
y	js/three.js	/^									cpy0 = laste.y;$/;"	r
y	js/three.js	/^								y = outline[ i ++ ] * scale + offsetY;$/;"	r
y	js/three.js	/^							_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );$/;"	r
y	js/three.js	/^							normals[ vA + 1 ] += cb.y;$/;"	r
y	js/three.js	/^							normals[ vB + 1 ] += cb.y;$/;"	r
y	js/three.js	/^							normals[ vC + 1 ] += cb.y;$/;"	r
y	js/three.js	/^							scale.y = size;$/;"	r
y	js/three.js	/^							screenPosition.y = sprite.y;$/;"	r
y	js/three.js	/^							state.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );$/;"	r
y	js/three.js	/^							uv.y = Math.ceil( uv.y ) - uv.y;$/;"	r
y	js/three.js	/^							uv.y = uv.y - Math.floor( uv.y );$/;"	r
y	js/three.js	/^							var y = bounds.y * _height;$/;"	r
y	js/three.js	/^							vertex.y = srcVertices[ v + 1 ] * scale;$/;"	r
y	js/three.js	/^						geometry.skinWeights.push( new Vector4( x, y, z, w ) );$/;"	r
y	js/three.js	/^						normals[ i + 1 ] = cb.y;$/;"	r
y	js/three.js	/^						normals[ i + 4 ] = cb.y;$/;"	r
y	js/three.js	/^						normals[ i + 7 ] = cb.y;$/;"	r
y	js/three.js	/^						uv.y = uv.y - Math.floor( uv.y );$/;"	r
y	js/three.js	/^						uv.y = uv.y < 0 ? 0 : 1;$/;"	r
y	js/three.js	/^						var y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;$/;"	r
y	js/three.js	/^						vector.y = position.getY( i );$/;"	r
y	js/three.js	/^						y = 0.707106781;$/;"	r
y	js/three.js	/^						y = 0;$/;"	r
y	js/three.js	/^						y = Math.sqrt( yy );$/;"	r
y	js/three.js	/^						y = xy \/ x;$/;"	r
y	js/three.js	/^						y = yz \/ z;$/;"	r
y	js/three.js	/^					p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;$/;"	r
y	js/three.js	/^					p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;$/;"	r
y	js/three.js	/^					uv.y = j \/ radialSegments;$/;"	r
y	js/three.js	/^					v1.y = attribute.getY( i );$/;"	r
y	js/three.js	/^					var vpHeight = _shadowMapSize.y;$/;"	r
y	js/three.js	/^					vec.y = skinWeight.getY( i );$/;"	r
y	js/three.js	/^					vector.set( x, y, z );$/;"	r
y	js/three.js	/^					vector.y = normals.getY( i );$/;"	r
y	js/three.js	/^					vertex.y = - v * height + halfHeight;$/;"	r
y	js/three.js	/^					vertex.y = vertices[ offset ++ ] * scale;$/;"	r
y	js/three.js	/^				array[ offset ++ ] = vector.y;$/;"	r
y	js/three.js	/^				center.y = radius * Math.sin( u );$/;"	r
y	js/three.js	/^				flare.y = this.positionScreen.y + vecY * flare.distance;$/;"	r
y	js/three.js	/^				if ( y < minY ) minY = y;$/;"	r
y	js/three.js	/^				if ( y > maxY ) maxY = y;$/;"	r
y	js/three.js	/^				m1.makeScale( x, y, z );$/;"	r
y	js/three.js	/^				m1.makeTranslation( x, y, z );$/;"	r
y	js/three.js	/^				n1.y = normals[ j + 1 ];$/;"	r
y	js/three.js	/^				n2.y = normals[ base + j + 1 ];$/;"	r
y	js/three.js	/^				normal.y = ( cos * N.y + sin * B.y );$/;"	r
y	js/three.js	/^				position.y = te[ 13 ];$/;"	r
y	js/three.js	/^				scale.y = sy;$/;"	r
y	js/three.js	/^				scale[ 1 ] = spriteScale.y;$/;"	r
y	js/three.js	/^				screenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;$/;"	r
y	js/three.js	/^				this._y = v1.y;$/;"	r
y	js/three.js	/^				this._y = y;$/;"	r
y	js/three.js	/^				this.min.y <= box.min.y && box.max.y <= this.max.y;$/;"	r
y	js/three.js	/^				this.set( x, y, z, angle );$/;"	r
y	js/three.js	/^				this.y = 0;$/;"	r
y	js/three.js	/^				this.y = q.y \/ s;$/;"	r
y	js/three.js	/^				this.y = value;$/;"	r
y	js/three.js	/^				uv.y = ( sinTheta * 0.5 * sign ) + 0.5;$/;"	r
y	js/three.js	/^				uv.y = ( vertex.y \/ outerRadius + 1 ) \/ 2;$/;"	r
y	js/three.js	/^				uv.y = 1 - uv.y;$/;"	r
y	js/three.js	/^				uv.y = j \/ ( points.length - 1 );$/;"	r
y	js/three.js	/^				var y = array[ i + 1 ];$/;"	r
y	js/three.js	/^				var y = attribute.getY( i );$/;"	r
y	js/three.js	/^				var y = iy * segmentHeight - heightHalf;$/;"	r
y	js/three.js	/^				vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );$/;"	r
y	js/three.js	/^				vertex.y = P.y + radius * normal.y;$/;"	r
y	js/three.js	/^				vertex.y = P1.y + ( cx * N.y + cy * B.y );$/;"	r
y	js/three.js	/^				vertex.y = halfHeight * sign;$/;"	r
y	js/three.js	/^				vertex.y = points[ j ].y;$/;"	r
y	js/three.js	/^				vertex.y = radius * Math.cos( thetaStart + v * thetaLength );$/;"	r
y	js/three.js	/^				vertex.y = radius * Math.sin( segment );$/;"	r
y	js/three.js	/^				vertex.y = vertexBuffer[ i + 1 ];$/;"	r
y	js/three.js	/^				vertexBuffer[ i + 1 ] = vertex.y;$/;"	r
y	js/three.js	/^				xAxis.y, yAxis.y, zAxis.y, 0,$/;"	r
y	js/three.js	/^			array[ offset + 1 ] = this.y;$/;"	r
y	js/three.js	/^			position.y = radius * ( 2 + cs ) * su * 0.5;$/;"	r
y	js/three.js	/^			return function lookAt( x, y, z ) {$/;"	r
y	js/three.js	/^			return function scale( x, y, z ) {$/;"	r
y	js/three.js	/^			return function translate( x, y, z ) {$/;"	r
y	js/three.js	/^			this._y = quaternion.y;$/;"	r
y	js/three.js	/^			this._y = y;$/;"	r
y	js/three.js	/^			this.array[ index * this.itemSize + 1 ] = y;$/;"	r
y	js/three.js	/^			this.array[ index + 1 ] = y;$/;"	r
y	js/three.js	/^			this.data.array[ index * this.data.stride + this.offset + 1 ] = y;$/;"	r
y	js/three.js	/^			this.data.array[ index + 1 ] = y;$/;"	r
y	js/three.js	/^			this.normal.set( x, y, z );$/;"	r
y	js/three.js	/^			this.view.offsetY = y;$/;"	r
y	js/three.js	/^			this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;$/;"	r
y	js/three.js	/^			this.y = ( m13 - m31 ) \/ s;$/;"	r
y	js/three.js	/^			this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );$/;"	r
y	js/three.js	/^			this.y = - this.y;$/;"	r
y	js/three.js	/^			this.y = Math.ceil( this.y );$/;"	r
y	js/three.js	/^			this.y = Math.cos( s.phi ) * s.radius;$/;"	r
y	js/three.js	/^			this.y = Math.floor( this.y );$/;"	r
y	js/three.js	/^			this.y = Math.max( min.y, Math.min( max.y, this.y ) );$/;"	r
y	js/three.js	/^			this.y = Math.max( this.y, v.y );$/;"	r
y	js/three.js	/^			this.y = Math.min( this.y, v.y );$/;"	r
y	js/three.js	/^			this.y = Math.round( this.y );$/;"	r
y	js/three.js	/^			this.y = a.y * b.y;$/;"	r
y	js/three.js	/^			this.y = a.y + b.y;$/;"	r
y	js/three.js	/^			this.y = a.y - b.y;$/;"	r
y	js/three.js	/^			this.y = array[ offset + 1 ];$/;"	r
y	js/three.js	/^			this.y = attribute.getY( index );$/;"	r
y	js/three.js	/^			this.y = az * bx - ax * bz;$/;"	r
y	js/three.js	/^			this.y = c.y;$/;"	r
y	js/three.js	/^			this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;$/;"	r
y	js/three.js	/^			this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];$/;"	r
y	js/three.js	/^			this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;$/;"	r
y	js/three.js	/^			this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;$/;"	r
y	js/three.js	/^			this.y = e[ 13 ];$/;"	r
y	js/three.js	/^			this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;$/;"	r
y	js/three.js	/^			this.y = other.y;$/;"	r
y	js/three.js	/^			this.y = scalar;$/;"	r
y	js/three.js	/^			this.y = sy;$/;"	r
y	js/three.js	/^			this.y = v.y;$/;"	r
y	js/three.js	/^			this.y = vec3.y;$/;"	r
y	js/three.js	/^			this.y = x * s + y * c + center.y;$/;"	r
y	js/three.js	/^			this.y = y;$/;"	r
y	js/three.js	/^			uv.y = ( vertices[ i + 1 ] \/ radius + 1 ) \/ 2;$/;"	r
y	js/three.js	/^			var y = ( top + bottom ) * h;$/;"	r
y	js/three.js	/^			var y = 2 * near \/ ( top - bottom );$/;"	r
y	js/three.js	/^			var y = iy * segment_height - height_half;$/;"	r
y	js/three.js	/^			var y = new Vector3();$/;"	r
y	js/three.js	/^			var y = this.y - center.y;$/;"	r
y	js/three.js	/^			var y0 = this.currentPoint.y;$/;"	r
y	js/three.js	/^			vector.set( x, y, z ).unproject( camera );$/;"	r
y	js/three.js	/^			vertex.y = radius * Math.sin( segment );$/;"	r
y	js/three.js	/^			vertex.y = vertices[ stride + 1 ];$/;"	r
y	js/three.js	/^			y = tx * sin + ty * cos + this.aY;$/;"	r
y	js/three.js	/^		function v( x, y, z ) {$/;"	r
y	js/three.js	/^		if ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );$/;"	r
y	js/three.js	/^		lerp: function ( x, y, t ) {$/;"	r
y	js/three.js	/^		makeScale: function ( x, y, z ) {$/;"	r
y	js/three.js	/^		makeShear: function ( x, y, z ) {$/;"	r
y	js/three.js	/^		makeTranslation: function ( x, y, z ) {$/;"	r
y	js/three.js	/^		return new Vector3( x, y, z );$/;"	r
y	js/three.js	/^		set: function ( x, y, z ) {$/;"	r
y	js/three.js	/^		set: function ( x, y, z, order ) {$/;"	r
y	js/three.js	/^		set: function ( x, y, z, w ) {$/;"	r
y	js/three.js	/^		setComponents: function ( x, y, z, w ) {$/;"	r
y	js/three.js	/^		this.cone.position.y = length;$/;"	r
y	js/three.js	/^		this.setScissor = function ( x, y, width, height ) {$/;"	r
y	js/three.js	/^		this.setViewport = function ( x, y, width, height ) {$/;"	r
y	js/three.js	/^		this.y = ( y !== undefined ) ? y : 0; \/\/ height above the x-z plane$/;"	r
y	js/three.js	/^		this.y = y || 0;$/;"	r
y	js/three.js	/^		var y = this.aY + this.yRadius * Math.sin( angle );$/;"	r
y	js/three.js	/^	function Euler( x, y, z, order ) {$/;"	r
y	js/three.js	/^	function Quaternion( x, y, z, w ) {$/;"	r
y	js/three.js	/^	function Vector3( x, y, z ) {$/;"	r
y	js/three.js	/^	function Vector4( x, y, z, w ) {$/;"	r
y	js/three.js	/^	function Vertex( x, y, z ) {$/;"	r
y	js/three.min.js	/^(function(m,ia){"object"===typeof exports&&"undefined"!==typeof module?ia(exports):"function"===typeof define&&define.amd?define(["exports"],ia):ia(m.THREE=m.THREE||{})})(this,function(m){function ia(){}function D(a,b){this.x=a||0;this.y=b||0}function K(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function X(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1}$/;"	r
y	js/three.min.js	/^-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(a){return this.normalize().multiplyScalar(a)},lerp:function(a,b){this.x+=(a.x-$/;"	r
y	js/three.min.js	/^2)?Math.ceil(a.y)-a.y:a.y-Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}});Object.assign(ba.prototype,{isVector4:!0,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setScalar:function(a){this.w=this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;$/;"	r
y	js/three.min.js	/^Math.floor(Math.log(a)\/Math.LN2))}};Object.defineProperties(D.prototype,{width:{get:function(){return this.x},set:function(a){this.x=a}},height:{get:function(){return this.y},set:function(a){this.y=a}}});Object.assign(D.prototype,{isVector2:!0,set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;$/;"	r
y	js/three.min.js	/^Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=$/;"	r
y	js/three.min.js	/^Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));this.z=Math.max(a.z,Math.min(b.z,this.z));return this},clampScalar:function(){var a=new p,b=new p;return function(c,d){a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=$/;"	r
y	js/three.min.js	/^Math.max(this.y,a.y);return this},clamp:function(a,b){this.x=Math.max(a.x,Math.min(b.x,this.x));this.y=Math.max(a.y,Math.min(b.y,this.y));return this},clampScalar:function(){var a=new D,b=new D;return function(c,d){a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),clampLength:function(a,b){var c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);$/;"	r
y	js/three.min.js	/^a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a=new X;return function(b){b&&b.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");$/;"	r
y	js/three.min.js	/^a;return this},onChangeCallback:function(){}});Object.assign(p.prototype,{isVector3:!0,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setScalar:function(a){this.z=this.y=this.x=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;$/;"	r
y	js/three.min.js	/^addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;$/;"	r
y	js/three.min.js	/^addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=$/;"	r
y	js/three.min.js	/^b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*$/;"	r
y	js/three.min.js	/^b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);var M=y={vertexShader:"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\n\\tvUV = uv;\\n\\tvec2 pos = position;\\n\\tif ( renderType == 2 ) {\\n\\t\\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\n\\t\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\n\\t\\tvVisibility =        visibility.r \/ 9.0;\\n\\t\\tvVisibility *= 1.0 - visibility.g \/ 9.0;\\n\\t\\tvVisibility *=       visibility.b \/ 9.0;\\n\\t\\tvVisibility *= 1.0 - visibility.a \/ 9.0;\\n\\t\\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\n\\t\\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n\\t}\\n\\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}",$/;"	r
y	js/three.min.js	/^b.bevelSegments:3,y=void 0!==b.bevelEnabled?b.bevelEnabled:!0,B=void 0!==b.curveSegments?b.curveSegments:12,w=void 0!==b.steps?b.steps:1,A=b.extrudePath,C=!1,E=void 0!==b.UVGenerator?b.UVGenerator:Za.WorldUVGenerator;if(A){var H=A.getSpacedPoints(w);C=!0;y=!1;var K=void 0!==b.frames?b.frames:A.computeFrenetFrames(w,!1);var L=new p;var Q=new p;var O=new p}y||(t=v=x=0);var M,R=this,B=a.extractPoints(B);a=B.shape;var P=B.holes;if(!Ha.isClockWise(a)){a=a.reverse();var N=0;for(M=P.length;N<M;N++){var U=$/;"	r
y	js/three.min.js	/^case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},$/;"	r
y	js/three.min.js	/^case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),$/;"	r
y	js/three.min.js	/^default:throw Error("index is out of range: "+a);}return this},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},$/;"	r
y	js/three.min.js	/^e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){return this.multiplyScalar(1\/a)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x\/b,this.y=a.y\/b,this.z=a.z\/b);return this},setAxisAngleFromRotationMatrix:function(a){a=a.elements;var b=a[0];var c=a[4];var d=a[8],e=a[1],f=a[5],g=a[9];var h=a[2];var k=a[6];var l=a[10];if(.01>Math.abs(c-e)&&.01>Math.abs(d-h)&&.01>Math.abs(g-k)){if(.1>Math.abs(c+$/;"	r
y	js/three.min.js	/^function p(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0}function ta(){this.elements=[1,0,0,0,1,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function da(a,b,c,d,e,f,g,h,k,l){Object.defineProperty(this,"id",{value:kf++});this.uuid=R.generateUUID();this.name="";this.image=void 0!==a?a:da.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:da.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=void 0!==d?d:1001;this.magFilter=$/;"	r
y	js/three.min.js	/^return this}}(),setFromObject:function(a){this.makeEmpty();return this.expandByObject(a)},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(a){a=a||new p;return this.isEmpty()?a.set(0,0,0):$/;"	r
y	js/three.min.js	/^this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,$/;"	r
y	js/three.min.js	/^this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(a){a=a||new D;return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(a){a=$/;"	r
y	js/three.min.js	/^this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},$/;"	r
y	js/three.min.js	/^this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+$/;"	r
y0	js/three.js	/^				y0 = src0[ srcOffset0 + 1 ],$/;"	r
y0	js/three.js	/^				y0 = y0 * s + y1 * tDir;$/;"	r
y0	js/three.js	/^			dst[ dstOffset + 1 ] = y0;$/;"	r
y0	js/three.js	/^			var y0 = this.currentPoint.y;$/;"	r
y1	js/three.js	/^				y1 = src1[ srcOffset1 + 1 ],$/;"	r
yAxis	js/three.js	/^		extractBasis: function ( xAxis, yAxis, zAxis ) {$/;"	r
yAxis	js/three.js	/^		makeBasis: function ( xAxis, yAxis, zAxis ) {$/;"	r
yRadius	js/three.js	/^		this.yRadius = yRadius;$/;"	r
yd	js/three.min.js	/^a\/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new rb(new Y(90,1,.5,500))}function yd(){rb.call(this,new Gb(-5,5,5,-5,.5,500))}function zd(a,b){fa.call(this,a,b);this.type="DirectionalLight";this.position.copy(w.DefaultUp);this.updateMatrix();this.target=new w;this.shadow=new yd}function Ad(a,b){fa.call(this,a,b);this.type="AmbientLight";this.castShadow=void 0}function Bd(a,b,c,d){fa.call(this,a,b);this.type="RectAreaLight";this.position.set(0,1,0);this.updateMatrix();$/;"	r
ymax	js/three.js	/^					var ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) \/ zoom;$/;"	r
yy	js/three.js	/^				var yy = ( m22 + 1 ) \/ 2;$/;"	r
yy	js/three.js	/^			var yy = y * y2, yz = y * z2, zz = z * z2;$/;"	r
yz	js/three.js	/^				var yz = ( m23 + m32 ) \/ 4;$/;"	r
z	js/three.js	/^							normals[ vA + 2 ] += cb.z;$/;"	r
z	js/three.js	/^							normals[ vB + 2 ] += cb.z;$/;"	r
z	js/three.js	/^							normals[ vC + 2 ] += cb.z;$/;"	r
z	js/three.js	/^							screenPosition.z = sprite.z;$/;"	r
z	js/three.js	/^							vertex.z = srcVertices[ v + 2 ] * scale;$/;"	r
z	js/three.js	/^						normals[ i + 2 ] = cb.z;$/;"	r
z	js/three.js	/^						normals[ i + 5 ] = cb.z;$/;"	r
z	js/three.js	/^						normals[ i + 8 ] = cb.z;$/;"	r
z	js/three.js	/^						var z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;$/;"	r
z	js/three.js	/^						vector.z = position.getZ( i );$/;"	r
z	js/three.js	/^						z = 0.707106781;$/;"	r
z	js/three.js	/^						z = 0;$/;"	r
z	js/three.js	/^						z = Math.sqrt( zz );$/;"	r
z	js/three.js	/^						z = xz \/ x;$/;"	r
z	js/three.js	/^						z = yz \/ y;$/;"	r
z	js/three.js	/^					p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;$/;"	r
z	js/three.js	/^					p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;$/;"	r
z	js/three.js	/^					v1.z = attribute.getZ( i );$/;"	r
z	js/three.js	/^					vec.z = skinWeight.getZ( i );$/;"	r
z	js/three.js	/^					vector.z = normals.getZ( i );$/;"	r
z	js/three.js	/^					vertex.z = radius * cosTheta;$/;"	r
z	js/three.js	/^					vertex.z = vertices[ offset ++ ] * scale;$/;"	r
z	js/three.js	/^				array[ offset ++ ] = vector.z;$/;"	r
z	js/three.js	/^				if ( z < minZ ) minZ = z;$/;"	r
z	js/three.js	/^				if ( z > maxZ ) maxZ = z;$/;"	r
z	js/three.js	/^				n1.z = normals[ j + 2 ];$/;"	r
z	js/three.js	/^				n2.z = normals[ base + j + 2 ];$/;"	r
z	js/three.js	/^				normal.z = ( cos * N.z + sin * B.z );$/;"	r
z	js/three.js	/^				position.z = te[ 14 ];$/;"	r
z	js/three.js	/^				renderItem.z = z;$/;"	r
z	js/three.js	/^				scale.z = sz;$/;"	r
z	js/three.js	/^				sprite.z = - sprite.modelViewMatrix.elements[ 14 ];$/;"	r
z	js/three.js	/^				this._z = v1.z;$/;"	r
z	js/three.js	/^				this._z = z;$/;"	r
z	js/three.js	/^				this.min.z <= box.min.z && box.max.z <= this.max.z;$/;"	r
z	js/three.js	/^				this.z = 0;$/;"	r
z	js/three.js	/^				this.z = q.z \/ s;$/;"	r
z	js/three.js	/^				var z = array[ i + 2 ];$/;"	r
z	js/three.js	/^				var z = attribute.getZ( i );$/;"	r
z	js/three.js	/^				vertex.z = P.z + radius * normal.z;$/;"	r
z	js/three.js	/^				vertex.z = P1.z + ( cx * N.z + cy * B.z );$/;"	r
z	js/three.js	/^				vertex.z = points[ j ].x * cos;$/;"	r
z	js/three.js	/^				vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );$/;"	r
z	js/three.js	/^				vertex.z = radius * cosTheta;$/;"	r
z	js/three.js	/^				vertex.z = tube * Math.sin( v );$/;"	r
z	js/three.js	/^				vertex.z = vertexBuffer[ i + 2 ];$/;"	r
z	js/three.js	/^				vertexBuffer[ i + 2 ] = vertex.z;$/;"	r
z	js/three.js	/^				xAxis.z, yAxis.z, zAxis.z, 0,$/;"	r
z	js/three.js	/^				z = Math.cos( v ) * r;$/;"	r
z	js/three.js	/^			array[ offset + 2 ] = this.z;$/;"	r
z	js/three.js	/^			position.z = radius * Math.sin( quOverP ) * 0.5;$/;"	r
z	js/three.js	/^			this._z = quaternion.z;$/;"	r
z	js/three.js	/^			this._z = z;$/;"	r
z	js/three.js	/^			this.array[ index * this.itemSize + 2 ] = z;$/;"	r
z	js/three.js	/^			this.array[ index + 2 ] = z;$/;"	r
z	js/three.js	/^			this.data.array[ index * this.data.stride + this.offset + 2 ] = z;$/;"	r
z	js/three.js	/^			this.data.array[ index + 2 ] = z;$/;"	r
z	js/three.js	/^			this.targetLine.scale.z = v3.length();$/;"	r
z	js/three.js	/^			this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;$/;"	r
z	js/three.js	/^			this.z = ( m21 - m12 ) \/ s;$/;"	r
z	js/three.js	/^			this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );$/;"	r
z	js/three.js	/^			this.z = - this.z;$/;"	r
z	js/three.js	/^			this.z = Math.ceil( this.z );$/;"	r
z	js/three.js	/^			this.z = Math.floor( this.z );$/;"	r
z	js/three.js	/^			this.z = Math.max( min.z, Math.min( max.z, this.z ) );$/;"	r
z	js/three.js	/^			this.z = Math.max( this.z, v.z );$/;"	r
z	js/three.js	/^			this.z = Math.min( this.z, v.z );$/;"	r
z	js/three.js	/^			this.z = Math.round( this.z );$/;"	r
z	js/three.js	/^			this.z = a.z * b.z;$/;"	r
z	js/three.js	/^			this.z = a.z + b.z;$/;"	r
z	js/three.js	/^			this.z = a.z - b.z;$/;"	r
z	js/three.js	/^			this.z = array[ offset + 2 ];$/;"	r
z	js/three.js	/^			this.z = attribute.getZ( index );$/;"	r
z	js/three.js	/^			this.z = ax * by - ay * bx;$/;"	r
z	js/three.js	/^			this.z = c.radius * Math.cos( c.theta );$/;"	r
z	js/three.js	/^			this.z = e[ 14 ];$/;"	r
z	js/three.js	/^			this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;$/;"	r
z	js/three.js	/^			this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;$/;"	r
z	js/three.js	/^			this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;$/;"	r
z	js/three.js	/^			this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;$/;"	r
z	js/three.js	/^			this.z = scalar;$/;"	r
z	js/three.js	/^			this.z = sinPhiRadius * Math.cos( s.theta );$/;"	r
z	js/three.js	/^			this.z = sz;$/;"	r
z	js/three.js	/^			this.z = v.z;$/;"	r
z	js/three.js	/^			this.z = z;$/;"	r
z	js/three.js	/^			var z = ( far + near ) * p;$/;"	r
z	js/three.js	/^			var z = new Vector3();$/;"	r
z	js/three.js	/^			vertex.z = vertices[ stride + 2 ];$/;"	r
z	js/three.js	/^			z = Math.cos( v ) * radius;$/;"	r
z	js/three.js	/^			z = bevelThickness * Math.cos( t * Math.PI \/ 2 );$/;"	r
z	js/three.js	/^		this.z = z || 0;$/;"	r
z	js/three.min.js	/^"color");q=b.getUniformLocation(B,"scale");n=b.getUniformLocation(B,"rotation");u=b.getUniformLocation(B,"screenPosition")}c.useProgram(B);c.initAttributes();c.enableAttribute(r);c.enableAttribute(m);c.disableUnusedAttributes();b.uniform1i(h,0);b.uniform1i(g,1);b.bindBuffer(b.ARRAY_BUFFER,t);b.vertexAttribPointer(r,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(m,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,x);c.disable(b.CULL_FACE);c.buffers.depth.setMask(!1);z=0;for(w=a.length;z<w;z++)if(M=$/;"	r
z	js/three.min.js	/^a);this.lightPlane.lookAt(c);void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(c);this.targetLine.scale.z=c.length()}}();ed.prototype=Object.create(P.prototype);ed.prototype.constructor=ed;ed.prototype.update=function(){function a(a,g,h,k){d.set(g,h,k).unproject(e);a=c[a];if(void 0!==a)for(g=b.getAttribute("position"),$/;"	r
z	js/three.min.js	/^a[13];this.z=a[14];return this},setFromMatrixScale:function(a){var b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length();a=this.setFromMatrixColumn(a,2).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){return this.fromArray(a.elements,4*b)},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=$/;"	r
z	js/three.min.js	/^d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},project:function(){var a=new K;return function(b){a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyMatrix4(a)}}(),unproject:function(){var a=new K;return function(b){a.multiplyMatrices(b.matrixWorld,$/;"	r
z	js/three.min.js	/^fragmentShader:"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\n\\tif ( renderType == 0 ) {\\n\\t\\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n\\t} else if ( renderType == 1 ) {\\n\\t\\tgl_FragColor = texture2D( map, vUV );\\n\\t} else {\\n\\t\\tvec4 texture = texture2D( map, vUV );\\n\\t\\ttexture.a *= opacity * vVisibility;\\n\\t\\tgl_FragColor = texture;\\n\\t\\tgl_FragColor.rgb *= color;\\n\\t}\\n}"},z=b.createProgram(),$/;"	r
z	js/three.min.js	/^w=b.createShader(b.FRAGMENT_SHADER),Z=b.createShader(b.VERTEX_SHADER),C="precision "+e.precision+" float;\\n";b.shaderSource(w,C+M.fragmentShader);b.shaderSource(Z,C+M.vertexShader);b.compileShader(w);b.compileShader(Z);b.attachShader(z,w);b.attachShader(z,Z);b.linkProgram(z);B=z;r=b.getAttribLocation(B,"position");m=b.getAttribLocation(B,"uv");f=b.getUniformLocation(B,"renderType");g=b.getUniformLocation(B,"map");h=b.getUniformLocation(B,"occlusionMap");k=b.getUniformLocation(B,"opacity");l=b.getUniformLocation(B,$/;"	r
z	js/three.min.js	/^x);b.bufferData(b.ELEMENT_ARRAY_BUFFER,z,b.STATIC_DRAW);I=b.createTexture();A=b.createTexture();c.bindTexture(b.TEXTURE_2D,I);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);c.bindTexture(b.TEXTURE_2D,A);b.texImage2D(b.TEXTURE_2D,0,$/;"	r
z	js/three.min.js	/^z=t.faces;C=t.faceVertexUvs[0];0<C.length&&(I=C);for(var H=0,L=z.length;H<L;H++){var N=z[H];w=B?y[N.materialIndex]:y;if(void 0!==w){C=D[N.a];E=D[N.b];var U=D[N.c];if(!0===w.morphTargets){var K=t.morphTargets,O=this.morphTargetInfluences;g.set(0,0,0);h.set(0,0,0);k.set(0,0,0);for(var Q=0,R=K.length;Q<R;Q++){var P=O[Q];if(0!==P){var V=K[Q].vertices;g.addScaledVector(l.subVectors(V[N.a],C),P);h.addScaledVector(q.subVectors(V[N.b],E),P);k.addScaledVector(n.subVectors(V[N.c],U),P)}}g.add(C);h.add(E);k.add(U);$/;"	r
z0	js/three.js	/^				z0 = src0[ srcOffset0 + 2 ],$/;"	r
z0	js/three.js	/^				z0 = z0 * s + z1 * tDir;$/;"	r
z0	js/three.js	/^			dst[ dstOffset + 2 ] = z0;$/;"	r
z1	js/three.js	/^				z1 = src1[ srcOffset1 + 2 ],$/;"	r
zLength	js/three.js	/^				zLength = faces.length;$/;"	r
zLength	js/three.js	/^				zLength = vertices.length;$/;"	r
zc	js/three.min.js	/^[],l=[],q=[],n=[],u=0,r=0;g("z","y","x",-1,-1,c,b,a,f,e,0);g("z","y","x",1,-1,c,b,-a,f,e,1);g("x","z","y",1,1,a,c,b,d,f,2);g("x","z","y",1,-1,a,c,-b,d,f,3);g("x","y","z",1,-1,a,b,c,d,e,4);g("x","y","z",-1,-1,a,b,-c,d,e,5);this.setIndex(k);this.addAttribute("position",new z(l,3));this.addAttribute("normal",new z(q,3));this.addAttribute("uv",new z(n,2))}function zc(a,b,c,d){L.call(this);this.type="PlaneGeometry";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new gb(a,$/;"	r
zc	js/three.min.js	/^zc;gb.prototype=Object.create(C.prototype);gb.prototype.constructor=gb;va.prototype=Object.create(Q.prototype);va.prototype.constructor=va;va.prototype.isMeshBasicMaterial=!0;va.prototype.copy=function(a){Q.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=$/;"	r
zeroSlopeAtEnd	js/three.js	/^		this.zeroSlopeAtEnd		= true;		\/\/ clips for start, loop and end$/;"	r
zeroSlopeAtStart	js/three.js	/^		this.zeroSlopeAtStart 	= true;		\/\/ for smooth interpolation w\/o separate$/;"	r
zoom	js/three.js	/^						if ( data.zoom !== undefined ) object.zoom = data.zoom;$/;"	r
zoom	js/three.js	/^					zoom = camera.zoom;$/;"	r
zoom	js/three.js	/^			data.object.zoom = this.zoom;$/;"	r
zoom	js/three.js	/^			this.zoom = source.zoom;$/;"	r
zoom	js/three.js	/^		this.zoom = 1;$/;"	r
zoom	js/three.min.js	/^0;this.userData={}}function Ka(){w.call(this);this.type="Camera";this.matrixWorldInverse=new K;this.projectionMatrix=new K}function Gb(a,b,c,d,e,f){Ka.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}function Oa(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&&d.isVector3?d:new p;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&&e.isColor?$/;"	r
zoom	js/three.min.js	/^t}}function Y(a,b,c,d){Ka.call(this);this.type="PerspectiveCamera";this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function nd(a){Y.call(this);this.cameras=a||[]}function og(a){function b(){if(null!==d&&d.isPresenting){var b=d.getEyeParameters("left"),e=b.renderWidth,b=b.renderHeight;u=a.getPixelRatio();n=a.getSize();a.setDrawingBufferSize(2*$/;"	r
zoomH	js/three.js	/^				var zoomH = this.zoom \/ ( this.view.height \/ this.view.fullHeight );$/;"	r
zoomW	js/three.js	/^				var zoomW = this.zoom \/ ( this.view.width \/ this.view.fullWidth );$/;"	r
zz	js/three.js	/^				var zz = ( m33 + 1 ) \/ 2;$/;"	r
